{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { PERSONALIZATION_MODEL_STATUS_CODES } from 'personalizationcommons';\r\nimport { take } from 'rxjs/operators';\r\nimport { CustomizationViewService } from '../CustomizationViewService';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"BasicInfoTabComponent\", {\r\n    selector: 'basic-info-tab',\r\n    template: `<div class=\"pe-customization-modal\" *ngIf=\"(customization$ | async) as customization\"><form><div class=\"fd-form__item\"><label for=\"customization-name\" translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.name\" class=\"fd-form__label se-control-label required\"></label> <input type=\"text\" class=\"fd-form__control\" [placeholder]=\"'personalization.modal.customizationvariationmanagement.basicinformationtab.name.placeholder' | translate\" [name]=\"customization.name + '_key'\" [ngModel]=\"customization.name\" (ngModelChange)=\"changeName($event)\" required id=\"customization-name\"/></div><div class=\"fd-form__item\"><label for=\"customization-description\" translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.details\" class=\"se-control-label fd-form__label\"></label> <textarea rows=\"2\" class=\"fd-form__control pe-customization-modal__textarea\" [placeholder]=\"'personalization.modal.customizationvariationmanagement.basicinformationtab.details.placeholder' | translate\" [name]=\"customization.description + '_key'\" [ngModel]=\"customization.description\" (ngModelChange)=\"changeDescription($event)\" id=\"customization-description\"></textarea></div><div class=\"fd-form__item fd-has-padding-bottom-tiny\"><label for=\"customization-status\" translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.status\" class=\"se-control-label fd-form__label\"></label><div class=\"fd-form__item fd-form__item--check\"><label class=\"fd-form__label\" for=\"test-checkbox\" id=\"customization-status\"><span class=\"fd-toggle fd-toggle--s fd-form__control\"><input type=\"checkbox\" name=\"status-config-toggle\" id=\"test-checkbox\" [ngModel]=\"customization.statusBoolean\" (ngModelChange)=\"toggleCustomizationStatus($event)\"/> <span class=\"fd-toggle__switch\" role=\"presentation\"></span></span></label></div></div><div class=\"fd-form__item\"><div><button *ngIf=\"!datetimeConfigurationEnabled\" class=\"se-button--text se-button--link fd-link\" (click)=\"toggleDatetimeConfiguration()\" type=\"button\" translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.details.showdateconfigdata\"></button> <button *ngIf=\"datetimeConfigurationEnabled\" class=\"se-button--text se-button--link fd-link\" (click)=\"toggleDatetimeConfiguration(true)\" type=\"button\" translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.details.hidedateconfigdata\"></button></div><div translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.details.statusfortimeframe.description\" class=\"fd-has-padding-top-tiny\"></div></div><div class=\"fd-form__item\"><div *ngIf=\"datetimeConfigurationEnabled\"><div class=\"row pe-customization-modal__dates-group\"><datetime-picker-range [dateFrom]=\"customization.enabledStartDate\" [dateTo]=\"customization.enabledEndDate\" [isEditable]=\"true\" (dateFromChange)=\"onEnabledStartDateChange($event)\" (dateToChange)=\"onEnabledEndDateChange($event)\"></datetime-picker-range></div></div></div></form></div>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet BasicInfoTabComponent = class BasicInfoTabComponent {\r\n    constructor(customizationViewService, cdr) {\r\n        this.customizationViewService = customizationViewService;\r\n        this.cdr = cdr;\r\n        this.datetimeConfigurationEnabled = false;\r\n    }\r\n    ngOnInit() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.customization$ = this.customizationViewService.getCustomization$();\r\n            const customization = yield this.customizationViewService\r\n                .getCustomization$()\r\n                .pipe(take(1))\r\n                .toPromise();\r\n            this.datetimeConfigurationEnabled =\r\n                !!customization.enabledStartDate || !!customization.enabledEndDate;\r\n            this.cdr.detectChanges();\r\n        });\r\n    }\r\n    changeName(name) {\r\n        const customization = this.customizationViewService.selectCustomization();\r\n        this.customizationViewService.setCustomization(Object.assign(Object.assign({}, customization), { name }));\r\n    }\r\n    changeDescription(description) {\r\n        const customization = this.customizationViewService.selectCustomization();\r\n        this.customizationViewService.setCustomization(Object.assign(Object.assign({}, customization), { description }));\r\n    }\r\n    toggleDatetimeConfiguration(reset = false) {\r\n        this.datetimeConfigurationEnabled = !this.datetimeConfigurationEnabled;\r\n        if (reset) {\r\n            this.resetDatetimeConfiguration();\r\n        }\r\n    }\r\n    toggleCustomizationStatus(statusBoolean) {\r\n        const customization = this.customizationViewService.selectCustomization();\r\n        this.customizationViewService.setCustomization(Object.assign(Object.assign({}, customization), { statusBoolean, status: statusBoolean\r\n                ? PERSONALIZATION_MODEL_STATUS_CODES.ENABLED\r\n                : PERSONALIZATION_MODEL_STATUS_CODES.DISABLED }));\r\n    }\r\n    onEnabledStartDateChange(date) {\r\n        const customization = this.customizationViewService.selectCustomization();\r\n        this.customizationViewService.setCustomization(Object.assign(Object.assign({}, customization), { enabledStartDate: date }));\r\n    }\r\n    onEnabledEndDateChange(date) {\r\n        const customization = this.customizationViewService.selectCustomization();\r\n        this.customizationViewService.setCustomization(Object.assign(Object.assign({}, customization), { enabledEndDate: date }));\r\n    }\r\n    resetDatetimeConfiguration() {\r\n        const customization = this.customizationViewService.selectCustomization();\r\n        this.customizationViewService.setCustomization(Object.assign(Object.assign({}, customization), { enabledStartDate: undefined, enabledEndDate: undefined }));\r\n    }\r\n};\r\nBasicInfoTabComponent = __decorate([\r\n    Component({\r\n        selector: 'basic-info-tab',\r\n        template: `<div class=\"pe-customization-modal\" *ngIf=\"(customization$ | async) as customization\"><form><div class=\"fd-form__item\"><label for=\"customization-name\" translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.name\" class=\"fd-form__label se-control-label required\"></label> <input type=\"text\" class=\"fd-form__control\" [placeholder]=\"'personalization.modal.customizationvariationmanagement.basicinformationtab.name.placeholder' | translate\" [name]=\"customization.name + '_key'\" [ngModel]=\"customization.name\" (ngModelChange)=\"changeName($event)\" required id=\"customization-name\"/></div><div class=\"fd-form__item\"><label for=\"customization-description\" translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.details\" class=\"se-control-label fd-form__label\"></label> <textarea rows=\"2\" class=\"fd-form__control pe-customization-modal__textarea\" [placeholder]=\"'personalization.modal.customizationvariationmanagement.basicinformationtab.details.placeholder' | translate\" [name]=\"customization.description + '_key'\" [ngModel]=\"customization.description\" (ngModelChange)=\"changeDescription($event)\" id=\"customization-description\"></textarea></div><div class=\"fd-form__item fd-has-padding-bottom-tiny\"><label for=\"customization-status\" translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.status\" class=\"se-control-label fd-form__label\"></label><div class=\"fd-form__item fd-form__item--check\"><label class=\"fd-form__label\" for=\"test-checkbox\" id=\"customization-status\"><span class=\"fd-toggle fd-toggle--s fd-form__control\"><input type=\"checkbox\" name=\"status-config-toggle\" id=\"test-checkbox\" [ngModel]=\"customization.statusBoolean\" (ngModelChange)=\"toggleCustomizationStatus($event)\"/> <span class=\"fd-toggle__switch\" role=\"presentation\"></span></span></label></div></div><div class=\"fd-form__item\"><div><button *ngIf=\"!datetimeConfigurationEnabled\" class=\"se-button--text se-button--link fd-link\" (click)=\"toggleDatetimeConfiguration()\" type=\"button\" translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.details.showdateconfigdata\"></button> <button *ngIf=\"datetimeConfigurationEnabled\" class=\"se-button--text se-button--link fd-link\" (click)=\"toggleDatetimeConfiguration(true)\" type=\"button\" translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.details.hidedateconfigdata\"></button></div><div translate=\"personalization.modal.customizationvariationmanagement.basicinformationtab.details.statusfortimeframe.description\" class=\"fd-has-padding-top-tiny\"></div></div><div class=\"fd-form__item\"><div *ngIf=\"datetimeConfigurationEnabled\"><div class=\"row pe-customization-modal__dates-group\"><datetime-picker-range [dateFrom]=\"customization.enabledStartDate\" [dateTo]=\"customization.enabledEndDate\" [isEditable]=\"true\" (dateFromChange)=\"onEnabledStartDateChange($event)\" (dateToChange)=\"onEnabledEndDateChange($event)\"></datetime-picker-range></div></div></div></form></div>`,\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    }),\r\n    __metadata(\"design:paramtypes\", [CustomizationViewService,\r\n        ChangeDetectorRef])\r\n], BasicInfoTabComponent);\r\nexport { BasicInfoTabComponent };\r\n//# sourceMappingURL=BasicInfoTabComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationcommons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/operators/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationsmarteditcontainer/src/management/manageCustomizationView/CustomizationViewService.ts"],"map":"{\"version\":3,\"file\":\"BasicInfoTabComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/management/manageCustomizationView/basicInfoTab/BasicInfoTabComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationsmarteditcontainer/node_modules/.cache/rollup-plugin-typescript2/placeholder/management/manageCustomizationView/basicInfoTab/BasicInfoTabComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, OnInit } from '@angular/core';\r\nimport { Customization } from 'personalizationcommons';\r\nimport { Observable } from 'rxjs';\r\nimport { CustomizationViewService } from '../CustomizationViewService';\r\nexport declare class BasicInfoTabComponent implements OnInit {\r\n    private customizationViewService;\r\n    private cdr;\r\n    customization$: Observable<Customization>;\r\n    datetimeConfigurationEnabled: boolean;\r\n    constructor(customizationViewService: CustomizationViewService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    changeName(name: string): void;\r\n    changeDescription(description: string): void;\r\n    toggleDatetimeConfiguration(reset?: boolean): void;\r\n    toggleCustomizationStatus(statusBoolean: boolean): void;\r\n    onEnabledStartDateChange(date: string): void;\r\n    onEnabledEndDateChange(date: string): void;\r\n    private resetDatetimeConfiguration;\r\n}\r\n"}}
