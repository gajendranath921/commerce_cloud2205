{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\r\nimport { PersonalizationsmarteditDateUtils, PersonalizationsmarteditUtils, PERSONALIZATION_MODEL_STATUS_CODES } from 'personalizationcommons';\r\nimport { filter } from 'rxjs/operators';\r\nimport { IConfirmationModalService, LogService, stringUtils } from 'smarteditcommons';\r\nimport { CustomizationViewService } from '../CustomizationViewService';\r\nimport { TriggerService } from '../TriggerService';\r\nimport { ModalFullScreenButtonComponent } from './modalFullScreenButton';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"TargetGroupTabComponent\", {\r\n    selector: 'perso-target-group-tab',\r\n    template: `<div class=\"pe-customization-modal\" *ngIf=\"customization\"><div class=\"pe-customization-modal__title\"><div class=\"pe-customization-modal__title-header\"><div class=\"pe-customization-modal__title-header-name perso-wrap-ellipsis\" [attr.title]=\"customization.name\">{{ customization.name }}</div><div><span class=\"pe-customization-modal__title-header-badge badge badge-success\" [ngClass]=\"[getActivityStateForCustomization(customization)]\">{{'personalization.modal.customizationvariationmanagement.targetgrouptab.customization.' + customization.status | lowercase | translate}}</span></div></div><div class=\"pe-customization-modal__title-subarea\"><div *ngIf=\"isCustomizationEnabled(customization)\" class=\"pe-customization-modal__title-dates\"><span *ngIf=\"!customization.enabledStartDate && customization.enabledEndDate\">...</span> <span [ngClass]=\"{'perso__datetimepicker--error-text': !persoDateUtils.isDateValidOrEmpty(customization.enabledStartDate)}\">{{ customization.enabledStartDate }}</span> <span *ngIf=\"customization.enabledStartDate || customization.enabledEndDate\">- </span><span [ngClass]=\"{'perso__datetimepicker--error-text':!persoDateUtils.isDateValidOrEmpty(customization.enabledEndDate)}\">{{ customization.enabledEndDate }}</span> <span *ngIf=\"persoDateUtils.isDateInThePast(customization.enabledEndDate)\" class=\"section-help help-inline help-inline--section help-inline--tooltip\"><span class=\"pe-datetime__warning-icon\"></span> <span class=\"pe-help-block--inline help-block-inline help-block-inline--text\" translate=\"personalization.modal.customizationvariationmanagement.targetgrouptab.datetooltip\"></span> </span><span *ngIf=\"customization.enabledStartDate && !customization.enabledEndDate\">...</span></div></div></div><div class=\"pe-customization-modal__y-add-btn\"><button class=\"fd-button\" type=\"button\" (click)=\"showAddVariationPanel()\"><span translate=\"personalization.modal.customizationvariationmanagement.targetgrouptab.addtargetgroup.button\"></span></button></div><perso-target-group-variation-list *ngIf=\"visibleVariations.length > 0\" [customization]=\"customization\" [variations]=\"visibleVariations\"></perso-target-group-variation-list><se-slider-panel [sliderPanelConfiguration]=\"sliderPanelConfiguration\" [(sliderPanelHide)]=\"sliderPanelHide\" [(sliderPanelShow)]=\"sliderPanelShow\" class=\"pe-customization-modal__sliderpanel\"><div *ngIf=\"isVariationLoaded\"><div class=\"pe-customization-modal__sliderpanel__btn-layout\"><perso-modal-full-screen-button></perso-modal-full-screen-button></div><form><div class=\"fd-form-item\"><label for=\"targetgroup-name\" class=\"fd-form__label required\" translate=\"personalization.modal.customizationvariationmanagement.targetgrouptab.targetgroupname\"></label> <input type=\"text\" name=\"variationname_key\" id=\"targetgroup-name\" class=\"fd-form__control\" [placeholder]=\"'personalization.modal.customizationvariationmanagement.targetgrouptab.targetgroupname.placeholder' | translate\" [(ngModel)]=\"edit.name\"/></div><div class=\"fd-form-item pe-customization-modal--check\"><input type=\"checkbox\" name=\"isDefault\" id=\"targetgroup-isDefault-001\" class=\"fd-form__control fd-checkbox\" [(ngModel)]=\"edit.isDefault\" (ngModelChange)=\"showConfirmForDefaultTrigger($event)\"/> <label for=\"targetgroup-isDefault-001\" class=\"fd-form__control fd-form__label\" translate=\"personalization.modal.customizationvariationmanagement.targetgrouptab.variation.default\"></label></div><div *ngIf=\"edit.showExpression\"><segment-view [targetGroupState]=\"edit\" (expressionChange)=\"onSegmentViewExpressionChange($event)\"></segment-view></div></form>Â </div></se-slider-panel></div>`\r\n});\r\nlet TargetGroupTabComponent = class TargetGroupTabComponent {\r\n    constructor(persoDateUtils, persoUtils, persoTriggerService, confirmationModalService, customizationViewService, logService, cdr) {\r\n        this.persoDateUtils = persoDateUtils;\r\n        this.persoUtils = persoUtils;\r\n        this.persoTriggerService = persoTriggerService;\r\n        this.confirmationModalService = confirmationModalService;\r\n        this.customizationViewService = customizationViewService;\r\n        this.logService = logService;\r\n        this.cdr = cdr;\r\n        this.visibleVariations = [];\r\n        this.isVariationLoaded = false;\r\n        this.isFullscreen = false;\r\n        this.sliderPanelConfiguration = {\r\n            modal: {\r\n                showDismissButton: true,\r\n                title: 'personalization.modal.customizationvariationmanagement.targetgrouptab.slidingpanel.title',\r\n                cancel: {\r\n                    label: 'personalization.modal.customizationvariationmanagement.targetgrouptab.cancelchanges',\r\n                    onClick: () => {\r\n                        this.cancelChangesClick();\r\n                    },\r\n                    isDisabledFn: () => false\r\n                },\r\n                dismiss: {\r\n                    onClick: () => {\r\n                        this.cancelChangesClick();\r\n                    },\r\n                    label: '',\r\n                    isDisabledFn: () => false\r\n                },\r\n                save: {\r\n                    onClick: () => { },\r\n                    label: '',\r\n                    isDisabledFn: () => false\r\n                }\r\n            },\r\n            cssSelector: '#y-modal-dialog'\r\n        };\r\n        this.edit = {\r\n            code: '',\r\n            name: '',\r\n            expression: [],\r\n            isDefault: false,\r\n            showExpression: true,\r\n            selectedVariation: undefined\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        this.customizationViewStateSubscription = this.customizationViewService\r\n            .getState$()\r\n            .subscribe(({ customization, visibleVariations }) => {\r\n            this.customization = customization;\r\n            this.visibleVariations = visibleVariations;\r\n            this.cdr.detectChanges();\r\n        });\r\n        this.editVariationSubscription = this.customizationViewService\r\n            .editVariationAction$()\r\n            .pipe(filter((variation) => !!variation))\r\n            .subscribe((variation) => {\r\n            setTimeout(() => {\r\n                this.showEditVariationPanel(variation);\r\n            }, 100);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        var _a, _b;\r\n        (_a = this.editVariationSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\r\n        (_b = this.customizationViewStateSubscription) === null || _b === void 0 ? void 0 : _b.unsubscribe();\r\n    }\r\n    isCustomizationEnabled(customization) {\r\n        return customization.status === PERSONALIZATION_MODEL_STATUS_CODES.ENABLED;\r\n    }\r\n    getActivityStateForCustomization(customization) {\r\n        return this.persoUtils.getActivityStateForCustomization(customization);\r\n    }\r\n    toggleSliderFullscreen(enableFullscreen) {\r\n        this.modalFullScreenButtonCmp.toggle(enableFullscreen);\r\n    }\r\n    onSegmentViewExpressionChange(expression) {\r\n        this.edit.expression = expression;\r\n    }\r\n    setVariationRank(variationListItem, increaseValue, $event, firstOrLast) {\r\n        if (firstOrLast) {\r\n            $event.stopPropagation();\r\n        }\r\n        else {\r\n            let fromIndex;\r\n            if (variationListItem.isNew) {\r\n                fromIndex = this.customization.variations.findIndex(({ tempcode }) => tempcode === variationListItem.tempcode);\r\n            }\r\n            else {\r\n                fromIndex = this.customization.variations.findIndex(({ code }) => code === variationListItem.code);\r\n            }\r\n            const variation = this.customization.variations[fromIndex];\r\n            const to = this.persoUtils.getValidRank(this.customization.variations, variation, increaseValue);\r\n            const variations = [...this.customization.variations];\r\n            if (to >= 0 && to < variations.length) {\r\n                variations.splice(to, 0, variations.splice(fromIndex, 1)[0]);\r\n                this.setVariations(variations);\r\n            }\r\n        }\r\n    }\r\n    showConfirmForDefaultTrigger(isDefault) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (isDefault && this.persoTriggerService.isValidExpression(this.edit.expression[0])) {\r\n                try {\r\n                    yield this.confirmationModalService.confirm({\r\n                        description: 'personalization.modal.manager.targetgrouptab.defaulttrigger.content'\r\n                    });\r\n                    this.edit.showExpression = false;\r\n                }\r\n                catch (_a) {\r\n                    this.edit.isDefault = false;\r\n                }\r\n            }\r\n            else {\r\n                this.edit.showExpression = !isDefault;\r\n            }\r\n        });\r\n    }\r\n    removeVariation(variation) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield this.confirmationModalService.confirm({\r\n                    description: 'personalization.modal.manager.targetgrouptab.deletevariation.content'\r\n                });\r\n                if (variation.isNew) {\r\n                    const newVariations = this.customization.variations.filter((_variation) => _variation.tempcode !== variation.tempcode);\r\n                    this.setVariations(newVariations);\r\n                }\r\n                else {\r\n                    variation.status = PERSONALIZATION_MODEL_STATUS_CODES.DELETED;\r\n                    this.updateVariation(variation);\r\n                }\r\n            }\r\n            catch (_a) {\r\n                this.logService.log('Remove Variation canceled');\r\n            }\r\n        });\r\n    }\r\n    updateVariation(variationToUpdate) {\r\n        const newVariations = this.customization.variations.map((variation) => (variationToUpdate.isNew && variation.tempcode === variationToUpdate.tempcode) ||\r\n            (!variationToUpdate.isNew && variation.code === variationToUpdate.code)\r\n            ? variationToUpdate\r\n            : variation);\r\n        this.setVariations(newVariations);\r\n    }\r\n    showAddVariationPanel() {\r\n        this.clearEditedVariationDetails();\r\n        this.setSliderConfigForAdd();\r\n        this.sliderPanelShow();\r\n        this.edit.selectedVariation = { triggers: [] };\r\n        setTimeout(() => {\r\n            this.isVariationLoaded = true;\r\n        }, 0);\r\n    }\r\n    showEditVariationPanel(variation) {\r\n        this.setSliderConfigForEditing();\r\n        this.edit.selectedVariation = variation;\r\n        this.edit.code = variation.code;\r\n        this.edit.name = variation.name;\r\n        this.edit.isDefault = this.persoTriggerService.isDefault(variation.triggers);\r\n        this.edit.showExpression = !this.edit.isDefault;\r\n        this.isVariationLoaded = true;\r\n        this.sliderPanelShow();\r\n    }\r\n    setSliderConfigForAdd() {\r\n        this.sliderPanelConfiguration.modal.save.label =\r\n            'personalization.modal.customizationvariationmanagement.targetgrouptab.addvariation';\r\n        this.sliderPanelConfiguration.modal.save.isDisabledFn = () => !this.canSaveVariation();\r\n        this.sliderPanelConfiguration.modal.save.onClick = () => {\r\n            this.onAddVariation();\r\n        };\r\n    }\r\n    setSliderConfigForEditing() {\r\n        this.sliderPanelConfiguration.modal.save.label =\r\n            'personalization.modal.customizationvariationmanagement.targetgrouptab.savechanges';\r\n        this.sliderPanelConfiguration.modal.save.isDisabledFn = () => !this.canSaveVariation();\r\n        this.sliderPanelConfiguration.modal.save.onClick = () => {\r\n            this.onSaveEditedVariation();\r\n        };\r\n    }\r\n    canSaveVariation() {\r\n        const isValidOrEmpty = this.isSavedVariationValidOrEmpty();\r\n        const isTriggerValid = this.persoTriggerService.isValidExpression(this.edit.expression[0]);\r\n        const isNameValid = !stringUtils.isBlank(this.edit.name);\r\n        const canSaveVariation = isNameValid && (this.edit.isDefault || (isTriggerValid && isValidOrEmpty));\r\n        return canSaveVariation;\r\n    }\r\n    isSavedVariationValidOrEmpty() {\r\n        this.edit.expression = this.edit.expression || [{ nodes: [] }];\r\n        return (this.persoTriggerService.isValidExpression(this.edit.expression[0]) ||\r\n            this.edit.expression.length === 0 ||\r\n            this.edit.expression[0].nodes.length === 0);\r\n    }\r\n    setVariations(variations) {\r\n        this.customizationViewService.setVariations(variations);\r\n    }\r\n    onAddVariation() {\r\n        const random = 10000;\r\n        this.customizationViewService.addVariation({\r\n            tempcode: 'Temp' + (Math.random() * random).toFixed(0),\r\n            code: this.edit.code,\r\n            name: this.edit.name,\r\n            enabled: true,\r\n            status: PERSONALIZATION_MODEL_STATUS_CODES.ENABLED,\r\n            triggers: this.persoTriggerService.buildTriggers(this.edit, this.edit.selectedVariation.triggers || []),\r\n            rank: this.customization.variations.length,\r\n            isNew: true,\r\n            catalog: null,\r\n            catalogVersion: null\r\n        });\r\n        this.clearEditedVariationDetails();\r\n        this.toggleSliderFullscreen(false);\r\n        this.sliderPanelHide();\r\n        this.isVariationLoaded = false;\r\n    }\r\n    onSaveEditedVariation() {\r\n        const triggers = this.persoTriggerService.buildTriggers(this.edit, this.edit.selectedVariation.triggers || []);\r\n        const newVariations = this.customization.variations.map((variation) => variation.code === this.edit.selectedVariation.code\r\n            ? Object.assign(Object.assign({}, variation), { triggers, name: this.edit.name }) : variation);\r\n        this.setVariations(newVariations);\r\n        this.toggleSliderFullscreen(false);\r\n        this.sliderPanelHide();\r\n        this.isVariationLoaded = false;\r\n    }\r\n    cancelChangesClick() {\r\n        if (this.isVariationSelected()) {\r\n            this.edit.selectedVariation = undefined;\r\n        }\r\n        else {\r\n            this.clearEditedVariationDetails();\r\n        }\r\n        this.toggleSliderFullscreen(false);\r\n        this.sliderPanelHide();\r\n        this.isVariationLoaded = false;\r\n    }\r\n    isVariationSelected() {\r\n        return typeof this.edit.selectedVariation !== 'undefined';\r\n    }\r\n    clearEditedVariationDetails() {\r\n        this.edit.code = '';\r\n        this.edit.name = '';\r\n        this.edit.expression = [];\r\n        this.edit.isDefault = false;\r\n        this.edit.showExpression = true;\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild(ModalFullScreenButtonComponent, { static: false }),\r\n    __metadata(\"design:type\", ModalFullScreenButtonComponent)\r\n], TargetGroupTabComponent.prototype, \"modalFullScreenButtonCmp\", void 0);\r\nTargetGroupTabComponent = __decorate([\r\n    Component({\r\n        selector: 'perso-target-group-tab',\r\n        template: `<div class=\"pe-customization-modal\" *ngIf=\"customization\"><div class=\"pe-customization-modal__title\"><div class=\"pe-customization-modal__title-header\"><div class=\"pe-customization-modal__title-header-name perso-wrap-ellipsis\" [attr.title]=\"customization.name\">{{ customization.name }}</div><div><span class=\"pe-customization-modal__title-header-badge badge badge-success\" [ngClass]=\"[getActivityStateForCustomization(customization)]\">{{'personalization.modal.customizationvariationmanagement.targetgrouptab.customization.' + customization.status | lowercase | translate}}</span></div></div><div class=\"pe-customization-modal__title-subarea\"><div *ngIf=\"isCustomizationEnabled(customization)\" class=\"pe-customization-modal__title-dates\"><span *ngIf=\"!customization.enabledStartDate && customization.enabledEndDate\">...</span> <span [ngClass]=\"{'perso__datetimepicker--error-text': !persoDateUtils.isDateValidOrEmpty(customization.enabledStartDate)}\">{{ customization.enabledStartDate }}</span> <span *ngIf=\"customization.enabledStartDate || customization.enabledEndDate\">- </span><span [ngClass]=\"{'perso__datetimepicker--error-text':!persoDateUtils.isDateValidOrEmpty(customization.enabledEndDate)}\">{{ customization.enabledEndDate }}</span> <span *ngIf=\"persoDateUtils.isDateInThePast(customization.enabledEndDate)\" class=\"section-help help-inline help-inline--section help-inline--tooltip\"><span class=\"pe-datetime__warning-icon\"></span> <span class=\"pe-help-block--inline help-block-inline help-block-inline--text\" translate=\"personalization.modal.customizationvariationmanagement.targetgrouptab.datetooltip\"></span> </span><span *ngIf=\"customization.enabledStartDate && !customization.enabledEndDate\">...</span></div></div></div><div class=\"pe-customization-modal__y-add-btn\"><button class=\"fd-button\" type=\"button\" (click)=\"showAddVariationPanel()\"><span translate=\"personalization.modal.customizationvariationmanagement.targetgrouptab.addtargetgroup.button\"></span></button></div><perso-target-group-variation-list *ngIf=\"visibleVariations.length > 0\" [customization]=\"customization\" [variations]=\"visibleVariations\"></perso-target-group-variation-list><se-slider-panel [sliderPanelConfiguration]=\"sliderPanelConfiguration\" [(sliderPanelHide)]=\"sliderPanelHide\" [(sliderPanelShow)]=\"sliderPanelShow\" class=\"pe-customization-modal__sliderpanel\"><div *ngIf=\"isVariationLoaded\"><div class=\"pe-customization-modal__sliderpanel__btn-layout\"><perso-modal-full-screen-button></perso-modal-full-screen-button></div><form><div class=\"fd-form-item\"><label for=\"targetgroup-name\" class=\"fd-form__label required\" translate=\"personalization.modal.customizationvariationmanagement.targetgrouptab.targetgroupname\"></label> <input type=\"text\" name=\"variationname_key\" id=\"targetgroup-name\" class=\"fd-form__control\" [placeholder]=\"'personalization.modal.customizationvariationmanagement.targetgrouptab.targetgroupname.placeholder' | translate\" [(ngModel)]=\"edit.name\"/></div><div class=\"fd-form-item pe-customization-modal--check\"><input type=\"checkbox\" name=\"isDefault\" id=\"targetgroup-isDefault-001\" class=\"fd-form__control fd-checkbox\" [(ngModel)]=\"edit.isDefault\" (ngModelChange)=\"showConfirmForDefaultTrigger($event)\"/> <label for=\"targetgroup-isDefault-001\" class=\"fd-form__control fd-form__label\" translate=\"personalization.modal.customizationvariationmanagement.targetgrouptab.variation.default\"></label></div><div *ngIf=\"edit.showExpression\"><segment-view [targetGroupState]=\"edit\" (expressionChange)=\"onSegmentViewExpressionChange($event)\"></segment-view></div></form>Â </div></se-slider-panel></div>`\r\n    }),\r\n    __metadata(\"design:paramtypes\", [PersonalizationsmarteditDateUtils,\r\n        PersonalizationsmarteditUtils,\r\n        TriggerService,\r\n        IConfirmationModalService,\r\n        CustomizationViewService,\r\n        LogService,\r\n        ChangeDetectorRef])\r\n], TargetGroupTabComponent);\r\nexport { TargetGroupTabComponent };\r\n//# sourceMappingURL=TargetGroupTabComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationcommons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/operators/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationsmarteditcontainer/src/management/manageCustomizationView/CustomizationViewService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationsmarteditcontainer/src/management/manageCustomizationView/TriggerService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationsmarteditcontainer/src/management/manageCustomizationView/targetGroupTab/modalFullScreenButton/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationsmarteditcontainer/src/management/manageCustomizationView/targetGroupTab/targetGroupVariationList/index.ts"],"map":"{\"version\":3,\"file\":\"TargetGroupTabComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/management/manageCustomizationView/targetGroupTab/TargetGroupTabComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationsmarteditcontainer/node_modules/.cache/rollup-plugin-typescript2/placeholder/management/manageCustomizationView/targetGroupTab/TargetGroupTabComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { Customization, CustomizationVariation, PersonalizationsmarteditDateUtils, PersonalizationsmarteditUtils, TargetGroupState, Trigger } from 'personalizationcommons';\r\nimport { IConfirmationModalService, LogService, SliderPanelConfiguration } from 'smarteditcommons';\r\nimport { CustomizationViewService } from '../CustomizationViewService';\r\nimport { TriggerService } from '../TriggerService';\r\nimport { ModalFullScreenButtonComponent } from './modalFullScreenButton';\r\nimport { CustomizationVariationListItem } from './targetGroupVariationList';\r\nexport declare class TargetGroupTabComponent implements OnInit, OnDestroy {\r\n    persoDateUtils: PersonalizationsmarteditDateUtils;\r\n    private persoUtils;\r\n    private persoTriggerService;\r\n    private confirmationModalService;\r\n    private customizationViewService;\r\n    private logService;\r\n    private cdr;\r\n    modalFullScreenButtonCmp: ModalFullScreenButtonComponent;\r\n    readonly sliderPanelConfiguration: SliderPanelConfiguration;\r\n    readonly sliderPanelShow: () => Promise<void>;\r\n    readonly sliderPanelHide: () => Promise<void>;\r\n    customization: Customization;\r\n    edit: TargetGroupState;\r\n    isVariationLoaded: boolean;\r\n    isFullscreen: boolean;\r\n    visibleVariations: CustomizationVariation[];\r\n    private editVariationSubscription;\r\n    private customizationViewStateSubscription;\r\n    constructor(persoDateUtils: PersonalizationsmarteditDateUtils, persoUtils: PersonalizationsmarteditUtils, persoTriggerService: TriggerService, confirmationModalService: IConfirmationModalService, customizationViewService: CustomizationViewService, logService: LogService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    isCustomizationEnabled(customization: Customization): boolean;\r\n    getActivityStateForCustomization(customization: Customization): string;\r\n    toggleSliderFullscreen(enableFullscreen: boolean): void;\r\n    onSegmentViewExpressionChange(expression: Trigger[]): void;\r\n    setVariationRank(variationListItem: CustomizationVariationListItem, increaseValue: number, $event: PointerEvent, firstOrLast: boolean): void;\r\n    showConfirmForDefaultTrigger(isDefault: boolean): Promise<void>;\r\n    removeVariation(variation: CustomizationVariation): Promise<void>;\r\n    updateVariation(variationToUpdate: CustomizationVariation): void;\r\n    showAddVariationPanel(): void;\r\n    showEditVariationPanel(variation: CustomizationVariation): void;\r\n    private setSliderConfigForAdd;\r\n    private setSliderConfigForEditing;\r\n    private canSaveVariation;\r\n    private isSavedVariationValidOrEmpty;\r\n    private setVariations;\r\n    private onAddVariation;\r\n    private onSaveEditedVariation;\r\n    private cancelChangesClick;\r\n    private isVariationSelected;\r\n    private clearEditedVariationDetails;\r\n}\r\n"}}
