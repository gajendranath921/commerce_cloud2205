{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, Component, ElementRef } from '@angular/core';\r\nimport { ModalFullScreenButtonService } from './ModalFullScreenButtonService';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ModalFullScreenButtonComponent\", {\r\n    selector: 'perso-modal-full-screen-button',\r\n    template: `<button class=\"fd-button--light pe-customization-modal__sliderpanel__btn-link\" (click)=\"toggle()\"><fd-icon class=\"icon_padding_end\" *ngIf=\"!isFullscreen\" glyph=\"full-screen\"></fd-icon><fd-icon class=\"icon_padding_end\" *ngIf=\"isFullscreen\" glyph=\"exitfullscreen\"></fd-icon>{{(isFullscreen ? 'personalization.modal.customizationvariationmanagement.targetgrouptab.fullscreen.close' : 'personalization.modal.customizationvariationmanagement.targetgrouptab.fullscreen.open') | translate}}</button>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [ModalFullScreenButtonService]\r\n});\r\nlet ModalFullScreenButtonComponent = class ModalFullScreenButtonComponent {\r\n    constructor(element, modalFullScreenButtonService) {\r\n        this.element = element;\r\n        this.modalFullScreenButtonService = modalFullScreenButtonService;\r\n        this.isFullscreen = false;\r\n    }\r\n    toggle(state) {\r\n        this.isFullscreen = typeof state === 'undefined' ? !this.isFullscreen : state;\r\n        this.modalFullScreenButtonService.toggleClassOnCustomizationModal(this.element.nativeElement, 'modal-fullscreen', this.isFullscreen);\r\n    }\r\n};\r\nModalFullScreenButtonComponent = __decorate([\r\n    Component({\r\n        selector: 'perso-modal-full-screen-button',\r\n        template: `<button class=\"fd-button--light pe-customization-modal__sliderpanel__btn-link\" (click)=\"toggle()\"><fd-icon class=\"icon_padding_end\" *ngIf=\"!isFullscreen\" glyph=\"full-screen\"></fd-icon><fd-icon class=\"icon_padding_end\" *ngIf=\"isFullscreen\" glyph=\"exitfullscreen\"></fd-icon>{{(isFullscreen ? 'personalization.modal.customizationvariationmanagement.targetgrouptab.fullscreen.close' : 'personalization.modal.customizationvariationmanagement.targetgrouptab.fullscreen.open') | translate}}</button>`,\r\n        changeDetection: ChangeDetectionStrategy.OnPush,\r\n        providers: [ModalFullScreenButtonService]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [ElementRef,\r\n        ModalFullScreenButtonService])\r\n], ModalFullScreenButtonComponent);\r\nexport { ModalFullScreenButtonComponent };\r\n//# sourceMappingURL=ModalFullScreenButtonComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationsmarteditcontainer/src/management/manageCustomizationView/targetGroupTab/modalFullScreenButton/ModalFullScreenButtonService.ts"],"map":"{\"version\":3,\"file\":\"ModalFullScreenButtonComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/management/manageCustomizationView/targetGroupTab/modalFullScreenButton/ModalFullScreenButtonComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;wFAEnE;IACP,QAAQ,EAAE,gCAAgC;IAC1C,QAAQ,EAAE,8eAA8e;IACxf,eAAe,EAAE,uBAAuB,CAAC,MAAM;IAC/C,SAAS,EAAE,CAAC,4BAA4B,CAAC;CAC5C;AACD,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAGvC,YACY,OAAmB,EACnB,4BAA0D;QAD1D,YAAO,GAAP,OAAO,CAAY;QACnB,iCAA4B,GAA5B,4BAA4B,CAA8B;QAElE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC9B,CAAC;IAEM,MAAM,CAAC,KAAe;QACzB,IAAI,CAAC,YAAY,GAAG,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9E,IAAI,CAAC,4BAA4B,CAAC,+BAA+B,CAC7D,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,kBAAkB,EAClB,IAAI,CAAC,YAAY,CACpB,CAAC;IACN,CAAC;CACJ,CAAA;AAlBY,8BAA8B;IAN1C,SAAS,CAAC;QACP,QAAQ,EAAE,gCAAgC;QAC1C,QAAQ,EAAE,8eAA8e;QACxf,eAAe,EAAE,uBAAuB,CAAC,MAAM;QAC/C,SAAS,EAAE,CAAC,4BAA4B,CAAC;KAC5C,CAAC;qCAKuB,UAAU;QACW,4BAA4B;GAL7D,8BAA8B,CAkB1C;SAlBY,8BAA8B\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationsmarteditcontainer/node_modules/.cache/rollup-plugin-typescript2/placeholder/management/manageCustomizationView/targetGroupTab/modalFullScreenButton/ModalFullScreenButtonComponent.d.ts","writeByteOrderMark":false,"text":"import { ElementRef } from '@angular/core';\r\nimport { ModalFullScreenButtonService } from './ModalFullScreenButtonService';\r\nexport declare class ModalFullScreenButtonComponent {\r\n    private element;\r\n    private modalFullScreenButtonService;\r\n    isFullscreen: boolean;\r\n    constructor(element: ElementRef, modalFullScreenButtonService: ModalFullScreenButtonService);\r\n    toggle(state?: boolean): void;\r\n}\r\n"}}
