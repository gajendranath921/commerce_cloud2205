{"code":"import { __awaiter, __decorate, __metadata, __param } from \"tslib\";\r\nimport { Component, Inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { cloneDeep } from 'lodash';\r\nimport { PersonalizationsmarteditMessageHandler, PERSONLIZATION_PROMOTION_EXTENSION_INJECTOR_TOKEN } from 'personalizationcommons';\r\nimport { PromotionsSmarteditRestService } from 'personalizationpromotionssmarteditcommons';\r\nimport { IExperienceService } from 'smarteditcommons';\r\nimport { PROMOTION_ACTION_TYPE } from '../utils/constants';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"PromotionsSmarteditPromotionComponent\", {\r\n    selector: 'promotions-smartedit-promotion',\r\n    template: `<div *ngIf=\"getSelectedTypeCode() === getPromotionCode()\"><label for=\"promotion-selector-1\" class=\"fd-form__label\" translate=\"personalization.modal.commercecustomization.promotion.label\"></label><se-select [id]=\"promotion-selector-1\" class=\"fd-form__control\" [placeholder]=\"'personalization.modal.commercecustomization.promotion.search.placeholder'\" [fetchStrategy]=\"fetchStrategy\" [(model)]=\"selectedPromotion\" [onSelect]=\"promotionSelectedEvent\" [searchEnabled]=\"true\"></se-select></div>`\r\n});\r\nlet PromotionsSmarteditPromotionComponent = class PromotionsSmarteditPromotionComponent {\r\n    constructor(personlizationPromotionExtensionInjector, translateService, experienceService, promotionssmarteditRestService, personalizationsmarteditMessageHandler) {\r\n        this.personlizationPromotionExtensionInjector = personlizationPromotionExtensionInjector;\r\n        this.translateService = translateService;\r\n        this.experienceService = experienceService;\r\n        this.promotionssmarteditRestService = promotionssmarteditRestService;\r\n        this.personalizationsmarteditMessageHandler = personalizationsmarteditMessageHandler;\r\n        this.selectedPromotion = null;\r\n        this.allPromotions = [];\r\n        this.availablePromotions = [];\r\n        this.fetchStrategy = {\r\n            fetchAll: () => {\r\n                this.availablePromotions = [];\r\n                this.allPromotions.forEach((promotion) => {\r\n                    const action = this.buildAction(promotion);\r\n                    if (this.isActionInSelectDisabled(action, this.comparer) === undefined) {\r\n                        this.availablePromotions.push(cloneDeep(promotion));\r\n                    }\r\n                });\r\n                return Promise.resolve(this.availablePromotions);\r\n            }\r\n        };\r\n        this.comparer = (a1, a2) => a1.type === a2.type && a1.promotionId === a2.promotionId;\r\n        this.promotionSelectedEvent = (promotion) => {\r\n            const action = this.buildAction(promotion);\r\n            this.addAction(action, this.comparer);\r\n        };\r\n        this.addAction = personlizationPromotionExtensionInjector.addAction;\r\n        this.isActionInSelectDisabled =\r\n            personlizationPromotionExtensionInjector.isActionInSelectDisabled;\r\n        this.getSelectedTypeCode = personlizationPromotionExtensionInjector.getSelectedTypeCode;\r\n    }\r\n    ngOnInit() {\r\n        this.getAvailablePromotions();\r\n    }\r\n    getAvailablePromotions() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const response = yield this.getPromotions();\r\n                this.allPromotions = response.promotions;\r\n                this.allPromotions.forEach((item) => {\r\n                    item.id = item.code;\r\n                    item.label = item.code + '(' + item.promotionGroup + ')';\r\n                });\r\n            }\r\n            catch (e) {\r\n                this.personalizationsmarteditMessageHandler.sendError(this.translateService.instant('personalization.error.gettingpromotions'));\r\n            }\r\n        });\r\n    }\r\n    getPromotionCode() {\r\n        return PROMOTION_ACTION_TYPE;\r\n    }\r\n    getPromotions() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const catalogs = yield this.getCatalogs();\r\n            const promotion = yield this.promotionssmarteditRestService.getPromotions(catalogs);\r\n            return Promise.resolve(promotion);\r\n        });\r\n    }\r\n    getCatalogs() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const catalogs = [];\r\n            const experience = yield this.experienceService.getCurrentExperience();\r\n            catalogs.push({\r\n                catalog: experience.catalogDescriptor.catalogId,\r\n                catalogVersion: experience.catalogDescriptor.catalogVersion\r\n            });\r\n            experience.productCatalogVersions.forEach((item) => {\r\n                catalogs.push({\r\n                    catalog: item.catalog,\r\n                    catalogVersion: item.catalogVersion\r\n                });\r\n            });\r\n            return Promise.resolve(catalogs);\r\n        });\r\n    }\r\n    buildAction(promotion) {\r\n        return {\r\n            type: 'cxPromotionActionData',\r\n            promotionId: promotion.code\r\n        };\r\n    }\r\n};\r\nPromotionsSmarteditPromotionComponent = __decorate([\r\n    Component({\r\n        selector: 'promotions-smartedit-promotion',\r\n        template: `<div *ngIf=\"getSelectedTypeCode() === getPromotionCode()\"><label for=\"promotion-selector-1\" class=\"fd-form__label\" translate=\"personalization.modal.commercecustomization.promotion.label\"></label><se-select [id]=\"promotion-selector-1\" class=\"fd-form__control\" [placeholder]=\"'personalization.modal.commercecustomization.promotion.search.placeholder'\" [fetchStrategy]=\"fetchStrategy\" [(model)]=\"selectedPromotion\" [onSelect]=\"promotionSelectedEvent\" [searchEnabled]=\"true\"></se-select></div>`\r\n    }),\r\n    __param(0, Inject(PERSONLIZATION_PROMOTION_EXTENSION_INJECTOR_TOKEN)),\r\n    __metadata(\"design:paramtypes\", [Object, TranslateService,\r\n        IExperienceService,\r\n        PromotionsSmarteditRestService,\r\n        PersonalizationsmarteditMessageHandler])\r\n], PromotionsSmarteditPromotionComponent);\r\nexport { PromotionsSmarteditPromotionComponent };\r\n//# sourceMappingURL=PromotionsSmarteditPromotionComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate+core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization/personalizationsmartedit/apps/personalizationcommons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization-promotion/personalizationpromotionssmartedit/apps/personalizationpromotionssmarteditcommons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization-promotion/personalizationpromotionssmartedit/apps/personalizationpromotionssmarteditContainer/src/utils/constants.ts"],"map":"{\"version\":3,\"file\":\"PromotionsSmarteditPromotionComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/promotionsComponent/PromotionsSmarteditPromotionComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/personalization-promotion/personalizationpromotionssmartedit/apps/personalizationpromotionssmarteditContainer/node_modules/.cache/rollup-plugin-typescript2/placeholder/promotionsComponent/PromotionsSmarteditPromotionComponent.d.ts","writeByteOrderMark":false,"text":"import { OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PersonalizationsmarteditMessageHandler, PersonlizationPromotionExtensionInjector } from 'personalizationcommons';\r\nimport { PromotionsSmarteditRestService, PromotionsCatalog, PromotionsPage, Promotion, PromotionsAction } from 'personalizationpromotionssmarteditcommons';\r\nimport { IExperienceService } from 'smarteditcommons';\r\nexport declare class PromotionsSmarteditPromotionComponent implements OnInit {\r\n    private personlizationPromotionExtensionInjector;\r\n    private translateService;\r\n    protected experienceService: IExperienceService;\r\n    protected promotionssmarteditRestService: PromotionsSmarteditRestService;\r\n    protected personalizationsmarteditMessageHandler: PersonalizationsmarteditMessageHandler;\r\n    selectedPromotion: Promotion;\r\n    allPromotions: Promotion[];\r\n    availablePromotions: Promotion[];\r\n    getSelectedTypeCode: () => string;\r\n    fetchStrategy: {\r\n        fetchAll: () => Promise<any[]>;\r\n    };\r\n    private addAction;\r\n    private isActionInSelectDisabled;\r\n    constructor(personlizationPromotionExtensionInjector: PersonlizationPromotionExtensionInjector, translateService: TranslateService, experienceService: IExperienceService, promotionssmarteditRestService: PromotionsSmarteditRestService, personalizationsmarteditMessageHandler: PersonalizationsmarteditMessageHandler);\r\n    ngOnInit(): void;\r\n    getAvailablePromotions(): Promise<void>;\r\n    getPromotionCode(): string;\r\n    getPromotions(): Promise<PromotionsPage>;\r\n    getCatalogs(): Promise<PromotionsCatalog[]>;\r\n    buildAction(promotion: Promotion): PromotionsAction;\r\n    comparer: (a1: PromotionsAction, a2: PromotionsAction) => boolean;\r\n    promotionSelectedEvent: (promotion: Promotion) => void;\r\n}\r\n"}}
