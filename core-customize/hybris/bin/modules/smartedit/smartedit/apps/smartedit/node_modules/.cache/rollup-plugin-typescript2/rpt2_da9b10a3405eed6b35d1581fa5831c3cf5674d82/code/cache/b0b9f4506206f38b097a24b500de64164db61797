{"code":"import { __awaiter, __decorate, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inject } from '@angular/core';\r\nimport * as lodash from 'lodash';\r\nimport { SeNamespaceService } from 'smartedit/services/SeNamespaceService';\r\nimport { stringUtils, CrossFrameEventService, CATALOG_VERSION_UUID_ATTRIBUTE, COMPONENT_CLASS, CONTAINER_ID_ATTRIBUTE, CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS, CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS, ELEMENT_UUID_ATTRIBUTE, EVENT_PERSPECTIVE_CHANGED, EVENT_PERSPECTIVE_REFRESHED, GatewayProxied, IAlertService, ID_ATTRIBUTE, IExperienceService, INotificationService, IPageInfoService, IPerspectiveService, IRenderService, JQueryUtilsService, LogService, ModalService, OVERLAY_COMPONENT_CLASS, OVERLAY_ID, OVERLAY_RERENDERED_EVENT, SeDowngradeService, SmarteditBootstrapGateway, SystemEventService, SMARTEDIT_ATTRIBUTE_PREFIX, SMARTEDIT_COMPONENT_PROCESS_STATUS, TYPE_ATTRIBUTE, UUID_ATTRIBUTE, WindowUtils, YJQUERY_TOKEN, ComponentHandlerService } from 'smarteditcommons';\r\n/** @internal */\r\nlet /* @ngInject */ RenderService = class /* @ngInject */ RenderService extends IRenderService {\r\n    constructor(smarteditBootstrapGateway, httpClient, logService, yjQuery, alertService, componentHandlerService, crossFrameEventService, jQueryUtilsService, experienceService, seNamespaceService, systemEventService, notificationService, pageInfoService, perspectiveService, windowUtils, modalService) {\r\n        super(yjQuery, systemEventService, notificationService, pageInfoService, perspectiveService, crossFrameEventService, windowUtils, modalService);\r\n        this.smarteditBootstrapGateway = smarteditBootstrapGateway;\r\n        this.httpClient = httpClient;\r\n        this.logService = logService;\r\n        this.yjQuery = yjQuery;\r\n        this.alertService = alertService;\r\n        this.componentHandlerService = componentHandlerService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.jQueryUtilsService = jQueryUtilsService;\r\n        this.experienceService = experienceService;\r\n        this.seNamespaceService = seNamespaceService;\r\n        this.systemEventService = systemEventService;\r\n        this.crossFrameEventService.subscribe(EVENT_PERSPECTIVE_CHANGED, (eventId, isNonEmptyPerspective) => {\r\n            this.renderPage(isNonEmptyPerspective);\r\n        });\r\n        this.crossFrameEventService.subscribe(EVENT_PERSPECTIVE_REFRESHED, (eventId, isNonEmptyPerspective) => {\r\n            this.renderPage(isNonEmptyPerspective);\r\n        });\r\n        this.systemEventService.subscribe(CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS.PROCESS_COMPONENTS, (eventId, componentsList) => {\r\n            const components = lodash.map(componentsList, (component) => {\r\n                if (component.dataset[SMARTEDIT_COMPONENT_PROCESS_STATUS] !==\r\n                    CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS.KEEP_VISIBLE) {\r\n                    component.dataset[SMARTEDIT_COMPONENT_PROCESS_STATUS] = this.componentHandlerService.isOverlayOn()\r\n                        ? CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS.PROCESS\r\n                        : CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS.REMOVE;\r\n                }\r\n                return component;\r\n            });\r\n            return Promise.resolve(components);\r\n        });\r\n    }\r\n    toggleOverlay(isVisible) {\r\n        const overlay = this.componentHandlerService.getOverlay();\r\n        overlay.css('visibility', isVisible ? 'visible' : 'hidden');\r\n    }\r\n    refreshOverlayDimensions(element = null) {\r\n        element = element || this.yjQuery('body');\r\n        const children = this.componentHandlerService.getFirstSmartEditComponentChildren(element);\r\n        children.each((index, childElement) => {\r\n            this.updateComponentSizeAndPosition(childElement);\r\n            this.refreshOverlayDimensions(childElement);\r\n        });\r\n    }\r\n    /**\r\n     * Updates the dimensions of the overlay component element given the original component element and the overlay component itself.\r\n     * If no overlay component is provided, it will be fetched through {@link componentHandlerService.getOverlayComponent}\r\n     *\r\n     * The overlay component is resized to be the same dimensions of the component for which it overlays, and positioned absolutely\r\n     * on the page. Additionally, it is provided with a minimum height and width. The resizing takes into account both\r\n     * the size of the component element, and the position based on iframe scrolling.\r\n     *\r\n     * @param {HTMLElement} element The original CMS component element from the storefront.\r\n     * @param {HTMLElement =} componentOverlayElem The overlay component. If none is provided\r\n     */\r\n    updateComponentSizeAndPosition(element, componentOverlayElem) {\r\n        const componentElem = this.yjQuery(element);\r\n        componentOverlayElem =\r\n            componentOverlayElem ||\r\n                this.componentHandlerService.getComponentCloneInOverlay(componentElem).get(0);\r\n        if (!componentOverlayElem) {\r\n            return;\r\n        }\r\n        const parentPos = this._getParentInOverlay(componentElem).get(0).getBoundingClientRect();\r\n        const innerWidth = componentElem.get(0).offsetWidth;\r\n        const innerHeight = componentElem.get(0).offsetHeight;\r\n        // Update the position based on the IFrame Scrolling\r\n        const pos = componentElem.get(0).getBoundingClientRect();\r\n        const elementTopPos = pos.top - parentPos.top;\r\n        const elementLeftPos = pos.left - parentPos.left;\r\n        // In SakExecutorService.ts, the 'position' and 'top' will decide the slot-contextual-menu show at top of slot or bottom of slot\r\n        componentOverlayElem.style.position = 'absolute';\r\n        componentOverlayElem.style.top = elementTopPos + 'px';\r\n        componentOverlayElem.style.left = elementLeftPos + 'px';\r\n        componentOverlayElem.style.width = innerWidth + 'px';\r\n        componentOverlayElem.style.height = innerHeight + 'px';\r\n        componentOverlayElem.style.minWidth = '51px';\r\n        componentOverlayElem.style.minHeight = '48px';\r\n        const cloneId = this._buildShallowCloneId(componentElem.attr(ID_ATTRIBUTE), componentElem.attr(TYPE_ATTRIBUTE), componentElem.attr(CONTAINER_ID_ATTRIBUTE));\r\n        const shallowCopy = this.yjQuery(componentOverlayElem).find('[id=\"' + cloneId + '\"]');\r\n        shallowCopy.width(innerWidth);\r\n        shallowCopy.height(innerHeight);\r\n        shallowCopy.css('min-height', 49);\r\n        shallowCopy.css('min-width', 51);\r\n    }\r\n    renderPage(isRerender) {\r\n        if (isRerender) {\r\n            this._resizeSlots();\r\n        }\r\n        this.componentHandlerService.getOverlay().hide();\r\n        this.isRenderingBlocked().then((isRenderingBlocked) => {\r\n            this._markSmartEditAsReady();\r\n            const overlay = this._createOverlay();\r\n            if (isRerender && !isRenderingBlocked) {\r\n                overlay.show();\r\n            }\r\n            this.systemEventService.publish(CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS.RESTART_PROCESS);\r\n            this.crossFrameEventService.publish(OVERLAY_RERENDERED_EVENT);\r\n        });\r\n    }\r\n    renderSlots(_slotIds = null) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (stringUtils.isBlank(_slotIds) || (_slotIds instanceof Array && _slotIds.length === 0)) {\r\n                return Promise.reject('renderService.renderSlots.slotIds.required');\r\n            }\r\n            if (typeof _slotIds === 'string') {\r\n                _slotIds = [_slotIds];\r\n            }\r\n            // need to retrieve unique set of slotIds, happens when moving a component within a slot\r\n            const slotIds = lodash.uniqBy(_slotIds, (slotId) => slotId);\r\n            // see if storefront can handle the rerendering\r\n            const slotsRemaining = slotIds.filter((id) => !this.seNamespaceService.renderComponent(id, 'ContentSlot'));\r\n            if (slotsRemaining.length <= 0) {\r\n                // all were handled by storefront\r\n                return true;\r\n            }\r\n            else {\r\n                let storefrontUrl;\r\n                let response;\r\n                try {\r\n                    storefrontUrl = yield this.experienceService.buildRefreshedPreviewUrl();\r\n                }\r\n                catch (e) {\r\n                    this.logService.error('renderService.renderSlots() - error with buildRefreshedPreviewUrl');\r\n                    return Promise.reject(e);\r\n                }\r\n                try {\r\n                    response = yield this.httpClient\r\n                        .get(storefrontUrl, {\r\n                        headers: {\r\n                            Accept: 'text/html',\r\n                            Pragma: 'no-cache'\r\n                        },\r\n                        responseType: 'text'\r\n                    })\r\n                        .toPromise();\r\n                }\r\n                catch (e) {\r\n                    this.alertService.showDanger({\r\n                        message: e\r\n                    });\r\n                    return Promise.reject(e);\r\n                }\r\n                const root = this.jQueryUtilsService.unsafeParseHTML(response);\r\n                slotsRemaining.forEach((slotId) => {\r\n                    const slotSelector = '.' +\r\n                        COMPONENT_CLASS +\r\n                        '[' +\r\n                        TYPE_ATTRIBUTE +\r\n                        \"='ContentSlot'][\" +\r\n                        ID_ATTRIBUTE +\r\n                        \"='\" +\r\n                        slotId +\r\n                        \"']\";\r\n                    const slotToBeRerendered = this.jQueryUtilsService.extractFromElement(root, slotSelector);\r\n                    const originalSlot = this.yjQuery(slotSelector);\r\n                    originalSlot.html(slotToBeRerendered.html());\r\n                    if (originalSlot.data('smartedit-resized-slot')) {\r\n                        // reset the slot height to auto because the originalSlot height could have been changed previously with a specific height.\r\n                        originalSlot.css('height', 'auto');\r\n                    }\r\n                });\r\n                this._reprocessPage();\r\n                return Promise.resolve();\r\n            }\r\n        });\r\n    }\r\n    renderComponent(componentId, componentType) {\r\n        const component = this.componentHandlerService.getComponent(componentId, componentType);\r\n        const slotId = this.componentHandlerService.getParent(component).attr(ID_ATTRIBUTE);\r\n        if (this.seNamespaceService.renderComponent(componentId, componentType, slotId)) {\r\n            return Promise.resolve(true);\r\n        }\r\n        else {\r\n            return this.renderSlots(slotId);\r\n        }\r\n    }\r\n    renderRemoval(componentId, componentType, slotId) {\r\n        const removedComponents = this.componentHandlerService\r\n            .getComponentUnderSlot(componentId, componentType, slotId)\r\n            .remove();\r\n        this.refreshOverlayDimensions();\r\n        return removedComponents;\r\n    }\r\n    /**\r\n     * Given a smartEdit component in the storefront layer, its clone in the smartEdit overlay is removed and the pertaining decorators destroyed.\r\n     *\r\n     * @param {Element} element The original CMS component element from the storefront.\r\n     * @param {Element=} parent the closest smartEditComponent parent, expected to be null for the highest elements\r\n     * @param {Object=} oldAttributes The map of former attributes of the element. necessary when the element has mutated since the last creation\r\n     */\r\n    destroyComponent(_component, _parent, oldAttributes) {\r\n        const component = this.yjQuery(_component);\r\n        const parent = this.yjQuery(_parent);\r\n        const componentInOverlayId = oldAttributes && oldAttributes[ID_ATTRIBUTE]\r\n            ? oldAttributes[ID_ATTRIBUTE]\r\n            : component.attr(ID_ATTRIBUTE);\r\n        const componentInOverlayType = oldAttributes && oldAttributes[TYPE_ATTRIBUTE]\r\n            ? oldAttributes[TYPE_ATTRIBUTE]\r\n            : component.attr(TYPE_ATTRIBUTE);\r\n        // the node is no longer attached so can't find parent\r\n        if (parent.attr(ID_ATTRIBUTE)) {\r\n            this.componentHandlerService\r\n                .getOverlayComponentWithinSlot(componentInOverlayId, componentInOverlayType, parent.attr(ID_ATTRIBUTE))\r\n                .remove();\r\n        }\r\n        else {\r\n            this.componentHandlerService\r\n                .getComponentInOverlay(componentInOverlayId, componentInOverlayType)\r\n                .remove();\r\n        }\r\n    }\r\n    /**\r\n     * Given a smartEdit component in the storefront layer. An empty clone of it will be created, sized and positioned in the smartEdit overlay\r\n     * then compiled with all eligible decorators for the given perspective (see {@link smarteditServicesModule.interface:IPerspectiveService perspectiveService})\r\n     * @param {Element} element The original CMS component element from the storefront.\r\n     */\r\n    createComponent(element) {\r\n        if (this.componentHandlerService.isOverlayOn() && this._isComponentVisible(element)) {\r\n            this._cloneComponent(element);\r\n        }\r\n    }\r\n    /**\r\n     * Resizes the height of all slots on the page based on the sizes of the components. The new height of the\r\n     * slot is set to the minimum height encompassing its sub-components, calculated by comparing each of the\r\n     * sub-components' top and bottom bounding rectangle values.\r\n     *\r\n     * Slots that do not have components inside still appear in the DOM. If the CMS manager is in a perspective in which\r\n     * slot contextual menus are displayed, slots must have a height. Otherwise, overlays will overlap. Thus, empty slots\r\n     * are given a minimum size so that overlays match.\r\n     *\r\n     * fix CXEC-7224: If we set height of component slot 'auto', the height will be calculated automatically with proper size.\r\n     * So it's not neccessary to call resizeSlots in smartedit.ts for different event.\r\n     */\r\n    _resizeSlots() {\r\n        Array.prototype.slice\r\n            .call(this.componentHandlerService.getFirstSmartEditComponentChildren(document.body))\r\n            .forEach((slotComponent) => {\r\n            slotComponent.style.height = 'auto';\r\n        });\r\n    }\r\n    _getParentInOverlay(element) {\r\n        const parent = this.componentHandlerService.getParent(element);\r\n        if (parent.length) {\r\n            return this.componentHandlerService.getOverlayComponent(parent);\r\n        }\r\n        else {\r\n            return this.componentHandlerService.getOverlay();\r\n        }\r\n    }\r\n    _buildShallowCloneId(smarteditComponentId, smarteditComponentType, smarteditContainerId) {\r\n        const containerSection = !stringUtils.isBlank(smarteditContainerId)\r\n            ? '_' + smarteditContainerId\r\n            : '';\r\n        return smarteditComponentId + '_' + smarteditComponentType + containerSection + '_overlay';\r\n    }\r\n    _cloneComponent(el) {\r\n        if (!this.yjQuery(el).is(':visible')) {\r\n            return;\r\n        }\r\n        const element = this.yjQuery(el);\r\n        const parentOverlay = this._getParentInOverlay(element);\r\n        if (!parentOverlay.length) {\r\n            this.logService.error('renderService: parentOverlay empty for component:', element.attr(ID_ATTRIBUTE));\r\n            return;\r\n        }\r\n        if (!this._validateComponentAttributesContract(element)) {\r\n            return;\r\n        }\r\n        // FIXME: CMSX-6139: use dataset instead of attr(): ELEMENT_UUID_ATTRIBUTE value should not be exposed.\r\n        const elementUUID = stringUtils.generateIdentifier();\r\n        if (!element.attr(ELEMENT_UUID_ATTRIBUTE)) {\r\n            element.attr(ELEMENT_UUID_ATTRIBUTE, elementUUID);\r\n        }\r\n        const smarteditComponentId = element.attr(ID_ATTRIBUTE);\r\n        const smarteditComponentType = element.attr(TYPE_ATTRIBUTE);\r\n        const smarteditContainerId = element.attr(CONTAINER_ID_ATTRIBUTE);\r\n        const shallowCopy = this._getDocument().createElement('div');\r\n        shallowCopy.id = this._buildShallowCloneId(smarteditComponentId, smarteditComponentType, smarteditContainerId);\r\n        const smartEditWrapper = this._getDocument().createElement('smartedit-element');\r\n        const componentDecorator = this.yjQuery(smartEditWrapper);\r\n        componentDecorator.append(shallowCopy);\r\n        this.updateComponentSizeAndPosition(element.get(0), smartEditWrapper);\r\n        if (smarteditComponentType === 'NavigationBarCollectionComponent') {\r\n            // Make sure the Navigation Bar is on top of the navigation items\r\n            smartEditWrapper.style.zIndex = '7';\r\n        }\r\n        componentDecorator.addClass(OVERLAY_COMPONENT_CLASS);\r\n        Array.prototype.slice.apply(element.get(0).attributes).forEach((node) => {\r\n            if (node.nodeName.indexOf(SMARTEDIT_ATTRIBUTE_PREFIX) === 0) {\r\n                componentDecorator.attr(node.nodeName, node.nodeValue);\r\n            }\r\n        });\r\n        parentOverlay.append(smartEditWrapper);\r\n    }\r\n    _createOverlay() {\r\n        const overlayWrapper = this.componentHandlerService.getOverlay();\r\n        if (overlayWrapper.length) {\r\n            return overlayWrapper;\r\n        }\r\n        const overlay = this._getDocument().createElement('div');\r\n        overlay.id = OVERLAY_ID;\r\n        overlay.style.position = 'absolute';\r\n        overlay.style.top = '0px';\r\n        overlay.style.left = '0px';\r\n        overlay.style.bottom = '0px';\r\n        overlay.style.right = '0px';\r\n        overlay.style.display = 'none';\r\n        document.body.appendChild(overlay);\r\n        return this.yjQuery(overlay);\r\n    }\r\n    _validateComponentAttributesContract(element) {\r\n        const requiredAttributes = [\r\n            ID_ATTRIBUTE,\r\n            UUID_ATTRIBUTE,\r\n            TYPE_ATTRIBUTE,\r\n            CATALOG_VERSION_UUID_ATTRIBUTE\r\n        ];\r\n        let valid = true;\r\n        requiredAttributes.forEach((reqAttribute) => {\r\n            if (!element || !element.attr(reqAttribute)) {\r\n                valid = false;\r\n                this.logService.warn('RenderService - smarteditComponent element discovered with missing contract attribute: ' +\r\n                    reqAttribute);\r\n            }\r\n        });\r\n        return valid;\r\n    }\r\n    _markSmartEditAsReady() {\r\n        this.smarteditBootstrapGateway.getInstance().publish('smartEditReady', {});\r\n    }\r\n    _isComponentVisible(component) {\r\n        // NOTE: This might not work as expected for fixed positioned items. For those cases a more expensive\r\n        // check must be performed (get the component style and check if it's visible or not).\r\n        return component.offsetParent !== null;\r\n    }\r\n    _reprocessPage() {\r\n        this.seNamespaceService.reprocessPage();\r\n    }\r\n};\r\n/* @ngInject */ RenderService = __decorate([\r\n    SeDowngradeService(IRenderService),\r\n    GatewayProxied('blockRendering', 'isRenderingBlocked', 'renderSlots', 'renderComponent', 'renderRemoval', 'toggleOverlay', 'refreshOverlayDimensions', 'renderPage'),\r\n    __param(3, Inject(YJQUERY_TOKEN)),\r\n    __metadata(\"design:paramtypes\", [SmarteditBootstrapGateway,\r\n        HttpClient,\r\n        LogService, Function, IAlertService,\r\n        ComponentHandlerService,\r\n        CrossFrameEventService,\r\n        JQueryUtilsService,\r\n        IExperienceService,\r\n        SeNamespaceService,\r\n        SystemEventService,\r\n        INotificationService,\r\n        IPageInfoService,\r\n        IPerspectiveService,\r\n        WindowUtils,\r\n        ModalService])\r\n], /* @ngInject */ RenderService);\r\nexport { /* @ngInject */ RenderService };\r\n//# sourceMappingURL=RenderServiceInner.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit/src/services/SeNamespaceService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"RenderServiceInner.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/RenderServiceInner.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/RenderServiceInner.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\n/// <reference types=\"jquery\" />\r\n/// <reference types=\"eonasdan-bootstrap-datetimepicker\" />\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SeNamespaceService } from 'smartedit/services/SeNamespaceService';\r\nimport { CrossFrameEventService, IAlertService, IExperienceService, INotificationService, IPageInfoService, IPerspectiveService, IRenderService, JQueryUtilsService, LogService, ModalService, SmarteditBootstrapGateway, SystemEventService, WindowUtils, ComponentHandlerService } from 'smarteditcommons';\r\n/** @internal */\r\nexport declare class RenderService extends IRenderService {\r\n    private readonly smarteditBootstrapGateway;\r\n    private readonly httpClient;\r\n    private readonly logService;\r\n    protected yjQuery: JQueryStatic;\r\n    private readonly alertService;\r\n    private readonly componentHandlerService;\r\n    protected crossFrameEventService: CrossFrameEventService;\r\n    private readonly jQueryUtilsService;\r\n    private readonly experienceService;\r\n    private readonly seNamespaceService;\r\n    protected systemEventService: SystemEventService;\r\n    constructor(smarteditBootstrapGateway: SmarteditBootstrapGateway, httpClient: HttpClient, logService: LogService, yjQuery: JQueryStatic, alertService: IAlertService, componentHandlerService: ComponentHandlerService, crossFrameEventService: CrossFrameEventService, jQueryUtilsService: JQueryUtilsService, experienceService: IExperienceService, seNamespaceService: SeNamespaceService, systemEventService: SystemEventService, notificationService: INotificationService, pageInfoService: IPageInfoService, perspectiveService: IPerspectiveService, windowUtils: WindowUtils, modalService: ModalService);\r\n    toggleOverlay(isVisible: boolean): void;\r\n    refreshOverlayDimensions(element?: JQuery): void;\r\n    /**\r\n     * Updates the dimensions of the overlay component element given the original component element and the overlay component itself.\r\n     * If no overlay component is provided, it will be fetched through {@link componentHandlerService.getOverlayComponent}\r\n     *\r\n     * The overlay component is resized to be the same dimensions of the component for which it overlays, and positioned absolutely\r\n     * on the page. Additionally, it is provided with a minimum height and width. The resizing takes into account both\r\n     * the size of the component element, and the position based on iframe scrolling.\r\n     *\r\n     * @param {HTMLElement} element The original CMS component element from the storefront.\r\n     * @param {HTMLElement =} componentOverlayElem The overlay component. If none is provided\r\n     */\r\n    updateComponentSizeAndPosition(element: HTMLElement, componentOverlayElem?: HTMLElement): void;\r\n    renderPage(isRerender: boolean): void;\r\n    renderSlots(_slotIds?: string[] | string): Promise<any>;\r\n    renderComponent(componentId: string, componentType: string): Promise<string | boolean>;\r\n    renderRemoval(componentId: string, componentType: string, slotId: string): JQuery;\r\n    /**\r\n     * Given a smartEdit component in the storefront layer, its clone in the smartEdit overlay is removed and the pertaining decorators destroyed.\r\n     *\r\n     * @param {Element} element The original CMS component element from the storefront.\r\n     * @param {Element=} parent the closest smartEditComponent parent, expected to be null for the highest elements\r\n     * @param {Object=} oldAttributes The map of former attributes of the element. necessary when the element has mutated since the last creation\r\n     */\r\n    destroyComponent(_component: HTMLElement, _parent?: HTMLElement, oldAttributes?: any): void;\r\n    /**\r\n     * Given a smartEdit component in the storefront layer. An empty clone of it will be created, sized and positioned in the smartEdit overlay\r\n     * then compiled with all eligible decorators for the given perspective (see {@link smarteditServicesModule.interface:IPerspectiveService perspectiveService})\r\n     * @param {Element} element The original CMS component element from the storefront.\r\n     */\r\n    createComponent(element: HTMLElement): void;\r\n    /**\r\n     * Resizes the height of all slots on the page based on the sizes of the components. The new height of the\r\n     * slot is set to the minimum height encompassing its sub-components, calculated by comparing each of the\r\n     * sub-components' top and bottom bounding rectangle values.\r\n     *\r\n     * Slots that do not have components inside still appear in the DOM. If the CMS manager is in a perspective in which\r\n     * slot contextual menus are displayed, slots must have a height. Otherwise, overlays will overlap. Thus, empty slots\r\n     * are given a minimum size so that overlays match.\r\n     *\r\n     * fix CXEC-7224: If we set height of component slot 'auto', the height will be calculated automatically with proper size.\r\n     * So it's not neccessary to call resizeSlots in smartedit.ts for different event.\r\n     */\r\n    private _resizeSlots;\r\n    private _getParentInOverlay;\r\n    private _buildShallowCloneId;\r\n    private _cloneComponent;\r\n    private _createOverlay;\r\n    private _validateComponentAttributesContract;\r\n    private _markSmartEditAsReady;\r\n    private _isComponentVisible;\r\n    private _reprocessPage;\r\n}\r\n"}}
