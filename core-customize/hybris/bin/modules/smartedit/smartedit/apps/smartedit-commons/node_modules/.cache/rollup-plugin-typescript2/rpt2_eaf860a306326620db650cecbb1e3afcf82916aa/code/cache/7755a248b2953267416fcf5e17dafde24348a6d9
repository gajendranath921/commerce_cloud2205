{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Cached, ISettingsService, RestServiceFactory } from '@smart/utils';\r\nimport { SeDowngradeService } from '../di';\r\nimport { SETTINGS_URI } from '../utils';\r\nimport { rarelyChangingContent } from './cache';\r\n/*\r\n * Meant to be a non-protected API\r\n */\r\nlet /* @ngInject */ SettingsService = class /* @ngInject */ SettingsService {\r\n    constructor(restServicefactory) {\r\n        this.restService = restServicefactory.get(SETTINGS_URI);\r\n    }\r\n    load() {\r\n        return this.restService.get();\r\n    }\r\n    get(key) {\r\n        return this.load().then((map) => map[key]);\r\n    }\r\n    getBoolean(key) {\r\n        return this.load().then((map) => map[key] === true || map[key] === 'true');\r\n    }\r\n    getStringList(key) {\r\n        return this.load().then((map) => map[key]);\r\n    }\r\n};\r\n__decorate([\r\n    Cached({ actions: [rarelyChangingContent] }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], /* @ngInject */ SettingsService.prototype, \"load\", null);\r\n/* @ngInject */ SettingsService = __decorate([\r\n    SeDowngradeService(ISettingsService),\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [RestServiceFactory])\r\n], /* @ngInject */ SettingsService);\r\nexport { /* @ngInject */ SettingsService };\r\n//# sourceMappingURL=SettingsService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/cache/index.ts"],"map":"{\"version\":3,\"file\":\"SettingsService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/SettingsService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAgB,gBAAgB,EAAE,kBAAkB,EAAY,MAAM,cAAc,CAAC;AACpG,OAAO,EAAE,kBAAkB,EAAE,MAAM,OAAO,CAAC;AAC3C,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AACxC,OAAO,EAAE,qBAAqB,EAAE,MAAM,SAAS,CAAC;AAEhD;;GAEG;AAGH,sCAAA;IAGI,YAAY,kBAAsC;QAC9C,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC,GAAG,CACrC,YAAY,CACf,CAAC;IACN,CAAC;IAGD,IAAI;QACA,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;IAClC,CAAC;IAED,GAAG,CAAC,GAAW;QACX,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAW,CAAC,CAAC;IACzD,CAAC;IAED,UAAU,CAAC,GAAW;QAClB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC;IAC/E,CAAC;IAED,aAAa,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAa,CAAC,CAAC;IAC3D,CAAC;CACJ,CAAA;AAfG;IADC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC;;;;2DAG5C;AAZL;IAFC,kBAAkB,CAAC,gBAAgB,CAAC;IACpC,UAAU,EAAE;qCAIuB,kBAAkB;mCAsBrD\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/SettingsService.d.ts","writeByteOrderMark":false,"text":"import { RestServiceFactory, TypedMap } from '@smart/utils';\r\nexport declare class SettingsService {\r\n    private readonly restService;\r\n    constructor(restServicefactory: RestServiceFactory);\r\n    load(): Promise<TypedMap<string | boolean | string[]>>;\r\n    get(key: string): Promise<string>;\r\n    getBoolean(key: string): Promise<boolean>;\r\n    getStringList(key: string): Promise<string[]>;\r\n}\r\n"}}
