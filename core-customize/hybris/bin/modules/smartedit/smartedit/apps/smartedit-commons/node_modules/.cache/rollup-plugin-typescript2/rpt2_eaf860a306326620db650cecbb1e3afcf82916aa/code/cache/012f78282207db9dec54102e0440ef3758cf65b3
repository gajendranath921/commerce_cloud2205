{"code":"/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * Provides a logic that allows to verify read and write permissions for a particular catalog version.\r\n */\r\nexport class ICatalogVersionPermissionService {\r\n    /**\r\n     * Verifies whether current user has write permission for provided catalogId and catalogVersion.\r\n     */\r\n    hasWritePermission(catalogId, catalogVersion) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * Verifies whether current user has read permission for provided catalogId and catalogVersion.\r\n     */\r\n    hasReadPermission(catalogId, catalogVersion) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * Verifies whether current user has write permission for current catalog version.\r\n     */\r\n    hasWritePermissionOnCurrent() {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * Verifies whether current user has read permission for current catalog version.\r\n     */\r\n    hasReadPermissionOnCurrent() {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * Verifies whether current user has sync permission for provided catalogId, source and target catalog versions.\r\n     */\r\n    hasSyncPermission(catalogId, sourceCatalogVersion, targetCatalogVersion) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * Verifies whether current user has sync permission for current catalog version.\r\n     */\r\n    hasSyncPermissionFromCurrentToActiveCatalogVersion() {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * Verifies whether current user has sync permission for provided catalogId and catalog version.\r\n     */\r\n    hasSyncPermissionToActiveCatalogVersion(catalogId, catalogVersion) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n}\r\n//# sourceMappingURL=ICatalogVersionPermissionService.js.map","references":[],"map":"{\"version\":3,\"file\":\"ICatalogVersionPermissionService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/ICatalogVersionPermissionService.ts\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;AACH;;GAEG;AACH,MAAM,OAAgB,gCAAgC;IAClD;;OAEG;IACH,kBAAkB,CAAC,SAAiB,EAAE,cAAsB;QACxD,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,iBAAiB,CAAC,SAAiB,EAAE,cAAsB;QACvD,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,2BAA2B;QACvB,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,0BAA0B;QACtB,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,iBAAiB,CACb,SAAiB,EACjB,oBAA4B,EAC5B,oBAA4B;QAE5B,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,kDAAkD;QAC9C,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,uCAAuC,CACnC,SAAiB,EACjB,cAAsB;QAEtB,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/interfaces/ICatalogVersionPermissionService.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Provides a logic that allows to verify read and write permissions for a particular catalog version.\r\n */\r\nexport declare abstract class ICatalogVersionPermissionService {\r\n    /**\r\n     * Verifies whether current user has write permission for provided catalogId and catalogVersion.\r\n     */\r\n    hasWritePermission(catalogId: string, catalogVersion: string): Promise<boolean>;\r\n    /**\r\n     * Verifies whether current user has read permission for provided catalogId and catalogVersion.\r\n     */\r\n    hasReadPermission(catalogId: string, catalogVersion: string): Promise<boolean>;\r\n    /**\r\n     * Verifies whether current user has write permission for current catalog version.\r\n     */\r\n    hasWritePermissionOnCurrent(): Promise<boolean>;\r\n    /**\r\n     * Verifies whether current user has read permission for current catalog version.\r\n     */\r\n    hasReadPermissionOnCurrent(): Promise<boolean>;\r\n    /**\r\n     * Verifies whether current user has sync permission for provided catalogId, source and target catalog versions.\r\n     */\r\n    hasSyncPermission(catalogId: string, sourceCatalogVersion: string, targetCatalogVersion: string): Promise<boolean>;\r\n    /**\r\n     * Verifies whether current user has sync permission for current catalog version.\r\n     */\r\n    hasSyncPermissionFromCurrentToActiveCatalogVersion(): Promise<boolean>;\r\n    /**\r\n     * Verifies whether current user has sync permission for provided catalogId and catalog version.\r\n     */\r\n    hasSyncPermissionToActiveCatalogVersion(catalogId: string, catalogVersion: string): Promise<boolean>;\r\n}\r\n"}}
