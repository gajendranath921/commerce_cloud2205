{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output, Type } from '@angular/core';\r\nimport { SeDowngradeComponent } from '../../di';\r\nimport { TreeDragAndDropService } from './TreeDragAndDropService';\r\nimport { TreeNodeItemFactory } from './TreeNodeItemFactory';\r\nimport { TreeService } from './TreeService';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"TreeComponent\", {\r\n    selector: 'se-tree',\r\n    providers: [TreeService, TreeDragAndDropService, TreeNodeItemFactory],\r\n    host: {\r\n        class: 'se-tree'\r\n    },\r\n    template: `<div class=\"categoryTable se-tree\"><div class=\"se-tree__body\"><div class=\"desktopLayout\"><ol class=\"se-tree__nodes\"><li *ngIf=\"(this.treeService.dataSource.get() | async).length === 0\" class=\"se-tree__nodes--nodata\">{{ 'se.ytree.no.nodes.to.display' | translate }}</li><li class=\"se-tree__nodes--item\"><se-tree-node [source]=\"this.treeService.dataSource.get() | async\"></se-tree-node></li></ol></div></div></div>`\r\n});\r\nlet /* @ngInject */ TreeComponent = class /* @ngInject */ TreeComponent {\r\n    constructor(treeService, treeDragAndDropService) {\r\n        this.treeService = treeService;\r\n        this.treeDragAndDropService = treeDragAndDropService;\r\n        this.onTreeUpdated = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this.setNodeActions();\r\n        this.treeService.init(this.nodeUri, this.rootNodeUid);\r\n        this.treeDragAndDropService.init(this.dragOptions);\r\n        this.fetchData(this.treeService.root);\r\n        this.treeService\r\n            .onTreeUpdated()\r\n            .subscribe(() => this.onTreeUpdated.emit(this.treeService.root.nodes));\r\n    }\r\n    fetchData(nodeData) {\r\n        return this.treeService.fetchChildren(nodeData);\r\n    }\r\n    hasChildren(node) {\r\n        return node.hasChildren;\r\n    }\r\n    collapseAll() {\r\n        this.treeService.collapseAll();\r\n    }\r\n    expandAll() {\r\n        this.treeService.expandAll();\r\n    }\r\n    remove(node) {\r\n        this.treeService.removeNode(node);\r\n    }\r\n    newSibling(node) {\r\n        this.treeService.newSibling(node);\r\n    }\r\n    refresh(node) {\r\n        node.setInitiated(false);\r\n        return this.treeService.fetchChildren(node);\r\n    }\r\n    refreshParent(node) {\r\n        this.refresh(node.parent);\r\n    }\r\n    newChild(node) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.treeService.newChild(node);\r\n        });\r\n    }\r\n    getNodeById(nodeUid, nodeArray) {\r\n        return this.treeService.getNodeById(nodeUid, nodeArray);\r\n    }\r\n    get dragEnabled() {\r\n        return this.treeDragAndDropService.isDragEnabled;\r\n    }\r\n    setNodeActions() {\r\n        Object.keys(this.nodeActions).forEach((functionName) => {\r\n            this[functionName] = this.nodeActions[functionName].bind(this, this.treeService);\r\n            this.nodeActions[functionName] = this.nodeActions[functionName].bind(this, this.treeService);\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ TreeComponent.prototype, \"nodeTemplateUrl\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Type)\r\n], /* @ngInject */ TreeComponent.prototype, \"nodeComponent\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ TreeComponent.prototype, \"nodeUri\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ TreeComponent.prototype, \"nodeActions\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ TreeComponent.prototype, \"rootNodeUid\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ TreeComponent.prototype, \"dragOptions\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ TreeComponent.prototype, \"removeDefaultTemplate\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], /* @ngInject */ TreeComponent.prototype, \"showAsList\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ TreeComponent.prototype, \"onTreeUpdated\", void 0);\r\n/* @ngInject */ TreeComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-tree',\r\n        providers: [TreeService, TreeDragAndDropService, TreeNodeItemFactory],\r\n        host: {\r\n            class: 'se-tree'\r\n        },\r\n        template: `<div class=\"categoryTable se-tree\"><div class=\"se-tree__body\"><div class=\"desktopLayout\"><ol class=\"se-tree__nodes\"><li *ngIf=\"(this.treeService.dataSource.get() | async).length === 0\" class=\"se-tree__nodes--nodata\">{{ 'se.ytree.no.nodes.to.display' | translate }}</li><li class=\"se-tree__nodes--item\"><se-tree-node [source]=\"this.treeService.dataSource.get() | async\"></se-tree-node></li></ol></div></div></div>`\r\n    }),\r\n    __metadata(\"design:paramtypes\", [TreeService,\r\n        TreeDragAndDropService])\r\n], /* @ngInject */ TreeComponent);\r\nexport { /* @ngInject */ TreeComponent };\r\n//# sourceMappingURL=TreeComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/TreeDragAndDropService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/TreeNodeItemFactory.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/TreeService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/types.ts"],"map":"{\"version\":3,\"file\":\"TreeComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/treeModule/TreeComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/treeModule/TreeComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, Type } from '@angular/core';\r\nimport { TypedMap } from '@smart/utils';\r\nimport { TreeDragAndDropService } from './TreeDragAndDropService';\r\nimport { TreeService } from './TreeService';\r\nimport { ITreeNodeItem, TreeDragAndDropOptions } from './types';\r\nexport declare class TreeComponent<T, D> {\r\n    private treeService;\r\n    private treeDragAndDropService;\r\n    nodeTemplateUrl: string;\r\n    nodeComponent: Type<any>;\r\n    nodeUri: string;\r\n    nodeActions: TypedMap<(...args: any[]) => void>;\r\n    rootNodeUid: string;\r\n    dragOptions: TreeDragAndDropOptions<T>;\r\n    removeDefaultTemplate: string;\r\n    showAsList: boolean;\r\n    onTreeUpdated: EventEmitter<ITreeNodeItem<T>[]>;\r\n    isDropDisabled: boolean;\r\n    constructor(treeService: TreeService<T, D>, treeDragAndDropService: TreeDragAndDropService<T, D>);\r\n    ngOnInit(): void;\r\n    fetchData(nodeData: ITreeNodeItem<T>): Promise<ITreeNodeItem<T>[]>;\r\n    hasChildren(node: ITreeNodeItem<T>): boolean;\r\n    collapseAll(): void;\r\n    expandAll(): void;\r\n    remove(node: ITreeNodeItem<T>): void;\r\n    newSibling(node: ITreeNodeItem<T>): void;\r\n    refresh(node: ITreeNodeItem<T>): Promise<ITreeNodeItem<T>[]>;\r\n    refreshParent(node: ITreeNodeItem<T>): void;\r\n    newChild(node?: ITreeNodeItem<T>): Promise<void>;\r\n    getNodeById(nodeUid: string, nodeArray?: ITreeNodeItem<T>[]): ITreeNodeItem<T>;\r\n    get dragEnabled(): boolean;\r\n    private setNodeActions;\r\n}\r\n"}}
