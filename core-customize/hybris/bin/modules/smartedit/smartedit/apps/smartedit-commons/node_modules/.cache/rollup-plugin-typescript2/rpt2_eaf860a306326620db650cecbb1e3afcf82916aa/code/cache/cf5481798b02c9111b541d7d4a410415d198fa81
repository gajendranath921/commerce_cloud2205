{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Component, Input, ViewChild } from '@angular/core';\r\nimport { PopoverComponent } from '@fundamental-ngx/core';\r\nimport { SeDowngradeComponent } from '../../di';\r\nimport './TooltipComponent.scss';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"TooltipComponent\", {\r\n    selector: 'se-tooltip',\r\n    template: `\n        <fd-popover\n            [triggers]=\"triggers\"\n            [placement]=\"placement\"\n            [appendTo]=\"appendTo\"\n            [noArrow]=\"!isChevronVisible\"\n            [additionalClasses]=\"['se-tooltip-container']\"\n            [ngClass]=\"additionalClasses\"\n            class=\"se-tooltip\"\n        >\n            <fd-popover-control>\n                <ng-content select=\"[se-tooltip-trigger]\"></ng-content>\n            </fd-popover-control>\n            <fd-popover-body>\n                <div class=\"popover se-popover\">\n                    <h3 class=\"se-popover__title\" *ngIf=\"title\">{{ title | translate }}</h3>\n\n                    <div class=\"se-popover__content\">\n                        <ng-content select=\"[se-tooltip-body]\"></ng-content>\n                    </div>\n                </div>\n            </fd-popover-body>\n        </fd-popover>\n    `\r\n});\r\n/**\r\n * Used to display content in a popover after trigger is applied\r\n *\r\n * ### Example\r\n *\r\n *      <se-tooltip [triggers]=\"mouseover\">\r\n *          <span se-tooltip-trigger>Hover me</span>\r\n *          <p se-tooltip-body>Content</p>\r\n *      </se-tooltip>\r\n */\r\nlet /* @ngInject */ TooltipComponent = class /* @ngInject */ TooltipComponent {\r\n    ngAfterViewInit() {\r\n        // Ensures the tooltip position is set properly.\r\n        //\r\n        // For some components (such as PageDisplayStatusComponent), there is an issue with Popper.js (used by fundamental-ngx) which causes incorrect calculation of the position.\r\n        // This is a temporary workaround which should be rechallenged when upgrading fundamental-ngx to the newer versions.\r\n        this.popoverIsOpenChangeSubscription = this.popover.isOpenChange.subscribe((isOpen) => {\r\n            if (isOpen) {\r\n                setTimeout(() => this.popover.updatePopover());\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.popoverIsOpenChangeSubscription.unsubscribe();\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Array)\r\n], /* @ngInject */ TooltipComponent.prototype, \"triggers\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ TooltipComponent.prototype, \"placement\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ TooltipComponent.prototype, \"title\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ TooltipComponent.prototype, \"appendTo\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], /* @ngInject */ TooltipComponent.prototype, \"isChevronVisible\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Array)\r\n], /* @ngInject */ TooltipComponent.prototype, \"additionalClasses\", void 0);\r\n__decorate([\r\n    ViewChild(PopoverComponent, { static: false }),\r\n    __metadata(\"design:type\", PopoverComponent)\r\n], /* @ngInject */ TooltipComponent.prototype, \"popover\", void 0);\r\n/* @ngInject */ TooltipComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-tooltip',\r\n        template: `\n        <fd-popover\n            [triggers]=\"triggers\"\n            [placement]=\"placement\"\n            [appendTo]=\"appendTo\"\n            [noArrow]=\"!isChevronVisible\"\n            [additionalClasses]=\"['se-tooltip-container']\"\n            [ngClass]=\"additionalClasses\"\n            class=\"se-tooltip\"\n        >\n            <fd-popover-control>\n                <ng-content select=\"[se-tooltip-trigger]\"></ng-content>\n            </fd-popover-control>\n            <fd-popover-body>\n                <div class=\"popover se-popover\">\n                    <h3 class=\"se-popover__title\" *ngIf=\"title\">{{ title | translate }}</h3>\n\n                    <div class=\"se-popover__content\">\n                        <ng-content select=\"[se-tooltip-body]\"></ng-content>\n                    </div>\n                </div>\n            </fd-popover-body>\n        </fd-popover>\n    `\r\n    })\r\n], /* @ngInject */ TooltipComponent);\r\nexport { /* @ngInject */ TooltipComponent };\r\n//# sourceMappingURL=TooltipComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@fundamental-ngx+core@0.13.2_9a9a80bb6ff375d99f90188f858ebbd5/node_modules/@fundamental-ngx/core/fundamental-ngx-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/popupOverlay/index.ts"],"map":"{\"version\":3,\"file\":\"TooltipComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/tooltip/TooltipComponent.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAiB,SAAS,EAAE,KAAK,EAAa,SAAS,EAAE,MAAM,eAAe,CAAC;AACtF,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAEzD,OAAO,EAAE,oBAAoB,EAAE,MAAM,UAAU,CAAC;AAEhD,OAAO,yBAAyB,CAAC;0EAatB;IACP,QAAQ,EAAE,YAAY;IACtB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;KAuBT;CACJ;AArCD;;;;;;;;;GASG;AA6BH,uCAAA;IAiBI,eAAe;QACX,gDAAgD;QAChD,EAAE;QACF,2KAA2K;QAC3K,oHAAoH;QACpH,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAClF,IAAI,MAAM,EAAE;gBACR,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;aAClD;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACP,IAAI,CAAC,+BAA+B,CAAC,WAAW,EAAE,CAAC;IACvD,CAAC;CACJ,CAAA;AA3BY;IAAR,KAAK,EAAE;;kEAAoB;AACnB;IAAR,KAAK,EAAE;;mEAAsB;AACrB;IAAR,KAAK,EAAE;;+DAAe;AACd;IAAR,KAAK,EAAE;;kEAAgC;AAC/B;IAAR,KAAK,EAAE;;0EAA2B;AAE1B;IAAR,KAAK,EAAE;;2EAA6B;AAEW;IAA/C,SAAS,CAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;8BAAU,gBAAgB;iEAAC;AAb9E;IA5BC,oBAAoB,EAAE;IACtB,SAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;KAuBT;KACJ,CAAC;oCAiCD\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/tooltip/TooltipComponent.d.ts","writeByteOrderMark":false,"text":"import { AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { PopoverComponent } from '@fundamental-ngx/core';\r\nimport { Placement } from '../popupOverlay';\r\nimport './TooltipComponent.scss';\r\n/**\r\n * Used to display content in a popover after trigger is applied\r\n *\r\n * ### Example\r\n *\r\n *      <se-tooltip [triggers]=\"mouseover\">\r\n *          <span se-tooltip-trigger>Hover me</span>\r\n *          <p se-tooltip-body>Content</p>\r\n *      </se-tooltip>\r\n */\r\nexport declare class TooltipComponent implements AfterViewInit, OnDestroy {\r\n    /**\r\n     * Array of strings defining what event triggers popover to appear.\r\n     * Accepts any DOM {@link https://www.w3schools.com/jsref/dom_obj_event.asp events}.\r\n     */\r\n    triggers: string[];\r\n    placement: Placement;\r\n    title: string;\r\n    appendTo: HTMLElement | 'body';\r\n    isChevronVisible: boolean;\r\n    /** Additional css classes applied to fd-popover element. */\r\n    additionalClasses: string[];\r\n    popover: PopoverComponent;\r\n    private popoverIsOpenChangeSubscription;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"}}
