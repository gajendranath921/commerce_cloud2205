{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { ChangeDetectorRef, Component } from '@angular/core';\r\nimport { DynamicForm, DynamicInput, FormField } from '@smart/utils';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"GenericEditorDynamicFieldComponent\", {\r\n    selector: 'se-ge-dynamic-field',\r\n    styles: [\r\n        `\n            :host {\n                display: block;\n            }\n        `\r\n    ],\r\n    template: `\n        <se-generic-editor-field\n            [formControl]=\"form\"\n            [field]=\"field\"\n            [model]=\"component\"\n            [qualifier]=\"qualifier\"\n            [id]=\"id\"\n        ></se-generic-editor-field>\n    `\r\n});\r\n/**\r\n * TODO: Some parts of the generic editor field can be moved up to this component.\r\n * and then we could dynamic inject which form we should put the control in.\r\n */\r\nlet GenericEditorDynamicFieldComponent = class GenericEditorDynamicFieldComponent {\r\n    constructor(cdr) {\r\n        this.cdr = cdr;\r\n    }\r\n    ngAfterViewChecked() {\r\n        if (!this.cdr.destroyed) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    DynamicForm(),\r\n    __metadata(\"design:type\", FormField)\r\n], GenericEditorDynamicFieldComponent.prototype, \"form\", void 0);\r\n__decorate([\r\n    DynamicInput(),\r\n    __metadata(\"design:type\", Object)\r\n], GenericEditorDynamicFieldComponent.prototype, \"component\", void 0);\r\n__decorate([\r\n    DynamicInput(),\r\n    __metadata(\"design:type\", Object)\r\n], GenericEditorDynamicFieldComponent.prototype, \"field\", void 0);\r\n__decorate([\r\n    DynamicInput(),\r\n    __metadata(\"design:type\", String)\r\n], GenericEditorDynamicFieldComponent.prototype, \"qualifier\", void 0);\r\n__decorate([\r\n    DynamicInput(),\r\n    __metadata(\"design:type\", String)\r\n], GenericEditorDynamicFieldComponent.prototype, \"id\", void 0);\r\nGenericEditorDynamicFieldComponent = __decorate([\r\n    Component({\r\n        selector: 'se-ge-dynamic-field',\r\n        styles: [\r\n            `\n            :host {\n                display: block;\n            }\n        `\r\n        ],\r\n        template: `\n        <se-generic-editor-field\n            [formControl]=\"form\"\n            [field]=\"field\"\n            [model]=\"component\"\n            [qualifier]=\"qualifier\"\n            [id]=\"id\"\n        ></se-generic-editor-field>\n    `\r\n    }),\r\n    __metadata(\"design:paramtypes\", [ChangeDetectorRef])\r\n], GenericEditorDynamicFieldComponent);\r\nexport { GenericEditorDynamicFieldComponent };\r\n//# sourceMappingURL=GenericEditorDynamicFieldComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/types.ts"],"map":"{\"version\":3,\"file\":\"GenericEditorDynamicFieldComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/genericEditor/components/dynamicField/GenericEditorDynamicFieldComponent.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAoB,iBAAiB,EAAE,SAAS,EAAW,MAAM,eAAe,CAAC;AACxF,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,EAAW,MAAM,cAAc,CAAC;4FAQlE;IACP,QAAQ,EAAE,qBAAqB;IAC/B,MAAM,EAAE;QACJ;;;;SAIC;KACJ;IACD,QAAQ,EAAE;;;;;;;;KAQT;CACJ;AAtBD;;;GAGG;AAoBH,IAAa,kCAAkC,GAA/C,MAAa,kCAAkC;IAgB3C,YAA6B,GAAsB;QAAtB,QAAG,GAAH,GAAG,CAAmB;IAAG,CAAC;IAEvD,kBAAkB;QACd,IAAI,CAAE,IAAI,CAAC,GAAe,CAAC,SAAS,EAAE;YAClC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;SAC5B;IACL,CAAC;CACJ,CAAA;AArBG;IADC,WAAW,EAAE;8BACR,SAAS;gEAAC;AAGhB;IADC,YAAY,EAAE;;qEACI;AAGnB;IADC,YAAY,EAAE;;iEACW;AAG1B;IADC,YAAY,EAAE;;qEACG;AAGlB;IADC,YAAY,EAAE;;8DACJ;AAdF,kCAAkC;IAnB9C,SAAS,CAAC;QACP,QAAQ,EAAE,qBAAqB;QAC/B,MAAM,EAAE;YACJ;;;;SAIC;SACJ;QACD,QAAQ,EAAE;;;;;;;;KAQT;KACJ,CAAC;qCAiBoC,iBAAiB;GAhB1C,kCAAkC,CAuB9C;SAvBY,kCAAkC\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/components/dynamicField/GenericEditorDynamicFieldComponent.d.ts","writeByteOrderMark":false,"text":"import { AfterViewChecked, ChangeDetectorRef } from '@angular/core';\r\nimport { FormField, Payload } from '@smart/utils';\r\nimport { GenericEditorField } from '../../types';\r\n/**\r\n * TODO: Some parts of the generic editor field can be moved up to this component.\r\n * and then we could dynamic inject which form we should put the control in.\r\n */\r\nexport declare class GenericEditorDynamicFieldComponent implements AfterViewChecked {\r\n    private readonly cdr;\r\n    form: FormField;\r\n    component: Payload;\r\n    field: GenericEditorField;\r\n    qualifier: string;\r\n    id: string;\r\n    constructor(cdr: ChangeDetectorRef);\r\n    ngAfterViewChecked(): void;\r\n}\r\n"}}
