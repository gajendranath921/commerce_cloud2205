{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';\r\nimport { SeDowngradeComponent } from '../../../di';\r\nimport { DropdownMenuItemDefaultComponent } from './DropdownMenuItemDefaultComponent';\r\nimport './DropdownMenuComponent.scss';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"DropdownMenuComponent\", {\r\n    selector: 'se-dropdown-menu',\r\n    template: `<fd-popover [triggers]=\"[]\" [closeOnOutsideClick]=\"false\" [isOpen]=\"isOpen\" [placement]=\"placement || 'bottom-end'\" class=\"se-dropdown-more-menu\"><fd-popover-control><div #toggleMenu><div *ngIf=\"!useProjectedAnchor; else projectedAnchor;\" class=\"sap-icon--overflow se-dropdown-more-menu__toggle\"></div><ng-template #projectedAnchor><ng-content></ng-content></ng-template></div></fd-popover-control><fd-popover-body><fd-menu><ul fd-menu-list class=\"se-dropdown-menu__list\" [ngClass]=\"additionalClasses\"><se-dropdown-menu-item *ngFor=\"let dropdownItem of clonedDropdownItems\" [dropdownItem]=\"dropdownItem\" [selectedItem]=\"selectedItem\"></se-dropdown-menu-item></ul></fd-menu></fd-popover-body></fd-popover>`\r\n});\r\nlet /* @ngInject */ DropdownMenuComponent = class /* @ngInject */ DropdownMenuComponent {\r\n    constructor(cd) {\r\n        this.cd = cd;\r\n        this.useProjectedAnchor = false;\r\n        this.isOpen = false;\r\n        this.additionalClasses = [];\r\n        this.isOpenChange = new EventEmitter();\r\n    }\r\n    clickHandler(event) {\r\n        if (this.toggleMenuElement.nativeElement.contains(event.target)) {\r\n            event.stopPropagation();\r\n            this.isOpen = !this.isOpen;\r\n            this.cd.detectChanges();\r\n            this.emitIsOpenChange();\r\n            return;\r\n        }\r\n        if (this.isOpen) {\r\n            this.isOpen = false;\r\n            this.cd.detectChanges();\r\n            this.emitIsOpenChange();\r\n            return;\r\n        }\r\n    }\r\n    ngOnChanges(changes) {\r\n        const dropdownItemsChange = changes.dropdownItems;\r\n        if (dropdownItemsChange) {\r\n            this.clonedDropdownItems = dropdownItemsChange.currentValue\r\n                .map((item) => (Object.assign(Object.assign({}, item), { condition: item.condition || (() => true) })))\r\n                .map((item) => this.setDefaultComponentIfNeeded(item));\r\n        }\r\n    }\r\n    emitIsOpenChange() {\r\n        this.isOpenChange.emit(this.isOpen);\r\n    }\r\n    setDefaultComponentIfNeeded(dropdownItem) {\r\n        switch (this.validateDropdownItem(dropdownItem)) {\r\n            case 'callback':\r\n                return Object.assign(Object.assign({}, dropdownItem), { component: DropdownMenuItemDefaultComponent });\r\n            default:\r\n                return dropdownItem;\r\n        }\r\n    }\r\n    validateDropdownItem(dropdownItem) {\r\n        const expectedAttributes = ['callback', 'component'];\r\n        const passedAttributes = Object.keys(dropdownItem);\r\n        const validatedAttributes = passedAttributes.filter((attribute) => expectedAttributes.includes(attribute));\r\n        if (validatedAttributes.length !== 1) {\r\n            throw new Error('DropdownMenuComponent.validateDropdownItem - Dropdown Item must contain \"callback\" or \"component\"');\r\n        }\r\n        const targetAttribute = validatedAttributes[0];\r\n        return targetAttribute;\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Array)\r\n], /* @ngInject */ DropdownMenuComponent.prototype, \"dropdownItems\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ DropdownMenuComponent.prototype, \"selectedItem\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ DropdownMenuComponent.prototype, \"placement\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ DropdownMenuComponent.prototype, \"useProjectedAnchor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ DropdownMenuComponent.prototype, \"isOpen\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Array)\r\n], /* @ngInject */ DropdownMenuComponent.prototype, \"additionalClasses\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ DropdownMenuComponent.prototype, \"isOpenChange\", void 0);\r\n__decorate([\r\n    ViewChild('toggleMenu', { static: true }),\r\n    __metadata(\"design:type\", ElementRef)\r\n], /* @ngInject */ DropdownMenuComponent.prototype, \"toggleMenuElement\", void 0);\r\n__decorate([\r\n    HostListener('document:click', ['$event']),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [MouseEvent]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], /* @ngInject */ DropdownMenuComponent.prototype, \"clickHandler\", null);\r\n/* @ngInject */ DropdownMenuComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-dropdown-menu',\r\n        template: `<fd-popover [triggers]=\"[]\" [closeOnOutsideClick]=\"false\" [isOpen]=\"isOpen\" [placement]=\"placement || 'bottom-end'\" class=\"se-dropdown-more-menu\"><fd-popover-control><div #toggleMenu><div *ngIf=\"!useProjectedAnchor; else projectedAnchor;\" class=\"sap-icon--overflow se-dropdown-more-menu__toggle\"></div><ng-template #projectedAnchor><ng-content></ng-content></ng-template></div></fd-popover-control><fd-popover-body><fd-menu><ul fd-menu-list class=\"se-dropdown-menu__list\" [ngClass]=\"additionalClasses\"><se-dropdown-menu-item *ngFor=\"let dropdownItem of clonedDropdownItems\" [dropdownItem]=\"dropdownItem\" [selectedItem]=\"selectedItem\"></se-dropdown-menu-item></ul></fd-menu></fd-popover-body></fd-popover>`\r\n    }),\r\n    __metadata(\"design:paramtypes\", [ChangeDetectorRef])\r\n], /* @ngInject */ DropdownMenuComponent);\r\nexport { /* @ngInject */ DropdownMenuComponent };\r\n//# sourceMappingURL=DropdownMenuComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/popupOverlay/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/dropdown/dropdownMenu/DropdownMenuItemDefaultComponent.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/dropdown/dropdownMenu/IDropdownMenuItem.ts"],"map":"{\"version\":3,\"file\":\"DropdownMenuComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/dropdown/dropdownMenu/DropdownMenuComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/dropdown/dropdownMenu/DropdownMenuComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, ElementRef, EventEmitter, Injector, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Placement } from '../../popupOverlay';\r\nimport { IDropdownMenuItem } from './IDropdownMenuItem';\r\nimport './DropdownMenuComponent.scss';\r\nexport declare class DropdownMenuComponent implements OnChanges {\r\n    private cd;\r\n    dropdownItems: IDropdownMenuItem[];\r\n    selectedItem: any;\r\n    placement: Placement;\r\n    useProjectedAnchor: boolean;\r\n    isOpen: boolean;\r\n    additionalClasses: string[];\r\n    isOpenChange: EventEmitter<boolean>;\r\n    toggleMenuElement: ElementRef<HTMLDivElement>;\r\n    clonedDropdownItems: IDropdownMenuItem[];\r\n    dropdownMenuItemDefaultInjector: Injector;\r\n    constructor(cd: ChangeDetectorRef);\r\n    clickHandler(event: MouseEvent): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    private emitIsOpenChange;\r\n    private setDefaultComponentIfNeeded;\r\n    private validateDropdownItem;\r\n}\r\n"}}
