{"code":"import { toPairs } from 'lodash';\r\nimport { proxifyDataObject } from '../models';\r\nimport { FieldSchemaDataMapper } from './FieldSchemaDataMapper';\r\nimport { LocalizedSchemaDataMapper } from './LocalizedSchemaDataMapper';\r\nimport { RootSchemaDataMapper } from './RootSchemaDataMapper';\r\nimport { TabSchemaDataMapper } from './TabSchemaDataMapper';\r\nconst createFieldMapper = (qualifier, field, required, component) => new FieldSchemaDataMapper(qualifier, field, required, component);\r\nconst createLocalizedMapper = (field, languages, component) => {\r\n    if (component[field.qualifier] === undefined) {\r\n        component[field.qualifier] = {};\r\n    }\r\n    component[field.qualifier] = proxifyDataObject(component[field.qualifier]);\r\n    const localMappers = languages.map(({ isocode, required }) => createFieldMapper(isocode, field, field.required && required, component[field.qualifier]));\r\n    return new LocalizedSchemaDataMapper(field.qualifier, localMappers, field, languages, component);\r\n};\r\nconst createTabMapper = (id, fields, languages, component) => {\r\n    const fieldMappers = fields.map((field) => {\r\n        if (field.localized) {\r\n            return createLocalizedMapper(field, languages, component);\r\n        }\r\n        return createFieldMapper(field.qualifier, field, field.required, component);\r\n    });\r\n    return new TabSchemaDataMapper(id, fieldMappers);\r\n};\r\n/**\r\n * @internal\r\n * The createRootMapper is an entry factory to creating the RootSchemaDataMapper and\r\n * the subsequent the nested mappers for tabs, localized fields, and dynamic fields components.\r\n * The returning instance is of type RootSchemaDataMapper which contains\r\n * two methods for building the data and schema object that will be passed\r\n * to the form builder's schema compiler service to build the FormGrouping.\r\n *\r\n * @param {GenericEditorFieldsMap} fieldsMap\r\n * @param {Payload} component\r\n * @param {ILanguage[]} languages\r\n * @param {GenericEditorTab[]} tabs\r\n * @return {RootSchemaDataMapper} A mapper for building data and schema for it to be\r\n * consumed by the SchemaCompilerService in the FormBuilder module.\r\n */\r\nexport const createRootMapper = (fieldsMap, component, languages, tabs) => {\r\n    const rootMappers = toPairs(fieldsMap).map(([id, fields]) => createTabMapper(id, fields, languages, component));\r\n    return new RootSchemaDataMapper(rootMappers, tabs, fieldsMap);\r\n};\r\n//# sourceMappingURL=createRootMapper.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/models/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/types.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/mappers/FieldSchemaDataMapper.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/mappers/LocalizedSchemaDataMapper.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/mappers/RootSchemaDataMapper.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/mappers/TabSchemaDataMapper.ts"],"map":"{\"version\":3,\"file\":\"createRootMapper.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/genericEditor/mappers/createRootMapper.ts\"],\"names\":[],\"mappings\":\"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAIjC,OAAO,EAAE,iBAAiB,EAAE,MAAM,WAAW,CAAC;AAE9C,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAChE,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AACxE,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D,MAAM,iBAAiB,GAAG,CACtB,SAAiB,EACjB,KAAyB,EACzB,QAAiB,EACjB,SAAkB,EACG,EAAE,CAAC,IAAI,qBAAqB,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;AAE7F,MAAM,qBAAqB,GAAG,CAC1B,KAAyB,EACzB,SAAsB,EACtB,SAAkB,EACO,EAAE;IAC3B,IAAI,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,SAAS,EAAE;QAC1C,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;KACnC;IAED,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IAC3E,MAAM,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,CACzD,iBAAiB,CACb,OAAO,EACP,KAAK,EACL,KAAK,CAAC,QAAQ,IAAI,QAAQ,EAC1B,SAAS,CAAC,KAAK,CAAC,SAAS,CAAY,CACxC,CACJ,CAAC;IAEF,OAAO,IAAI,yBAAyB,CAChC,KAAK,CAAC,SAAS,EACf,YAAY,EACZ,KAAK,EACL,SAAS,EACT,SAAS,CACZ,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CACpB,EAAU,EACV,MAA4B,EAC5B,SAAsB,EACtB,SAAkB,EACC,EAAE;IACrB,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAyB,EAAE,EAAE;QAC1D,IAAI,KAAK,CAAC,SAAS,EAAE;YACjB,OAAO,qBAAqB,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;SAC7D;QACD,OAAO,iBAAiB,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,mBAAmB,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;AACrD,CAAC,CAAC;AAEF;;;;;;;;;;;;;;GAcG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC5B,SAAiC,EACjC,SAAkB,EAClB,SAAsB,EACtB,IAAwB,EACJ,EAAE;IACtB,MAAM,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,CAAiC,EAAE,EAAE,CACxF,eAAe,CAAC,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CACpD,CAAC;IAEF,OAAO,IAAI,oBAAoB,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAClE,CAAC,CAAC\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/mappers/createRootMapper.d.ts","writeByteOrderMark":false,"text":"import { Payload } from '@smart/utils';\r\nimport { ILanguage } from '../../../services';\r\nimport { GenericEditorFieldsMap, GenericEditorTab } from '../types';\r\nimport { RootSchemaDataMapper } from './RootSchemaDataMapper';\r\n/**\r\n * @internal\r\n * The createRootMapper is an entry factory to creating the RootSchemaDataMapper and\r\n * the subsequent the nested mappers for tabs, localized fields, and dynamic fields components.\r\n * The returning instance is of type RootSchemaDataMapper which contains\r\n * two methods for building the data and schema object that will be passed\r\n * to the form builder's schema compiler service to build the FormGrouping.\r\n *\r\n * @param {GenericEditorFieldsMap} fieldsMap\r\n * @param {Payload} component\r\n * @param {ILanguage[]} languages\r\n * @param {GenericEditorTab[]} tabs\r\n * @return {RootSchemaDataMapper} A mapper for building data and schema for it to be\r\n * consumed by the SchemaCompilerService in the FormBuilder module.\r\n */\r\nexport declare const createRootMapper: (fieldsMap: GenericEditorFieldsMap, component: Payload, languages: ILanguage[], tabs: GenericEditorTab[]) => RootSchemaDataMapper;\r\n"}}
