{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { FileValidatorFactory, FileMimeTypeService } from '@smart/utils';\r\nimport { IFileValidation } from '../interfaces/IFileValidation';\r\nconst BYTE = 1024;\r\nexport const FILE_VALIDATION_CONFIG = {\r\n    /** A list of file types supported by the platform. */\r\n    ACCEPTED_FILE_TYPES: {\r\n        VIDEO: ['mp4', 'avi', 'x-msvideo', 'wmv', 'mpg', 'mpeg', 'flv'],\r\n        IMAGE: ['jpeg', 'jpg', 'gif', 'bmp', 'tiff', 'tif', 'png', 'svg'],\r\n        PDF_DOCUMENT: ['pdf'],\r\n        DEFAULT: ['jpeg', 'jpg', 'gif', 'bmp', 'tiff', 'tif', 'png', 'svg']\r\n    },\r\n    /** default max of upload file size is 20MB, unit is MB. */\r\n    DEFAULT_MAX_UPLOAD_FILE_SIZE: 20,\r\n    /** A map of all the internationalization keys used by the file validation service. */\r\n    I18N_KEYS: {\r\n        FILE_TYPE_INVALID: 'se.upload.file.type.invalid',\r\n        FILE_SIZE_INVALID: 'se.upload.file.size.invalid'\r\n    }\r\n};\r\n/**\r\n * Validates if a specified file meets the required file type and file size constraints of SAP Hybris Commerce.\r\n */\r\nlet /* @ngInject */ FileValidationService = class /* @ngInject */ FileValidationService extends IFileValidation {\r\n    constructor(fileMimeTypeService, fileValidatorFactory) {\r\n        super();\r\n        this.fileMimeTypeService = fileMimeTypeService;\r\n        this.fileValidatorFactory = fileValidatorFactory;\r\n        this.validators = [\r\n            {\r\n                subject: 'size',\r\n                message: FILE_VALIDATION_CONFIG.I18N_KEYS.FILE_SIZE_INVALID,\r\n                validate: (size, maxSize) => size <= maxSize * BYTE * BYTE\r\n            }\r\n        ];\r\n    }\r\n    /**\r\n     * Validates the specified file object against custom validator and its mimetype.\r\n     * It appends the errors to the error context array provided or it creates a new error context array.\r\n     *\r\n     * @param file The web API file object to be validated.\r\n     * @param context The contextual error array to append the errors to. It is an output parameter.\r\n     * @returns A promise that resolves if the file is valid otherwise it rejects with a list of errors.\r\n     */\r\n    validate(file, maxUploadFileSize, errorsContext) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.fileValidatorFactory\r\n                .build(this.validators)\r\n                .validate(file, maxUploadFileSize, errorsContext);\r\n            try {\r\n                yield this.fileMimeTypeService.isFileMimeTypeValid(file);\r\n                if (errorsContext.length > 0) {\r\n                    return Promise.reject(errorsContext);\r\n                }\r\n            }\r\n            catch (_a) {\r\n                errorsContext.push({\r\n                    subject: 'type',\r\n                    message: FILE_VALIDATION_CONFIG.I18N_KEYS.FILE_TYPE_INVALID\r\n                });\r\n                return Promise.reject(errorsContext);\r\n            }\r\n        });\r\n    }\r\n};\r\n/* @ngInject */ FileValidationService = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [FileMimeTypeService,\r\n        FileValidatorFactory])\r\n], /* @ngInject */ FileValidationService);\r\nexport { /* @ngInject */ FileValidationService };\r\n//# sourceMappingURL=FileValidationService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/IFileValidation.ts"],"map":"{\"version\":3,\"file\":\"FileValidationService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/fileValidation/FileValidationService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EACH,oBAAoB,EAGpB,mBAAmB,EACtB,MAAM,cAAc,CAAC;AACtB,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAChE,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,MAAM,CAAC,MAAM,sBAAsB,GAAG;IAClC,sDAAsD;IACtD,mBAAmB,EAAE;QACjB,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC;QAC/D,KAAK,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QACjE,YAAY,EAAE,CAAC,KAAK,CAAC;QACrB,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;KACtE;IAED,2DAA2D;IAC3D,4BAA4B,EAAE,EAAE;IAChC,sFAAsF;IACtF,SAAS,EAAE;QACP,iBAAiB,EAAE,6BAA6B;QAChD,iBAAiB,EAAE,6BAA6B;KACnD;CACJ,CAAC;AAEF;;GAEG;AAEH,4CAAA,2CAAmC,SAAQ,eAAe;IAStD,YACY,mBAAwC,EACxC,oBAA0C;QAElD,KAAK,EAAE,CAAC;QAHA,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,yBAAoB,GAApB,oBAAoB,CAAsB;QAV9C,eAAU,GAA8B;YAC5C;gBACI,OAAO,EAAE,MAAM;gBACf,OAAO,EAAE,sBAAsB,CAAC,SAAS,CAAC,iBAAiB;gBAC3D,QAAQ,EAAE,CAAC,IAAY,EAAE,OAAe,EAAW,EAAE,CAAC,IAAI,IAAI,OAAO,GAAG,IAAI,GAAG,IAAI;aACtF;SACJ,CAAC;IAOF,CAAC;IAED;;;;;;;OAOG;IACU,QAAQ,CACjB,IAAU,EACV,iBAAyB,EACzB,aAA6B;;YAE7B,IAAI,CAAC,oBAAoB;iBACpB,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;iBACtB,QAAQ,CAAC,IAAI,EAAE,iBAAiB,EAAE,aAAa,CAAC,CAAC;YACtD,IAAI;gBACA,MAAM,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC1B,OAAO,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;iBACxC;aACJ;YAAC,WAAM;gBACJ,aAAa,CAAC,IAAI,CAAC;oBACf,OAAO,EAAE,MAAM;oBACf,OAAO,EAAE,sBAAsB,CAAC,SAAS,CAAC,iBAAiB;iBAC9D,CAAC,CAAC;gBACH,OAAO,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;aACxC;QACL,CAAC;KAAA;CACJ,CAAA;AA7CD;IADC,UAAU,EAAE;qCAWwB,mBAAmB;QAClB,oBAAoB;yCAkCzD\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/fileValidation/FileValidationService.d.ts","writeByteOrderMark":false,"text":"import { FileValidatorFactory, ErrorContext, FileMimeTypeService } from '@smart/utils';\r\nimport { IFileValidation } from '../interfaces/IFileValidation';\r\nexport declare const FILE_VALIDATION_CONFIG: {\r\n    /** A list of file types supported by the platform. */\r\n    ACCEPTED_FILE_TYPES: {\r\n        VIDEO: string[];\r\n        IMAGE: string[];\r\n        PDF_DOCUMENT: string[];\r\n        DEFAULT: string[];\r\n    };\r\n    /** default max of upload file size is 20MB, unit is MB. */\r\n    DEFAULT_MAX_UPLOAD_FILE_SIZE: number;\r\n    /** A map of all the internationalization keys used by the file validation service. */\r\n    I18N_KEYS: {\r\n        FILE_TYPE_INVALID: string;\r\n        FILE_SIZE_INVALID: string;\r\n    };\r\n};\r\n/**\r\n * Validates if a specified file meets the required file type and file size constraints of SAP Hybris Commerce.\r\n */\r\nexport declare class FileValidationService extends IFileValidation {\r\n    private fileMimeTypeService;\r\n    private fileValidatorFactory;\r\n    private validators;\r\n    constructor(fileMimeTypeService: FileMimeTypeService, fileValidatorFactory: FileValidatorFactory);\r\n    /**\r\n     * Validates the specified file object against custom validator and its mimetype.\r\n     * It appends the errors to the error context array provided or it creates a new error context array.\r\n     *\r\n     * @param file The web API file object to be validated.\r\n     * @param context The contextual error array to append the errors to. It is an output parameter.\r\n     * @returns A promise that resolves if the file is valid otherwise it rejects with a list of errors.\r\n     */\r\n    validate(file: File, maxUploadFileSize: number, errorsContext: ErrorContext[]): Promise<ErrorContext[] | void>;\r\n}\r\n"}}
