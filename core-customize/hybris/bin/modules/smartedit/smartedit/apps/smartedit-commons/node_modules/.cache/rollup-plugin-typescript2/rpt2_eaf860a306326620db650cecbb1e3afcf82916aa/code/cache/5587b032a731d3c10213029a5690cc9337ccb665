{"code":"import { EVENTS } from '../../utils/smarteditconstants';\r\n/** @ignore */\r\nexport class HasOperationPermissionBaseDirective {\r\n    constructor(systemEventService, permissionService, logService) {\r\n        this.systemEventService = systemEventService;\r\n        this.permissionService = permissionService;\r\n        this.logService = logService;\r\n    }\r\n    ngOnInit() {\r\n        // NOTE: Refreshing permission checking should only be done after permissions have been cleaned\r\n        // (PERMISSION_CACHE_CLEANED). If this is done as soon after user is changed (USER_CHANGED) then there's a race\r\n        // condition between when the cache is cleaned and when this permission checking is executed.\r\n        this.unregisterHandler = this.systemEventService.subscribe(EVENTS.PERMISSION_CACHE_CLEANED, this.refreshIsPermissionGranted.bind(this));\r\n    }\r\n    ngOnDestroy() {\r\n        this.unregisterHandler();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.hasOperationPermission && changes.hasOperationPermission.currentValue) {\r\n            this.permission = changes.hasOperationPermission.currentValue;\r\n            this.refreshIsPermissionGranted();\r\n        }\r\n    }\r\n    set isPermissionGrantedHandler(handler) {\r\n        this._isPermissionGrantedHandler = handler;\r\n    }\r\n    refreshIsPermissionGranted() {\r\n        this.isPermissionGranted(this.permission).then((isPermissionGranted) => {\r\n            this._isPermissionGrantedHandler(isPermissionGranted);\r\n        });\r\n    }\r\n    isPermissionGranted(permission) {\r\n        return this.permissionService\r\n            .isPermitted(this.validateAndPreparePermissions(permission))\r\n            .then((isPermissionGranted) => isPermissionGranted, (error) => {\r\n            this.logService.error('Failed to retrieve authorization', error);\r\n            return false;\r\n        })\r\n            .then((isPermissionGranted) => isPermissionGranted);\r\n    }\r\n    validateAndPreparePermissions(permissions) {\r\n        if (typeof permissions !== 'string' && !Array.isArray(permissions)) {\r\n            throw new Error('Permission should be string or an array of objects');\r\n        }\r\n        return typeof permissions === 'string' ? this.toPermissions(permissions) : permissions;\r\n    }\r\n    toPermissions(permissions) {\r\n        return [{ names: permissions.split(',') }];\r\n    }\r\n}\r\n//# sourceMappingURL=HasOperationPermissionBaseDirective.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/smarteditconstants.ts"],"map":"{\"version\":3,\"file\":\"HasOperationPermissionBaseDirective.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/directives/hasOperationPermission/HasOperationPermissionBaseDirective.ts\"],\"names\":[],\"mappings\":\"AAWA,OAAO,EAAE,MAAM,EAAE,MAAM,gCAAgC,CAAC;AAKxD,cAAc;AACd,MAAM,OAAgB,mCAAmC;IAKrD,YACY,kBAAsC,EACtC,iBAAqC,EACrC,UAAsB;QAFtB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,eAAU,GAAV,UAAU,CAAY;IAC/B,CAAC;IAEJ,QAAQ;QACJ,+FAA+F;QAC/F,+GAA+G;QAC/G,6FAA6F;QAC7F,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CACtD,MAAM,CAAC,wBAAwB,EAC/B,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAC7C,CAAC;IACN,CAAC;IAED,WAAW;QACP,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,OAAsB;QAC9B,IAAI,OAAO,CAAC,sBAAsB,IAAI,OAAO,CAAC,sBAAsB,CAAC,YAAY,EAAE;YAC/E,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,sBAAsB,CAAC,YAAY,CAAC;YAC9D,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACrC;IACL,CAAC;IAED,IAAc,0BAA0B,CAAC,OAAmC;QACxE,IAAI,CAAC,2BAA2B,GAAG,OAAO,CAAC;IAC/C,CAAC;IAEO,0BAA0B;QAC9B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE,EAAE;YACnE,IAAI,CAAC,2BAA2B,CAAC,mBAAmB,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,mBAAmB,CACvB,UAAiD;QAEjD,OAAO,IAAI,CAAC,iBAAiB;aACxB,WAAW,CAAC,IAAI,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC;aAC3D,IAAI,CACD,CAAC,mBAA4B,EAAE,EAAE,CAAC,mBAAmB,EACrD,CAAC,KAAK,EAAE,EAAE;YACN,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;YACjE,OAAO,KAAK,CAAC;QACjB,CAAC,CACJ;aACA,IAAI,CAAC,CAAC,mBAA4B,EAAE,EAAE,CAAC,mBAAmB,CAAC,CAAC;IACrE,CAAC;IAEO,6BAA6B,CACjC,WAAkD;QAElD,IAAI,OAAO,WAAW,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YAChE,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACzE;QAED,OAAO,OAAO,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;IAC3F,CAAC;IAEO,aAAa,CAAC,WAAmB;QACrC,OAAO,CAAC,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;CACJ\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/directives/hasOperationPermission/HasOperationPermissionBaseDirective.d.ts","writeByteOrderMark":false,"text":"import { OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { IPermissionService, LogService, SystemEventService } from '../../services';\r\n/** @ignore */\r\nexport declare type IsPermissionGrantedHandler = (isPermissionGranted: boolean) => void;\r\n/** @ignore */\r\nexport declare abstract class HasOperationPermissionBaseDirective implements OnInit, OnDestroy, OnChanges {\r\n    private systemEventService;\r\n    private permissionService;\r\n    private logService;\r\n    private _isPermissionGrantedHandler;\r\n    private unregisterHandler;\r\n    private permission;\r\n    constructor(systemEventService: SystemEventService, permissionService: IPermissionService, logService: LogService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    protected set isPermissionGrantedHandler(handler: IsPermissionGrantedHandler);\r\n    private refreshIsPermissionGranted;\r\n    private isPermissionGranted;\r\n    private validateAndPreparePermissions;\r\n    private toPermissions;\r\n}\r\n"}}
