{"code":"/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { InjectionToken } from '@angular/core';\r\nexport const ANNOUNCEMENT_DATA = new InjectionToken('ANNOUNCEMENT_DATA');\r\n/**\r\n * Interface for Announcement service\r\n */\r\nexport class IAnnouncementService {\r\n    /**\r\n     * This method creates a new announcement and displays it.\r\n     *\r\n     * The configuration must contain either message or component.\r\n     *\r\n     * @returns Returns a promise with announcement id.\r\n     */\r\n    showAnnouncement(announcementConfig) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * This method is used to close the announcement by given announcement id.\r\n     */\r\n    closeAnnouncement(announcementId) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n}\r\n//# sourceMappingURL=IAnnouncementService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"IAnnouncementService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/IAnnouncementService.ts\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;AACH,OAAO,EAAE,cAAc,EAAQ,MAAM,eAAe,CAAC;AAOrD,MAAM,CAAC,MAAM,iBAAiB,GAAG,IAAI,cAAc,CAAmB,mBAAmB,CAAC,CAAC;AAyC3F;;GAEG;AACH,MAAM,OAAgB,oBAAoB;IACtC;;;;;;OAMG;IACH,gBAAgB,CAAC,kBAAuC;QACpD,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,iBAAiB,CAAC,cAAsB;QACpC,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/interfaces/IAnnouncementService.d.ts","writeByteOrderMark":false,"text":"import { InjectionToken, Type } from '@angular/core';\r\nimport { TypedMap } from '@smart/utils';\r\nexport declare type AnnouncementData<T = TypedMap<any>> = T & {\r\n    id: string;\r\n};\r\nexport declare const ANNOUNCEMENT_DATA: InjectionToken<AnnouncementData<TypedMap<any>>>;\r\n/**\r\n * Describes the Announcement configuration for  {@link AnnouncementComponent}.\r\n */\r\nexport interface IAnnouncementConfig {\r\n    /**\r\n     * The announcement's message to display.\r\n     */\r\n    message?: string;\r\n    /**\r\n     * Optional title for the announcement's message.\r\n     *\r\n     * This is only used when message is available.\r\n     */\r\n    messageTitle?: string;\r\n    /**\r\n     * The announcement's component to display.\r\n     */\r\n    component?: Type<any>;\r\n    /**\r\n     * Data to pass along to the component through the [token]{@link ANNOUNCEMENT_DATA#token}.\r\n     */\r\n    data?: AnnouncementData;\r\n    /**\r\n     * The optional boolean that determines if a close button must be displayed or not.\r\n     * The default is true.\r\n     */\r\n    closeable?: boolean;\r\n    /**\r\n     * The optional timeout in milliseconds that determines when to close the announcement.\r\n     * The default is 5000.\r\n     */\r\n    timeout?: number;\r\n}\r\n/**\r\n * Interface for Announcement service\r\n */\r\nexport declare abstract class IAnnouncementService {\r\n    /**\r\n     * This method creates a new announcement and displays it.\r\n     *\r\n     * The configuration must contain either message or component.\r\n     *\r\n     * @returns Returns a promise with announcement id.\r\n     */\r\n    showAnnouncement(announcementConfig: IAnnouncementConfig): PromiseLike<string>;\r\n    /**\r\n     * This method is used to close the announcement by given announcement id.\r\n     */\r\n    closeAnnouncement(announcementId: string): PromiseLike<void>;\r\n}\r\n"}}
