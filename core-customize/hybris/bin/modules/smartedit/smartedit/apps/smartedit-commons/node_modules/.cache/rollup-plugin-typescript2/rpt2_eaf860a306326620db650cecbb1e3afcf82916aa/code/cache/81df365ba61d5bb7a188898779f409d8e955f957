{"code":"var /* @ngInject */ DragAndDropService_1;\r\nimport { __decorate, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Inject } from '@angular/core';\r\nimport { stringUtils } from '@smart/utils';\r\nimport * as lo from 'lodash';\r\nimport { SeDowngradeService } from '../../di/SeDowngradeService';\r\nimport { OVERLAY_COMPONENT_CLASS, SMARTEDIT_DRAG_AND_DROP_EVENTS } from '../../utils/smarteditconstants';\r\nimport { IDragAndDropCrossOrigin } from '../interfaces/IDragAndDropCrossOrigin';\r\nimport { SystemEventService } from '../SystemEventService';\r\nimport { YJQUERY_TOKEN } from '../vendors/YjqueryModule';\r\nimport { DragAndDropScrollingService } from './DragAndDropScrollingService';\r\nimport { InViewElementObserver } from './InViewElementObserver';\r\nlet /* @ngInject */ DragAndDropService = /* @ngInject */ DragAndDropService_1 = class /* @ngInject */ DragAndDropService {\r\n    constructor(yjQuery, dragAndDropScrollingService, inViewElementObserver, systemEventService, dragAndDropCrossOrigin) {\r\n        this.yjQuery = yjQuery;\r\n        this.dragAndDropScrollingService = dragAndDropScrollingService;\r\n        this.inViewElementObserver = inViewElementObserver;\r\n        this.systemEventService = systemEventService;\r\n        this.dragAndDropCrossOrigin = dragAndDropCrossOrigin;\r\n        this.configurations = {};\r\n        this.isDragAndDropExecuting = false;\r\n        this.dragAndDropCrossOrigin.initialize();\r\n    }\r\n    /**\r\n     * This method registers a new instance of the drag and drop service.\r\n     * Note: Registering doesn't start the service. It just provides the configuration, which later must be applied with the apply method.\r\n     *\r\n     */\r\n    register(configuration) {\r\n        // Validate\r\n        if (!configuration || !configuration.id) {\r\n            throw new Error('dragAndDropService - register(): Configuration needs an ID.');\r\n        }\r\n        this.configurations[configuration.id] = configuration;\r\n        if (!stringUtils.isBlank(configuration.targetSelector)) {\r\n            this.inViewElementObserver.addSelector(configuration.targetSelector);\r\n        }\r\n    }\r\n    /**\r\n     * This method removes the drag and drop instances specified by the provided IDs.\r\n     *\r\n     */\r\n    unregister(configurationsIDList) {\r\n        configurationsIDList.forEach((configurationID) => {\r\n            const configuration = this.configurations[configurationID];\r\n            if (configuration) {\r\n                this.deactivateConfiguration(configuration);\r\n                this.deactivateScrolling(configuration);\r\n                delete this.configurations[configurationID];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * This method applies all drag and drop configurations registered.\r\n     *\r\n     */\r\n    applyAll() {\r\n        lo.forEach(this.configurations, (currentConfig) => {\r\n            this.apply(currentConfig.id);\r\n        });\r\n    }\r\n    /**\r\n     * This method apply the configuration specified by the provided ID in the current page. After this method is executed drag and drop can be started by the user.\r\n     *\r\n     */\r\n    apply(configurationID) {\r\n        const configuration = this.configurations[configurationID];\r\n        if (configuration) {\r\n            this.update(configuration.id);\r\n            this.cacheDragImages(configuration);\r\n            this.initializeScrolling(configuration);\r\n        }\r\n    }\r\n    /**\r\n     * This method updates the drag and drop instance specified by the provided ID in the current page. It is important to execute this method every time a draggable or droppable element\r\n     * is added or removed from the page DOM.\r\n     *\r\n     */\r\n    update(configurationID) {\r\n        const configuration = this.configurations[configurationID];\r\n        if (configuration) {\r\n            this.deactivateConfiguration(configuration);\r\n            this._update(configuration);\r\n        }\r\n    }\r\n    /**\r\n     * This method forces the page to prepare for a drag and drop operation. This method is necessary when the drag and drop operation is started somewhere else,\r\n     * like on a different iFrame.\r\n     *\r\n     */\r\n    markDragStarted() {\r\n        this.setDragAndDropExecutionStatus(true);\r\n        this.dragAndDropScrollingService.enable();\r\n    }\r\n    // Method used to stop drag and drop from another frame.\r\n    /**\r\n     * This method forces the page to clean after a drag and drop operation. This method is necessary when the drag and drop operation is stopped somewhere else,\r\n     * like on a different iFrame.\r\n     *\r\n     */\r\n    markDragStopped() {\r\n        this.setDragAndDropExecutionStatus(false);\r\n        this.dragAndDropScrollingService.disable();\r\n    }\r\n    _update(configuration) {\r\n        const sourceSelectors = lo.isArray(configuration.sourceSelector)\r\n            ? configuration.sourceSelector\r\n            : [configuration.sourceSelector];\r\n        sourceSelectors.forEach((sourceSelector) => {\r\n            const draggableElements = this.getSelector(sourceSelector + ':not([draggable])');\r\n            draggableElements.attr(/* @ngInject */ DragAndDropService_1.DRAGGABLE_ATTR, 'true');\r\n            draggableElements.on('dragstart', this.onDragStart.bind(this, configuration));\r\n            draggableElements.on('dragend', this.onDragEnd.bind(this, configuration));\r\n        });\r\n        const droppableElements = this.getSelector(configuration.targetSelector + ':not([draggable])');\r\n        droppableElements.attr(/* @ngInject */ DragAndDropService_1.DROPPABLE_ATTR, 'true'); // Not needed by HTML5. It's to mark element as processed.\r\n        droppableElements.on('dragenter', this.onDragEnter.bind(this, configuration));\r\n        droppableElements.on('dragover', this.onDragOver.bind(this, configuration));\r\n        droppableElements.on('drop', this.onDrop.bind(this, configuration));\r\n        droppableElements.on('dragleave', this.onDragLeave.bind(this, configuration));\r\n    }\r\n    deactivateConfiguration(configuration) {\r\n        const sourceSelectors = Array.isArray(configuration.sourceSelector)\r\n            ? configuration.sourceSelector.join(',')\r\n            : configuration.sourceSelector;\r\n        const draggableElements = this.getSelector(sourceSelectors);\r\n        const droppableElements = this.getSelector(configuration.targetSelector);\r\n        draggableElements.removeAttr(/* @ngInject */ DragAndDropService_1.DRAGGABLE_ATTR);\r\n        droppableElements.removeAttr(/* @ngInject */ DragAndDropService_1.DROPPABLE_ATTR);\r\n        draggableElements.off('dragstart');\r\n        draggableElements.off('dragend');\r\n        droppableElements.off('dragenter');\r\n        droppableElements.off('dragover');\r\n        droppableElements.off('dragleave');\r\n        droppableElements.off('drop');\r\n    }\r\n    // Draggable Listeners\r\n    onDragStart(configuration, yjQueryEvent) {\r\n        // The native transferData object is modified outside the setTimeout since it can only be modified\r\n        // inside the dragStart event handler (otherwise an exception is thrown by the browser).\r\n        const evt = yjQueryEvent.originalEvent;\r\n        this.setDragTransferData(configuration, evt);\r\n        // Necessary because there's a bug in Chrome (and probably Safari) where dragEnd is triggered right after\r\n        // dragStart whenever DOM is modified in the event handler. The problem can be circumvented by using setTimeout.\r\n        setTimeout(() => {\r\n            const component = this.yjQuery(yjQueryEvent.target).closest('.' + OVERLAY_COMPONENT_CLASS);\r\n            this.setDragAndDropExecutionStatus(true, component);\r\n            this.dragAndDropScrollingService.enable();\r\n            if (configuration.startCallback) {\r\n                configuration.startCallback(evt);\r\n            }\r\n        }, 0);\r\n    }\r\n    onDragEnd(configuration, yjQueryEvent) {\r\n        const evt = yjQueryEvent.originalEvent;\r\n        this.dragAndDropScrollingService.disable();\r\n        if (this.isDragAndDropExecuting && configuration.stopCallback) {\r\n            configuration.stopCallback(evt);\r\n        }\r\n        this.setDragAndDropExecutionStatus(false);\r\n    }\r\n    // Droppable Listeners\r\n    onDragEnter(configuration, yjQueryEvent) {\r\n        const evt = yjQueryEvent.originalEvent;\r\n        evt.preventDefault();\r\n        if (this.isDragAndDropExecuting && configuration.dragEnterCallback) {\r\n            configuration.dragEnterCallback(evt);\r\n        }\r\n    }\r\n    onDragOver(configuration, yjQueryEvent) {\r\n        const evt = yjQueryEvent.originalEvent;\r\n        evt.preventDefault();\r\n        if (this.isDragAndDropExecuting && configuration.dragOverCallback) {\r\n            configuration.dragOverCallback(evt);\r\n        }\r\n    }\r\n    onDrop(configuration, yjQueryEvent) {\r\n        const evt = yjQueryEvent.originalEvent;\r\n        evt.preventDefault(); // Necessary to receive the on drop event. Otherwise, other handlers are executed.\r\n        evt.stopPropagation();\r\n        if (evt.relatedTarget && evt.relatedTarget.nodeType === 3) {\r\n            return true;\r\n        }\r\n        if (evt.target === evt.relatedTarget) {\r\n            return true;\r\n        }\r\n        if (this.isDragAndDropExecuting && configuration.dropCallback) {\r\n            configuration.dropCallback(evt);\r\n        }\r\n        return false;\r\n    }\r\n    onDragLeave(configuration, yjQueryEvent) {\r\n        const evt = yjQueryEvent.originalEvent;\r\n        evt.preventDefault();\r\n        if (this.isDragAndDropExecuting && configuration.outCallback) {\r\n            configuration.outCallback(evt);\r\n        }\r\n    }\r\n    // Helper Functions\r\n    cacheDragImages(configuration) {\r\n        let helperImg;\r\n        if (configuration.helper) {\r\n            helperImg = configuration.helper();\r\n        }\r\n        if (!helperImg) {\r\n            return;\r\n        }\r\n        if (typeof helperImg === 'string') {\r\n            configuration._cachedDragImage = new Image();\r\n            configuration._cachedDragImage.src = helperImg;\r\n        }\r\n        else {\r\n            configuration._cachedDragImage = helperImg;\r\n        }\r\n    }\r\n    setDragTransferData(configuration, evt) {\r\n        // Note: Firefox recently added some restrictions to their drag and drop functionality; it only\r\n        // allows starting drag and drop operations if there's data present in the dataTransfer object.\r\n        // Otherwise, the whole operation fails silently. Thus, some data needs to be added.\r\n        evt.dataTransfer.setData('Text', configuration.id);\r\n        if (configuration._cachedDragImage && evt.dataTransfer.setDragImage) {\r\n            evt.dataTransfer.setDragImage(configuration._cachedDragImage, 0, 0);\r\n        }\r\n    }\r\n    getSelector(selector) {\r\n        return this.yjQuery(selector);\r\n    }\r\n    setDragAndDropExecutionStatus(isExecuting, element) {\r\n        this.isDragAndDropExecuting = isExecuting;\r\n        this.systemEventService.publish(isExecuting\r\n            ? SMARTEDIT_DRAG_AND_DROP_EVENTS.DRAG_DROP_START\r\n            : SMARTEDIT_DRAG_AND_DROP_EVENTS.DRAG_DROP_END, element);\r\n    }\r\n    initializeScrolling(configuration) {\r\n        if (configuration.enableScrolling && this.browserRequiresCustomScrolling()) {\r\n            this.dragAndDropScrollingService.initialize();\r\n        }\r\n    }\r\n    deactivateScrolling(configuration) {\r\n        if (configuration.enableScrolling && this.browserRequiresCustomScrolling()) {\r\n            this.dragAndDropScrollingService.deactivate();\r\n        }\r\n    }\r\n    browserRequiresCustomScrolling() {\r\n        // NOTE: It'd be better to identify if native scrolling while dragging is enabled in the browser, but\r\n        // currently there's no way to know. Thus, browser fixing is necessary.\r\n        return true;\r\n    }\r\n};\r\n/* @ngInject */ DragAndDropService.DRAGGABLE_ATTR = 'draggable';\r\n/* @ngInject */ DragAndDropService.DROPPABLE_ATTR = 'data-droppable';\r\n/* @ngInject */ DragAndDropService = /* @ngInject */ DragAndDropService_1 = __decorate([\r\n    SeDowngradeService(),\r\n    __param(0, Inject(YJQUERY_TOKEN)),\r\n    __metadata(\"design:paramtypes\", [Function, DragAndDropScrollingService,\r\n        InViewElementObserver,\r\n        SystemEventService,\r\n        IDragAndDropCrossOrigin])\r\n], /* @ngInject */ DragAndDropService);\r\nexport { /* @ngInject */ DragAndDropService };\r\n//# sourceMappingURL=DragAndDropService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/SeDowngradeService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/smarteditconstants.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/IDragAndDropCrossOrigin.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/SystemEventService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/vendors/YjqueryModule.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/dragAndDrop/DragAndDropScrollingService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/dragAndDrop/InViewElementObserver.ts"],"map":"{\"version\":3,\"file\":\"DragAndDropService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/dragAndDrop/DragAndDropService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/dragAndDrop/DragAndDropService.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\n/// <reference types=\"jquery\" />\r\nimport { IDragAndDropCrossOrigin } from '../interfaces/IDragAndDropCrossOrigin';\r\nimport { SystemEventService } from '../SystemEventService';\r\nimport { DragAndDropScrollingService } from './DragAndDropScrollingService';\r\nimport { InViewElementObserver } from './InViewElementObserver';\r\nexport interface DragAndDropConfiguration {\r\n    id: string;\r\n    sourceSelector: string | string[];\r\n    targetSelector: string;\r\n    startCallback: (event: Event) => void;\r\n    dragEnterCallback?: (event: Event) => void;\r\n    dragOverCallback?: (event: Event) => void;\r\n    dropCallback?: (event: Event) => void;\r\n    outCallback?: (event: Event) => void;\r\n    stopCallback: (event: Event) => void;\r\n    helper?: () => string;\r\n    enableScrolling: boolean;\r\n    /** @internal */\r\n    _cachedDragImage?: HTMLImageElement;\r\n}\r\nexport declare class DragAndDropService {\r\n    private yjQuery;\r\n    private dragAndDropScrollingService;\r\n    private inViewElementObserver;\r\n    private systemEventService;\r\n    private dragAndDropCrossOrigin;\r\n    private static readonly DRAGGABLE_ATTR;\r\n    private static readonly DROPPABLE_ATTR;\r\n    private configurations;\r\n    private isDragAndDropExecuting;\r\n    constructor(yjQuery: JQueryStatic, dragAndDropScrollingService: DragAndDropScrollingService, inViewElementObserver: InViewElementObserver, systemEventService: SystemEventService, dragAndDropCrossOrigin: IDragAndDropCrossOrigin);\r\n    /**\r\n     * This method registers a new instance of the drag and drop service.\r\n     * Note: Registering doesn't start the service. It just provides the configuration, which later must be applied with the apply method.\r\n     *\r\n     */\r\n    register(configuration: DragAndDropConfiguration): void;\r\n    /**\r\n     * This method removes the drag and drop instances specified by the provided IDs.\r\n     *\r\n     */\r\n    unregister(configurationsIDList: string[]): void;\r\n    /**\r\n     * This method applies all drag and drop configurations registered.\r\n     *\r\n     */\r\n    applyAll(): void;\r\n    /**\r\n     * This method apply the configuration specified by the provided ID in the current page. After this method is executed drag and drop can be started by the user.\r\n     *\r\n     */\r\n    apply(configurationID: string): void;\r\n    /**\r\n     * This method updates the drag and drop instance specified by the provided ID in the current page. It is important to execute this method every time a draggable or droppable element\r\n     * is added or removed from the page DOM.\r\n     *\r\n     */\r\n    update(configurationID: string): void;\r\n    /**\r\n     * This method forces the page to prepare for a drag and drop operation. This method is necessary when the drag and drop operation is started somewhere else,\r\n     * like on a different iFrame.\r\n     *\r\n     */\r\n    markDragStarted(): void;\r\n    /**\r\n     * This method forces the page to clean after a drag and drop operation. This method is necessary when the drag and drop operation is stopped somewhere else,\r\n     * like on a different iFrame.\r\n     *\r\n     */\r\n    markDragStopped(): void;\r\n    private _update;\r\n    private deactivateConfiguration;\r\n    private onDragStart;\r\n    private onDragEnd;\r\n    private onDragEnter;\r\n    private onDragOver;\r\n    private onDrop;\r\n    private onDragLeave;\r\n    private cacheDragImages;\r\n    private setDragTransferData;\r\n    private getSelector;\r\n    private setDragAndDropExecutionStatus;\r\n    private initializeScrolling;\r\n    private deactivateScrolling;\r\n    private browserRequiresCustomScrolling;\r\n}\r\n"}}
