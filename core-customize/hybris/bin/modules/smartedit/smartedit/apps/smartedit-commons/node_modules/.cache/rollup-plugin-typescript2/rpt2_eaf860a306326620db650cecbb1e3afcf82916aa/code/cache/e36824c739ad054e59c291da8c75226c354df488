{"code":"import { __awaiter, __decorate, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SeDowngradeService } from 'smarteditcommons/di';\r\nimport { LanguageService } from '../../../../services/language/LanguageService';\r\nimport { RESOLVED_LOCALE_TO_MOMENT_LOCALE_MAP, TOOLTIPS_MAP } from './tokens';\r\n/**\r\n * The DateTimePickerLocalizationService is responsible for both localizing the date time picker as well as the tooltips\r\n */\r\nlet /* @ngInject */ DateTimePickerLocalizationService = class /* @ngInject */ DateTimePickerLocalizationService {\r\n    constructor(translate, resolvedLocaleToMomentLocaleMap, tooltipsMap, languageService) {\r\n        this.translate = translate;\r\n        this.resolvedLocaleToMomentLocaleMap = resolvedLocaleToMomentLocaleMap;\r\n        this.tooltipsMap = tooltipsMap;\r\n        this.languageService = languageService;\r\n    }\r\n    localizeDateTimePicker(datetimepicker) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.localizeDateTimePickerUI(datetimepicker);\r\n            this.localizeDateTimePickerTooltips(datetimepicker);\r\n        });\r\n    }\r\n    convertResolvedToMomentLocale(resolvedLocale) {\r\n        const conversion = this.resolvedLocaleToMomentLocaleMap[resolvedLocale];\r\n        if (conversion) {\r\n            return conversion;\r\n        }\r\n        else {\r\n            return resolvedLocale;\r\n        }\r\n    }\r\n    getLocalizedTooltips() {\r\n        const localizedTooltips = {};\r\n        for (const index in this.tooltipsMap) {\r\n            if (this.tooltipsMap.hasOwnProperty(index)) {\r\n                localizedTooltips[index] = this.translate.instant(this.tooltipsMap[index]);\r\n            }\r\n        }\r\n        return localizedTooltips;\r\n    }\r\n    compareTooltips(tooltips1, tooltips2) {\r\n        for (const index in this.tooltipsMap) {\r\n            if (tooltips1[index] !== tooltips2[index]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    localizeDateTimePickerUI(datetimepicker) {\r\n        return this.languageService.getResolveLocale().then((language) => {\r\n            const momentLocale = this.convertResolvedToMomentLocale(language);\r\n            // This if statement was added to prevent infinite recursion, at the moment it triggers twice\r\n            // due to what seems like datetimepicker.locale(<string>) broadcasting dp.show\r\n            if (datetimepicker.locale() !== momentLocale) {\r\n                datetimepicker.locale(momentLocale);\r\n            }\r\n        });\r\n    }\r\n    localizeDateTimePickerTooltips(datetimepicker) {\r\n        const currentTooltips = datetimepicker.tooltips();\r\n        const translatedTooltips = this.getLocalizedTooltips();\r\n        // This if statement was added to prevent infinite recursion, at the moment it triggers twice\r\n        // due to what seems like datetimepicker.tooltips(<tooltips obj>) broadcasting dp.show\r\n        if (!this.compareTooltips(currentTooltips, translatedTooltips)) {\r\n            datetimepicker.tooltips(translatedTooltips);\r\n        }\r\n    }\r\n};\r\n/* @ngInject */ DateTimePickerLocalizationService = __decorate([\r\n    SeDowngradeService(),\r\n    __param(1, Inject(RESOLVED_LOCALE_TO_MOMENT_LOCALE_MAP)),\r\n    __param(2, Inject(TOOLTIPS_MAP)),\r\n    __metadata(\"design:paramtypes\", [TranslateService, Object, Object, LanguageService])\r\n], /* @ngInject */ DateTimePickerLocalizationService);\r\nexport { /* @ngInject */ DateTimePickerLocalizationService };\r\n//# sourceMappingURL=DateTimePickerLocalizationService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate+core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+eonasdan-bootstrap-datetimepicker@4.17.26/node_modules/@types/eonasdan-bootstrap-datetimepicker/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/language/LanguageService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/widgets/DateTimePickerComponent/tokens.ts"],"map":"{\"version\":3,\"file\":\"DateTimePickerLocalizationService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/genericEditor/widgets/DateTimePickerComponent/DateTimePickerLocalizationService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAIvD,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AACzD,OAAO,EAAE,eAAe,EAAE,MAAM,+CAA+C,CAAC;AAChF,OAAO,EAAE,oCAAoC,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAE9E;;GAEG;AAEH,wDAAA;IACI,YACY,SAA2B,EAE3B,+BAAiD,EAC3B,WAAqB,EAC3C,eAAgC;QAJhC,cAAS,GAAT,SAAS,CAAkB;QAE3B,oCAA+B,GAA/B,+BAA+B,CAAkB;QAC3B,gBAAW,GAAX,WAAW,CAAU;QAC3C,oBAAe,GAAf,eAAe,CAAiB;IACzC,CAAC;IAEE,sBAAsB,CAAC,cAA8B;;YACvD,MAAM,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,CAAC;YACpD,IAAI,CAAC,8BAA8B,CAAC,cAAc,CAAC,CAAC;QACxD,CAAC;KAAA;IAEO,6BAA6B,CAAC,cAAsB;QACxD,MAAM,UAAU,GAAG,IAAI,CAAC,+BAA+B,CAAC,cAAc,CAAC,CAAC;QACxE,IAAI,UAAU,EAAE;YACZ,OAAO,UAAU,CAAC;SACrB;aAAM;YACH,OAAO,cAAc,CAAC;SACzB;IACL,CAAC;IAEO,oBAAoB;QACxB,MAAM,iBAAiB,GAAqB,EAAE,CAAC;QAE/C,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;YAClC,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;gBACxC,iBAAiB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAC7C,IAAI,CAAC,WAAW,CAAC,KAAuB,CAAC,CAC5C,CAAC;aACL;SACJ;QAED,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAEO,eAAe,CAAC,SAAmB,EAAE,SAAmB;QAC5D,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;YAClC,IAAI,SAAS,CAAC,KAAuB,CAAC,KAAK,SAAS,CAAC,KAAuB,CAAC,EAAE;gBAC3E,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,wBAAwB,CAAC,cAA8B;QAC3D,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,QAAgB,EAAE,EAAE;YACrE,MAAM,YAAY,GAAG,IAAI,CAAC,6BAA6B,CAAC,QAAQ,CAAC,CAAC;YAElE,6FAA6F;YAC7F,8EAA8E;YAC9E,IAAI,cAAc,CAAC,MAAM,EAAE,KAAK,YAAY,EAAE;gBAC1C,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;aACvC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,8BAA8B,CAAC,cAA8B;QACjE,MAAM,eAAe,GAAG,cAAc,CAAC,QAAQ,EAAE,CAAC;QAClD,MAAM,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAEvD,6FAA6F;QAC7F,sFAAsF;QACtF,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,kBAAkB,CAAC,EAAE;YAC5D,cAAc,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;SAC/C;IACL,CAAC;CACJ,CAAA;AApED;IADC,kBAAkB,EAAE;IAIZ,WAAA,MAAM,CAAC,oCAAoC,CAAC,CAAA;IAE5C,WAAA,MAAM,CAAC,YAAY,CAAC,CAAA;qCAHF,gBAAgB,kBAIV,eAAe;qDA8D/C\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/widgets/DateTimePickerComponent/DateTimePickerLocalizationService.d.ts","writeByteOrderMark":false,"text":"import { TranslateService } from '@ngx-translate/core';\r\nimport { TypedMap } from '@smart/utils';\r\nimport { Datetimepicker, Tooltips } from 'eonasdan-bootstrap-datetimepicker';\r\nimport { LanguageService } from '../../../../services/language/LanguageService';\r\n/**\r\n * The DateTimePickerLocalizationService is responsible for both localizing the date time picker as well as the tooltips\r\n */\r\nexport declare class DateTimePickerLocalizationService {\r\n    private translate;\r\n    private resolvedLocaleToMomentLocaleMap;\r\n    private tooltipsMap;\r\n    private languageService;\r\n    constructor(translate: TranslateService, resolvedLocaleToMomentLocaleMap: TypedMap<string>, tooltipsMap: Tooltips, languageService: LanguageService);\r\n    localizeDateTimePicker(datetimepicker: Datetimepicker): Promise<void>;\r\n    private convertResolvedToMomentLocale;\r\n    private getLocalizedTooltips;\r\n    private compareTooltips;\r\n    private localizeDateTimePickerUI;\r\n    private localizeDateTimePickerTooltips;\r\n}\r\n"}}
