{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nimport { GenericEditorStackService } from '../../../components/genericEditor/services/GenericEditorStackService';\r\nimport { IAlertService } from '../../../services/interfaces';\r\n/**\r\n * Used for HTTP error code 400. It removes all errors of type 'ValidationError' and displays alert messages for non-validation errors.\r\n */\r\nlet /* @ngInject */ NonValidationErrorInterceptor = class /* @ngInject */ NonValidationErrorInterceptor {\r\n    constructor(alertService, genericEditorStackService) {\r\n        this.alertService = alertService;\r\n        this.genericEditorStackService = genericEditorStackService;\r\n    }\r\n    predicate(request, response) {\r\n        return response.status === 400;\r\n    }\r\n    responseError(request, response) {\r\n        if (response.error && response.error.errors) {\r\n            response.error.errors\r\n                .filter((error) => {\r\n                const isValidationError = error.type === 'ValidationError';\r\n                return (!isValidationError ||\r\n                    (isValidationError &&\r\n                        !this.genericEditorStackService.isAnyGenericEditorOpened()));\r\n            })\r\n                .forEach((error) => {\r\n                this.alertService.showDanger({\r\n                    message: error.message || 'se.unknown.request.error',\r\n                    duration: 10000\r\n                });\r\n            });\r\n        }\r\n        return Promise.reject(response);\r\n    }\r\n};\r\n/* @ngInject */ NonValidationErrorInterceptor = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [IAlertService,\r\n        GenericEditorStackService])\r\n], /* @ngInject */ NonValidationErrorInterceptor);\r\nexport { /* @ngInject */ NonValidationErrorInterceptor };\r\n//# sourceMappingURL=NonValidationErrorInterceptor.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/services/GenericEditorStackService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/index.ts"],"map":"{\"version\":3,\"file\":\"NonValidationErrorInterceptor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/services/interceptors/errors/NonValidationErrorInterceptor.ts\"],\"names\":[],\"mappings\":\";AAIA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,yBAAyB,EAAE,MAAM,sEAAsE,CAAC;AACjH,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAE7D;;GAEG;AAEH,oDAAA;IACI,YACqB,YAA2B,EAC3B,yBAAoD;QADpD,iBAAY,GAAZ,YAAY,CAAe;QAC3B,8BAAyB,GAAzB,yBAAyB,CAA2B;IACtE,CAAC;IAEJ,SAAS,CAAC,OAAuB,EAAE,QAA2B;QAC1D,OAAO,QAAQ,CAAC,MAAM,KAAK,GAAG,CAAC;IACnC,CAAC;IAED,aAAa,CAAC,OAAuB,EAAE,QAA2B;QAC9D,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE;YACzC,QAAQ,CAAC,KAAK,CAAC,MAAM;iBAChB,MAAM,CAAC,CAAC,KAAmB,EAAE,EAAE;gBAC5B,MAAM,iBAAiB,GAAG,KAAK,CAAC,IAAI,KAAK,iBAAiB,CAAC;gBAC3D,OAAO,CACH,CAAC,iBAAiB;oBAClB,CAAC,iBAAiB;wBACd,CAAC,IAAI,CAAC,yBAAyB,CAAC,wBAAwB,EAAE,CAAC,CAClE,CAAC;YACN,CAAC,CAAC;iBACD,OAAO,CAAC,CAAC,KAAmB,EAAE,EAAE;gBAC7B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;oBACzB,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,0BAA0B;oBACpD,QAAQ,EAAE,KAAK;iBAClB,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACV;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;CACJ,CAAA;AA9BD;IADC,UAAU,EAAE;qCAG0B,aAAa;QACA,yBAAyB;iDA2B5E\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/interceptors/errors/NonValidationErrorInterceptor.d.ts","writeByteOrderMark":false,"text":"import { HttpErrorResponse, HttpRequest } from '@angular/common/http';\r\nimport { IHttpErrorInterceptor } from '@smart/utils';\r\nimport { GenericEditorStackService } from '../../../components/genericEditor/services/GenericEditorStackService';\r\nimport { IAlertService } from '../../../services/interfaces';\r\n/**\r\n * Used for HTTP error code 400. It removes all errors of type 'ValidationError' and displays alert messages for non-validation errors.\r\n */\r\nexport declare class NonValidationErrorInterceptor<T = any> implements IHttpErrorInterceptor<T> {\r\n    private readonly alertService;\r\n    private readonly genericEditorStackService;\r\n    constructor(alertService: IAlertService, genericEditorStackService: GenericEditorStackService);\r\n    predicate(request: HttpRequest<T>, response: HttpErrorResponse): boolean;\r\n    responseError(request: HttpRequest<T>, response: HttpErrorResponse): Promise<never>;\r\n}\r\n"}}
