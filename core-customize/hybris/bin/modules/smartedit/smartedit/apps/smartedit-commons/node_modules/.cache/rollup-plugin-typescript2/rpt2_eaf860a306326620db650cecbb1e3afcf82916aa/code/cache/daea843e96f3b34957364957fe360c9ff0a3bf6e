{"code":"export class ISyncPollingService {\r\n    registerSyncPollingEvents() {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    changePollingSpeed(eventId, itemId) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    fetchSyncStatus(_pageUUID, uriContext) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    performSync(array, uriContext) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    getSyncStatus(pageUUID, uriContext, forceGetSynchronization) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n}\r\n//# sourceMappingURL=ISyncPollingService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/index.ts"],"map":"{\"version\":3,\"file\":\"ISyncPollingService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/ISyncPollingService.ts\"],\"names\":[],\"mappings\":\"AAMA,MAAM,OAAgB,mBAAmB;IACrC,yBAAyB;QACrB,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAkB,CAAC,OAAe,EAAE,MAAe;QAC/C,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,eAAe,CAAC,SAAiB,EAAE,UAAuB;QACtD,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,WAAW,CAAC,KAAyB,EAAE,UAAuB;QAC1D,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,aAAa,CACT,QAAgB,EAChB,UAAwB,EACxB,uBAAiC;QAEjC,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/interfaces/ISyncPollingService.d.ts","writeByteOrderMark":false,"text":"import { TypedMap } from '@smart/utils';\r\nimport { IUriContext, ISyncJob, ISyncStatus } from './';\r\nexport declare abstract class ISyncPollingService {\r\n    registerSyncPollingEvents(): void;\r\n    changePollingSpeed(eventId: string, itemId?: string): void;\r\n    fetchSyncStatus(_pageUUID: string, uriContext: IUriContext): Promise<ISyncStatus>;\r\n    performSync(array: TypedMap<string>[], uriContext: IUriContext): Promise<ISyncJob>;\r\n    getSyncStatus(pageUUID: string, uriContext?: IUriContext, forceGetSynchronization?: boolean): Promise<ISyncStatus>;\r\n}\r\n"}}
