{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport './dynamicPageList.scss';\r\nimport { ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { LogService, RestServiceFactory } from '@smart/utils';\r\nimport { cloneDeep } from 'lodash';\r\nimport { SeDowngradeComponent } from '../../di';\r\nimport { SortDirections } from '../../utils';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"DynamicPagedListComponent\", {\r\n    selector: 'se-dynamic-paged-list',\r\n    template: `<div *ngIf=\"ready\" class=\"se-dynamic-paged-list\"><div class=\"fd-panel__body fd-panel__body--bleed\"><se-data-table [columns]=\"columns\" [config]=\"config\" [items]=\"items\" [sortStatus]=\"sortStatus\" (onSortColumn)=\"orderByColumn($event)\"></se-data-table></div><div class=\"fd-panel__footer\"><se-pagination *ngIf=\"!!items.length\" class=\"se-dynamic-list__pagination\" [totalItems]=\"totalItems\" [itemsPerPage]=\"config.itemsPerPage\" [currentPage]=\"currentPage\" (onChange)=\"onCurrentPageChange($event)\"></se-pagination><span class=\"se-paged-list__page-count-wrapper se-paged-list__page-count-wrapper--footer\"><span class=\"span-page-list__page-count-text\">{{'se.pagelist.countsearchresult' | translate}} </span><span class=\"se-page-list__page-count\">({{ totalItems }})</span></span></div></div><se-spinner [isSpinning]=\"!ready\"></se-spinner>`\r\n});\r\nlet /* @ngInject */ DynamicPagedListComponent = class /* @ngInject */ DynamicPagedListComponent {\r\n    constructor(logService, restServiceFactory, cdr) {\r\n        this.logService = logService;\r\n        this.restServiceFactory = restServiceFactory;\r\n        this.cdr = cdr;\r\n        this.getApi = new EventEmitter();\r\n        this.onItemsUpdate = new EventEmitter();\r\n        this.api = {\r\n            reloadItems: () => this.loadItems()\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        this._validateInput();\r\n        this.ready = false;\r\n        this.totalItems = 0;\r\n        this.currentPage = 1;\r\n        this.columnSortMode = this.config.reversed\r\n            ? SortDirections.Descending\r\n            : SortDirections.Ascending;\r\n        this.internalSortBy = cloneDeep(this.config.sortBy);\r\n        this.oldMask = this.mask;\r\n        this.columns = [];\r\n        this.sortStatus = {\r\n            internalSortBy: this.internalSortBy,\r\n            reversed: this.config.reversed,\r\n            currentPage: this.currentPage\r\n        };\r\n        this._buildColumnData();\r\n        this.loadItems();\r\n        this.getApi.emit(this.api);\r\n    }\r\n    ngOnChanges(changes) {\r\n        const maskChange = changes.mask;\r\n        if (!!maskChange && !maskChange.firstChange && this.oldMask !== this.mask) {\r\n            this.oldMask = this.mask;\r\n            this.currentPage = 1;\r\n            this.loadItems();\r\n        }\r\n    }\r\n    orderByColumn(event) {\r\n        this.internalSortBy = event.$columnKey.property;\r\n        this.columnSortMode = event.$columnSortMode;\r\n        this.config.reversed = this.columnSortMode === SortDirections.Descending;\r\n        this.sortStatus.internalSortBy = this.internalSortBy;\r\n        this.sortStatus.reversed = this.config.reversed;\r\n        if (event.$columnKey.sortable) {\r\n            this.currentPage = 1;\r\n            this.sortStatus.currentPage = 1;\r\n            this.loadItems();\r\n        }\r\n    }\r\n    loadItems() {\r\n        this.ready = false;\r\n        const params = Object.assign(Object.assign({}, (this.config.queryParams || {})), { currentPage: this.currentPage - 1, mask: this.mask, pageSize: this.config.itemsPerPage, sort: `${this.internalSortBy}:${this.columnSortMode}` });\r\n        return this.restServiceFactory\r\n            .get(this.config.uri)\r\n            .page(params)\r\n            .then((result) => {\r\n            this.items = result.results;\r\n            if (this.items.length === 0) {\r\n                this.logService.warn('PagedList: No items returned to display');\r\n            }\r\n            this.totalItems = result.pagination.totalCount;\r\n            this.currentPage = parseInt(String(result.pagination.page), 10) + 1;\r\n            this.ready = true;\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n            this.onItemsUpdate.emit(result);\r\n            return result;\r\n        });\r\n    }\r\n    onCurrentPageChange(newCurrentPage) {\r\n        if (newCurrentPage === this.currentPage) {\r\n            return;\r\n        }\r\n        this.currentPage = newCurrentPage;\r\n        this.loadItems();\r\n    }\r\n    _validateInput() {\r\n        if (!this.config) {\r\n            throw new Error('config object is required');\r\n        }\r\n        if (!(this.config.keys instanceof Array)) {\r\n            throw new Error('keys must be an array');\r\n        }\r\n        if (this.config.keys.length < 1) {\r\n            throw new Error('dynamic paged list requires at least one key');\r\n        }\r\n        if (!this.config.uri) {\r\n            throw new Error('dynamic paged list requires a uri to fetch the list of items');\r\n        }\r\n    }\r\n    _buildColumnData() {\r\n        this.columns = this.config.keys.map((key) => (Object.assign({}, key)));\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ DynamicPagedListComponent.prototype, \"config\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ DynamicPagedListComponent.prototype, \"mask\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ DynamicPagedListComponent.prototype, \"getApi\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ DynamicPagedListComponent.prototype, \"onItemsUpdate\", void 0);\r\n/* @ngInject */ DynamicPagedListComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-dynamic-paged-list',\r\n        template: `<div *ngIf=\"ready\" class=\"se-dynamic-paged-list\"><div class=\"fd-panel__body fd-panel__body--bleed\"><se-data-table [columns]=\"columns\" [config]=\"config\" [items]=\"items\" [sortStatus]=\"sortStatus\" (onSortColumn)=\"orderByColumn($event)\"></se-data-table></div><div class=\"fd-panel__footer\"><se-pagination *ngIf=\"!!items.length\" class=\"se-dynamic-list__pagination\" [totalItems]=\"totalItems\" [itemsPerPage]=\"config.itemsPerPage\" [currentPage]=\"currentPage\" (onChange)=\"onCurrentPageChange($event)\"></se-pagination><span class=\"se-paged-list__page-count-wrapper se-paged-list__page-count-wrapper--footer\"><span class=\"span-page-list__page-count-text\">{{'se.pagelist.countsearchresult' | translate}} </span><span class=\"se-page-list__page-count\">({{ totalItems }})</span></span></div></div><se-spinner [isSpinning]=\"!ready\"></se-spinner>`\r\n    }),\r\n    __metadata(\"design:paramtypes\", [LogService,\r\n        RestServiceFactory,\r\n        ChangeDetectorRef])\r\n], /* @ngInject */ DynamicPagedListComponent);\r\nexport { /* @ngInject */ DynamicPagedListComponent };\r\n//# sourceMappingURL=DynamicPagedListComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/dynamicPagedList/interfaces.ts"],"map":"{\"version\":3,\"file\":\"DynamicPagedListComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/dynamicPagedList/DynamicPagedListComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/dynamicPagedList/DynamicPagedListComponent.d.ts","writeByteOrderMark":false,"text":"import './dynamicPageList.scss';\r\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { LogService, Page, RestServiceFactory } from '@smart/utils';\r\nimport { DynamicPagedListApi, DynamicPagedListColumnKey, DynamicPagedListConfig, DynamicPagedListDropdownItem, SortStatus } from './interfaces';\r\nexport declare class DynamicPagedListComponent implements OnInit, OnChanges {\r\n    private readonly logService;\r\n    private readonly restServiceFactory;\r\n    private readonly cdr;\r\n    config: DynamicPagedListConfig;\r\n    mask: string;\r\n    getApi: EventEmitter<DynamicPagedListApi>;\r\n    onItemsUpdate: EventEmitter<Page<any>>;\r\n    internalSortBy: string;\r\n    columnSortMode: string;\r\n    currentPage: number;\r\n    ready: boolean;\r\n    totalItems: number;\r\n    items: DynamicPagedListDropdownItem[];\r\n    columns: DynamicPagedListColumnKey[];\r\n    sortStatus: SortStatus;\r\n    private oldMask;\r\n    private readonly api;\r\n    constructor(logService: LogService, restServiceFactory: RestServiceFactory, cdr: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    orderByColumn(event: {\r\n        $columnKey: DynamicPagedListColumnKey;\r\n        $columnSortMode: string;\r\n    }): void;\r\n    loadItems(): Promise<Page<any>>;\r\n    onCurrentPageChange(newCurrentPage: number): void;\r\n    private _validateInput;\r\n    private _buildColumnData;\r\n}\r\n"}}
