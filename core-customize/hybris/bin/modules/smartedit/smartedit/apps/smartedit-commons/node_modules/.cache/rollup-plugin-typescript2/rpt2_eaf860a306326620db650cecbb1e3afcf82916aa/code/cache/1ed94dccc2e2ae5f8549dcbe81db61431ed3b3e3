{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Inject } from '@angular/core';\r\nimport { SeDowngradeService } from 'smarteditcommons/di';\r\nimport { LanguageService } from '../../../../../services/language/LanguageService';\r\nimport { RESOLVED_LOCALE_TO_CKEDITOR_LOCALE_MAP } from '../tokens';\r\nlet /* @ngInject */ RichTextFieldLocalizationService = class /* @ngInject */ RichTextFieldLocalizationService {\r\n    constructor(languageService, resolvedLocaleToCKEDITORLocaleMap) {\r\n        this.languageService = languageService;\r\n        this.resolvedLocaleToCKEDITORLocaleMap = resolvedLocaleToCKEDITORLocaleMap;\r\n    }\r\n    localizeCKEditor() {\r\n        return this.languageService.getResolveLocale().then((locale) => {\r\n            CKEDITOR.config.language = this.convertResolvedToCKEditorLocale(locale);\r\n        });\r\n    }\r\n    convertResolvedToCKEditorLocale(resolvedLocale) {\r\n        const conversion = this.resolvedLocaleToCKEDITORLocaleMap[resolvedLocale];\r\n        if (conversion) {\r\n            return conversion;\r\n        }\r\n        return resolvedLocale;\r\n    }\r\n};\r\n/* @ngInject */ RichTextFieldLocalizationService = __decorate([\r\n    SeDowngradeService(),\r\n    __param(1, Inject(RESOLVED_LOCALE_TO_CKEDITOR_LOCALE_MAP)),\r\n    __metadata(\"design:paramtypes\", [LanguageService, Object])\r\n], /* @ngInject */ RichTextFieldLocalizationService);\r\nexport { /* @ngInject */ RichTextFieldLocalizationService };\r\n//# sourceMappingURL=RichTextFieldLocalizationService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/language/LanguageService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/widgets/RichTextField/tokens.ts"],"map":"{\"version\":3,\"file\":\"RichTextFieldLocalizationService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/genericEditor/widgets/RichTextField/services/RichTextFieldLocalizationService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AACzD,OAAO,EAAE,eAAe,EAAE,MAAM,kDAAkD,CAAC;AACnF,OAAO,EAAE,sCAAsC,EAAE,MAAM,WAAW,CAAC;AAGnE,uDAAA;IACI,YACY,eAAgC,EAEhC,iCAAmD;QAFnD,oBAAe,GAAf,eAAe,CAAiB;QAEhC,sCAAiC,GAAjC,iCAAiC,CAAkB;IAC5D,CAAC;IAEJ,gBAAgB;QACZ,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3D,QAAQ,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,+BAA+B,CAAC,cAAsB;QAC1D,MAAM,UAAU,GAAG,IAAI,CAAC,iCAAiC,CAAC,cAAc,CAAC,CAAC;QAC1E,IAAI,UAAU,EAAE;YACZ,OAAO,UAAU,CAAC;SACrB;QACD,OAAO,cAAc,CAAC;IAC1B,CAAC;CACJ,CAAA;AApBD;IADC,kBAAkB,EAAE;IAIZ,WAAA,MAAM,CAAC,sCAAsC,CAAC,CAAA;qCADtB,eAAe;oDAkB/C\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/widgets/RichTextField/services/RichTextFieldLocalizationService.d.ts","writeByteOrderMark":false,"text":"import { TypedMap } from '@smart/utils';\r\nimport { LanguageService } from '../../../../../services/language/LanguageService';\r\nexport declare class RichTextFieldLocalizationService {\r\n    private languageService;\r\n    private resolvedLocaleToCKEDITORLocaleMap;\r\n    constructor(languageService: LanguageService, resolvedLocaleToCKEDITORLocaleMap: TypedMap<string>);\r\n    localizeCKEditor(): Promise<void>;\r\n    private convertResolvedToCKEditorLocale;\r\n}\r\n"}}
