{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { forwardRef, Component, EventEmitter, Inject, Input, Output, Type } from '@angular/core';\r\nimport { isEqual } from 'lodash';\r\nimport { SeDowngradeComponent } from '../../di';\r\nimport { TREE_NODE } from '../treeModule';\r\nimport { EditableListNodeItem } from './EditableListNodeItem';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"EditableListDefaultItem\", {\r\n    selector: 'se-editable-list-default-item',\r\n    template: `\n        <div>\n            <span>{{ node.uid }}</span>\n            <se-dropdown-menu\n                *ngIf=\"parent.editable\"\n                [dropdownItems]=\"parent.getDropdownItems()\"\n                [selectedItem]=\"node\"\n                class=\"pull-right se-tree-node__actions--more-menu\"\n            ></se-dropdown-menu>\n        </div>\n    `\r\n});\r\nlet EditableListDefaultItem = class EditableListDefaultItem {\r\n    constructor(parent, node) {\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n};\r\nEditableListDefaultItem = __decorate([\r\n    Component({\r\n        selector: 'se-editable-list-default-item',\r\n        template: `\n        <div>\n            <span>{{ node.uid }}</span>\n            <se-dropdown-menu\n                *ngIf=\"parent.editable\"\n                [dropdownItems]=\"parent.getDropdownItems()\"\n                [selectedItem]=\"node\"\n                class=\"pull-right se-tree-node__actions--more-menu\"\n            ></se-dropdown-menu>\n        </div>\n    `\r\n    }),\r\n    __param(0, Inject(forwardRef(() => EditableListComponent))),\r\n    __param(1, Inject(TREE_NODE)),\r\n    __metadata(\"design:paramtypes\", [EditableListComponent, Object])\r\n], EditableListDefaultItem);\r\nexport { EditableListDefaultItem };\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"EditableListComponent\", {\r\n    selector: 'se-editable-list',\r\n    template: `<div [ngClass]=\"{ 'y-editable-list-disabled': !editable, 'se-editable-list-disabled': !editable }\"><se-tree (onTreeUpdated)=\"handleTreeUpdated($event)\" [removeDefaultTemplate]=\"true\" [rootNodeUid]=\"rootId\" [nodeTemplateUrl]=\"itemTemplateUrl\" [nodeComponent]=\"itemComponent\" [nodeActions]=\"actions\" [dragOptions]=\"dragOptions\" [showAsList]=\"true\"></se-tree></div>`\r\n});\r\nlet /* @ngInject */ EditableListComponent = class /* @ngInject */ EditableListComponent {\r\n    constructor() {\r\n        this.refreshChange = new EventEmitter();\r\n        this.itemsChange = new EventEmitter();\r\n        this.dragOptions = {};\r\n        this.itemsOld = [];\r\n    }\r\n    ngOnInit() {\r\n        this._enableDragAndDrop = () => {\r\n            this.dragOptions.allowDropCallback = (event) => event.sourceNode.parentUid === this.rootId;\r\n        };\r\n        this.actions = this.getTreeActions();\r\n        this.refreshChange.emit(() => this.actions.refreshList());\r\n        if (!this.itemTemplateUrl && !this.itemComponent) {\r\n            this.itemComponent = EditableListDefaultItem;\r\n        }\r\n        this.rootId = 'root' + this.id;\r\n        if (this.editable === undefined) {\r\n            this.editable = true;\r\n        }\r\n        if (this.editable === true) {\r\n            this._enableDragAndDrop();\r\n        }\r\n    }\r\n    handleTreeUpdated(items) {\r\n        if (this.hasItemsChanged(this.itemsOld, items)) {\r\n            this.itemsOld = items;\r\n            this.itemsChange.emit(items);\r\n            this.actions.performUpdate();\r\n        }\r\n    }\r\n    getDropdownItems() {\r\n        return [\r\n            {\r\n                key: 'se.ydropdownmenu.remove',\r\n                callback: (handle) => {\r\n                    this.actions.removeItem(handle);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.ydropdownmenu.move.up',\r\n                condition: (handle) => this.actions.isMoveUpAllowed(handle),\r\n                callback: (handle) => {\r\n                    this.actions.moveUp(handle);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.ydropdownmenu.move.down',\r\n                condition: (handle) => this.actions.isMoveDownAllowed(handle),\r\n                callback: (handle) => {\r\n                    this.actions.moveDown(handle);\r\n                }\r\n            }\r\n        ];\r\n    }\r\n    hasItemsChanged(oldItems, newItems) {\r\n        const oldUids = oldItems.map(({ uid }) => uid);\r\n        const newUids = newItems.map(({ uid }) => uid);\r\n        return !isEqual(oldUids, newUids);\r\n    }\r\n    getTreeActions() {\r\n        const items = this.getDropdownItems();\r\n        return {\r\n            fetchData: (treeService, nodeData) => {\r\n                const nodeItems = this.items.map((dto) => new EditableListNodeItem(dto));\r\n                nodeItems.forEach((item) => {\r\n                    if (item.id && !item.uid) {\r\n                        item.uid = item.id;\r\n                    }\r\n                    item.setParent(nodeData);\r\n                });\r\n                nodeData.removeAllNodes().addNodes(nodeItems);\r\n                treeService.update();\r\n                return Promise.resolve(nodeData);\r\n            },\r\n            getDropdownItems: () => items,\r\n            removeItem(treeService, nodeData) {\r\n                nodeData.parent.removeNode(nodeData);\r\n                treeService.update();\r\n            },\r\n            moveUp(treeService, nodeData) {\r\n                treeService.rearrange(nodeData, treeService.root, nodeData.position - 1);\r\n            },\r\n            moveDown(treeService, nodeData) {\r\n                treeService.rearrange(nodeData, treeService.root, nodeData.position + 1);\r\n            },\r\n            isMoveUpAllowed(treeService, nodeData) {\r\n                return nodeData.position > 0;\r\n            },\r\n            isMoveDownAllowed(treeService, nodeData) {\r\n                return treeService.root.nodes.length !== nodeData.position + 1;\r\n            },\r\n            performUpdate: (treeService) => {\r\n                if (this.onChange) {\r\n                    this.onChange();\r\n                }\r\n            },\r\n            refreshList(treeService) {\r\n                this.fetchData(treeService.root);\r\n            }\r\n        };\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ EditableListComponent.prototype, \"refresh\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Array)\r\n], /* @ngInject */ EditableListComponent.prototype, \"items\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ EditableListComponent.prototype, \"onChange\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ EditableListComponent.prototype, \"itemTemplateUrl\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Type)\r\n], /* @ngInject */ EditableListComponent.prototype, \"itemComponent\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], /* @ngInject */ EditableListComponent.prototype, \"editable\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ EditableListComponent.prototype, \"id\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ EditableListComponent.prototype, \"refreshChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ EditableListComponent.prototype, \"itemsChange\", void 0);\r\n/* @ngInject */ EditableListComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-editable-list',\r\n        template: `<div [ngClass]=\"{ 'y-editable-list-disabled': !editable, 'se-editable-list-disabled': !editable }\"><se-tree (onTreeUpdated)=\"handleTreeUpdated($event)\" [removeDefaultTemplate]=\"true\" [rootNodeUid]=\"rootId\" [nodeTemplateUrl]=\"itemTemplateUrl\" [nodeComponent]=\"itemComponent\" [nodeActions]=\"actions\" [dragOptions]=\"dragOptions\" [showAsList]=\"true\"></se-tree></div>`\r\n    })\r\n], /* @ngInject */ EditableListComponent);\r\nexport { /* @ngInject */ EditableListComponent };\r\n//# sourceMappingURL=EditableListComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/dropdown/dropdownMenu/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/list/EditableListNodeItem.ts"],"map":"{\"version\":3,\"file\":\"EditableListComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/list/EditableListComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/list/EditableListComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, Type } from '@angular/core';\r\nimport { IDropdownMenuItem } from '../dropdown/dropdownMenu';\r\nimport { ITreeNodeItem, TreeDragAndDropOptions, TreeNodeActions } from '../treeModule';\r\nimport { EditableListNodeItem, EditableListNodeItemDTO } from './EditableListNodeItem';\r\nexport declare class EditableListDefaultItem {\r\n    parent: EditableListComponent;\r\n    node: ITreeNodeItem<EditableListNodeItem>;\r\n    constructor(parent: EditableListComponent, node: ITreeNodeItem<EditableListNodeItem>);\r\n}\r\nexport declare class EditableListComponent {\r\n    refresh: () => void;\r\n    items: EditableListNodeItemDTO[];\r\n    onChange: () => void;\r\n    itemTemplateUrl: string;\r\n    itemComponent: Type<any>;\r\n    editable: boolean;\r\n    id: string;\r\n    refreshChange: EventEmitter<() => void>;\r\n    itemsChange: EventEmitter<ITreeNodeItem<EditableListNodeItem>[]>;\r\n    dragOptions: TreeDragAndDropOptions<EditableListNodeItem>;\r\n    actions: TreeNodeActions<EditableListNodeItem>;\r\n    rootId: string;\r\n    private itemsOld;\r\n    private _enableDragAndDrop;\r\n    ngOnInit(): void;\r\n    handleTreeUpdated(items: ITreeNodeItem<EditableListNodeItem>[]): void;\r\n    getDropdownItems(): IDropdownMenuItem[];\r\n    private hasItemsChanged;\r\n    private getTreeActions;\r\n}\r\n"}}
