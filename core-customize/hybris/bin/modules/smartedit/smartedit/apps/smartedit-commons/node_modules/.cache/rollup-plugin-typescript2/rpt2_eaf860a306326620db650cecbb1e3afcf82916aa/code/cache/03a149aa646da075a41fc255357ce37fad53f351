{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpUtils, StatusText } from '@smart/utils';\r\nimport { IAlertService } from 'smarteditcommons/services/interfaces';\r\nimport { LANGUAGE_RESOURCE_URI } from '../../../utils';\r\n/**\r\n * Used for HTTP error code 404 (Not Found) except for an HTML or a language resource. It will display the response.message in an alert message.\r\n */\r\nlet /* @ngInject */ ResourceNotFoundErrorInterceptor = class /* @ngInject */ ResourceNotFoundErrorInterceptor {\r\n    constructor(alertService, httpUtils) {\r\n        this.alertService = alertService;\r\n        this.httpUtils = httpUtils;\r\n    }\r\n    predicate(request, response) {\r\n        return (response.status === 404 &&\r\n            !this.httpUtils.isHTMLRequest(request, response) &&\r\n            !this._isLanguageResourceRequest(request.url));\r\n    }\r\n    responseError(request, response) {\r\n        this.alertService.showDanger({\r\n            message: response.statusText === StatusText.UNKNOW_ERROR\r\n                ? 'se.unknown.request.error'\r\n                : response.message,\r\n            duration: 10000\r\n        });\r\n        return Promise.reject(response);\r\n    }\r\n    _isLanguageResourceRequest(url) {\r\n        const languageResourceRegex = new RegExp(LANGUAGE_RESOURCE_URI.replace(/\\:.*\\//g, '.*/'));\r\n        return languageResourceRegex.test(url);\r\n    }\r\n};\r\n/* @ngInject */ ResourceNotFoundErrorInterceptor = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [IAlertService,\r\n        HttpUtils])\r\n], /* @ngInject */ ResourceNotFoundErrorInterceptor);\r\nexport { /* @ngInject */ ResourceNotFoundErrorInterceptor };\r\n//# sourceMappingURL=ResourceNotFoundErrorInterceptor.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"ResourceNotFoundErrorInterceptor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/services/interceptors/errors/ResourceNotFoundErrorInterceptor.ts\"],\"names\":[],\"mappings\":\";AAIA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,SAAS,EAAyB,UAAU,EAAE,MAAM,cAAc,CAAC;AAC5E,OAAO,EAAE,aAAa,EAAE,MAAM,sCAAsC,CAAC;AACrE,OAAO,EAAE,qBAAqB,EAAE,MAAM,gBAAgB,CAAC;AAEvD;;GAEG;AAEH,uDAAA;IACI,YACqB,YAA2B,EAC3B,SAAoB;QADpB,iBAAY,GAAZ,YAAY,CAAe;QAC3B,cAAS,GAAT,SAAS,CAAW;IACtC,CAAC;IACJ,SAAS,CAAC,OAAuB,EAAE,QAA2B;QAC1D,OAAO,CACH,QAAQ,CAAC,MAAM,KAAK,GAAG;YACvB,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,EAAE,QAAQ,CAAC;YAChD,CAAC,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,GAAG,CAAC,CAChD,CAAC;IACN,CAAC;IACD,aAAa,CAAC,OAAuB,EAAE,QAA2B;QAC9D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YACzB,OAAO,EACH,QAAQ,CAAC,UAAU,KAAK,UAAU,CAAC,YAAY;gBAC3C,CAAC,CAAC,0BAA0B;gBAC5B,CAAC,CAAC,QAAQ,CAAC,OAAO;YAC1B,QAAQ,EAAE,KAAK;SAClB,CAAC,CAAC;QACH,OAAO,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAEO,0BAA0B,CAAC,GAAW;QAC1C,MAAM,qBAAqB,GAAG,IAAI,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;QAC1F,OAAO,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;CACJ,CAAA;AA3BD;IADC,UAAU,EAAE;qCAG0B,aAAa;QAChB,SAAS;oDAwB5C\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/interceptors/errors/ResourceNotFoundErrorInterceptor.d.ts","writeByteOrderMark":false,"text":"import { HttpErrorResponse, HttpRequest } from '@angular/common/http';\r\nimport { HttpUtils, IHttpErrorInterceptor } from '@smart/utils';\r\nimport { IAlertService } from 'smarteditcommons/services/interfaces';\r\n/**\r\n * Used for HTTP error code 404 (Not Found) except for an HTML or a language resource. It will display the response.message in an alert message.\r\n */\r\nexport declare class ResourceNotFoundErrorInterceptor<T = any> implements IHttpErrorInterceptor<T> {\r\n    private readonly alertService;\r\n    private readonly httpUtils;\r\n    constructor(alertService: IAlertService, httpUtils: HttpUtils);\r\n    predicate(request: HttpRequest<T>, response: HttpErrorResponse): boolean;\r\n    responseError(request: HttpRequest<T>, response: HttpErrorResponse): Promise<any>;\r\n    private _isLanguageResourceRequest;\r\n}\r\n"}}
