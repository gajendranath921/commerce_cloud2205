{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Input } from '@angular/core';\r\nimport { isEqual } from 'lodash';\r\n/**\r\n * @ignore\r\n */\r\nexport class CompileHtml {\r\n    constructor(elementRef, renderer, upgrade) {\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.upgrade = upgrade;\r\n    }\r\n    ngOnChanges(changes) {\r\n        const templateChanged = this.hasInputChanged(changes.template);\r\n        const scopeChanged = this.hasInputChanged(changes.scope);\r\n        this.template = templateChanged ? changes.template.currentValue : this.template;\r\n        if (this.template && (scopeChanged || templateChanged)) {\r\n            this.setCompiledHTML();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.resetScope();\r\n        this.removeCompiledHTML();\r\n    }\r\n    resetScope() {\r\n        if (this.$scope) {\r\n            this.$scope.$destroy();\r\n        }\r\n    }\r\n    removeCompiledHTML() {\r\n        if (this.elementRef.nativeElement.firstChild) {\r\n            this.renderer.removeChild(this.elementRef.nativeElement, this.elementRef.nativeElement.firstChild);\r\n        }\r\n    }\r\n    hasInputChanged(change) {\r\n        return !!change && !isEqual(change.previousValue, change.currentValue);\r\n    }\r\n    setCompiledHTML() {\r\n        this.removeCompiledHTML();\r\n        this.resetScope();\r\n        this.renderer.appendChild(this.elementRef.nativeElement, this.compile());\r\n    }\r\n    compile() {\r\n        let template = this.isTemplateUrl(this.template)\r\n            ? this.$templateCache.get(this.template)\r\n            : this.template;\r\n        this.$scope = this.$rootScope.$new(false);\r\n        if (!template) {\r\n            throw new Error(`did not find cached template for file ${this.template} when building tab`);\r\n        }\r\n        Object.assign(this.$scope, this.scope || {});\r\n        if (this.compileHtmlNgController) {\r\n            this.$scope[this.compileHtmlNgController.alias] = this;\r\n            template = this.wrapTemplateIntoNgController(template, this.compileHtmlNgController.alias);\r\n        }\r\n        return this.$compile(template)(this.$scope)[0];\r\n    }\r\n    wrapTemplateIntoNgController(template, controllerAlias) {\r\n        return `<div ng-controller=\"${controllerAlias}.compileHtmlNgController.value as ${controllerAlias}\">${template}</div>`;\r\n    }\r\n    isTemplateUrl(template) {\r\n        return /.html$/.test(template);\r\n    }\r\n    get $templateCache() {\r\n        return this.upgrade.$injector.get('$templateCache');\r\n    }\r\n    get $compile() {\r\n        return this.upgrade.$injector.get('$compile');\r\n    }\r\n    get $rootScope() {\r\n        return this.upgrade.$injector.get('$rootScope');\r\n    }\r\n}\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], CompileHtml.prototype, \"scope\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], CompileHtml.prototype, \"compileHtmlNgController\", void 0);\r\n//# sourceMappingURL=CompileHtml.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+upgrade@8.2.14_d2ff5303d1bb22207cb4aaa9bb380a83/node_modules/@angular/upgrade/static.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+angular@1.7.3/node_modules/@types/angular/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts"],"map":"{\"version\":3,\"file\":\"CompileHtml.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/directives/CompileHtml.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/directives/CompileHtml.d.ts","writeByteOrderMark":false,"text":"import { ElementRef, OnChanges, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { UpgradeModule } from '@angular/upgrade/static';\r\nimport { TypedMap } from '@smart/utils';\r\nimport * as angular from 'angular';\r\n/**\r\n * @ignore\r\n */\r\nexport interface CompileHtmlNgController {\r\n    /**\r\n     * Argument of \"ng-controller\" directive, defining an alias by which a controller can be referenced in the template\r\n     *\r\n     * ### Example\r\n     *\r\n     *      ng-controller=\"ctrl as $ctrlAlias\"\r\n     */\r\n    alias: string;\r\n    /**\r\n     * Controller constructor function or an array containing string providers and controller constructor function as a last element\r\n     *\r\n     * ### Example\r\n     *\r\n     *      value: function ctrl() {\r\n     *        this.taskName = 'Translation (DE)';\r\n     *      }\r\n     *\r\n     *      value: [\r\n     *        'experienceService',\r\n     *         function(experienceService) {\r\n     *           // can access experienceService\r\n     *         }\r\n     *      ]\r\n     */\r\n    value: angular.IControllerConstructor | any[];\r\n}\r\nexport interface DynamicScope extends angular.IScope {\r\n    [key: string]: any;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport declare abstract class CompileHtml implements OnChanges {\r\n    private elementRef;\r\n    private renderer;\r\n    private upgrade;\r\n    scope: TypedMap<any>;\r\n    /**\r\n     * AngularJS legacy support.\r\n     *\r\n     * Wraps template into the element with \"ng-controller\" directive.\r\n     * Attaches Controller Constructor Function to the view.\r\n     *\r\n     * ### Example\r\n     *\r\n     * Given\r\n     *      \"template\": '<div>task: {{$announcementCtrl.taskName}}</div>'\r\n     *\r\n     *      \"controller\": {\r\n     *          alias: '$announcementCtrl',\r\n     *          value: function ctrl() {\r\n     *              'ngInject';\r\n     *              this.taskName = 'Translation (DE)';\r\n     *          }\r\n     *      }\r\n     *\r\n     * Wraps into a <div> with ng-controller\r\n     *\r\n     *      <div ng-controller=\"$announcementCtrl.compileHtmlNgController.value as $announcementCtrl\">\r\n     *          <div>task: {{$announcementCtrl.taskName}}</div>\r\n     *      </div>\r\n     *\r\n     * Which will be rendered as\r\n     *\r\n     *     <div ng-controller=\"$announcementCtrl.compileHtmlNgController.value as $announcementCtrl\">\r\n     *          <div>task: 'Translation (DE)'</div>\r\n     *     </div>\r\n     */\r\n    compileHtmlNgController: CompileHtmlNgController;\r\n    /**\r\n     * Template url or HTML Template string to be compiled by directive e.g. <div>some text</div>\r\n     */\r\n    private template;\r\n    private $scope;\r\n    constructor(elementRef: ElementRef, renderer: Renderer2, upgrade: UpgradeModule);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    private resetScope;\r\n    private removeCompiledHTML;\r\n    private hasInputChanged;\r\n    private setCompiledHTML;\r\n    private compile;\r\n    private wrapTemplateIntoNgController;\r\n    private isTemplateUrl;\r\n    private get $templateCache();\r\n    private get $compile();\r\n    private get $rootScope();\r\n}\r\n"}}
