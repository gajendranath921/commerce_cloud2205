{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { Component, ElementRef, Inject, ViewChild } from '@angular/core';\r\nimport { SeDowngradeComponent } from 'smarteditcommons/di';\r\nimport { SettingsService } from 'smarteditcommons/services';\r\nimport { GENERIC_EDITOR_WIDGET_DATA } from '../../components/tokens';\r\nimport { GenericEditorSanitizationService } from './services/GenericEditorSanitizationService';\r\nimport { RichTextFieldLocalizationService } from './services/RichTextFieldLocalizationService';\r\nimport { RichTextLoaderService } from './services/RichTextLoaderService';\r\nimport { RICH_TEXT_CONFIGURATION } from './tokens';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"RichTextFieldComponent\", {\r\n    selector: 'se-rich-text-field',\r\n    template: `<textarea #textarea class=\"fd-form__control\" [ngClass]=\"{'has-error': widget.field.hasErrors}\" name=\"{{widget.field.qualifier}}-{{widget.qualifier}}\" [disabled]=\"widget.isFieldDisabled()\" [(ngModel)]=\"widget.model[widget.qualifier]\" (change)=\"reassignUserCheck()\"></textarea><div *ngIf=\"requiresUserCheck()\"><div id=\"richTextWarningMessage\" [hidden]=\"widget.field.isUserChecked\"><span fd-status-label [status]=\"'warning'\" [icon]=\"'message-warning'\">{{'se.editor.richtext.message.warning' | translate}}</span></div><input id=\"richTextWarningCheckBox\" type=\"checkbox\" [(ngModel)]=\"widget.field.isUserChecked\" (click)=\"checkboxOnClick($event.target)\"/> <span [ngClass]=\"{'warning-check-msg': true, 'not-checked': widget.editor.hasFrontEndValidationErrors && !widget.field.isUserChecked}\">{{'se.editor.richtext.check' | translate}}</span></div>`\r\n});\r\nlet /* @ngInject */ RichTextFieldComponent = class /* @ngInject */ RichTextFieldComponent {\r\n    constructor(widget, seRichTextLoaderService, seRichTextConfiguration, genericEditorSanitizationService, seRichTextFieldLocalizationService, settingsService) {\r\n        this.widget = widget;\r\n        this.seRichTextLoaderService = seRichTextLoaderService;\r\n        this.seRichTextConfiguration = seRichTextConfiguration;\r\n        this.genericEditorSanitizationService = genericEditorSanitizationService;\r\n        this.seRichTextFieldLocalizationService = seRichTextFieldLocalizationService;\r\n        this.settingsService = settingsService;\r\n    }\r\n    ngAfterViewInit() {\r\n        return this.settingsService\r\n            .get('cms.components.allowUnsafeJavaScript')\r\n            .then((allowUnsafeJavaScript) => this.seRichTextLoaderService.load().then(() => {\r\n            this.seRichTextConfiguration.allowedContent = allowUnsafeJavaScript === 'true';\r\n            this.editorInstance = CKEDITOR.replace(this.textarea.nativeElement, this.seRichTextConfiguration);\r\n            this.seRichTextFieldLocalizationService.localizeCKEditor();\r\n            if (this.editorInstance) {\r\n                this.editorInstance.on('change', () => this.onChange());\r\n                this.editorInstance.on('mode', () => this.onMode());\r\n                CKEDITOR.on('instanceReady', (ev) => this.onInstanceReady(ev));\r\n            }\r\n        }));\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.editorInstance && CKEDITOR.instances[this.editorInstance.name]) {\r\n            CKEDITOR.instances[this.editorInstance.name].destroy();\r\n        }\r\n    }\r\n    onChange() {\r\n        setTimeout(() => {\r\n            this.widget.model[this.widget.qualifier] = this.editorInstance.getData();\r\n            this.reassignUserCheck();\r\n            this.toggleSubmitButton(this.requiresUserCheck() && !this.widget.field.isUserChecked);\r\n        });\r\n    }\r\n    onMode() {\r\n        if (this.editorInstance.mode === 'source') {\r\n            const editable = this.editorInstance.editable();\r\n            editable.attachListener(editable, 'input', () => {\r\n                this.editorInstance.fire('change');\r\n            });\r\n        }\r\n    }\r\n    onInstanceReady(ev) {\r\n        const tags = CKEDITOR.dtd;\r\n        const elements = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, tags.$nonBodyContent), tags.$block), tags.$listItem), tags.$tableContent), { br: 1 });\r\n        for (const element of Object.keys(elements)) {\r\n            ev.editor.dataProcessor.writer.setRules(element, {\r\n                indent: false,\r\n                breakBeforeOpen: false,\r\n                breakAfterOpen: false,\r\n                breakBeforeClose: false,\r\n                breakAfterClose: false\r\n            });\r\n        }\r\n        ev.editor.dataProcessor.writer.lineBreakChars = '';\r\n        ev.editor.dataProcessor.writer.indentationChars = '';\r\n    }\r\n    requiresUserCheck() {\r\n        let requiresUserCheck = false;\r\n        for (const qualifier in this.widget.field.requiresUserCheck) {\r\n            if (this.widget.field.requiresUserCheck.hasOwnProperty(qualifier)) {\r\n                requiresUserCheck =\r\n                    requiresUserCheck || this.widget.field.requiresUserCheck[qualifier];\r\n            }\r\n        }\r\n        return requiresUserCheck;\r\n    }\r\n    reassignUserCheck() {\r\n        if (this.widget.model &&\r\n            this.widget.qualifier &&\r\n            this.widget.model[this.widget.qualifier]) {\r\n            const sanitizedContentMatchesContent = this.genericEditorSanitizationService.isSanitized(this.widget.model[this.widget.qualifier]);\r\n            this.widget.field.requiresUserCheck = this.widget.field.requiresUserCheck || {};\r\n            this.widget.field.requiresUserCheck[this.widget.qualifier] = !sanitizedContentMatchesContent;\r\n        }\r\n        else {\r\n            this.widget.field.requiresUserCheck = this.widget.field.requiresUserCheck || {};\r\n            this.widget.field.requiresUserCheck[this.widget.qualifier] = false;\r\n        }\r\n    }\r\n    checkboxOnClick(event) {\r\n        this.toggleSubmitButton(!event.checked);\r\n    }\r\n    toggleSubmitButton(state) {\r\n        this.widget.editor.api.setInProgress(state);\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild('textarea', { static: false }),\r\n    __metadata(\"design:type\", ElementRef)\r\n], /* @ngInject */ RichTextFieldComponent.prototype, \"textarea\", void 0);\r\n/* @ngInject */ RichTextFieldComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-rich-text-field',\r\n        template: `<textarea #textarea class=\"fd-form__control\" [ngClass]=\"{'has-error': widget.field.hasErrors}\" name=\"{{widget.field.qualifier}}-{{widget.qualifier}}\" [disabled]=\"widget.isFieldDisabled()\" [(ngModel)]=\"widget.model[widget.qualifier]\" (change)=\"reassignUserCheck()\"></textarea><div *ngIf=\"requiresUserCheck()\"><div id=\"richTextWarningMessage\" [hidden]=\"widget.field.isUserChecked\"><span fd-status-label [status]=\"'warning'\" [icon]=\"'message-warning'\">{{'se.editor.richtext.message.warning' | translate}}</span></div><input id=\"richTextWarningCheckBox\" type=\"checkbox\" [(ngModel)]=\"widget.field.isUserChecked\" (click)=\"checkboxOnClick($event.target)\"/> <span [ngClass]=\"{'warning-check-msg': true, 'not-checked': widget.editor.hasFrontEndValidationErrors && !widget.field.isUserChecked}\">{{'se.editor.richtext.check' | translate}}</span></div>`\r\n    }),\r\n    __param(0, Inject(GENERIC_EDITOR_WIDGET_DATA)),\r\n    __param(2, Inject(RICH_TEXT_CONFIGURATION)),\r\n    __metadata(\"design:paramtypes\", [Object, RichTextLoaderService, Object, GenericEditorSanitizationService,\r\n        RichTextFieldLocalizationService,\r\n        SettingsService])\r\n], /* @ngInject */ RichTextFieldComponent);\r\nexport { /* @ngInject */ RichTextFieldComponent };\r\n//# sourceMappingURL=RichTextFieldComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/types.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/components/tokens.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/widgets/RichTextField/services/GenericEditorSanitizationService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/widgets/RichTextField/services/RichTextFieldLocalizationService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/widgets/RichTextField/services/RichTextLoaderService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/widgets/RichTextField/tokens.ts"],"map":"{\"version\":3,\"file\":\"RichTextFieldComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/genericEditor/widgets/RichTextField/RichTextFieldComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/widgets/RichTextField/RichTextFieldComponent.d.ts","writeByteOrderMark":false,"text":"import { AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { TypedMap } from '@smart/utils';\r\nimport { SettingsService } from 'smarteditcommons/services';\r\nimport { GenericEditorWidgetData } from '../../../genericEditor/types';\r\nimport { GenericEditorSanitizationService } from './services/GenericEditorSanitizationService';\r\nimport { RichTextFieldLocalizationService } from './services/RichTextFieldLocalizationService';\r\nimport { RichTextLoaderService } from './services/RichTextLoaderService';\r\nexport declare class RichTextFieldComponent implements AfterViewInit, OnDestroy {\r\n    widget: GenericEditorWidgetData<any>;\r\n    private seRichTextLoaderService;\r\n    private seRichTextConfiguration;\r\n    private genericEditorSanitizationService;\r\n    private seRichTextFieldLocalizationService;\r\n    private settingsService;\r\n    private textarea;\r\n    private editorInstance;\r\n    constructor(widget: GenericEditorWidgetData<any>, seRichTextLoaderService: RichTextLoaderService, seRichTextConfiguration: TypedMap<any>, genericEditorSanitizationService: GenericEditorSanitizationService, seRichTextFieldLocalizationService: RichTextFieldLocalizationService, settingsService: SettingsService);\r\n    ngAfterViewInit(): Promise<void>;\r\n    ngOnDestroy(): void;\r\n    onChange(): void;\r\n    onMode(): void;\r\n    onInstanceReady(ev: any): void;\r\n    requiresUserCheck(): boolean;\r\n    reassignUserCheck(): void;\r\n    checkboxOnClick(event: HTMLInputElement): void;\r\n    private toggleSubmitButton;\r\n}\r\n"}}
