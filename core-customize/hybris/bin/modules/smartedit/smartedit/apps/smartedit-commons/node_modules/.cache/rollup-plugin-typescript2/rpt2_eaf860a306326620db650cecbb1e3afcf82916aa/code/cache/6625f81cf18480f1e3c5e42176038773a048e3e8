{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport './SelectComponent.scss';\r\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, HostListener, Input, Output, Type, ViewChild } from '@angular/core';\r\nimport { LogService } from '@smart/utils';\r\nimport { isEqual } from 'lodash';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, filter, switchMap, tap } from 'rxjs/operators';\r\nimport { SeDowngradeComponent } from '../../di';\r\nimport { getLocalizedFilterFn } from '../../pipes';\r\nimport { L10nService } from '../../services';\r\nimport { stringUtils, VALIDATION_MESSAGE_TYPES } from '../../utils';\r\nimport { DefaultItemPrinterComponent } from './defaultItemPrinter';\r\nimport { SearchInputComponent } from './searchInput';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SelectComponent\", {\r\n    selector: 'se-select',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {\r\n        '[class.se-select]': 'true'\r\n    },\r\n    template: `<fd-select [style.display]=\"'none'\"></fd-select><div [attr.id]=\"id + '-selector'\" class=\"select-container\" [ngClass]=\"{\n        'has-warning': hasWarning(),\n        'has-error': hasError()\n    }\"><ng-container *ngIf=\"multiSelect; then multi; else singleSelect\"></ng-container><ng-template #singleSelect><fd-popover [triggers]=\"['click']\" [(isOpen)]=\"isOpen\" [placement]=\"'bottom'\" (isOpenChange)=\"onSingleSelectIsOpenChange($event)\"><fd-popover-control><div class=\"selected-container fd-select-custom\" [attr.has-selected-option]=\"!!selected || null\"><button fd-button class=\"fd-select-button-custom toggle-button\" [disabled]=\"isReadOnly\"><span *ngIf=\"!selected; else selectedItem\" class=\"selected-placeholder\">{{ placeholder | translate }}</span><ng-template #selectedItem><div class=\"selected-item\"><span *ngIf=\"controls\" class=\"glyphicon glyphicon-search\"></span><se-item-printer *ngIf=\"selected\" [attr.id]=\"id + '-selected'\" [item]=\"selected\" [component]=\"itemComponent\" [selectComponentCtx]=\"this\"></se-item-printer><span *ngIf=\"controls || showRemoveButton\" class=\"sap-icon--sys-cancel selected-item__remove-button\" (click)=\"removeSelectedOption($event, selected)\"></span></div></ng-template></button></div></fd-popover-control><fd-popover-body><fd-menu class=\"se-select-list-container\"><ng-container *ngIf=\"searchEnabled && isOpen\"><ng-container *ngTemplateOutlet=\"searchInputTemplate\"></ng-container></ng-container><ng-container *ngTemplateOutlet=\"resultsHeader\"></ng-container><ng-container *ngIf=\"isOpen\"><ng-container *ngTemplateOutlet=\"selectListTemplate\"></ng-container></ng-container></fd-menu></fd-popover-body></fd-popover></ng-template><ng-template #multi><div [ngClass]=\"{'se-multi-select': selected && selected.length > 0}\"><div class=\"selected-container se-selected-list\"><ng-container *ngIf=\"selected && selected.length > 0\"><ol class=\"selected-list\" cdkDropList (cdkDropListDropped)=\"onDrop($event)\"><li *ngFor=\"let item of selected; trackBy: itemTrackBy\" cdkDrag class=\"selected-list__item selected-item\"><se-item-printer [item]=\"item\" [component]=\"itemComponent\" [selectComponentCtx]=\"this\"></se-item-printer><span class=\"sap-icon--sys-cancel selected-item__remove-button\" (click)=\"removeSelectedOption($event, item)\"></span></li></ol></ng-container></div></div><fd-popover class=\"se-multi-select\" [triggers]=\"[]\" [closeOnOutsideClick]=\"false\" [isOpen]=\"isOpen\" [placement]=\"'bottom'\"><fd-popover-control><ng-container *ngTemplateOutlet=\"searchInputTemplate\"></ng-container></fd-popover-control><fd-popover-body><fd-menu class=\"se-select-list-container\"><ng-container *ngTemplateOutlet=\"resultsHeader\"></ng-container><ng-container *ngIf=\"isOpen\"><ng-container *ngTemplateOutlet=\"selectListTemplate\"></ng-container></ng-container></fd-menu></fd-popover-body></fd-popover></ng-template><ng-template #resultsHeader><se-select-results-header [search]=\"search\" [resultsHeaderComponent]=\"resultsHeaderComponent\" [resultsHeaderLabel]=\"resultsHeaderLabel\" [displayResultsHeaderLabel]=\"showResultsHeaderLabel()\" [actionableSearchItem]=\"actionableSearchItem\" (actionButtonClick)=\"closeAndReset()\"></se-select-results-header></ng-template><ng-template #searchInputTemplate><se-select-search-input [isDisabled]=\"isReadOnly\" [isReadOnly]=\"multiSelect && !searchEnabled\" [isTypeAheadEnabled]=\"!multiSelect\" [placeholder]=\"showPlaceholder() ? (placeholder | translate) : ''\" [search]=\"search\" (searchKeyup)=\"onSearchInputKeyup($event.event, $event.value)\" (searchChange)=\"onSearchInputChange($event)\"></se-select-search-input></ng-template><ng-template #selectListTemplate><se-select-list [id]=\"id\" [isPagedDropdown]=\"isPagedDropdown()\" [fetchPage]=\"fetchStrategy.fetchPage\" [search]=\"search\" [items]=\"items\" [selected]=\"selected\" [excludeSelected]=\"multiSelect\" [disableChoiceFn]=\"disableChoiceFn\" [itemComponent]=\"itemComponent\" [selectComponentCtx]=\"this\" (optionClick)=\"onOptionClick($event)\" (infiniteScrollItemsChange)=\"onInfiniteScrollItemsChange()\"></se-select-list></ng-template></div>`\r\n});\r\nlet /* @ngInject */ SelectComponent = class /* @ngInject */ SelectComponent {\r\n    constructor(l10nService, logService, cdr) {\r\n        this.l10nService = l10nService;\r\n        this.logService = logService;\r\n        this.cdr = cdr;\r\n        this.modelChange = new EventEmitter();\r\n        this.controls = false;\r\n        this.multiSelect = false;\r\n        this.keepModelOnReset = false;\r\n        this.isReadOnly = false;\r\n        this.searchEnabled = true;\r\n        this.resetSearchInput = true;\r\n        this.showRemoveButton = false;\r\n        this.getApi = new EventEmitter();\r\n        this.resetChange = new EventEmitter();\r\n        this.isOpen = false;\r\n        this.items = [];\r\n        this.search = '';\r\n        this.api = {\r\n            setValidationState: this.setValidationState.bind(this),\r\n            resetValidationState: this.resetValidationState.bind(this)\r\n        };\r\n    }\r\n    get isSingleCss() {\r\n        return !this.multiSelect;\r\n    }\r\n    get isMultiCss() {\r\n        return this.multiSelect;\r\n    }\r\n    get isPagedCss() {\r\n        return this.isPagedDropdown();\r\n    }\r\n    clickHandler(event) {\r\n        if (!this.multiSelect) {\r\n            return;\r\n        }\r\n        if (event.target === this.searchInputCmp.inputElement) {\r\n            event.stopPropagation();\r\n            if (!this.isOpen) {\r\n                this.onMultiSelectIsOpenChange(true);\r\n            }\r\n        }\r\n        else if (this.isOpen) {\r\n            this.onMultiSelectIsOpenChange(false);\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        if (!this.placeholder) {\r\n            this.placeholder = 'se.genericeditor.sedropdown.placeholder';\r\n        }\r\n        if (this.fetchStrategy.fetchAll) {\r\n            this.initSearchInputFilter();\r\n        }\r\n        this.fetchData();\r\n        setTimeout(() => {\r\n            this.resetChange.emit(this.internalReset.bind(this));\r\n        });\r\n        this.getApi.emit(this.api);\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (!this.itemComponent) {\r\n            this.itemComponent = DefaultItemPrinterComponent;\r\n        }\r\n        this.isValidConfiguration();\r\n        const modelChange = changes.model;\r\n        const didModelChange = modelChange &&\r\n            modelChange.currentValue !== this.modelChangeOld &&\r\n            !modelChange.firstChange;\r\n        if (didModelChange) {\r\n            if (this.multiSelect && this.isModelEmpty()) {\r\n                this.model = [];\r\n            }\r\n            this.fetchData();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.languageSwitchSubscription) {\r\n            this.languageSwitchSubscription.unsubscribe();\r\n        }\r\n        if (this.searchInputChangeSubject) {\r\n            this.searchInputChangeSubject.unsubscribe();\r\n        }\r\n    }\r\n    onSingleSelectIsOpenChange(isOpen) {\r\n        if (isOpen) {\r\n            setTimeout(() => {\r\n                if (this.searchInputCmp) {\r\n                    this.searchInputCmp.focus();\r\n                }\r\n                if (this.fetchStrategy.fetchAll) {\r\n                    this.refreshOptions(this.search);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.resetOnClose();\r\n        }\r\n    }\r\n    onSearchInputKeyup(event, value) {\r\n        this.internalKeyup(event, value);\r\n    }\r\n    onSearchInputChange(value) {\r\n        this.onSearchChange(value);\r\n        if (this.searchInputChangeSubject) {\r\n            this.searchInputChangeSubject.next(value);\r\n        }\r\n    }\r\n    onOptionClick(item) {\r\n        let selectedHasChanged = false;\r\n        if (this.multiSelect) {\r\n            const selected = [...(this.selected || []), item];\r\n            this.setSelected(selected);\r\n            selectedHasChanged = true;\r\n        }\r\n        else if (!this.isItemSelected(item)) {\r\n            this.setSelected(item);\r\n            selectedHasChanged = true;\r\n        }\r\n        this.internalOnSelect(item, item.id);\r\n        if (selectedHasChanged) {\r\n            this.internalOnChange();\r\n        }\r\n        this.closeAndReset();\r\n    }\r\n    onSearchChange(value) {\r\n        this.search = value;\r\n    }\r\n    onDrop(event) {\r\n        moveItemInArray(this.selected, event.previousIndex, event.currentIndex);\r\n        this.setSelected(this.selected);\r\n        const orderHasChanged = event.previousIndex !== event.currentIndex;\r\n        if (orderHasChanged) {\r\n            this.internalOnChange();\r\n        }\r\n    }\r\n    removeSelectedOption(_, item) {\r\n        const selectedNew = this.multiSelect\r\n            ? this.selected.filter((selectedItem) => selectedItem !== item)\r\n            : undefined;\r\n        if (this.multiSelect) {\r\n            if (!this.searchInputCmp.isDisabled) {\r\n                this.setSelected(selectedNew);\r\n                this.internalOnRemove(item, item.id);\r\n            }\r\n        }\r\n        else {\r\n            this.setSelected(selectedNew);\r\n            this.internalOnRemove(item, item.id);\r\n        }\r\n        if (this.isOpen) {\r\n            this.closeAndReset();\r\n        }\r\n    }\r\n    closeAndReset() {\r\n        this.close();\r\n        this.resetOnClose();\r\n    }\r\n    showResultsHeaderLabel() {\r\n        return this.items.length > 0 && !!this.resultsHeaderLabel;\r\n    }\r\n    onInfiniteScrollItemsChange() {\r\n    }\r\n    showPlaceholder() {\r\n        return this.multiSelect || (!this.multiSelect && !!this.selected);\r\n    }\r\n    itemTrackBy(_, item) {\r\n        return item.id;\r\n    }\r\n    setValidationState(validationState) {\r\n        this.validationState = validationState;\r\n        if (!this.cdr.destroyed) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    resetValidationState() {\r\n        this.validationState = undefined;\r\n        if (!this.cdr.destroyed) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    hasError() {\r\n        return VALIDATION_MESSAGE_TYPES.VALIDATION_ERROR === this.validationState;\r\n    }\r\n    hasWarning() {\r\n        return VALIDATION_MESSAGE_TYPES.WARNING === this.validationState;\r\n    }\r\n    fetchEntity(modelId) {\r\n        return this.fetchStrategy.fetchEntity(modelId).then((item) => {\r\n            if (!item) {\r\n                this.logService.debug('fetchEntity was used to fetch the option identified by ' +\r\n                    item +\r\n                    ' but failed to find a match');\r\n            }\r\n            return item;\r\n        });\r\n    }\r\n    updateModelIfNotFoundInItems(items) {\r\n        if (!this.keepModelOnReset) {\r\n            if (this.multiSelect) {\r\n                if (this.isModelEmpty()) {\r\n                    this.setSelected([], false);\r\n                    return;\r\n                }\r\n                const modelFromNewItems = this.model.filter((id) => this.getItemByModel(items, id));\r\n                const multiSelectMatch = isEqual(this.model, modelFromNewItems);\r\n                if (!multiSelectMatch) {\r\n                    this.updateModel(modelFromNewItems);\r\n                    this.resolveAndSetSelected(items);\r\n                }\r\n                else {\r\n                    this.resolveAndSetSelected(items);\r\n                }\r\n                return;\r\n            }\r\n            if (this.isModelEmpty()) {\r\n                this.setSelected(undefined, false);\r\n                return;\r\n            }\r\n            const singleSelectMatch = this.getItemByModel(items);\r\n            if (!singleSelectMatch) {\r\n                this.setSelected(undefined);\r\n            }\r\n            else {\r\n                this.resolveAndSetSelected(items);\r\n            }\r\n        }\r\n    }\r\n    refreshOptions(mask) {\r\n        this.internalFetchAll(mask).then((items) => {\r\n            this.items = items;\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    isValidConfiguration() {\r\n        if (this.resultsHeaderComponent && this.resultsHeaderLabel) {\r\n            throw new Error(`Only one of \"resultsHeaderComponent\" or \"resultsHeaderLabel\" must be specified`);\r\n        }\r\n        if (!this.fetchStrategy.fetchAll && !this.fetchStrategy.fetchPage) {\r\n            throw new Error('Neither fetchAll nor fetchPage have been specified in fetchStrategy');\r\n        }\r\n        if (this.fetchStrategy.fetchAll && this.fetchStrategy.fetchPage) {\r\n            throw new Error('Only one of either fetchAll or fetchPage must be specified in fetchStrategy');\r\n        }\r\n        if (this.fetchStrategy.fetchPage &&\r\n            this.model &&\r\n            !this.fetchStrategy.fetchEntity &&\r\n            !this.fetchStrategy.fetchEntities) {\r\n            throw new Error(`fetchPage has been specified in fetchStrategy but neither fetchEntity nor fetchEntities are available to load item identified by ${this.model}`);\r\n        }\r\n        if (this.isPagedDropdown() && !this.keepModelOnReset) {\r\n            this.logService.debug('current Select is paged, so keepModelOnReset flag is ignored (it will always keep the model on reset).');\r\n        }\r\n    }\r\n    internalKeyup(event, search) {\r\n        if (this.keyup) {\r\n            this.keyup(event, search);\r\n        }\r\n    }\r\n    internalOnRemove(item, model) {\r\n        if (this.onRemove) {\r\n            this.onRemove(item, model);\r\n        }\r\n        this.internalOnChange();\r\n    }\r\n    internalOnChange() {\r\n        if (this.onChange) {\r\n            this.onChange();\r\n        }\r\n    }\r\n    internalOnSelect(item, model) {\r\n        if (this.onSelect) {\r\n            this.onSelect(item, model);\r\n        }\r\n    }\r\n    internalFetchAll(mask = '') {\r\n        return this.fetchStrategy.fetchAll(mask).then((items) => {\r\n            this.fetchAllItems = items;\r\n            return [...items];\r\n        });\r\n    }\r\n    internalFetchEntities() {\r\n        let promise;\r\n        if (!this.multiSelect) {\r\n            promise = this.fetchEntity(this.model).then((item) => [item]);\r\n        }\r\n        else {\r\n            if (this.fetchStrategy.fetchEntities) {\r\n                promise = this.fetchStrategy.fetchEntities(this.model).then((items) => {\r\n                    if (items.length !== this.model.length) {\r\n                        this.logService.debug(`!fetchEntities was used to fetch the options identified by ${JSON.stringify(this.model)} but failed to find all matches`);\r\n                    }\r\n                    return items;\r\n                });\r\n            }\r\n            else {\r\n                const promiseArray = this.model.map((id) => this.fetchEntity(id));\r\n                promise = Promise.all(promiseArray);\r\n            }\r\n        }\r\n        return promise.then((result) => {\r\n            const items = result\r\n                .filter((item) => item !== null)\r\n                .map((item) => {\r\n                delete item.$promise;\r\n                delete item.$resolved;\r\n                item.technicalUniqueId = stringUtils.encode(item);\r\n                return item;\r\n            });\r\n            this.updateModelIfNotFoundInItems(items);\r\n            this.internalOnChange();\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    onMultiSelectIsOpenChange(isOpen) {\r\n        this.isOpen = isOpen;\r\n        if (isOpen) {\r\n            if (this.isPagedDropdown()) {\r\n                if (!this.cdr.destroyed) {\r\n                    this.cdr.detectChanges();\r\n                }\r\n                return;\r\n            }\r\n            this.refreshOptions(this.search);\r\n        }\r\n        else {\r\n            this.resetOnClose();\r\n        }\r\n    }\r\n    initSearchInputFilter() {\r\n        this.searchInputChangeSubject = new Subject();\r\n        this.searchInputChange$ = this.searchInputChangeSubject.asObservable();\r\n        this.languageSwitchSubscription = this.l10nService.languageSwitch$.subscribe((lang) => {\r\n            this.filterFn = getLocalizedFilterFn(lang);\r\n        });\r\n        this.searchInputChange$\r\n            .pipe(filter(() => typeof this.fetchStrategy.fetchAll !== 'undefined'), tap((value) => {\r\n            this.items = this.filterItemsBySearch(this.fetchAllItems, value);\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        }), debounceTime(500), switchMap((value) => this.internalFetchAll(value)))\r\n            .subscribe((items) => {\r\n            this.items = this.filterItemsBySearch(items, this.search);\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    filterItemsBySearch(fetchedItems, search) {\r\n        return fetchedItems.filter((item) => this.filterFn(item.label || item.name)\r\n            .trim()\r\n            .toUpperCase()\r\n            .includes(search.trim().toUpperCase()));\r\n    }\r\n    close() {\r\n        this.isOpen = false;\r\n    }\r\n    resetOnClose() {\r\n        if (this.search && this.resetSearchInput) {\r\n            this.search = '';\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n            if (this.fetchStrategy.fetchAll) {\r\n                this.refreshOptions(this.search);\r\n            }\r\n        }\r\n    }\r\n    fetchData() {\r\n        if (!this.isPagedDropdown()) {\r\n            this.internalFetchAllAndCheckModel();\r\n        }\r\n        else if (!this.isModelEmpty()) {\r\n            this.internalFetchEntities();\r\n        }\r\n    }\r\n    internalFetchAllAndCheckModel() {\r\n        return this.internalFetchAll().then((items) => {\r\n            this.updateModelIfNotFoundInItems(items);\r\n            this.internalOnChange();\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    getItemByModel(items, model = this.model) {\r\n        return items.find((item) => item.id === model);\r\n    }\r\n    getItemsByModel(items, model = this.model) {\r\n        return model.map((id) => this.getItemByModel(items, id)).filter((item) => !!item);\r\n    }\r\n    mapSelectedToModel() {\r\n        return this.multiSelect\r\n            ? this.selected.map((item) => item.id)\r\n            : this.selected.id;\r\n    }\r\n    setSelected(items, updateModel = true) {\r\n        this.selected = items;\r\n        if (updateModel) {\r\n            let model;\r\n            if (this.selected) {\r\n                model = this.mapSelectedToModel();\r\n            }\r\n            this.updateModel(model);\r\n        }\r\n    }\r\n    isItemSelected(item) {\r\n        if (!this.selected) {\r\n            return false;\r\n        }\r\n        return item.id === this.selected.id;\r\n    }\r\n    internalReset(forceReset = false) {\r\n        this.items.length = 0;\r\n        if (forceReset) {\r\n            this.selected = undefined;\r\n            this.resetModel();\r\n            return;\r\n        }\r\n        if (!this.keepModelOnReset) {\r\n            this.fetchData();\r\n        }\r\n    }\r\n    resetModel() {\r\n        const model = this.multiSelect ? [] : undefined;\r\n        this.updateModel(model);\r\n    }\r\n    updateModel(model) {\r\n        this.model = model;\r\n        this.modelChangeOld = this.model;\r\n        this.modelChange.emit(model);\r\n    }\r\n    isPagedDropdown() {\r\n        return !!this.fetchStrategy.fetchPage;\r\n    }\r\n    isModelEmpty() {\r\n        if (this.multiSelect) {\r\n            return !this.model || (this.model && this.model.length === 0);\r\n        }\r\n        else {\r\n            return !this.model;\r\n        }\r\n    }\r\n    resolveAndSetSelected(items) {\r\n        const selected = this.multiSelect\r\n            ? this.getItemsByModel(items)\r\n            : this.getItemByModel(items);\r\n        this.setSelected(selected, false);\r\n    }\r\n};\r\n__decorate([\r\n    HostBinding('class.se-select--single'),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [])\r\n], /* @ngInject */ SelectComponent.prototype, \"isSingleCss\", null);\r\n__decorate([\r\n    HostBinding('class.se-select--multi'),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [])\r\n], /* @ngInject */ SelectComponent.prototype, \"isMultiCss\", null);\r\n__decorate([\r\n    HostBinding('class.se-select--paged'),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [])\r\n], /* @ngInject */ SelectComponent.prototype, \"isPagedCss\", null);\r\n__decorate([\r\n    Input(),\r\n    HostBinding('attr.id'),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ SelectComponent.prototype, \"id\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"model\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"modelChange\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"fetchStrategy\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"controls\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"multiSelect\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"keepModelOnReset\", void 0);\r\n__decorate([\r\n    Input(),\r\n    HostBinding('class.is-disabled'),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"isReadOnly\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"actionableSearchItem\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Type)\r\n], /* @ngInject */ SelectComponent.prototype, \"resultsHeaderComponent\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ SelectComponent.prototype, \"resultsHeaderLabel\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ SelectComponent.prototype, \"disableChoiceFn\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ SelectComponent.prototype, \"placeholder\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Type)\r\n], /* @ngInject */ SelectComponent.prototype, \"itemComponent\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"searchEnabled\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"resetSearchInput\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ SelectComponent.prototype, \"onChange\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ SelectComponent.prototype, \"onRemove\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ SelectComponent.prototype, \"onSelect\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ SelectComponent.prototype, \"keyup\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"showRemoveButton\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"getApi\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ SelectComponent.prototype, \"reset\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectComponent.prototype, \"resetChange\", void 0);\r\n__decorate([\r\n    ViewChild(SearchInputComponent, { static: false }),\r\n    __metadata(\"design:type\", SearchInputComponent)\r\n], /* @ngInject */ SelectComponent.prototype, \"searchInputCmp\", void 0);\r\n__decorate([\r\n    HostListener('document:click', ['$event']),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [MouseEvent]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], /* @ngInject */ SelectComponent.prototype, \"clickHandler\", null);\r\n/* @ngInject */ SelectComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-select',\r\n        changeDetection: ChangeDetectionStrategy.OnPush,\r\n        host: {\r\n            '[class.se-select]': 'true'\r\n        },\r\n        template: `<fd-select [style.display]=\"'none'\"></fd-select><div [attr.id]=\"id + '-selector'\" class=\"select-container\" [ngClass]=\"{\n        'has-warning': hasWarning(),\n        'has-error': hasError()\n    }\"><ng-container *ngIf=\"multiSelect; then multi; else singleSelect\"></ng-container><ng-template #singleSelect><fd-popover [triggers]=\"['click']\" [(isOpen)]=\"isOpen\" [placement]=\"'bottom'\" (isOpenChange)=\"onSingleSelectIsOpenChange($event)\"><fd-popover-control><div class=\"selected-container fd-select-custom\" [attr.has-selected-option]=\"!!selected || null\"><button fd-button class=\"fd-select-button-custom toggle-button\" [disabled]=\"isReadOnly\"><span *ngIf=\"!selected; else selectedItem\" class=\"selected-placeholder\">{{ placeholder | translate }}</span><ng-template #selectedItem><div class=\"selected-item\"><span *ngIf=\"controls\" class=\"glyphicon glyphicon-search\"></span><se-item-printer *ngIf=\"selected\" [attr.id]=\"id + '-selected'\" [item]=\"selected\" [component]=\"itemComponent\" [selectComponentCtx]=\"this\"></se-item-printer><span *ngIf=\"controls || showRemoveButton\" class=\"sap-icon--sys-cancel selected-item__remove-button\" (click)=\"removeSelectedOption($event, selected)\"></span></div></ng-template></button></div></fd-popover-control><fd-popover-body><fd-menu class=\"se-select-list-container\"><ng-container *ngIf=\"searchEnabled && isOpen\"><ng-container *ngTemplateOutlet=\"searchInputTemplate\"></ng-container></ng-container><ng-container *ngTemplateOutlet=\"resultsHeader\"></ng-container><ng-container *ngIf=\"isOpen\"><ng-container *ngTemplateOutlet=\"selectListTemplate\"></ng-container></ng-container></fd-menu></fd-popover-body></fd-popover></ng-template><ng-template #multi><div [ngClass]=\"{'se-multi-select': selected && selected.length > 0}\"><div class=\"selected-container se-selected-list\"><ng-container *ngIf=\"selected && selected.length > 0\"><ol class=\"selected-list\" cdkDropList (cdkDropListDropped)=\"onDrop($event)\"><li *ngFor=\"let item of selected; trackBy: itemTrackBy\" cdkDrag class=\"selected-list__item selected-item\"><se-item-printer [item]=\"item\" [component]=\"itemComponent\" [selectComponentCtx]=\"this\"></se-item-printer><span class=\"sap-icon--sys-cancel selected-item__remove-button\" (click)=\"removeSelectedOption($event, item)\"></span></li></ol></ng-container></div></div><fd-popover class=\"se-multi-select\" [triggers]=\"[]\" [closeOnOutsideClick]=\"false\" [isOpen]=\"isOpen\" [placement]=\"'bottom'\"><fd-popover-control><ng-container *ngTemplateOutlet=\"searchInputTemplate\"></ng-container></fd-popover-control><fd-popover-body><fd-menu class=\"se-select-list-container\"><ng-container *ngTemplateOutlet=\"resultsHeader\"></ng-container><ng-container *ngIf=\"isOpen\"><ng-container *ngTemplateOutlet=\"selectListTemplate\"></ng-container></ng-container></fd-menu></fd-popover-body></fd-popover></ng-template><ng-template #resultsHeader><se-select-results-header [search]=\"search\" [resultsHeaderComponent]=\"resultsHeaderComponent\" [resultsHeaderLabel]=\"resultsHeaderLabel\" [displayResultsHeaderLabel]=\"showResultsHeaderLabel()\" [actionableSearchItem]=\"actionableSearchItem\" (actionButtonClick)=\"closeAndReset()\"></se-select-results-header></ng-template><ng-template #searchInputTemplate><se-select-search-input [isDisabled]=\"isReadOnly\" [isReadOnly]=\"multiSelect && !searchEnabled\" [isTypeAheadEnabled]=\"!multiSelect\" [placeholder]=\"showPlaceholder() ? (placeholder | translate) : ''\" [search]=\"search\" (searchKeyup)=\"onSearchInputKeyup($event.event, $event.value)\" (searchChange)=\"onSearchInputChange($event)\"></se-select-search-input></ng-template><ng-template #selectListTemplate><se-select-list [id]=\"id\" [isPagedDropdown]=\"isPagedDropdown()\" [fetchPage]=\"fetchStrategy.fetchPage\" [search]=\"search\" [items]=\"items\" [selected]=\"selected\" [excludeSelected]=\"multiSelect\" [disableChoiceFn]=\"disableChoiceFn\" [itemComponent]=\"itemComponent\" [selectComponentCtx]=\"this\" (optionClick)=\"onOptionClick($event)\" (infiniteScrollItemsChange)=\"onInfiniteScrollItemsChange()\"></se-select-list></ng-template></div>`\r\n    }),\r\n    __metadata(\"design:paramtypes\", [L10nService,\r\n        LogService,\r\n        ChangeDetectorRef])\r\n], /* @ngInject */ SelectComponent);\r\nexport { /* @ngInject */ SelectComponent };\r\n//# sourceMappingURL=SelectComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+cdk@8.2.3_ecb0ad61817e3ede6ce462931a5e5041/node_modules/@angular/cdk/drag-drop.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/operators/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/pipes/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/select/actionableSearchItem/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/select/defaultItemPrinter/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/select/interfaces.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/select/searchInput/index.ts"],"map":"{\"version\":3,\"file\":\"SelectComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/select/SelectComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/select/SelectComponent.d.ts","writeByteOrderMark":false,"text":"import './SelectComponent.scss';\r\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges, Type } from '@angular/core';\r\nimport { LogService } from '@smart/utils';\r\nimport { L10nService } from '../../services';\r\nimport { ActionableSearchItem } from './actionableSearchItem';\r\nimport { FetchStrategy, SelectApi, SelectDisableChoice, SelectItem, SelectKeyup, SelectOnChange, SelectOnRemove, SelectOnSelect, SelectReset } from './interfaces';\r\nimport { SearchInputComponent } from './searchInput';\r\nexport declare class SelectComponent<T extends SelectItem> implements OnInit, OnChanges {\r\n    private readonly l10nService;\r\n    private readonly logService;\r\n    private readonly cdr;\r\n    get isSingleCss(): boolean;\r\n    get isMultiCss(): boolean;\r\n    get isPagedCss(): boolean;\r\n    id: string;\r\n    model: string | string[];\r\n    modelChange: EventEmitter<string | string[]>;\r\n    fetchStrategy: FetchStrategy<T>;\r\n    controls: boolean;\r\n    multiSelect: boolean;\r\n    keepModelOnReset: boolean;\r\n    isReadOnly: boolean;\r\n    actionableSearchItem?: ActionableSearchItem;\r\n    resultsHeaderComponent?: Type<any>;\r\n    resultsHeaderLabel?: string;\r\n    disableChoiceFn?: SelectDisableChoice<T>;\r\n    placeholder?: string;\r\n    itemComponent?: Type<any>;\r\n    searchEnabled: boolean;\r\n    resetSearchInput: boolean;\r\n    onChange?: SelectOnChange;\r\n    onRemove?: SelectOnRemove<T>;\r\n    onSelect?: SelectOnSelect<T>;\r\n    keyup?: SelectKeyup;\r\n    showRemoveButton: boolean;\r\n    getApi: EventEmitter<SelectApi>;\r\n    reset: SelectReset;\r\n    resetChange: EventEmitter<SelectReset>;\r\n    searchInputCmp: SearchInputComponent;\r\n    isOpen: boolean;\r\n    items: T[];\r\n    selected: T | T[];\r\n    search: string;\r\n    private fetchAllItems;\r\n    private modelChangeOld;\r\n    private readonly api;\r\n    private validationState;\r\n    private filterFn;\r\n    private languageSwitchSubscription;\r\n    private searchInputChange$;\r\n    private searchInputChangeSubject;\r\n    constructor(l10nService: L10nService, logService: LogService, cdr: ChangeDetectorRef);\r\n    clickHandler(event: MouseEvent): void;\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    onSingleSelectIsOpenChange(isOpen: boolean): void;\r\n    onSearchInputKeyup(event: KeyboardEvent, value: string): void;\r\n    onSearchInputChange(value: string): void;\r\n    onOptionClick(item: T): void;\r\n    onSearchChange(value: string): void;\r\n    onDrop(event: CdkDragDrop<string[]>): void;\r\n    removeSelectedOption(_: Event, item: T): void;\r\n    closeAndReset(): void;\r\n    showResultsHeaderLabel(): boolean;\r\n    onInfiniteScrollItemsChange(): void;\r\n    showPlaceholder(): boolean;\r\n    itemTrackBy(_: any, item: SelectItem): string;\r\n    setValidationState(validationState: string): void;\r\n    resetValidationState(): void;\r\n    hasError(): boolean;\r\n    hasWarning(): boolean;\r\n    fetchEntity(modelId: string): Promise<T>;\r\n    updateModelIfNotFoundInItems(items: T[]): void;\r\n    refreshOptions(mask: string): void;\r\n    isValidConfiguration(): void;\r\n    private internalKeyup;\r\n    private internalOnRemove;\r\n    private internalOnChange;\r\n    private internalOnSelect;\r\n    private internalFetchAll;\r\n    private internalFetchEntities;\r\n    private onMultiSelectIsOpenChange;\r\n    private initSearchInputFilter;\r\n    private filterItemsBySearch;\r\n    private close;\r\n    private resetOnClose;\r\n    private fetchData;\r\n    private internalFetchAllAndCheckModel;\r\n    private getItemByModel;\r\n    private getItemsByModel;\r\n    private mapSelectedToModel;\r\n    private setSelected;\r\n    private isItemSelected;\r\n    private internalReset;\r\n    private resetModel;\r\n    private updateModel;\r\n    private isPagedDropdown;\r\n    private isModelEmpty;\r\n    private resolveAndSetSelected;\r\n}\r\n"}}
