{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SeDowngradeService } from '../../di';\r\nimport { EVENT_PERSPECTIVE_CHANGED, EVENT_PERSPECTIVE_REFRESHED, HIDE_TOOLBAR_ITEM_CONTEXT, SHOW_TOOLBAR_ITEM_CONTEXT, EVENTS } from '../../utils/smarteditconstants';\r\nimport { CrossFrameEventService } from '../crossFrame/CrossFrameEventService';\r\nimport { IAlertService, IExperienceService, IPageInfoService } from '../interfaces';\r\nimport { CMSModesService } from '../modes/CMSModesService';\r\nimport { PageVersioningService } from './PageVersioningService';\r\n/**\r\n * This service is meant to be used internally by the page versions menu.\r\n * It allows selecting and deselecting a page version to be rendered in the Versioning Mode.\r\n */\r\nlet /* @ngInject */ PageVersionSelectionService = class /* @ngInject */ PageVersionSelectionService {\r\n    constructor(crossFrameEventService, alertService, experienceService, cMSModesService, pageInfoService, pageVersioningService, translateService) {\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.alertService = alertService;\r\n        this.experienceService = experienceService;\r\n        this.cMSModesService = cMSModesService;\r\n        this.pageInfoService = pageInfoService;\r\n        this.pageVersioningService = pageVersioningService;\r\n        this.translateService = translateService;\r\n        this.PAGE_VERSIONS_TOOLBAR_ITEM_KEY = 'se.cms.pageVersionsMenu';\r\n        this.PAGE_VERSION_UNSELECTED_MSG_KEY = 'se.cms.versions.unselect.version';\r\n        this.selectedPageVersionSubject = new BehaviorSubject(null);\r\n        this.unSubEventPerspectiveChanged = this.crossFrameEventService.subscribe(EVENT_PERSPECTIVE_CHANGED, () => this.removePageVersionOnPerspectiveChange());\r\n        this.unSubEventPerspectiveRefreshed = this.crossFrameEventService.subscribe(EVENT_PERSPECTIVE_REFRESHED, () => this.resetPageVersionContext());\r\n        this.unSubEventPageChange = this.crossFrameEventService.subscribe(EVENTS.PAGE_CHANGE, (_eventId, experience) => this.initOnPageChange(experience));\r\n        this.unSubSelectedPageVersion = this.selectedPageVersionSubject.subscribe((value) => (this.selectedPageVersion = value));\r\n    }\r\n    ngOnDestroy() {\r\n        this.unSubEventPerspectiveChanged();\r\n        this.unSubEventPerspectiveRefreshed();\r\n        this.unSubEventPageChange();\r\n        this.unSubSelectedPageVersion.unsubscribe();\r\n    }\r\n    getSelectedPageVersion() {\r\n        return this.selectedPageVersion;\r\n    }\r\n    getSelectedPageVersion$() {\r\n        return this.selectedPageVersionSubject.asObservable();\r\n    }\r\n    hideToolbarContextIfNotNeeded() {\r\n        if (!this.selectedPageVersion) {\r\n            this.crossFrameEventService.publish(HIDE_TOOLBAR_ITEM_CONTEXT, this.PAGE_VERSIONS_TOOLBAR_ITEM_KEY);\r\n        }\r\n    }\r\n    showToolbarContextIfNeeded() {\r\n        if (this.selectedPageVersion) {\r\n            this.crossFrameEventService.publish(SHOW_TOOLBAR_ITEM_CONTEXT, this.PAGE_VERSIONS_TOOLBAR_ITEM_KEY);\r\n        }\r\n    }\r\n    selectPageVersion(version) {\r\n        if (!this.isSameVersion(this.selectedPageVersion, version)) {\r\n            this.selectedPageVersionSubject.next(version);\r\n            this.experienceService.updateExperience({\r\n                versionId: version.uid\r\n            });\r\n            this.showToolbarContextIfNeeded();\r\n            this.crossFrameEventService.publish(EVENTS.PAGE_SELECTED);\r\n        }\r\n    }\r\n    deselectPageVersion(showAlert = true) {\r\n        if (this.selectedPageVersion && showAlert) {\r\n            const msgTranslated = this.translateService.instant(this.PAGE_VERSION_UNSELECTED_MSG_KEY);\r\n            this.alertService.showInfo(msgTranslated);\r\n        }\r\n        this.selectedPageVersionSubject.next(null);\r\n        this.experienceService.updateExperience({\r\n            versionId: null\r\n        });\r\n        this.crossFrameEventService.publish(HIDE_TOOLBAR_ITEM_CONTEXT, this.PAGE_VERSIONS_TOOLBAR_ITEM_KEY);\r\n    }\r\n    updatePageVersionDetails(version) {\r\n        this.selectedPageVersionSubject.next(version);\r\n    }\r\n    /**\r\n     * Required especially when a version is selected and you refresh the browser.\r\n     */\r\n    initOnPageChange(experience) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (experience.versionId && !this.selectedPageVersion) {\r\n                const pageUuid = yield this.pageInfoService.getPageUUID();\r\n                const version = yield this.pageVersioningService.getPageVersionForId(pageUuid, String(experience.versionId));\r\n                this.selectedPageVersionSubject.next(version);\r\n                this.showToolbarContextIfNeeded();\r\n                this.crossFrameEventService.publish(EVENTS.PAGE_SELECTED);\r\n            }\r\n        });\r\n    }\r\n    isSameVersion(selectedPageVersion, newVersion) {\r\n        return selectedPageVersion !== null && newVersion !== null\r\n            ? this.selectedPageVersion.uid === newVersion.uid\r\n            : false;\r\n    }\r\n    removePageVersionOnPerspectiveChange() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const isVersioningModeActive = yield this.cMSModesService.isVersioningPerspectiveActive();\r\n            if (this.selectedPageVersion) {\r\n                const pageUuid = yield this.pageInfoService.getPageUUID();\r\n                if (!isVersioningModeActive || this.selectedPageVersion.itemUUID !== pageUuid) {\r\n                    this.deselectPageVersion();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    resetPageVersionContext() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const experience = yield this.experienceService.getCurrentExperience();\r\n            if (!experience.versionId && this.selectedPageVersion) {\r\n                this.selectedPageVersionSubject.next(null);\r\n                this.hideToolbarContextIfNotNeeded();\r\n            }\r\n            else {\r\n                this.showToolbarContextIfNeeded();\r\n            }\r\n        });\r\n    }\r\n};\r\n/* @ngInject */ PageVersionSelectionService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [CrossFrameEventService,\r\n        IAlertService,\r\n        IExperienceService,\r\n        CMSModesService,\r\n        IPageInfoService,\r\n        PageVersioningService,\r\n        TranslateService])\r\n], /* @ngInject */ PageVersionSelectionService);\r\nexport { /* @ngInject */ PageVersionSelectionService };\r\n//# sourceMappingURL=PageVersionSelectionService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate+core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/smarteditconstants.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/crossFrame/CrossFrameEventService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/modes/CMSModesService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/versioning/PageVersioningService.ts"],"map":"{\"version\":3,\"file\":\"PageVersionSelectionService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/versioning/PageVersionSelectionService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,eAAe,EAA4B,MAAM,MAAM,CAAC;AACjE,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAC9C,OAAO,EACH,yBAAyB,EACzB,2BAA2B,EAC3B,yBAAyB,EACzB,yBAAyB,EACzB,MAAM,EACT,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAE,sBAAsB,EAAE,MAAM,sCAAsC,CAAC;AAC9E,OAAO,EACH,aAAa,EAEb,kBAAkB,EAClB,gBAAgB,EAEnB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAC3D,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAEhE;;;GAGG;AAEH,kDAAA;IAUI,YACqB,sBAA8C,EAC9C,YAA2B,EAC3B,iBAAqC,EACrC,eAAgC,EAChC,eAAiC,EACjC,qBAA4C,EAC5C,gBAAkC;QANlC,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,iBAAY,GAAZ,YAAY,CAAe;QAC3B,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAkB;QACjC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,qBAAgB,GAAhB,gBAAgB,CAAkB;QAhBtC,mCAA8B,GAAG,yBAAyB,CAAC;QAC3D,oCAA+B,GAAG,kCAAkC,CAAC;QACrE,+BAA0B,GAAG,IAAI,eAAe,CAAe,IAAI,CAAC,CAAC;QAgBlF,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CACrE,yBAAyB,EACzB,GAAG,EAAE,CAAC,IAAI,CAAC,oCAAoC,EAAE,CACpD,CAAC;QAEF,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CACvE,2BAA2B,EAC3B,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CACvC,CAAC;QAEF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAC7D,MAAM,CAAC,WAAW,EAClB,CAAC,QAAgB,EAAE,UAAuB,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CACnF,CAAC;QAEF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,0BAA0B,CAAC,SAAS,CACrE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,CAChD,CAAC;IACN,CAAC;IAED,WAAW;QACP,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;IAChD,CAAC;IAEM,sBAAsB;QACzB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACpC,CAAC;IAEM,uBAAuB;QAC1B,OAAO,IAAI,CAAC,0BAA0B,CAAC,YAAY,EAAE,CAAC;IAC1D,CAAC;IAEM,6BAA6B;QAChC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC3B,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAC/B,yBAAyB,EACzB,IAAI,CAAC,8BAA8B,CACtC,CAAC;SACL;IACL,CAAC;IAEM,0BAA0B;QAC7B,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC1B,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAC/B,yBAAyB,EACzB,IAAI,CAAC,8BAA8B,CACtC,CAAC;SACL;IACL,CAAC;IAEM,iBAAiB,CAAC,OAAqB;QAC1C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,mBAAmB,EAAE,OAAO,CAAC,EAAE;YACxD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC;gBACpC,SAAS,EAAE,OAAO,CAAC,GAAG;aACzB,CAAC,CAAC;YAEH,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAClC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;SAC7D;IACL,CAAC;IAEM,mBAAmB,CAAC,SAAS,GAAG,IAAI;QACvC,IAAI,IAAI,CAAC,mBAAmB,IAAI,SAAS,EAAE;YACvC,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC/C,IAAI,CAAC,+BAA+B,CACvC,CAAC;YACF,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;SAC7C;QAED,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC;YACpC,SAAS,EAAE,IAAI;SAClB,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAC/B,yBAAyB,EACzB,IAAI,CAAC,8BAA8B,CACtC,CAAC;IACN,CAAC;IAEM,wBAAwB,CAAC,OAAqB;QACjD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACW,gBAAgB,CAAC,UAAuB;;YAClD,IAAI,UAAU,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;gBACnD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;gBAC1D,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAChE,QAAQ,EACR,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAC/B,CAAC;gBACF,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAE9C,IAAI,CAAC,0BAA0B,EAAE,CAAC;gBAElC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;aAC7D;QACL,CAAC;KAAA;IAEO,aAAa,CAAC,mBAAiC,EAAE,UAAwB;QAC7E,OAAO,mBAAmB,KAAK,IAAI,IAAI,UAAU,KAAK,IAAI;YACtD,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,KAAK,UAAU,CAAC,GAAG;YACjD,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;IAEa,oCAAoC;;YAC9C,MAAM,sBAAsB,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,6BAA6B,EAAE,CAAC;YAC1F,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC1B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;gBAC1D,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,KAAK,QAAQ,EAAE;oBAC3E,IAAI,CAAC,mBAAmB,EAAE,CAAC;iBAC9B;aACJ;QACL,CAAC;KAAA;IAEa,uBAAuB;;YACjC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,EAAE,CAAC;YACvE,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBACnD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3C,IAAI,CAAC,6BAA6B,EAAE,CAAC;aACxC;iBAAM;gBACH,IAAI,CAAC,0BAA0B,EAAE,CAAC;aACrC;QACL,CAAC;KAAA;CACJ,CAAA;AAtJD;IADC,kBAAkB,EAAE;qCAY4B,sBAAsB;QAChC,aAAa;QACR,kBAAkB;QACpB,eAAe;QACf,gBAAgB;QACV,qBAAqB;QAC1B,gBAAgB;+CAqI1D\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/versioning/PageVersionSelectionService.d.ts","writeByteOrderMark":false,"text":"import { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CrossFrameEventService } from '../crossFrame/CrossFrameEventService';\r\nimport { IAlertService, IExperienceService, IPageInfoService, IPageVersion } from '../interfaces';\r\nimport { CMSModesService } from '../modes/CMSModesService';\r\nimport { PageVersioningService } from './PageVersioningService';\r\n/**\r\n * This service is meant to be used internally by the page versions menu.\r\n * It allows selecting and deselecting a page version to be rendered in the Versioning Mode.\r\n */\r\nexport declare class PageVersionSelectionService {\r\n    private readonly crossFrameEventService;\r\n    private readonly alertService;\r\n    private readonly experienceService;\r\n    private readonly cMSModesService;\r\n    private readonly pageInfoService;\r\n    private readonly pageVersioningService;\r\n    private readonly translateService;\r\n    private readonly PAGE_VERSIONS_TOOLBAR_ITEM_KEY;\r\n    private readonly PAGE_VERSION_UNSELECTED_MSG_KEY;\r\n    private readonly selectedPageVersionSubject;\r\n    private selectedPageVersion;\r\n    private readonly unSubEventPerspectiveChanged;\r\n    private readonly unSubEventPerspectiveRefreshed;\r\n    private readonly unSubEventPageChange;\r\n    private readonly unSubSelectedPageVersion;\r\n    constructor(crossFrameEventService: CrossFrameEventService, alertService: IAlertService, experienceService: IExperienceService, cMSModesService: CMSModesService, pageInfoService: IPageInfoService, pageVersioningService: PageVersioningService, translateService: TranslateService);\r\n    ngOnDestroy(): void;\r\n    getSelectedPageVersion(): IPageVersion;\r\n    getSelectedPageVersion$(): Observable<IPageVersion>;\r\n    hideToolbarContextIfNotNeeded(): void;\r\n    showToolbarContextIfNeeded(): void;\r\n    selectPageVersion(version: IPageVersion): void;\r\n    deselectPageVersion(showAlert?: boolean): void;\r\n    updatePageVersionDetails(version: IPageVersion): void;\r\n    /**\r\n     * Required especially when a version is selected and you refresh the browser.\r\n     */\r\n    private initOnPageChange;\r\n    private isSameVersion;\r\n    private removePageVersionOnPerspectiveChange;\r\n    private resetPageVersionContext;\r\n}\r\n"}}
