{"code":"/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * @internal\r\n */\r\nexport const INTERNAL_PROP_NAME = '$$internal';\r\n/**\r\n * @internal\r\n * Adds an internal property on the component model for\r\n * watching property changes on an object.\r\n */\r\nexport class InternalProperty {\r\n    constructor() {\r\n        this._map = new Map();\r\n    }\r\n    /**\r\n     * Watch property changes.\r\n     */\r\n    watch(property, fn) {\r\n        this._map.set(property, fn);\r\n        return () => {\r\n            this._map.delete(property);\r\n        };\r\n    }\r\n    /**\r\n     * Trigger prop change.\r\n     *\r\n     * @param property\r\n     * @param value New value\r\n     */\r\n    trigger(property, value) {\r\n        if (this._map.has(property)) {\r\n            this._map.get(property)(value);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @internal\r\n * Creates a proxied object to listen on property changes\r\n * for backwards compatibility with object mutations made by\r\n * widgets. This is used to proxy the model data called component in the\r\n * generic editor. The component data is the model that is\r\n * used for submitting to the backend. Old widgets mutate the\r\n * properties of component object, thus there is not way to\r\n * listen on properties changes except for the use of the ES6 Proxy\r\n * API. Some properties that are watched inside of the GenericEditorField\r\n * update the value of the AbstractForm of Angular used for validation.\r\n *\r\n * NOTE:\r\n * This function uses Proxy which is not supported in IE.\r\n */\r\nexport const proxifyDataObject = (obj) => {\r\n    const internal = new InternalProperty();\r\n    Object.defineProperty(obj, INTERNAL_PROP_NAME, {\r\n        get: () => internal\r\n    });\r\n    return new Proxy(obj, {\r\n        set(target, prop, value) {\r\n            target[prop] = value;\r\n            target[INTERNAL_PROP_NAME].trigger(prop, value);\r\n            return true;\r\n        }\r\n    });\r\n};\r\n//# sourceMappingURL=InternalProperty.js.map","references":[],"map":"{\"version\":3,\"file\":\"InternalProperty.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/genericEditor/models/InternalProperty.ts\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;AACH;;GAEG;AACH,MAAM,CAAC,MAAM,kBAAkB,GAAG,YAAY,CAAC;AAE/C;;;;GAIG;AACH,MAAM,OAAO,gBAAgB;IAA7B;QACY,SAAI,GAAG,IAAI,GAAG,EAAgC,CAAC;IAwB3D,CAAC;IAtBG;;OAEG;IACH,KAAK,CAAC,QAAgB,EAAE,EAAwB;QAC5C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAE5B,OAAO,GAAS,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC,CAAC;IACN,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,QAAgB,EAAE,KAAU;QAChC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;SAClC;IACL,CAAC;CACJ;AAED;;;;;;;;;;;;;;GAcG;AACH,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,GAAQ,EAAO,EAAE;IAC/C,MAAM,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAC;IACxC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,kBAAkB,EAAE;QAC3C,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ;KACtB,CAAC,CAAC;IACH,OAAO,IAAI,KAAK,CAAC,GAAG,EAAE;QAClB,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK;YACnB,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAEhD,OAAO,IAAI,CAAC;QAChB,CAAC;KACJ,CAAC,CAAC;AACP,CAAC,CAAC\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/models/InternalProperty.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @internal\r\n */\r\nexport declare const INTERNAL_PROP_NAME = \"$$internal\";\r\n/**\r\n * @internal\r\n * Adds an internal property on the component model for\r\n * watching property changes on an object.\r\n */\r\nexport declare class InternalProperty {\r\n    private _map;\r\n    /**\r\n     * Watch property changes.\r\n     */\r\n    watch(property: string, fn: (value: any) => void): () => void;\r\n    /**\r\n     * Trigger prop change.\r\n     *\r\n     * @param property\r\n     * @param value New value\r\n     */\r\n    trigger(property: string, value: any): void;\r\n}\r\n/**\r\n * @internal\r\n * Creates a proxied object to listen on property changes\r\n * for backwards compatibility with object mutations made by\r\n * widgets. This is used to proxy the model data called component in the\r\n * generic editor. The component data is the model that is\r\n * used for submitting to the backend. Old widgets mutate the\r\n * properties of component object, thus there is not way to\r\n * listen on properties changes except for the use of the ES6 Proxy\r\n * API. Some properties that are watched inside of the GenericEditorField\r\n * update the value of the AbstractForm of Angular used for validation.\r\n *\r\n * NOTE:\r\n * This function uses Proxy which is not supported in IE.\r\n */\r\nexport declare const proxifyDataObject: (obj: any) => any;\r\n"}}
