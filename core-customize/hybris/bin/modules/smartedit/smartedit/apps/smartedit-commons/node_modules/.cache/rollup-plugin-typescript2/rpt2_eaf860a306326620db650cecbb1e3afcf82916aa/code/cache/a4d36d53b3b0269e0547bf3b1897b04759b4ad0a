{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Directive, HostBinding, HostListener, Input } from '@angular/core';\r\nimport { ContentManager } from './ContentManager';\r\n/**\r\n * Applied on a DOM element, this Directive will trigger a submit of the data stored in\r\n * the parent {@link ContentManager} upon cliking.\r\n *\r\n * ### Example\r\n *\r\n *      <form [contentManager]=\"{onSave: editor.someSubmit}\">\r\n *          <button [seSubmitBtn]=\"editor.isSubmitDisabled\">Submit </button>\r\n *      </form>\r\n *\r\n * @param seSubmitBtn The optional callback returning a boolean to add more cases for disablement\r\n */\r\nlet SubmitBtnDirective = class SubmitBtnDirective {\r\n    constructor(cm) {\r\n        this.cm = cm;\r\n    }\r\n    /**\r\n     * Modifies the disabled attribute to be disabled when saving.\r\n     */\r\n    get disabled() {\r\n        return this.cm.submitting || (this.isDisabled && this.isDisabled());\r\n    }\r\n    /**\r\n     * When the element is clicked the save operation is called in the content manager direcitve.\r\n     */\r\n    save($event) {\r\n        $event.preventDefault();\r\n        this.cm.save().subscribe();\r\n    }\r\n};\r\n__decorate([\r\n    Input('seSubmitBtn'),\r\n    __metadata(\"design:type\", Function)\r\n], SubmitBtnDirective.prototype, \"isDisabled\", void 0);\r\n__decorate([\r\n    HostBinding('disabled'),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [])\r\n], SubmitBtnDirective.prototype, \"disabled\", null);\r\n__decorate([\r\n    HostListener('click', ['$event']),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Event]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], SubmitBtnDirective.prototype, \"save\", null);\r\nSubmitBtnDirective = __decorate([\r\n    Directive({\r\n        selector: '[seSubmitBtn]'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [ContentManager])\r\n], SubmitBtnDirective);\r\nexport { SubmitBtnDirective };\r\n//# sourceMappingURL=SubmitButtonDirective.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/components/ContentManager.ts"],"map":"{\"version\":3,\"file\":\"SubmitButtonDirective.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/genericEditor/components/SubmitButtonDirective.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC5E,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD;;;;;;;;;;;GAWG;AAIH,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAI3B,YAAoB,EAAuB;QAAvB,OAAE,GAAF,EAAE,CAAqB;IAAG,CAAC;IAE/C;;OAEG;IAEH,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IACxE,CAAC;IAED;;OAEG;IAEH,IAAI,CAAC,MAAa;QACd,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;CACJ,CAAA;AApBG;IADC,KAAK,CAAC,aAAa,CAAC;;sDACY;AAQjC;IADC,WAAW,CAAC,UAAU,CAAC;;;kDAGvB;AAMD;IADC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;qCACrB,KAAK;;8CAGjB;AArBQ,kBAAkB;IAH9B,SAAS,CAAC;QACP,QAAQ,EAAE,eAAe;KAC5B,CAAC;qCAK0B,cAAc;GAJ7B,kBAAkB,CAsB9B;SAtBY,kBAAkB\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/components/SubmitButtonDirective.d.ts","writeByteOrderMark":false,"text":"import { ContentManager } from './ContentManager';\r\n/**\r\n * Applied on a DOM element, this Directive will trigger a submit of the data stored in\r\n * the parent {@link ContentManager} upon cliking.\r\n *\r\n * ### Example\r\n *\r\n *      <form [contentManager]=\"{onSave: editor.someSubmit}\">\r\n *          <button [seSubmitBtn]=\"editor.isSubmitDisabled\">Submit </button>\r\n *      </form>\r\n *\r\n * @param seSubmitBtn The optional callback returning a boolean to add more cases for disablement\r\n */\r\nexport declare class SubmitBtnDirective {\r\n    private cm;\r\n    isDisabled: () => boolean;\r\n    constructor(cm: ContentManager<any>);\r\n    /**\r\n     * Modifies the disabled attribute to be disabled when saving.\r\n     */\r\n    get disabled(): boolean;\r\n    /**\r\n     * When the element is clicked the save operation is called in the content manager direcitve.\r\n     */\r\n    save($event: Event): void;\r\n}\r\n"}}
