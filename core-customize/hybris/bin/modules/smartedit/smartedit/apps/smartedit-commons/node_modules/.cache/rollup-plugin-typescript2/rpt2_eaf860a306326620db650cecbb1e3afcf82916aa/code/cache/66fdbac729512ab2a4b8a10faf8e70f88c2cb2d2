{"code":"/**\r\n * INotificationService provides a service to display visual cues to inform\r\n * the user of the state of the application in the container or the iFramed application.\r\n * The interface defines the methods required to manage notifications that are to be displayed to the user.\r\n */\r\nexport class INotificationService {\r\n    /**\r\n     * This method creates a new notification based on the given configuration and\r\n     * adds it to the top of the list.\r\n     *\r\n     * The configuration must contain either one of componentName, template or templateUrl.\r\n     *\r\n     * ### Throws\r\n     *\r\n     * - Throws An error if no configuration is given.\r\n     * - Throws An error if the configuration does not contain a unique identifier.\r\n     * - Throws An error if the configuration's unique identifier is an empty string.\r\n     * - Throws An error if the configuration does not contain a componenName, template or templateUrl.\r\n     * - Throws An error if the configuration contains more than one template type.\r\n     */\r\n    pushNotification(configuration) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * Moves the notification with the given ID from the list.\r\n     */\r\n    removeNotification(notificationId) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * This method removes all notifications.\r\n     */\r\n    removeAllNotifications() {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n}\r\n//# sourceMappingURL=INotificationService.js.map","references":[],"map":"{\"version\":3,\"file\":\"INotificationService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/INotificationService.ts\"],\"names\":[],\"mappings\":\"AAiCA;;;;GAIG;AACH,MAAM,OAAgB,oBAAoB;IACtC;;;;;;;;;;;;;OAaG;IACH,gBAAgB,CAAC,aAAyC;QACtD,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,kBAAkB,CAAC,cAAsB;QACrC,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,sBAAsB;QAClB,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/interfaces/INotificationService.d.ts","writeByteOrderMark":false,"text":"export interface INotificationConfiguration {\r\n    id: string;\r\n    /**\r\n     * Component class name, decorated with @SeCustomComponent.\r\n     *\r\n     * Component must be also registered in @NgModule entryComponents array.\r\n     *\r\n     *\r\n     * ### Example\r\n     *\r\n     *      \\@SeCustomComponent()\r\n     *      \\@Component({\r\n     *          selector: 'se-my-custom-component',\r\n     *          templateUrl: './SeMyComponent.html'\r\n     *      })\r\n     *      export class MyCustomComponent {}\r\n     *\r\n     *      componentName = 'MyCustomComponent'\r\n     *      or\r\n     *      componentName = MyCustomComponent.name\r\n     */\r\n    componentName: string;\r\n}\r\nexport declare type INotificationPush = INotificationConfiguration;\r\nexport interface INotificationRemove {\r\n    id: string;\r\n}\r\n/**\r\n * INotificationService provides a service to display visual cues to inform\r\n * the user of the state of the application in the container or the iFramed application.\r\n * The interface defines the methods required to manage notifications that are to be displayed to the user.\r\n */\r\nexport declare abstract class INotificationService {\r\n    /**\r\n     * This method creates a new notification based on the given configuration and\r\n     * adds it to the top of the list.\r\n     *\r\n     * The configuration must contain either one of componentName, template or templateUrl.\r\n     *\r\n     * ### Throws\r\n     *\r\n     * - Throws An error if no configuration is given.\r\n     * - Throws An error if the configuration does not contain a unique identifier.\r\n     * - Throws An error if the configuration's unique identifier is an empty string.\r\n     * - Throws An error if the configuration does not contain a componenName, template or templateUrl.\r\n     * - Throws An error if the configuration contains more than one template type.\r\n     */\r\n    pushNotification(configuration: INotificationConfiguration): PromiseLike<void>;\r\n    /**\r\n     * Moves the notification with the given ID from the list.\r\n     */\r\n    removeNotification(notificationId: string): PromiseLike<void>;\r\n    /**\r\n     * This method removes all notifications.\r\n     */\r\n    removeAllNotifications(): PromiseLike<void>;\r\n}\r\n"}}
