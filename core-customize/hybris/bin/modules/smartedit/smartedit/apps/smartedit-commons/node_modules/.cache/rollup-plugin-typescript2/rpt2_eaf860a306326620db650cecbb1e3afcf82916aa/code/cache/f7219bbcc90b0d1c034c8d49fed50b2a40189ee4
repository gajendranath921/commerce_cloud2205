{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { forwardRef, Component, Inject } from '@angular/core';\r\nimport { GenericEditorComponent } from '../../GenericEditorComponent';\r\nimport { GenericEditorStackService } from '../../services';\r\nimport './genericEditorBreadcrumb.scss';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"GenericEditorBreadcrumbComponent\", {\r\n    selector: 'se-generic-editor-breadcrumb',\r\n    template: `\n        <div class=\"se-ge-breadcrumb\">\n            <ng-container *ngIf=\"showBreadcrumb()\">\n                <div\n                    *ngFor=\"let breadcrumbItem of getEditorsStack(); let i = index\"\n                    class=\"se-ge-breadcrumb__item\"\n                >\n                    <div class=\"se-ge-breadcrumb__data\">\n                        <span class=\"se-ge-breadcrumb__title\">\n                            {{ getComponentName(breadcrumbItem) | translate }}\n                        </span>\n                        <span class=\"se-ge-breadcrumb__info\">\n                            {{ breadcrumbItem.componentType | translate }}\n                        </span>\n                    </div>\n\n                    <div\n                        class=\"se-ge-breadcrumb__divider sap-icon--navigation-right-arrow\"\n                        *ngIf=\"i < getEditorsStack().length - 1\"\n                    ></div>\n                </div>\n            </ng-container>\n        </div>\n    `\r\n});\r\n/**\r\n * Component responsible for rendering a breadcrumb on top of the generic editor\r\n * when there is more than one editor opened on top of each other.\r\n * This will happen when editing nested components.\r\n *\r\n * @param editorStackId The string that identifies the stack of editors being edited together.\r\n */\r\nlet GenericEditorBreadcrumbComponent = class GenericEditorBreadcrumbComponent {\r\n    constructor(genericEditorStackService, ge) {\r\n        this.genericEditorStackService = genericEditorStackService;\r\n        this.ge = ge;\r\n    }\r\n    getEditorsStack() {\r\n        if (!this.editorsStack) {\r\n            this.editorsStack = this.genericEditorStackService.getEditorsStack(this.ge.editorStackId);\r\n        }\r\n        return this.editorsStack;\r\n    }\r\n    showBreadcrumb() {\r\n        return this.getEditorsStack() && this.getEditorsStack().length > 1;\r\n    }\r\n    getComponentName(breadcrumbItem) {\r\n        if (!breadcrumbItem.component.name) {\r\n            return 'se.breadcrumb.name.empty';\r\n        }\r\n        return breadcrumbItem.component.name;\r\n    }\r\n};\r\nGenericEditorBreadcrumbComponent = __decorate([\r\n    Component({\r\n        selector: 'se-generic-editor-breadcrumb',\r\n        template: `\n        <div class=\"se-ge-breadcrumb\">\n            <ng-container *ngIf=\"showBreadcrumb()\">\n                <div\n                    *ngFor=\"let breadcrumbItem of getEditorsStack(); let i = index\"\n                    class=\"se-ge-breadcrumb__item\"\n                >\n                    <div class=\"se-ge-breadcrumb__data\">\n                        <span class=\"se-ge-breadcrumb__title\">\n                            {{ getComponentName(breadcrumbItem) | translate }}\n                        </span>\n                        <span class=\"se-ge-breadcrumb__info\">\n                            {{ breadcrumbItem.componentType | translate }}\n                        </span>\n                    </div>\n\n                    <div\n                        class=\"se-ge-breadcrumb__divider sap-icon--navigation-right-arrow\"\n                        *ngIf=\"i < getEditorsStack().length - 1\"\n                    ></div>\n                </div>\n            </ng-container>\n        </div>\n    `\r\n    }),\r\n    __param(1, Inject(forwardRef(() => GenericEditorComponent))),\r\n    __metadata(\"design:paramtypes\", [GenericEditorStackService,\r\n        GenericEditorComponent])\r\n], GenericEditorBreadcrumbComponent);\r\nexport { GenericEditorBreadcrumbComponent };\r\n//# sourceMappingURL=GenericEditorBreadcrumbComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/GenericEditorComponent.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/services/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/types.ts"],"map":"{\"version\":3,\"file\":\"GenericEditorBreadcrumbComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/genericEditor/components/breadcrumb/GenericEditorBreadcrumbComponent.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAC9D,OAAO,EAAE,sBAAsB,EAAE,MAAM,8BAA8B,CAAC;AACtE,OAAO,EAAE,yBAAyB,EAAE,MAAM,gBAAgB,CAAC;AAG3D,OAAO,gCAAgC,CAAC;0FAS7B;IACP,QAAQ,EAAE,8BAA8B;IACxC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;KAuBT;CACJ;AAjCD;;;;;;GAMG;AA4BH,IAAa,gCAAgC,GAA7C,MAAa,gCAAgC;IAGzC,YACY,yBAAoD,EACF,EAA0B;QAD5E,8BAAyB,GAAzB,yBAAyB,CAA2B;QACF,OAAE,GAAF,EAAE,CAAwB;IACrF,CAAC;IAEJ,eAAe;QACX,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAC9D,IAAI,CAAC,EAAE,CAAC,aAAa,CACxB,CAAC;SACL;QAED,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;IACvE,CAAC;IAED,gBAAgB,CAAC,cAAiC;QAC9C,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,EAAE;YAChC,OAAO,0BAA0B,CAAC;SACrC;QAED,OAAO,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC;IACzC,CAAC;CACJ,CAAA;AA7BY,gCAAgC;IA3B5C,SAAS,CAAC;QACP,QAAQ,EAAE,8BAA8B;QACxC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;KAuBT;KACJ,CAAC;IAMO,WAAA,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,sBAAsB,CAAC,CAAC,CAAA;qCADd,yBAAyB;QACE,sBAAsB;GAL/E,gCAAgC,CA6B5C;SA7BY,gCAAgC\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/components/breadcrumb/GenericEditorBreadcrumbComponent.d.ts","writeByteOrderMark":false,"text":"import { GenericEditorComponent } from '../../GenericEditorComponent';\r\nimport { GenericEditorStackService } from '../../services';\r\nimport { GenericEditorInfo } from '../../types';\r\nimport './genericEditorBreadcrumb.scss';\r\n/**\r\n * Component responsible for rendering a breadcrumb on top of the generic editor\r\n * when there is more than one editor opened on top of each other.\r\n * This will happen when editing nested components.\r\n *\r\n * @param editorStackId The string that identifies the stack of editors being edited together.\r\n */\r\nexport declare class GenericEditorBreadcrumbComponent {\r\n    private genericEditorStackService;\r\n    private ge;\r\n    private editorsStack;\r\n    constructor(genericEditorStackService: GenericEditorStackService, ge: GenericEditorComponent);\r\n    getEditorsStack(): GenericEditorInfo[];\r\n    showBreadcrumb(): boolean;\r\n    getComponentName(breadcrumbItem: GenericEditorInfo): any;\r\n}\r\n"}}
