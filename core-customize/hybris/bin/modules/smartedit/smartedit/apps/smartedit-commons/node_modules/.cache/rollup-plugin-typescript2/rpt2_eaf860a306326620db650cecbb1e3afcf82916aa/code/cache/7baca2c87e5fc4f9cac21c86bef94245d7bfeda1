{"code":"/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * The renderService is responsible for rendering and resizing component overlays, and re-rendering components and slots\r\n * from the storefront.\r\n */\r\nimport { EVENT_OUTER_FRAME_CLICKED } from '../../utils';\r\nexport class IRenderService {\r\n    constructor(yjQuery, systemEventService, notificationService, pageInfoService, perspectiveService, crossFrameEventService, windowUtils, modalService) {\r\n        this.yjQuery = yjQuery;\r\n        this.systemEventService = systemEventService;\r\n        this.notificationService = notificationService;\r\n        this.pageInfoService = pageInfoService;\r\n        this.perspectiveService = perspectiveService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.windowUtils = windowUtils;\r\n        this.modalService = modalService;\r\n        this.KEY_CODES = {\r\n            ESC: 27\r\n        };\r\n        this.HOTKEY_NOTIFICATION_CONFIGURATION = {\r\n            id: 'HOTKEY_NOTIFICATION_ID',\r\n            componentName: 'PerspectiveSelectorHotkeyNotificationComponent'\r\n        };\r\n        this._bindEvents();\r\n    }\r\n    /**\r\n     * Re-renders a slot in the page\r\n     */\r\n    renderSlots(_slotIds) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * Re-renders a component in the page.\r\n     *\r\n     * @param customContent The custom content to replace the component content with. If specified, the\r\n     * component content will be rendered with it, instead of the accelerator's. Optional.\r\n     *\r\n     * @returns Promise that will resolve on render success or reject if there's an error. When rejected,\r\n     * the promise returns an Object{message, stack}.\r\n     */\r\n    renderComponent(componentId, componentType) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * This method removes a component from a slot in the current page. Note that the component is only removed\r\n     * on the frontend; the operation does not propagate to the backend.\r\n     *\r\n     * @param componentId The ID of the component to remove.\r\n     *\r\n     * @returns Object wrapping the removed component.\r\n     */\r\n    renderRemoval(componentId, componentType, slotId) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * Re-renders all components in the page.\r\n     * this method first resets the HTML content all of components to the values saved by {@link /smartedit/injectables/DecoratorService.html#storePrecompiledComponent storePrecompiledComponent} at the last $compile time\r\n     * then requires a new compilation.\r\n     */\r\n    renderPage(isRerender) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * Toggles on/off the visibility of the page overlay (containing the decorators).\r\n     *\r\n     * @param isVisible Flag that indicates if the overlay must be displayed.\r\n     */\r\n    toggleOverlay(isVisible) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * This method updates the position of the decorators in the overlay. Normally, this method must be executed every\r\n     * time the original storefront content is updated to keep the decorators correctly positioned.\r\n     */\r\n    refreshOverlayDimensions() {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * Toggles the rendering to be blocked or not which determines whether the overlay should be rendered or not.\r\n     *\r\n     * @param isBlocked Flag that indicates if the rendering should be blocked or not.\r\n     */\r\n    blockRendering(isBlocked) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    /**\r\n     * This method returns a boolean that determines whether the rendering is blocked or not.\r\n     *\r\n     * @returns True if the rendering is blocked. Otherwise false.\r\n     */\r\n    isRenderingBlocked() {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    createComponent(element) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    destroyComponent(_component, _parent, oldAttributes) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    updateComponentSizeAndPosition(element, componentOverlayElem) {\r\n        'proxyFunction';\r\n        return null;\r\n    }\r\n    _getDocument() {\r\n        return document;\r\n    }\r\n    _bindEvents() {\r\n        this._getDocument().addEventListener('keyup', (event) => this._keyUpEventHandler(event));\r\n        this._getDocument().addEventListener('click', () => this._clickEvent());\r\n    }\r\n    _keyUpEventHandler(event) {\r\n        if (!this._areAllModalWindowsClosed()) {\r\n            return Promise.resolve();\r\n        }\r\n        return this._shouldEnableKeyPressEvent(event).then((enableKeyPressEvent) => {\r\n            if (enableKeyPressEvent) {\r\n                this._keyPressEvent();\r\n            }\r\n        });\r\n    }\r\n    _shouldEnableKeyPressEvent(event) {\r\n        return new Promise((resolve) => this.pageInfoService\r\n            .getPageUUID()\r\n            .then((pageUUID) => {\r\n            if (pageUUID) {\r\n                return this.perspectiveService\r\n                    .isHotkeyEnabledForActivePerspective()\r\n                    .then((isHotkeyEnabled) => resolve(event.which === this.KEY_CODES.ESC && isHotkeyEnabled));\r\n            }\r\n            return resolve(false);\r\n        })\r\n            .catch(() => resolve(false)));\r\n    }\r\n    _keyPressEvent() {\r\n        this.isRenderingBlocked().then((isBlocked) => {\r\n            if (!isBlocked) {\r\n                this.blockRendering(true);\r\n                this.renderPage(false);\r\n                this.notificationService.pushNotification(this.HOTKEY_NOTIFICATION_CONFIGURATION);\r\n                this.systemEventService.publishAsync('OVERLAY_DISABLED');\r\n            }\r\n            else {\r\n                this.blockRendering(false);\r\n                this.renderPage(true);\r\n                this.notificationService.removeNotification(this.HOTKEY_NOTIFICATION_CONFIGURATION.id);\r\n            }\r\n        });\r\n    }\r\n    _clickEvent() {\r\n        if (!this.windowUtils.isIframe()) {\r\n            this.crossFrameEventService.publish(EVENT_OUTER_FRAME_CLICKED);\r\n        }\r\n        return this.isRenderingBlocked().then((isBlocked) => {\r\n            if (isBlocked && !this.windowUtils.isIframe()) {\r\n                this.blockRendering(false);\r\n                this.renderPage(true);\r\n                return this.notificationService.removeNotification(this.HOTKEY_NOTIFICATION_CONFIGURATION.id);\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n    _areAllModalWindowsClosed() {\r\n        return !this.modalService.hasOpenModals();\r\n    }\r\n}\r\n//# sourceMappingURL=IRenderService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/WindowUtils.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/crossFrame/CrossFrameEventService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/modal/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/perspectives/IPerspectiveService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/SystemEventService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/INotificationService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/IPageInfoService.ts"],"map":"{\"version\":3,\"file\":\"IRenderService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/IRenderService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/interfaces/IRenderService.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\n/// <reference types=\"jquery\" />\r\n/// <reference types=\"eonasdan-bootstrap-datetimepicker\" />\r\nimport { WindowUtils } from '../../utils/WindowUtils';\r\nimport { CrossFrameEventService } from '../crossFrame/CrossFrameEventService';\r\nimport { IModalService } from '../modal';\r\nimport { IPerspectiveService } from '../perspectives/IPerspectiveService';\r\nimport { SystemEventService } from '../SystemEventService';\r\nimport { INotificationService } from './INotificationService';\r\nimport { IPageInfoService } from './IPageInfoService';\r\nexport declare abstract class IRenderService {\r\n    protected yjQuery: JQueryStatic;\r\n    protected systemEventService: SystemEventService;\r\n    private readonly notificationService;\r\n    private readonly pageInfoService;\r\n    private readonly perspectiveService;\r\n    protected crossFrameEventService: CrossFrameEventService;\r\n    private readonly windowUtils;\r\n    private readonly modalService;\r\n    private readonly HOTKEY_NOTIFICATION_CONFIGURATION;\r\n    private readonly KEY_CODES;\r\n    constructor(yjQuery: JQueryStatic, systemEventService: SystemEventService, notificationService: INotificationService, pageInfoService: IPageInfoService, perspectiveService: IPerspectiveService, crossFrameEventService: CrossFrameEventService, windowUtils: WindowUtils, modalService: IModalService);\r\n    /**\r\n     * Re-renders a slot in the page\r\n     */\r\n    renderSlots(_slotIds: string[] | string): Promise<any>;\r\n    /**\r\n     * Re-renders a component in the page.\r\n     *\r\n     * @param customContent The custom content to replace the component content with. If specified, the\r\n     * component content will be rendered with it, instead of the accelerator's. Optional.\r\n     *\r\n     * @returns Promise that will resolve on render success or reject if there's an error. When rejected,\r\n     * the promise returns an Object{message, stack}.\r\n     */\r\n    renderComponent(componentId: string, componentType: string): Promise<string | boolean>;\r\n    /**\r\n     * This method removes a component from a slot in the current page. Note that the component is only removed\r\n     * on the frontend; the operation does not propagate to the backend.\r\n     *\r\n     * @param componentId The ID of the component to remove.\r\n     *\r\n     * @returns Object wrapping the removed component.\r\n     */\r\n    renderRemoval(componentId: string, componentType: string, slotId: string): JQuery;\r\n    /**\r\n     * Re-renders all components in the page.\r\n     * this method first resets the HTML content all of components to the values saved by {@link /smartedit/injectables/DecoratorService.html#storePrecompiledComponent storePrecompiledComponent} at the last $compile time\r\n     * then requires a new compilation.\r\n     */\r\n    renderPage(isRerender: boolean): void;\r\n    /**\r\n     * Toggles on/off the visibility of the page overlay (containing the decorators).\r\n     *\r\n     * @param isVisible Flag that indicates if the overlay must be displayed.\r\n     */\r\n    toggleOverlay(isVisible: boolean): void;\r\n    /**\r\n     * This method updates the position of the decorators in the overlay. Normally, this method must be executed every\r\n     * time the original storefront content is updated to keep the decorators correctly positioned.\r\n     */\r\n    refreshOverlayDimensions(): void;\r\n    /**\r\n     * Toggles the rendering to be blocked or not which determines whether the overlay should be rendered or not.\r\n     *\r\n     * @param isBlocked Flag that indicates if the rendering should be blocked or not.\r\n     */\r\n    blockRendering(isBlocked: boolean): void;\r\n    /**\r\n     * This method returns a boolean that determines whether the rendering is blocked or not.\r\n     *\r\n     * @returns True if the rendering is blocked. Otherwise false.\r\n     */\r\n    isRenderingBlocked(): Promise<boolean>;\r\n    createComponent(element: HTMLElement): void;\r\n    destroyComponent(_component: HTMLElement, _parent?: HTMLElement, oldAttributes?: any): void;\r\n    updateComponentSizeAndPosition(element: HTMLElement, componentOverlayElem?: HTMLElement): void;\r\n    protected _getDocument(): Document;\r\n    private _bindEvents;\r\n    private _keyUpEventHandler;\r\n    private _shouldEnableKeyPressEvent;\r\n    private _keyPressEvent;\r\n    private _clickEvent;\r\n    private _areAllModalWindowsClosed;\r\n}\r\n"}}
