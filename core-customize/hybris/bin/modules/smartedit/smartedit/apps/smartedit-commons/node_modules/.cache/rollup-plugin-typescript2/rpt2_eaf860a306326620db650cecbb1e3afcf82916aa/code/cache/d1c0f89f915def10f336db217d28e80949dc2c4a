{"code":"var /* @ngInject */ GenericEditorStackService_1;\r\nimport { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { LogService } from '@smart/utils';\r\nimport * as lodash from 'lodash';\r\nimport { SeDowngradeService } from '../../../di/SeDowngradeService';\r\nimport { SystemEventService } from '../../../services/SystemEventService';\r\nlet /* @ngInject */ GenericEditorStackService = /* @ngInject */ GenericEditorStackService_1 = class /* @ngInject */ GenericEditorStackService {\r\n    constructor(systemEventService, logService) {\r\n        this.systemEventService = systemEventService;\r\n        this.logService = logService;\r\n        this._editorsStacks = {};\r\n        this.systemEventService.subscribe(/* @ngInject */ GenericEditorStackService_1.EDITOR_PUSH_TO_STACK_EVENT, this.pushEditorEventHandler.bind(this));\r\n        this.systemEventService.subscribe(/* @ngInject */ GenericEditorStackService_1.EDITOR_POP_FROM_STACK_EVENT, this.popEditorEventHandler.bind(this));\r\n    }\r\n    // --------------------------------------------------------------------------------------\r\n    // API\r\n    // --------------------------------------------------------------------------------------\r\n    isAnyGenericEditorOpened() {\r\n        return lodash.size(this._editorsStacks) >= 1;\r\n    }\r\n    areMultipleGenericEditorsOpened() {\r\n        return (lodash.size(this._editorsStacks) > 1 ||\r\n            lodash.some(this._editorsStacks, (stack) => stack.length > 1));\r\n    }\r\n    getEditorsStack(editorStackId) {\r\n        return this._editorsStacks[editorStackId] || null;\r\n    }\r\n    isTopEditorInStack(editorStackId, editorId) {\r\n        let result = false;\r\n        const stack = this._editorsStacks[editorStackId];\r\n        if (stack) {\r\n            const topEditor = stack[stack.length - 1];\r\n            result = topEditor && topEditor.editorId === editorId;\r\n        }\r\n        return result;\r\n    }\r\n    // --------------------------------------------------------------------------------------\r\n    // Helper Methods\r\n    // --------------------------------------------------------------------------------------\r\n    pushEditorEventHandler(eventId, editorToPushInfo) {\r\n        this.validateId(editorToPushInfo);\r\n        const stackId = editorToPushInfo.editorStackId;\r\n        if (!this._editorsStacks[stackId]) {\r\n            this._editorsStacks[stackId] = [];\r\n        }\r\n        this._editorsStacks[stackId].push({\r\n            component: editorToPushInfo.component,\r\n            componentType: editorToPushInfo.componentType,\r\n            editorId: editorToPushInfo.editorId\r\n        });\r\n    }\r\n    popEditorEventHandler(eventId, editorToPopInfo) {\r\n        this.validateId(editorToPopInfo);\r\n        const stackId = editorToPopInfo.editorStackId;\r\n        const stack = this._editorsStacks[stackId];\r\n        if (!stack) {\r\n            this.logService.warn('genericEditorStackService - Stack of editors not found. Cannot pop editor.');\r\n            return;\r\n        }\r\n        stack.pop();\r\n        if (stack.length === 0) {\r\n            delete this._editorsStacks[stackId];\r\n        }\r\n    }\r\n    validateId(editorInfo) {\r\n        if (!editorInfo.editorStackId) {\r\n            throw new Error('genericEditorStackService - Must provide a stack id.');\r\n        }\r\n    }\r\n};\r\n/* @ngInject */ GenericEditorStackService.EDITOR_PUSH_TO_STACK_EVENT = 'EDITOR_PUSH_TO_STACK_EVENT';\r\n/* @ngInject */ GenericEditorStackService.EDITOR_POP_FROM_STACK_EVENT = 'EDITOR_POP_FROM_STACK_EVENT';\r\n/* @ngInject */ GenericEditorStackService = /* @ngInject */ GenericEditorStackService_1 = __decorate([\r\n    SeDowngradeService(),\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [SystemEventService, LogService])\r\n], /* @ngInject */ GenericEditorStackService);\r\nexport { /* @ngInject */ GenericEditorStackService };\r\n//# sourceMappingURL=GenericEditorStackService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/SeDowngradeService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/SystemEventService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/types.ts"],"map":"{\"version\":3,\"file\":\"GenericEditorStackService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/genericEditor/services/GenericEditorStackService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/services/GenericEditorStackService.d.ts","writeByteOrderMark":false,"text":"import { LogService } from '@smart/utils';\r\nimport { SystemEventService } from '../../../services/SystemEventService';\r\nimport { GenericEditorInfo } from '../types';\r\nexport declare class GenericEditorStackService {\r\n    private systemEventService;\r\n    private logService;\r\n    static EDITOR_PUSH_TO_STACK_EVENT: string;\r\n    static EDITOR_POP_FROM_STACK_EVENT: string;\r\n    private _editorsStacks;\r\n    constructor(systemEventService: SystemEventService, logService: LogService);\r\n    isAnyGenericEditorOpened(): boolean;\r\n    areMultipleGenericEditorsOpened(): boolean;\r\n    getEditorsStack(editorStackId: string): GenericEditorInfo[];\r\n    isTopEditorInStack(editorStackId: string, editorId: string): boolean;\r\n    private pushEditorEventHandler;\r\n    private popEditorEventHandler;\r\n    private validateId;\r\n}\r\n"}}
