{"code":"import { StorageNamespaceConverter } from './StorageNamespaceConverter';\r\n/**\r\n * @internal\r\n * @ignore\r\n */\r\nexport class NamespacedStorageManager {\r\n    constructor(storageManager, namespace) {\r\n        this.storageManager = storageManager;\r\n        this.namespace = namespace;\r\n    }\r\n    getStorage(storageConfiguration) {\r\n        storageConfiguration.storageId = this.getNamespaceStorageId(storageConfiguration.storageId);\r\n        return this.storageManager.getStorage(storageConfiguration);\r\n    }\r\n    deleteStorage(storageId, force = false) {\r\n        return this.storageManager.deleteStorage(this.getNamespaceStorageId(storageId), force);\r\n    }\r\n    deleteExpiredStorages(force = false) {\r\n        return this.storageManager.deleteExpiredStorages(force);\r\n    }\r\n    hasStorage(storageId) {\r\n        return this.storageManager.hasStorage(this.getNamespaceStorageId(storageId));\r\n    }\r\n    registerStorageController(controller) {\r\n        return this.storageManager.registerStorageController(controller);\r\n    }\r\n    getNamespaceStorageId(storageId) {\r\n        return StorageNamespaceConverter.getNamespacedStorageId(this.namespace, storageId);\r\n    }\r\n    getStorageManager() {\r\n        return this.storageManager;\r\n    }\r\n}\r\n//# sourceMappingURL=NamespacedStorageManager.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/storage/IStorage.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/storage/IStorageController.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/storage/IStorageManager.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/storage/IStorageOptions.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/storage/manager/StorageNamespaceConverter.ts"],"map":"{\"version\":3,\"file\":\"NamespacedStorageManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/services/storage/manager/NamespacedStorageManager.ts\"],\"names\":[],\"mappings\":\"AAOA,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AAExE;;;GAGG;AACH,MAAM,OAAO,wBAAwB;IACjC,YACqB,cAA+B,EAC/B,SAAiB;QADjB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,cAAS,GAAT,SAAS,CAAQ;IACnC,CAAC;IAEJ,UAAU,CAAC,oBAAqC;QAC5C,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAC5F,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;IAChE,CAAC;IAED,aAAa,CAAC,SAAiB,EAAE,KAAK,GAAG,KAAK;QAC1C,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;IAC3F,CAAC;IAED,qBAAqB,CAAC,KAAK,GAAG,KAAK;QAC/B,OAAO,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,UAAU,CAAC,SAAiB;QACxB,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,yBAAyB,CAAC,UAA8B;QACpD,OAAO,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC;IACrE,CAAC;IAED,qBAAqB,CAAC,SAAiB;QACnC,OAAO,yBAAyB,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IACvF,CAAC;IAED,iBAAiB;QACb,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;CACJ\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/storage/manager/NamespacedStorageManager.d.ts","writeByteOrderMark":false,"text":"import { IStorage } from '../IStorage';\r\nimport { IStorageController } from '../IStorageController';\r\nimport { IStorageManager } from '../IStorageManager';\r\nimport { IStorageOptions } from '../IStorageOptions';\r\n/**\r\n * @internal\r\n * @ignore\r\n */\r\nexport declare class NamespacedStorageManager implements IStorageManager {\r\n    private readonly storageManager;\r\n    private readonly namespace;\r\n    constructor(storageManager: IStorageManager, namespace: string);\r\n    getStorage(storageConfiguration: IStorageOptions): Promise<IStorage<any, any>>;\r\n    deleteStorage(storageId: string, force?: boolean): Promise<boolean>;\r\n    deleteExpiredStorages(force?: boolean): Promise<boolean>;\r\n    hasStorage(storageId: string): boolean;\r\n    registerStorageController(controller: IStorageController): void;\r\n    getNamespaceStorageId(storageId: string): string;\r\n    getStorageManager(): IStorageManager;\r\n}\r\n"}}
