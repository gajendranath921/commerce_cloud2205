{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n/**\r\n * Used to listen to ElementRef resize event.\r\n *\r\n * It emits an event once the {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver ResizeObserver}\r\n * detects the change.\r\n *\r\n * ### Example\r\n *\r\n *      <my-custom-component seResizeObserver (onResize)=\"handleResize()\"></my-custom-component>\r\n */\r\nlet ResizeObserverDirective = class ResizeObserverDirective {\r\n    constructor(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.onResize = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this.startWatching();\r\n    }\r\n    ngOnDestroy() {\r\n        this.observer.disconnect();\r\n    }\r\n    startWatching() {\r\n        this.observer = new ResizeObserver((entries) => this.internalOnResize(entries));\r\n        this.observer.observe(this.elementRef.nativeElement);\r\n    }\r\n    internalOnResize(entries) {\r\n        this.onResize.emit();\r\n    }\r\n};\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], ResizeObserverDirective.prototype, \"onResize\", void 0);\r\nResizeObserverDirective = __decorate([\r\n    Directive({\r\n        selector: '[seResizeObserver]'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [ElementRef])\r\n], ResizeObserverDirective);\r\nexport { ResizeObserverDirective };\r\n//# sourceMappingURL=ResizeObserverDirective.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/resize-observer-polyfill@1.5.1/node_modules/resize-observer-polyfill/src/index.d.ts"],"map":"{\"version\":3,\"file\":\"ResizeObserverDirective.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/directives/resizeObserver/ResizeObserverDirective.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAqB,MAAM,EAAE,MAAM,eAAe,CAAC;AAC/F,OAAO,cAAc,MAAM,0BAA0B,CAAC;AAEtD;;;;;;;;;GASG;AAIH,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAKhC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJhC,aAAQ,GAAuB,IAAI,YAAY,EAAE,CAAC;IAIf,CAAC;IAE9C,QAAQ;QACJ,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACP,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;IAC/B,CAAC;IAEO,aAAa;QACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,CAAC,OAA8B,EAAE,EAAE,CAClE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CACjC,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACzD,CAAC;IAEO,gBAAgB,CAAC,OAA8B;QACnD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;CACJ,CAAA;AAzBa;IAAT,MAAM,EAAE;8BAAW,YAAY;yDAA4B;AADnD,uBAAuB;IAHnC,SAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;KACjC,CAAC;qCAMkC,UAAU;GALjC,uBAAuB,CA0BnC;SA1BY,uBAAuB\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/directives/resizeObserver/ResizeObserverDirective.d.ts","writeByteOrderMark":false,"text":"import { ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\n/**\r\n * Used to listen to ElementRef resize event.\r\n *\r\n * It emits an event once the {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver ResizeObserver}\r\n * detects the change.\r\n *\r\n * ### Example\r\n *\r\n *      <my-custom-component seResizeObserver (onResize)=\"handleResize()\"></my-custom-component>\r\n */\r\nexport declare class ResizeObserverDirective implements OnInit, OnDestroy {\r\n    private elementRef;\r\n    onResize: EventEmitter<void>;\r\n    private observer;\r\n    constructor(elementRef: ElementRef);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    private startWatching;\r\n    private internalOnResize;\r\n}\r\n"}}
