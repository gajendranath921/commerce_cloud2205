{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as lo from 'lodash';\r\nimport { DropdownPopulatorInterface, LanguageService, SeDowngradeService } from 'smarteditcommons';\r\n/**\r\n * Implementation of smarteditcommons' DropdownPopulatorInterface for language dropdown in\r\n * experience selector to populate the list of languages by making a REST call to retrieve the list of langauges for a given site.\r\n *\r\n */\r\nlet /* @ngInject */ PreviewDatalanguageDropdownPopulator = class /* @ngInject */ PreviewDatalanguageDropdownPopulator extends DropdownPopulatorInterface {\r\n    constructor(languageService) {\r\n        super(lo, languageService);\r\n    }\r\n    /**\r\n     * Returns a promise resolving to a list of languages for a given Site ID (based on the selected catalog). The site Id is generated from the\r\n     * selected catalog in the 'catalog' dropdown.\r\n     */\r\n    fetchAll(payload) {\r\n        if (payload.model[payload.field.dependsOn]) {\r\n            const siteUid = payload.model[payload.field.dependsOn].split('|')[0];\r\n            return this.getLanguageDropdownChoices(siteUid, payload.search);\r\n        }\r\n        return Promise.resolve([]);\r\n    }\r\n    /** @internal */\r\n    getLanguageDropdownChoices(siteUid, search) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const languages = yield this.languageService.getLanguagesForSite(siteUid);\r\n                let languagesDropdownChoices = languages.map(({ isocode, nativeName }) => {\r\n                    const dropdownChoices = {};\r\n                    dropdownChoices.id = isocode;\r\n                    dropdownChoices.label = nativeName;\r\n                    return dropdownChoices;\r\n                });\r\n                if (search) {\r\n                    languagesDropdownChoices = languagesDropdownChoices.filter((language) => language.label.toUpperCase().indexOf(search.toUpperCase()) > -1);\r\n                }\r\n                return languagesDropdownChoices;\r\n            }\r\n            catch (e) {\r\n                throw new Error(e);\r\n            }\r\n        });\r\n    }\r\n};\r\n/* @ngInject */ PreviewDatalanguageDropdownPopulator = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [LanguageService])\r\n], /* @ngInject */ PreviewDatalanguageDropdownPopulator);\r\nexport { /* @ngInject */ PreviewDatalanguageDropdownPopulator };\r\n//# sourceMappingURL=PreviewDatalanguageDropdownPopulator.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"PreviewDatalanguageDropdownPopulator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/PreviewDatalanguageDropdownPopulator.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,KAAK,EAAE,MAAM,QAAQ,CAAC;AAC7B,OAAO,EACH,0BAA0B,EAG1B,eAAe,EACf,kBAAkB,EACrB,MAAM,kBAAkB,CAAC;AAE1B;;;;GAIG;AAEH,2DAAA,0DAAkD,SAAQ,0BAA0B;IAChF,YAAY,eAAgC;QACxC,KAAK,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;IAC/B,CAAC;IAED;;;OAGG;IAEI,QAAQ,CAAC,OAAiC;QAC7C,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACxC,MAAM,OAAO,GAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACjF,OAAO,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;SACnE;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,gBAAgB;IACF,0BAA0B,CACpC,OAAe,EACf,MAAc;;YAEd,IAAI;gBACA,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;gBAC1E,IAAI,wBAAwB,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE,EAAE;oBACrE,MAAM,eAAe,GAAG,EAAyB,CAAC;oBAClD,eAAe,CAAC,EAAE,GAAG,OAAO,CAAC;oBAC7B,eAAe,CAAC,KAAK,GAAG,UAAU,CAAC;oBACnC,OAAO,eAAe,CAAC;gBAC3B,CAAC,CAAC,CAAC;gBAEH,IAAI,MAAM,EAAE;oBACR,wBAAwB,GAAG,wBAAwB,CAAC,MAAM,CACtD,CAAC,QAAQ,EAAE,EAAE,CACR,QAAQ,CAAC,KAAgB,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAClF,CAAC;iBACL;gBACD,OAAO,wBAAwB,CAAC;aACnC;YAAC,OAAO,CAAC,EAAE;gBACR,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;aACtB;QACL,CAAC;KAAA;CACJ,CAAA;AA3CD;IADC,kBAAkB,EAAE;qCAEY,eAAe;wDA0C/C\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/PreviewDatalanguageDropdownPopulator.d.ts","writeByteOrderMark":false,"text":"import { DropdownPopulatorInterface, DropdownPopulatorPayload, GenericEditorOption, LanguageService } from 'smarteditcommons';\r\n/**\r\n * Implementation of smarteditcommons' DropdownPopulatorInterface for language dropdown in\r\n * experience selector to populate the list of languages by making a REST call to retrieve the list of langauges for a given site.\r\n *\r\n */\r\nexport declare class PreviewDatalanguageDropdownPopulator extends DropdownPopulatorInterface {\r\n    constructor(languageService: LanguageService);\r\n    /**\r\n     * Returns a promise resolving to a list of languages for a given Site ID (based on the selected catalog). The site Id is generated from the\r\n     * selected catalog in the 'catalog' dropdown.\r\n     */\r\n    fetchAll(payload: DropdownPopulatorPayload): Promise<GenericEditorOption[]>;\r\n    /** @internal */\r\n    private getLanguageDropdownChoices;\r\n}\r\n"}}
