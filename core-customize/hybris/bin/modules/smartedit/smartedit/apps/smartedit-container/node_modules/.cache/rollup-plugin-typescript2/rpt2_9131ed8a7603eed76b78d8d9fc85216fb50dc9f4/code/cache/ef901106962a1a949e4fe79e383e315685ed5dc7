{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as lodash from 'lodash';\r\nimport { catalogEvictionTag, pageChangeEvictionTag, rarelyChangingContent, Cached, ContentCatalogRestService, CONTEXT_CATALOG, CONTEXT_CATALOG_VERSION, CONTEXT_SITE_ID, GatewayProxied, ICatalogService, ISharedDataService, IUrlService, LogService, ProductCatalogRestService, SeDowngradeService, IStorageService, EXPERIENCE_STORAGE_KEY } from 'smarteditcommons';\r\nimport { SiteService } from './SiteService';\r\n/** @internal */\r\nlet /* @ngInject */ CatalogService = class /* @ngInject */ CatalogService extends ICatalogService {\r\n    constructor(logService, sharedDataService, siteService, urlService, contentCatalogRestService, productCatalogRestService, storageService) {\r\n        super();\r\n        this.logService = logService;\r\n        this.sharedDataService = sharedDataService;\r\n        this.siteService = siteService;\r\n        this.urlService = urlService;\r\n        this.contentCatalogRestService = contentCatalogRestService;\r\n        this.productCatalogRestService = productCatalogRestService;\r\n        this.storageService = storageService;\r\n        this.SELECTED_SITE_COOKIE_NAME = 'seselectedsite';\r\n    }\r\n    getContentCatalogsForSite(siteUID) {\r\n        return this.contentCatalogRestService\r\n            .get({\r\n            siteUID\r\n        })\r\n            .then((catalogs) => catalogs.catalogs);\r\n    }\r\n    getCatalogByVersion(siteUID, catalogVersionName) {\r\n        return this.getContentCatalogsForSite(siteUID).then((catalogs) => catalogs.filter((catalog) => catalog.versions.some((currentCatalogVersion) => currentCatalogVersion.version === catalogVersionName)));\r\n    }\r\n    isContentCatalogVersionNonActive(_uriContext) {\r\n        return this._getContext(_uriContext).then((uriContext) => this.getContentCatalogsForSite(uriContext[CONTEXT_SITE_ID]).then((catalogs) => {\r\n            const currentCatalog = catalogs.find((catalog) => catalog.catalogId === uriContext[CONTEXT_CATALOG]);\r\n            const currentCatalogVersion = currentCatalog\r\n                ? currentCatalog.versions.find((catalogVersion) => catalogVersion.version === uriContext[CONTEXT_CATALOG_VERSION])\r\n                : null;\r\n            if (!currentCatalogVersion) {\r\n                throw new Error(`Invalid uriContext ${uriContext}, cannot find catalog version.`);\r\n            }\r\n            return !currentCatalogVersion.active;\r\n        }));\r\n    }\r\n    getContentCatalogActiveVersion(_uriContext) {\r\n        return this._getContext(_uriContext).then((uriContext) => this.getContentCatalogsForSite(uriContext[CONTEXT_SITE_ID]).then((catalogs) => {\r\n            const currentCatalog = catalogs.find((catalog) => catalog.catalogId === uriContext[CONTEXT_CATALOG]);\r\n            const activeCatalogVersion = currentCatalog\r\n                ? currentCatalog.versions.find((catalogVersion) => catalogVersion.active)\r\n                : null;\r\n            if (!activeCatalogVersion) {\r\n                throw new Error(`Invalid uriContext ${uriContext}, cannot find catalog version.`);\r\n            }\r\n            return activeCatalogVersion.version;\r\n        }));\r\n    }\r\n    getActiveContentCatalogVersionByCatalogId(contentCatalogId) {\r\n        return this._getContext().then((uriContext) => this.getContentCatalogsForSite(uriContext[CONTEXT_SITE_ID]).then((catalogs) => {\r\n            const currentCatalog = catalogs.find((catalog) => catalog.catalogId === contentCatalogId);\r\n            const currentCatalogVersion = currentCatalog\r\n                ? currentCatalog.versions.find((catalogVersion) => catalogVersion.active)\r\n                : null;\r\n            if (!currentCatalogVersion) {\r\n                throw new Error(`Invalid content catalog ${contentCatalogId}, cannot find any active catalog version.`);\r\n            }\r\n            return currentCatalogVersion.version;\r\n        }));\r\n    }\r\n    getContentCatalogVersion(_uriContext) {\r\n        return this._getContext(_uriContext).then((uriContext) => this.getContentCatalogsForSite(uriContext[CONTEXT_SITE_ID]).then((catalogs) => {\r\n            const catalog = catalogs.find((c) => c.catalogId === uriContext[CONTEXT_CATALOG]);\r\n            if (!catalog) {\r\n                throw new Error('no catalog ' +\r\n                    uriContext[CONTEXT_CATALOG] +\r\n                    ' found for site ' +\r\n                    uriContext[CONTEXT_SITE_ID]);\r\n            }\r\n            const catalogVersion = catalog.versions.find((version) => version.version === uriContext[CONTEXT_CATALOG_VERSION]);\r\n            if (!catalogVersion) {\r\n                throw new Error(`no catalogVersion ${uriContext[CONTEXT_CATALOG_VERSION]} for catalog ${uriContext[CONTEXT_CATALOG]} and site ${uriContext[CONTEXT_SITE_ID]}`);\r\n            }\r\n            catalogVersion.catalogName = catalog.name;\r\n            catalogVersion.catalogId = catalog.catalogId;\r\n            return catalogVersion;\r\n        }));\r\n    }\r\n    getCurrentSiteID() {\r\n        return this.storageService.getValueFromLocalStorage(this.SELECTED_SITE_COOKIE_NAME, false);\r\n    }\r\n    /**\r\n     * Finds the ID of the default site configured for the provided content catalog.\r\n     * @param contentCatalogId The UID of content catalog for which to retrieve its default site ID.\r\n     * @returns The ID of the default site found.\r\n     */\r\n    getDefaultSiteForContentCatalog(contentCatalogId) {\r\n        return this.siteService.getSites().then((sites) => {\r\n            const defaultSitesForCatalog = sites.filter((site) => {\r\n                // ContentCatalogs in the site object are sorted. The last one is considered\r\n                // the default one for a given site.\r\n                const siteDefaultContentCatalog = lodash.last(site.contentCatalogs);\r\n                return siteDefaultContentCatalog && siteDefaultContentCatalog === contentCatalogId;\r\n            });\r\n            if (defaultSitesForCatalog.length === 0) {\r\n                this.logService.warn(`[catalogService] - No default site found for content catalog ${contentCatalogId}`);\r\n            }\r\n            else if (defaultSitesForCatalog.length > 1) {\r\n                this.logService.warn(`[catalogService] - Many default sites found for content catalog ${contentCatalogId}`);\r\n            }\r\n            return defaultSitesForCatalog[0];\r\n        });\r\n    }\r\n    getCatalogVersionByUuid(catalogVersionUuid, siteId) {\r\n        return this.getAllContentCatalogsGroupedById().then((contentCatalogsGrouped) => {\r\n            const catalogs = lodash.reduce(contentCatalogsGrouped, (allCatalogs, siteCatalogs) => allCatalogs.concat(siteCatalogs), []);\r\n            const catalogVersionFound = lodash\r\n                .flatten(catalogs.map((catalog) => lodash.cloneDeep(catalog.versions).map((version) => {\r\n                version.catalogName = catalog.name;\r\n                version.catalogId = catalog.catalogId;\r\n                return version;\r\n            })))\r\n                .filter((version) => catalogVersionUuid === version.uuid &&\r\n                (!siteId || siteId === version.siteDescriptor.uid))[0];\r\n            if (!catalogVersionFound) {\r\n                const errorMessage = 'Cannot find catalog version with UUID ' +\r\n                    catalogVersionUuid +\r\n                    (siteId ? ' in site ' + siteId : '');\r\n                throw new Error(errorMessage);\r\n            }\r\n            return this.getCurrentSiteID().then((defaultSiteID) => {\r\n                catalogVersionFound.siteId = defaultSiteID;\r\n                return catalogVersionFound;\r\n            });\r\n        });\r\n    }\r\n    getAllContentCatalogsGroupedById() {\r\n        return this.siteService.getSites().then((sites) => {\r\n            const promisesToResolve = sites.map((site) => this.getContentCatalogsForSite(site.uid).then((catalogs) => {\r\n                catalogs.forEach((catalog) => {\r\n                    catalog.versions = catalog.versions.map((catalogVersion) => {\r\n                        catalogVersion.siteDescriptor = site;\r\n                        return catalogVersion;\r\n                    });\r\n                });\r\n                return catalogs;\r\n            }));\r\n            return Promise.all(promisesToResolve);\r\n        });\r\n    }\r\n    getProductCatalogsBySiteKey(siteUIDKey) {\r\n        return this._getContext().then((uriContext) => this.getProductCatalogsForSite(uriContext[siteUIDKey]));\r\n    }\r\n    /* =====================================================================================================================\r\n      * `getProductCatalogsBySite` is to get product catalogs by site value\r\n      * `siteUIDValue` - is the site value rather than site key\r\n      * if you want to get product catalogs by site key, please refer to function `getProductCatalogsBySiteKey`\r\n       =====================================================================================================================\r\n    */\r\n    // eslint-disable-next-line @typescript-eslint/member-ordering\r\n    getProductCatalogsForSite(siteUIDValue) {\r\n        return this.productCatalogRestService\r\n            .get({\r\n            siteUID: siteUIDValue\r\n        })\r\n            .then((catalogs) => catalogs.catalogs);\r\n    }\r\n    getActiveProductCatalogVersionByCatalogId(productCatalogId) {\r\n        return this.getProductCatalogsBySiteKey(CONTEXT_SITE_ID).then((catalogs) => {\r\n            const currentCatalog = catalogs.find((catalog) => catalog.catalogId === productCatalogId);\r\n            const currentCatalogVersion = currentCatalog\r\n                ? currentCatalog.versions.find((catalogVersion) => catalogVersion.active)\r\n                : null;\r\n            if (!currentCatalogVersion) {\r\n                throw new Error(`Invalid product catalog ${productCatalogId}, cannot find any active catalog version.`);\r\n            }\r\n            return currentCatalogVersion.version;\r\n        });\r\n    }\r\n    // =====================================================================================================================\r\n    //  Helper Methods\r\n    // =====================================================================================================================\r\n    getCatalogVersionUUid(_uriContext) {\r\n        return this.getContentCatalogVersion(_uriContext).then((catalogVersion) => catalogVersion.uuid);\r\n    }\r\n    retrieveUriContext(_uriContext) {\r\n        return this._getContext(_uriContext);\r\n    }\r\n    returnActiveCatalogVersionUIDs(catalogs) {\r\n        return catalogs.reduce((accumulator, catalog) => {\r\n            accumulator.push(catalog.versions.find((version) => version.active).uuid);\r\n            return accumulator;\r\n        }, []);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/member-ordering\r\n    isCurrentCatalogMultiCountry() {\r\n        return this.sharedDataService.get(EXPERIENCE_STORAGE_KEY).then((experience) => {\r\n            if (experience && experience.siteDescriptor && experience.catalogDescriptor) {\r\n                const siteId = experience.siteDescriptor.uid;\r\n                const catalogId = experience.catalogDescriptor.catalogId;\r\n                return this.getContentCatalogsForSite(siteId).then((catalogs) => {\r\n                    const catalog = catalogs.find((obj) => obj.catalogId === catalogId);\r\n                    return Promise.resolve(catalog && catalog.parents && catalog.parents.length ? true : false);\r\n                });\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    _getContext(_uriContext) {\r\n        // TODO: once refactored by Nick, use definition of experience\r\n        return _uriContext\r\n            ? Promise.resolve(_uriContext)\r\n            : this.sharedDataService.get(EXPERIENCE_STORAGE_KEY).then((experience) => {\r\n                if (!experience) {\r\n                    throw new Error('catalogService was not provided with a uriContext and could not retrive an experience from sharedDataService');\r\n                }\r\n                return this.urlService.buildUriContext(experience.siteDescriptor.uid, experience.catalogDescriptor.catalogId, experience.catalogDescriptor.catalogVersion);\r\n            });\r\n    }\r\n};\r\n__decorate([\r\n    Cached({ actions: [rarelyChangingContent], tags: [catalogEvictionTag] }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], /* @ngInject */ CatalogService.prototype, \"getProductCatalogsForSite\", null);\r\n__decorate([\r\n    Cached({ actions: [rarelyChangingContent], tags: [pageChangeEvictionTag] }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], /* @ngInject */ CatalogService.prototype, \"isCurrentCatalogMultiCountry\", null);\r\n/* @ngInject */ CatalogService = __decorate([\r\n    SeDowngradeService(ICatalogService),\r\n    GatewayProxied(),\r\n    __metadata(\"design:paramtypes\", [LogService,\r\n        ISharedDataService,\r\n        SiteService,\r\n        IUrlService,\r\n        ContentCatalogRestService,\r\n        ProductCatalogRestService,\r\n        IStorageService])\r\n], /* @ngInject */ CatalogService);\r\nexport { /* @ngInject */ CatalogService };\r\n//# sourceMappingURL=CatalogServiceOuter.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/SiteService.ts"],"map":"{\"version\":3,\"file\":\"CatalogServiceOuter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/CatalogServiceOuter.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/CatalogServiceOuter.d.ts","writeByteOrderMark":false,"text":"import { ContentCatalogRestService, IBaseCatalog, IBaseCatalogVersion, ICatalog, ICatalogService, ICatalogVersion, ISharedDataService, ISite, IUriContext, IUrlService, LogService, ProductCatalogRestService, IStorageService } from 'smarteditcommons';\r\nimport { SiteService } from './SiteService';\r\n/** @internal */\r\nexport declare class CatalogService extends ICatalogService {\r\n    private logService;\r\n    private sharedDataService;\r\n    private siteService;\r\n    private urlService;\r\n    private contentCatalogRestService;\r\n    private productCatalogRestService;\r\n    private storageService;\r\n    private SELECTED_SITE_COOKIE_NAME;\r\n    constructor(logService: LogService, sharedDataService: ISharedDataService, siteService: SiteService, urlService: IUrlService, contentCatalogRestService: ContentCatalogRestService, productCatalogRestService: ProductCatalogRestService, storageService: IStorageService);\r\n    getContentCatalogsForSite(siteUID: string): Promise<IBaseCatalog[]>;\r\n    getCatalogByVersion(siteUID: string, catalogVersionName: string): Promise<IBaseCatalog[]>;\r\n    isContentCatalogVersionNonActive(_uriContext?: IUriContext): Promise<boolean>;\r\n    getContentCatalogActiveVersion(_uriContext?: IUriContext): Promise<string>;\r\n    getActiveContentCatalogVersionByCatalogId(contentCatalogId: string): Promise<string>;\r\n    getContentCatalogVersion(_uriContext?: IUriContext): Promise<IBaseCatalogVersion>;\r\n    getCurrentSiteID(): Promise<string>;\r\n    /**\r\n     * Finds the ID of the default site configured for the provided content catalog.\r\n     * @param contentCatalogId The UID of content catalog for which to retrieve its default site ID.\r\n     * @returns The ID of the default site found.\r\n     */\r\n    getDefaultSiteForContentCatalog(contentCatalogId: string): Promise<ISite>;\r\n    getCatalogVersionByUuid(catalogVersionUuid: string, siteId?: string): Promise<ICatalogVersion>;\r\n    getAllContentCatalogsGroupedById(): Promise<ICatalog[][]>;\r\n    getProductCatalogsBySiteKey(siteUIDKey: string): Promise<IBaseCatalog[]>;\r\n    getProductCatalogsForSite(siteUIDValue: string): Promise<IBaseCatalog[]>;\r\n    getActiveProductCatalogVersionByCatalogId(productCatalogId: string): Promise<string>;\r\n    getCatalogVersionUUid(_uriContext?: IUriContext): Promise<string>;\r\n    retrieveUriContext(_uriContext?: IUriContext): Promise<IUriContext>;\r\n    returnActiveCatalogVersionUIDs(catalogs: ICatalog[]): string[];\r\n    isCurrentCatalogMultiCountry(): Promise<boolean>;\r\n    private _getContext;\r\n}\r\n"}}
