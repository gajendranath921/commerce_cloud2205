{"code":"/** @internal */\r\nexport class WebStorage {\r\n    constructor(controller, storageConfiguration) {\r\n        this.controller = controller;\r\n        this.storageConfiguration = storageConfiguration;\r\n    }\r\n    static ERR_INVALID_QUERY_OBJECT(queryObjec, storageId) {\r\n        return new Error(`WebStorage exception for storage [${storageId}]. Invalid key [${queryObjec}]`);\r\n    }\r\n    clear() {\r\n        this.controller.saveStorageData({});\r\n        return Promise.resolve(true);\r\n    }\r\n    find(queryObject) {\r\n        if (queryObject === undefined) {\r\n            throw WebStorage.ERR_INVALID_QUERY_OBJECT(queryObject, this.storageConfiguration.storageId);\r\n        }\r\n        return this.get(queryObject).then((result) => [result]);\r\n    }\r\n    get(queryObject) {\r\n        return this.controller.getStorageData().then((data) => {\r\n            const key = this.getKeyFromQueryObj(queryObject);\r\n            return Promise.resolve(data[key]);\r\n        });\r\n    }\r\n    put(obj, queryObject) {\r\n        return this.controller.getStorageData().then((data) => {\r\n            data[this.getKeyFromQueryObj(queryObject)] = obj;\r\n            this.controller.saveStorageData(data);\r\n            return Promise.resolve(true);\r\n        });\r\n    }\r\n    remove(queryObject) {\r\n        if (queryObject === undefined) {\r\n            throw WebStorage.ERR_INVALID_QUERY_OBJECT(queryObject, this.storageConfiguration.storageId);\r\n        }\r\n        const getPromise = this.get(queryObject);\r\n        return this.controller.getStorageData().then((data) => {\r\n            delete data[this.getKeyFromQueryObj(queryObject)];\r\n            this.controller.saveStorageData(data);\r\n            return getPromise;\r\n        });\r\n    }\r\n    getLength() {\r\n        return this.controller\r\n            .getStorageData()\r\n            .then((data) => Promise.resolve(Object.keys(data).length));\r\n    }\r\n    dispose() {\r\n        return Promise.resolve(true);\r\n    }\r\n    entries() {\r\n        const entries = [];\r\n        return new Promise((resolve) => {\r\n            this.controller.getStorageData().then((data) => {\r\n                Object.keys(data).forEach((key) => {\r\n                    entries.push([JSON.parse(key), data[key]]);\r\n                });\r\n                resolve(entries);\r\n            });\r\n        });\r\n    }\r\n    getKeyFromQueryObj(queryObj) {\r\n        return JSON.stringify(queryObj);\r\n    }\r\n}\r\n//# sourceMappingURL=WebStorage.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/storage/controller/webstorage/WebStorageBridge.ts"],"map":"{\"version\":3,\"file\":\"WebStorage.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/services/storage/controller/webstorage/WebStorage.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/storage/controller/webstorage/WebStorage.d.ts","writeByteOrderMark":false,"text":"import { Cloneable, IStorage, IStorageOptions } from 'smarteditcommons';\r\nimport { WebStorageBridge } from './WebStorageBridge';\r\n/** @internal */\r\nexport declare class WebStorage<Q extends Cloneable, D extends Cloneable> implements IStorage<Q, D> {\r\n    private readonly controller;\r\n    private readonly storageConfiguration;\r\n    static ERR_INVALID_QUERY_OBJECT(queryObjec: any, storageId: string): Error;\r\n    constructor(controller: WebStorageBridge, storageConfiguration: IStorageOptions);\r\n    clear(): Promise<boolean>;\r\n    find(queryObject?: Q): Promise<D[]>;\r\n    get(queryObject?: Q): Promise<D>;\r\n    put(obj: D, queryObject?: Q): Promise<boolean>;\r\n    remove(queryObject?: Q): Promise<D>;\r\n    getLength(): Promise<number>;\r\n    dispose(): Promise<boolean>;\r\n    entries(): Promise<any[]>;\r\n    private getKeyFromQueryObj;\r\n}\r\n"}}
