{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport * as lo from 'lodash';\r\nimport { objectUtils, stringUtils, CONFIGURATION_URI, Errors, LogService, RestServiceFactory, SeDowngradeService } from 'smarteditcommons';\r\nimport { LoadConfigManagerService } from './bootstrap/LoadConfigManagerService';\r\n/** @internal */\r\nlet /* @ngInject */ ConfigurationService = class /* @ngInject */ ConfigurationService {\r\n    constructor(logService, loadConfigManagerService, restServiceFactory) {\r\n        this.logService = logService;\r\n        this.loadConfigManagerService = loadConfigManagerService;\r\n        this.restServiceFactory = restServiceFactory;\r\n        // Constants\r\n        this.ABSOLUTE_URI_NOT_APPROVED = 'URI_EXCEPTION';\r\n        this.ABSOLUTE_URI_REGEX = /(\\\"[A-Za-z]+:\\/|\\/\\/)/;\r\n        this.configuration = [];\r\n        this.editorCRUDService = this.restServiceFactory.get(CONFIGURATION_URI, 'key');\r\n    }\r\n    /*\r\n     * The Add Entry method adds an entry to the list of configurations.\r\n     *\r\n     */\r\n    addEntry() {\r\n        const item = { key: '', value: '', isNew: true, uuid: lo.uniqueId() };\r\n        this.configuration = [item, ...(this.configuration || [])];\r\n    }\r\n    /*\r\n     * The Remove Entry method deletes the specified entry from the list of configurations. The method does not delete the actual configuration, but just removes it from the array of configurations.\r\n     * The entry will be deleted when a user clicks the Submit button but if the entry is new we can are removing it from the configuration\r\n     *\r\n     * @param {Object} entry The object to be deleted\r\n     * @param {Object} configurationForm The form object which is an instance of {@link https://docs.angularjs.org/api/ng/type/form.FormController FormController}\r\n     * that provides methods to monitor and control the state of the form.\r\n     */\r\n    removeEntry(entry, configurationForm) {\r\n        if (entry.isNew) {\r\n            this.configuration = this.configuration.filter((confEntry) => !confEntry.isNew || confEntry.key !== entry.key);\r\n        }\r\n        else {\r\n            configurationForm.form.markAsDirty();\r\n            entry.toDelete = true;\r\n        }\r\n    }\r\n    /*\r\n     * Method that returns a list of configurations by filtering out only those configurations whose 'toDelete' parameter is set to false.\r\n     *\r\n     * @returns {Object} A list of filtered configurations.\r\n     */\r\n    filterConfiguration() {\r\n        return (this.configuration || []).filter((instance) => !instance.toDelete);\r\n    }\r\n    validateUserInput(entry) {\r\n        if (!entry.value) {\r\n            return;\r\n        }\r\n        entry.requiresUserCheck = !!entry.value.match(this.ABSOLUTE_URI_REGEX);\r\n    }\r\n    /*\r\n     * The Submit method saves the list of available configurations by making a REST call to a web service.\r\n     * The method is called when a user clicks the Submit button in the configuration editor.\r\n     *\r\n     * @param {Object} configurationForm The form object that is an instance of {@link https://docs.angularjs.org/api/ng/type/form.FormController FormController}.\r\n     * It provides methods to monitor and control the state of the form.\r\n     */\r\n    submit(configurationForm) {\r\n        if (!configurationForm.dirty || !this.isValid(configurationForm)) {\r\n            return Promise.reject([]);\r\n        }\r\n        configurationForm.form.markAsPristine();\r\n        return Promise.all(this.configuration.map((entry, i) => this.reconstructConfigurationEntry(entry, i)));\r\n    }\r\n    /*\r\n     * The init method initializes the configuration editor and loads all the configurations so they can be edited.\r\n     *\r\n     * @param {Function} loadCallback The callback to be executed after loading the configurations.\r\n     */\r\n    init(_loadCallback) {\r\n        this.loadCallback = _loadCallback || lo.noop;\r\n        return this.loadAndPresent();\r\n    }\r\n    reconstructConfigurationEntry(entry, i) {\r\n        const payload = objectUtils.copy(entry);\r\n        let method;\r\n        payload.secured = false; // needed for yaas configuration service\r\n        delete payload.toDelete;\r\n        delete payload.errors;\r\n        delete payload.uuid;\r\n        try {\r\n            if (entry.toDelete) {\r\n                method = 'remove';\r\n            }\r\n            else if (payload.isNew) {\r\n                method = 'save';\r\n                payload.value = this.validate(payload);\r\n            }\r\n            else {\r\n                method = 'update';\r\n                payload.value = this.validate(payload);\r\n            }\r\n        }\r\n        catch (error) {\r\n            entry.hasErrors = true;\r\n            if (error instanceof Errors.ParseError) {\r\n                this.addValueError(entry, 'se.configurationform.json.parse.error');\r\n                return Promise.reject({});\r\n            }\r\n        }\r\n        delete payload.isNew;\r\n        entry.hasErrors = false;\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return this.editorCRUDService[method](payload).then(() => {\r\n            switch (method) {\r\n                case 'save':\r\n                    delete entry.isNew;\r\n                    break;\r\n                case 'remove':\r\n                    this.configuration.splice(i, 1);\r\n                    break;\r\n                default:\r\n            }\r\n            return Promise.resolve({});\r\n        }, () => {\r\n            this.addValueError(entry, 'configurationform.save.error');\r\n            return Promise.reject({});\r\n        });\r\n    }\r\n    reset(configurationForm) {\r\n        this.configuration = objectUtils.copy(this.pristine);\r\n        if (configurationForm) {\r\n            configurationForm.form.markAsPristine();\r\n        }\r\n        if (this.loadCallback) {\r\n            this.loadCallback();\r\n        }\r\n    }\r\n    addError(entry, type, message) {\r\n        entry.errors = entry.errors || {};\r\n        entry.errors[type] = entry.errors[type] || [];\r\n        entry.errors[type].push({\r\n            message\r\n        });\r\n    }\r\n    addKeyError(entry, message) {\r\n        this.addError(entry, 'keys', message);\r\n    }\r\n    addValueError(entry, message) {\r\n        this.addError(entry, 'values', message);\r\n    }\r\n    prettify(array) {\r\n        const configuration = objectUtils.copy(array);\r\n        configuration.forEach((entry) => {\r\n            try {\r\n                entry.value = JSON.stringify(JSON.parse(entry.value), null, 2);\r\n            }\r\n            catch (parseError) {\r\n                this.addValueError(entry, 'se.configurationform.json.parse.error');\r\n            }\r\n        });\r\n        return configuration;\r\n    }\r\n    /**\r\n     * for editing purposes\r\n     */\r\n    loadAndPresent() {\r\n        return new Promise((resolve, reject) => this.loadConfigManagerService.loadAsArray().then((response) => {\r\n            this.pristine = this.prettify(response.map((item) => (Object.assign(Object.assign({}, item), { uuid: lo.uniqueId() }))));\r\n            this.reset();\r\n            resolve();\r\n        }, () => {\r\n            this.logService.log('load failed');\r\n            reject();\r\n        }));\r\n    }\r\n    isValid(configurationForm) {\r\n        this.configuration.forEach((entry) => {\r\n            delete entry.errors;\r\n        });\r\n        if (configurationForm.invalid) {\r\n            this.configuration.forEach((entry) => {\r\n                if (stringUtils.isBlank(entry.key)) {\r\n                    this.addKeyError(entry, 'se.configurationform.required.entry.error');\r\n                    entry.hasErrors = true;\r\n                }\r\n                if (stringUtils.isBlank(entry.value)) {\r\n                    this.addValueError(entry, 'se.configurationform.required.entry.error');\r\n                    entry.hasErrors = true;\r\n                }\r\n            });\r\n        }\r\n        return (configurationForm.valid &&\r\n            !this.configuration.reduce((confHolder, nextConfiguration) => {\r\n                if (confHolder.keys.indexOf(nextConfiguration.key) > -1) {\r\n                    this.addKeyError(nextConfiguration, 'se.configurationform.duplicate.entry.error');\r\n                    confHolder.errors = true;\r\n                }\r\n                else {\r\n                    confHolder.keys.push(nextConfiguration.key);\r\n                }\r\n                return confHolder;\r\n            }, {\r\n                keys: [],\r\n                errors: false\r\n            }).errors);\r\n    }\r\n    validate(entry) {\r\n        try {\r\n            if (entry.requiresUserCheck && !entry.isCheckedByUser) {\r\n                throw new Error(this.ABSOLUTE_URI_NOT_APPROVED);\r\n            }\r\n            return JSON.stringify(JSON.parse(entry.value));\r\n        }\r\n        catch (parseError) {\r\n            throw new Errors.ParseError(entry.value);\r\n        }\r\n    }\r\n};\r\n/* @ngInject */ ConfigurationService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [LogService,\r\n        LoadConfigManagerService,\r\n        RestServiceFactory])\r\n], /* @ngInject */ ConfigurationService);\r\nexport { /* @ngInject */ ConfigurationService };\r\n//# sourceMappingURL=ConfigurationService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+forms@8.2.14_e9fbe5720e9434eb9ae0f6720f1ca3f4/node_modules/@angular/forms/forms.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/bootstrap/Configuration.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/bootstrap/LoadConfigManagerService.ts"],"map":"{\"version\":3,\"file\":\"ConfigurationService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/ConfigurationService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/ConfigurationService.d.ts","writeByteOrderMark":false,"text":"import { NgForm } from '@angular/forms';\r\nimport { LogService, RestServiceFactory } from 'smarteditcommons';\r\nimport { ConfigurationItem } from 'smarteditcontainer/services/bootstrap/Configuration';\r\nimport { LoadConfigManagerService } from './bootstrap/LoadConfigManagerService';\r\n/** @internal */\r\nexport declare class ConfigurationService {\r\n    private logService;\r\n    private loadConfigManagerService;\r\n    private restServiceFactory;\r\n    private readonly ABSOLUTE_URI_NOT_APPROVED;\r\n    private readonly ABSOLUTE_URI_REGEX;\r\n    private editorCRUDService;\r\n    private configuration;\r\n    private pristine;\r\n    private loadCallback;\r\n    constructor(logService: LogService, loadConfigManagerService: LoadConfigManagerService, restServiceFactory: RestServiceFactory);\r\n    addEntry(): void;\r\n    removeEntry(entry: ConfigurationItem, configurationForm: NgForm): void;\r\n    filterConfiguration(): ConfigurationItem[];\r\n    validateUserInput(entry: ConfigurationItem): void;\r\n    submit(configurationForm: NgForm): Promise<any[]>;\r\n    init(_loadCallback?: () => void): Promise<any>;\r\n    private reconstructConfigurationEntry;\r\n    private reset;\r\n    private addError;\r\n    private addKeyError;\r\n    private addValueError;\r\n    private prettify;\r\n    /**\r\n     * for editing purposes\r\n     */\r\n    private loadAndPresent;\r\n    private isValid;\r\n    private validate;\r\n}\r\n"}}
