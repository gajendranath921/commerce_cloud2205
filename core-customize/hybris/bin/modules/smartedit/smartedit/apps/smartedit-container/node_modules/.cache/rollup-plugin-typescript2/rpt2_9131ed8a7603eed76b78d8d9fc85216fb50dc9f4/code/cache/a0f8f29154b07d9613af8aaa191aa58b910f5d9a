{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { dateUtils, urlUtils, EVENTS, ICatalogService, IExperienceService, IIframeClickDetectionService, ISharedDataService, PREVIEW_RESOURCE_URI, SeDowngradeComponent, SystemEventService, TYPES_RESOURCE_URI, L10nPipe, EXPERIENCE_STORAGE_KEY, UserTrackingService, USER_TRACKING_FUNCTIONALITY } from 'smarteditcommons';\r\nimport { IframeManagerService } from '../../services/iframe/IframeManagerService';\r\nimport { SiteService } from '../../services/SiteService';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ExperienceSelectorComponent\", {\r\n    selector: 'se-experience-selector',\r\n    template: `<se-generic-editor *ngIf=\"isReady\" [smarteditComponentType]=\"smarteditComponentType\" [smarteditComponentId]=\"smarteditComponentId\" [structureApi]=\"structureApi\" [content]=\"content\" [contentApi]=\"contentApi\" (getApi)=\"getApi($event)\"></se-generic-editor>`,\r\n    providers: [L10nPipe]\r\n});\r\nlet /* @ngInject */ ExperienceSelectorComponent = class /* @ngInject */ ExperienceSelectorComponent {\r\n    constructor(systemEventService, siteService, sharedDataService, iframeClickDetectionService, iframeManagerService, experienceService, catalogService, l10nPipe, userTrackingService) {\r\n        this.systemEventService = systemEventService;\r\n        this.siteService = siteService;\r\n        this.sharedDataService = sharedDataService;\r\n        this.iframeClickDetectionService = iframeClickDetectionService;\r\n        this.iframeManagerService = iframeManagerService;\r\n        this.experienceService = experienceService;\r\n        this.catalogService = catalogService;\r\n        this.l10nPipe = l10nPipe;\r\n        this.userTrackingService = userTrackingService;\r\n        this.resetExperienceSelectorChange = new EventEmitter();\r\n        this.modalHeaderTitle = 'se.experience.selector.header';\r\n        this.siteCatalogs = {};\r\n    }\r\n    ngOnInit() {\r\n        setTimeout(() => {\r\n            this.resetExperienceSelectorChange.emit(() => this.resetExperienceSelectorFn());\r\n        });\r\n        this.unRegCloseExperienceFn = this.iframeClickDetectionService.registerCallback('closeExperienceSelector', () => {\r\n            if (this.dropdownStatus && this.dropdownStatus.isOpen) {\r\n                this.dropdownStatus.isOpen = false;\r\n            }\r\n        });\r\n        this.unRegFn = this.systemEventService.subscribe('OVERLAY_DISABLED', () => {\r\n            if (this.dropdownStatus && this.dropdownStatus.isOpen) {\r\n                this.dropdownStatus.isOpen = false;\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.unRegFn) {\r\n            this.unRegFn();\r\n        }\r\n        if (this.unRegCloseExperienceFn) {\r\n            this.unRegCloseExperienceFn();\r\n        }\r\n    }\r\n    preparePayload(experienceContent) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            [\r\n                this.siteCatalogs.siteId,\r\n                this.siteCatalogs.catalogId,\r\n                this.siteCatalogs.catalogVersion\r\n            ] = experienceContent.previewCatalog.split('|');\r\n            const productCatalogs = yield this.catalogService.getProductCatalogsForSite(this.siteCatalogs.siteId);\r\n            const { domain } = (yield this.sharedDataService.get('configuration'));\r\n            const { previewUrl, uid: siteId } = yield this.siteService.getSiteById(this.siteCatalogs.siteId);\r\n            const { language, time, pageId, productCatalogVersions } = experienceContent;\r\n            this.siteCatalogs.productCatalogs = productCatalogs;\r\n            this.siteCatalogs.productCatalogVersions = productCatalogVersions;\r\n            this.userTrackingService.trackingUserAction(USER_TRACKING_FUNCTIONALITY.TOOL_BAR, 'update Experience');\r\n            return Object.assign(Object.assign({}, experienceContent), { resourcePath: urlUtils.getAbsoluteURL(domain, previewUrl), catalogVersions: [\r\n                    ...this._getProductCatalogsByUuids(productCatalogVersions),\r\n                    {\r\n                        catalog: this.siteCatalogs.catalogId,\r\n                        catalogVersion: this.siteCatalogs.catalogVersion\r\n                    }\r\n                ], siteId,\r\n                language,\r\n                time,\r\n                pageId });\r\n        });\r\n    }\r\n    updateCallback(payload, response) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { siteId, catalogId, catalogVersion, productCatalogVersions } = this.siteCatalogs;\r\n            const { time } = payload;\r\n            const { pageId, language, ticketId } = response;\r\n            this.smarteditComponentId = null;\r\n            this.dropdownStatus.isOpen = false;\r\n            const experienceParams = Object.assign(Object.assign({}, response), { siteId,\r\n                catalogId,\r\n                catalogVersion,\r\n                productCatalogVersions, time: dateUtils.formatDateAsUtc(time), pageId,\r\n                language });\r\n            const experience = yield this.experienceService.buildAndSetExperience(experienceParams);\r\n            yield this.sharedDataService.set(EXPERIENCE_STORAGE_KEY, experience);\r\n            this.systemEventService.publishAsync(EVENTS.EXPERIENCE_UPDATE);\r\n            this.iframeManagerService.loadPreview(experience.siteDescriptor.previewUrl, ticketId);\r\n        });\r\n    }\r\n    getApi($api) {\r\n        $api.setPreparePayload(this.preparePayload.bind(this));\r\n        $api.setUpdateCallback(this.updateCallback.bind(this));\r\n        $api.setAlwaysShowSubmit(true);\r\n        $api.setAlwaysShowReset(true);\r\n        $api.setSubmitButtonText('se.componentform.actions.apply');\r\n        $api.setCancelButtonText('se.componentform.actions.cancel');\r\n        $api.setOnReset(() => {\r\n            this.dropdownStatus.isOpen = false;\r\n            return this.dropdownStatus.isOpen;\r\n        });\r\n    }\r\n    _getProductCatalogsByUuids(versionUuids) {\r\n        return this.siteCatalogs.productCatalogs.map(({ versions, catalogId }) => ({\r\n            catalogVersion: versions.find(({ uuid }) => versionUuids.indexOf(uuid) > -1).version,\r\n            catalog: catalogId\r\n        }));\r\n    }\r\n    resetExperienceSelectorFn() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const experience = (yield this.sharedDataService.get(EXPERIENCE_STORAGE_KEY));\r\n            const configuration = (yield this.sharedDataService.get('configuration'));\r\n            this.smarteditComponentType = 'PreviewData';\r\n            this.smarteditComponentId = null;\r\n            this.structureApi = TYPES_RESOURCE_URI + '?code=:smarteditComponentType&mode=DEFAULT';\r\n            this.contentApi = (configuration && configuration.previewTicketURI) || PREVIEW_RESOURCE_URI;\r\n            const activeSiteTranslated = yield this.l10nPipe\r\n                .transform(experience.siteDescriptor.name)\r\n                .pipe(take(1))\r\n                .toPromise();\r\n            this.content = Object.assign(Object.assign({}, experience), { activeSite: activeSiteTranslated, time: experience.time, pageId: experience.pageId, productCatalogVersions: experience.productCatalogVersions.map((productCatalogVersion) => productCatalogVersion.uuid), language: experience.languageDescriptor.isocode, previewCatalog: `${experience.siteDescriptor.uid}|${experience.catalogDescriptor.catalogId}|${experience.catalogDescriptor.catalogVersion}` });\r\n            if (!this.isReady) {\r\n                this.isReady = true;\r\n            }\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ ExperienceSelectorComponent.prototype, \"experience\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ ExperienceSelectorComponent.prototype, \"dropdownStatus\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ ExperienceSelectorComponent.prototype, \"resetExperienceSelector\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ ExperienceSelectorComponent.prototype, \"resetExperienceSelectorChange\", void 0);\r\n/* @ngInject */ ExperienceSelectorComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-experience-selector',\r\n        template: `<se-generic-editor *ngIf=\"isReady\" [smarteditComponentType]=\"smarteditComponentType\" [smarteditComponentId]=\"smarteditComponentId\" [structureApi]=\"structureApi\" [content]=\"content\" [contentApi]=\"contentApi\" (getApi)=\"getApi($event)\"></se-generic-editor>`,\r\n        providers: [L10nPipe]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [SystemEventService,\r\n        SiteService,\r\n        ISharedDataService,\r\n        IIframeClickDetectionService,\r\n        IframeManagerService,\r\n        IExperienceService,\r\n        ICatalogService,\r\n        L10nPipe,\r\n        UserTrackingService])\r\n], /* @ngInject */ ExperienceSelectorComponent);\r\nexport { /* @ngInject */ ExperienceSelectorComponent };\r\n//# sourceMappingURL=ExperienceSelectorComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/operators/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/iframe/IframeManagerService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/SiteService.ts"],"map":"{\"version\":3,\"file\":\"ExperienceSelectorComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/experienceSelector/ExperienceSelectorComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/experienceSelector/ExperienceSelectorComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter } from '@angular/core';\r\nimport { GenericEditorAPI, ICatalogService, IExperience, IExperienceService, IIframeClickDetectionService, IPreviewData, ISharedDataService, Payload, SystemEventService, L10nPipe, UserTrackingService } from 'smarteditcommons';\r\nimport { IframeManagerService } from '../../services/iframe/IframeManagerService';\r\nimport { SiteService } from '../../services/SiteService';\r\nexport interface IExperienceContent extends Payload {\r\n    activeSite: string;\r\n    language: string;\r\n    pageId: string;\r\n    previewCatalog: string;\r\n    productCatalogVersions: string[];\r\n    time: string;\r\n}\r\nexport declare class ExperienceSelectorComponent {\r\n    private systemEventService;\r\n    private siteService;\r\n    private sharedDataService;\r\n    private iframeClickDetectionService;\r\n    private iframeManagerService;\r\n    private experienceService;\r\n    private catalogService;\r\n    private l10nPipe;\r\n    private userTrackingService;\r\n    experience: IExperience;\r\n    dropdownStatus: {\r\n        isOpen: boolean;\r\n    };\r\n    resetExperienceSelector?: () => void;\r\n    resetExperienceSelectorChange: EventEmitter<() => void>;\r\n    smarteditComponentType: string;\r\n    structureApi: string;\r\n    contentApi: string;\r\n    content: IExperienceContent;\r\n    modalHeaderTitle: string;\r\n    smarteditComponentId: string;\r\n    isReady: boolean;\r\n    private siteCatalogs;\r\n    private unRegCloseExperienceFn;\r\n    private unRegFn;\r\n    constructor(systemEventService: SystemEventService, siteService: SiteService, sharedDataService: ISharedDataService, iframeClickDetectionService: IIframeClickDetectionService, iframeManagerService: IframeManagerService, experienceService: IExperienceService, catalogService: ICatalogService, l10nPipe: L10nPipe, userTrackingService: UserTrackingService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    preparePayload(experienceContent: IExperienceContent): Promise<IPreviewData>;\r\n    updateCallback(payload: IExperienceContent, response: IPreviewData): Promise<void>;\r\n    getApi($api: GenericEditorAPI): void;\r\n    private _getProductCatalogsByUuids;\r\n    private resetExperienceSelectorFn;\r\n}\r\n"}}
