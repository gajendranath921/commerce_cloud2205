{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as lodash from 'lodash';\r\nimport { CONTEXT_CATALOG, CONTEXT_CATALOG_VERSION, CONTEXT_SITE_ID, GatewayProxied, ICatalogService, ICatalogVersionPermissionService, SeDowngradeService } from 'smarteditcommons';\r\nimport { CatalogVersionPermissionRestService } from './CatalogVersionPermissionRestService';\r\nvar PERMISSION_TYPES;\r\n(function (PERMISSION_TYPES) {\r\n    PERMISSION_TYPES[\"READ\"] = \"read\";\r\n    PERMISSION_TYPES[\"WRITE\"] = \"write\";\r\n})(PERMISSION_TYPES || (PERMISSION_TYPES = {}));\r\nlet /* @ngInject */ CatalogVersionPermissionService = class /* @ngInject */ CatalogVersionPermissionService extends ICatalogVersionPermissionService {\r\n    constructor(catalogVersionPermissionRestService, catalogService) {\r\n        super();\r\n        this.catalogVersionPermissionRestService = catalogVersionPermissionRestService;\r\n        this.catalogService = catalogService;\r\n    }\r\n    hasPermission(accessType, catalogId, catalogVersion, siteId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const [shouldOverride, response] = yield Promise.all([\r\n                this.shouldIgnoreCatalogPermissions(accessType, catalogId, catalogVersion, siteId),\r\n                this.catalogVersionPermissionRestService.getCatalogVersionPermissions(catalogId, catalogVersion)\r\n            ]);\r\n            if (this.isCatalogVersionPermissionResponse(response)) {\r\n                const targetPermission = response.permissions.find((permission) => permission.key === accessType);\r\n                const value = targetPermission ? targetPermission.value : 'false';\r\n                return value === 'true' || shouldOverride;\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    hasSyncPermissionFromCurrentToActiveCatalogVersion() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const data = yield this.catalogService.retrieveUriContext();\r\n            return yield this.hasSyncPermissionToActiveCatalogVersion(data[CONTEXT_CATALOG], data[CONTEXT_CATALOG_VERSION]);\r\n        });\r\n    }\r\n    hasSyncPermissionToActiveCatalogVersion(catalogId, catalogVersion) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const targetCatalogVersion = yield this.catalogService.getActiveContentCatalogVersionByCatalogId(catalogId);\r\n            return yield this.hasSyncPermission(catalogId, catalogVersion, targetCatalogVersion);\r\n        });\r\n    }\r\n    hasSyncPermission(catalogId, sourceCatalogVersion, targetCatalogVersion) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const response = yield this.catalogVersionPermissionRestService.getCatalogVersionPermissions(catalogId, sourceCatalogVersion);\r\n            if (this.isCatalogVersionPermissionResponse(response) &&\r\n                response.syncPermissions &&\r\n                response.syncPermissions.length > 0) {\r\n                const permission = response.syncPermissions.some((syncPermission) => syncPermission\r\n                    ? syncPermission.canSynchronize === true &&\r\n                        syncPermission.targetCatalogVersion === targetCatalogVersion\r\n                    : false);\r\n                return permission;\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    hasWritePermissionOnCurrent() {\r\n        return this.hasCurrentCatalogPermission(PERMISSION_TYPES.WRITE);\r\n    }\r\n    hasReadPermissionOnCurrent() {\r\n        return this.hasCurrentCatalogPermission(PERMISSION_TYPES.READ);\r\n    }\r\n    hasWritePermission(catalogId, catalogVersion) {\r\n        return this.hasPermission(PERMISSION_TYPES.WRITE, catalogId, catalogVersion);\r\n    }\r\n    hasReadPermission(catalogId, catalogVersion) {\r\n        return this.hasPermission(PERMISSION_TYPES.READ, catalogId, catalogVersion);\r\n    }\r\n    /**\r\n     * if in the context of an experience AND the catalogVersion is the active one, then permissions should be ignored in read mode\r\n     */\r\n    shouldIgnoreCatalogPermissions(accessType, catalogId, catalogVersion, siteId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promise = siteId && accessType === PERMISSION_TYPES.READ\r\n                ? this.catalogService.getActiveContentCatalogVersionByCatalogId(catalogId)\r\n                : Promise.resolve();\r\n            const versionCheckedAgainst = yield promise;\r\n            return versionCheckedAgainst === catalogVersion;\r\n        });\r\n    }\r\n    /**\r\n     * Verifies whether current user has write or read permission for current catalog version.\r\n     * @param {String} accessType\r\n     */\r\n    hasCurrentCatalogPermission(accessType) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const data = yield this.catalogService.retrieveUriContext();\r\n            return yield this.hasPermission(accessType, data[CONTEXT_CATALOG], data[CONTEXT_CATALOG_VERSION], data[CONTEXT_SITE_ID]);\r\n        });\r\n    }\r\n    isCatalogVersionPermissionResponse(response) {\r\n        return !lodash.isEmpty(response);\r\n    }\r\n};\r\n/* @ngInject */ CatalogVersionPermissionService = __decorate([\r\n    SeDowngradeService(ICatalogVersionPermissionService),\r\n    GatewayProxied('hasWritePermission', 'hasReadPermission', 'hasWritePermissionOnCurrent', 'hasReadPermissionOnCurrent'),\r\n    __metadata(\"design:paramtypes\", [CatalogVersionPermissionRestService,\r\n        ICatalogService])\r\n], /* @ngInject */ CatalogVersionPermissionService);\r\nexport { /* @ngInject */ CatalogVersionPermissionService };\r\n//# sourceMappingURL=catalogVersionPermissionServiceOuter.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/CatalogVersionPermissionRestService.ts"],"map":"{\"version\":3,\"file\":\"catalogVersionPermissionServiceOuter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/catalogVersionPermissionServiceOuter.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/catalogVersionPermissionServiceOuter.d.ts","writeByteOrderMark":false,"text":"import { ICatalogService, ICatalogVersionPermissionService } from 'smarteditcommons';\r\nimport { CatalogVersionPermissionRestService } from './CatalogVersionPermissionRestService';\r\ndeclare enum PERMISSION_TYPES {\r\n    READ = \"read\",\r\n    WRITE = \"write\"\r\n}\r\nexport declare class CatalogVersionPermissionService extends ICatalogVersionPermissionService {\r\n    private catalogVersionPermissionRestService;\r\n    private catalogService;\r\n    constructor(catalogVersionPermissionRestService: CatalogVersionPermissionRestService, catalogService: ICatalogService);\r\n    hasPermission(accessType: PERMISSION_TYPES, catalogId: string, catalogVersion: string, siteId?: string): Promise<boolean>;\r\n    hasSyncPermissionFromCurrentToActiveCatalogVersion(): Promise<boolean>;\r\n    hasSyncPermissionToActiveCatalogVersion(catalogId: string, catalogVersion: string): Promise<boolean>;\r\n    hasSyncPermission(catalogId: string, sourceCatalogVersion: string, targetCatalogVersion: string): Promise<boolean>;\r\n    hasWritePermissionOnCurrent(): Promise<boolean>;\r\n    hasReadPermissionOnCurrent(): Promise<boolean>;\r\n    hasWritePermission(catalogId: string, catalogVersion: string): Promise<boolean>;\r\n    hasReadPermission(catalogId: string, catalogVersion: string): Promise<boolean>;\r\n    /**\r\n     * if in the context of an experience AND the catalogVersion is the active one, then permissions should be ignored in read mode\r\n     */\r\n    private shouldIgnoreCatalogPermissions;\r\n    /**\r\n     * Verifies whether current user has write or read permission for current catalog version.\r\n     * @param {String} accessType\r\n     */\r\n    private hasCurrentCatalogPermission;\r\n    private isCatalogVersionPermissionResponse;\r\n}\r\nexport {};\r\n"}}
