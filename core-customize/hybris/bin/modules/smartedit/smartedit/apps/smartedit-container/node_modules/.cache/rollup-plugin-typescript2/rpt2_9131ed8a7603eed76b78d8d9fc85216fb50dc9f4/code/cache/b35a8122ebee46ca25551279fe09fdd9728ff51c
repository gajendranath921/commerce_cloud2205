{"code":"import { __decorate } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n// import { SeFilter } from '../../../common/di/SeFilter';\r\nimport { FilterByFieldPipe, SeFilter } from 'smarteditcommons';\r\n/**\r\n * **Deprecated since 2005, use {@link FilterByFieldPipe}**.\r\n *\r\n * @deprecated\r\n */\r\nlet FilterByFieldFilter = class FilterByFieldFilter {\r\n    static transform() {\r\n        return (items, query, keys, callbackFcn) => FilterByFieldPipe.transform(items, query, keys, callbackFcn);\r\n    }\r\n};\r\nFilterByFieldFilter = __decorate([\r\n    SeFilter()\r\n], FilterByFieldFilter);\r\nexport { FilterByFieldFilter };\r\n//# sourceMappingURL=FilterByFieldFilter.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"FilterByFieldFilter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/filters/FilterByFieldFilter.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,0DAA0D;AAC1D,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAY,MAAM,kBAAkB,CAAC;AAEzE;;;;GAIG;AAEH,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IACrB,MAAM,CAAC,SAAS;QACnB,OAAO,CACH,KAAyB,EACzB,KAAa,EACb,IAAe,EACf,WAAoD,EAClC,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAC1F,CAAC;CACJ,CAAA;AATY,mBAAmB;IAD/B,QAAQ,EAAE;GACE,mBAAmB,CAS/B;SATY,mBAAmB\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/filters/FilterByFieldFilter.d.ts","writeByteOrderMark":false,"text":"import { TypedMap } from 'smarteditcommons';\r\n/**\r\n * **Deprecated since 2005, use {@link FilterByFieldPipe}**.\r\n *\r\n * @deprecated\r\n */\r\nexport declare class FilterByFieldFilter {\r\n    static transform(): (items: TypedMap<string>[], query: string, keys?: string[], callbackFcn?: (filtered: TypedMap<string>[]) => void) => TypedMap<string>[];\r\n}\r\n"}}
