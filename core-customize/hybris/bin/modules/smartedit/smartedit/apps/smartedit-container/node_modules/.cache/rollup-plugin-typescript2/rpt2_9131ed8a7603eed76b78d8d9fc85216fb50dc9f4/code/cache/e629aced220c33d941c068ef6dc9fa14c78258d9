{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { AlertConfig, AlertService as FundamentalAlertService } from '@fundamental-ngx/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ALERT_CONFIG_DEFAULTS_TOKEN, BaseAlertFactory, IAlertServiceType, SeDowngradeService } from 'smarteditcommons';\r\nlet /* @ngInject */ AlertFactory = class /* @ngInject */ AlertFactory extends BaseAlertFactory {\r\n    constructor(fundamentalAlertService, translateService, ALERT_CONFIG_DEFAULTS) {\r\n        super(fundamentalAlertService, translateService, ALERT_CONFIG_DEFAULTS);\r\n    }\r\n    createAlert(alertConf) {\r\n        alertConf = this.getAlertConfigFromStringOrConfig(alertConf);\r\n        return super.createAlert(alertConf);\r\n    }\r\n    createInfo(alertConf) {\r\n        alertConf = this.getAlertConfigFromStringOrConfig(alertConf);\r\n        alertConf.type = IAlertServiceType.INFO;\r\n        return super.createInfo(alertConf);\r\n    }\r\n    createDanger(alertConf) {\r\n        alertConf = this.getAlertConfigFromStringOrConfig(alertConf);\r\n        alertConf.type = IAlertServiceType.DANGER;\r\n        return super.createDanger(alertConf);\r\n    }\r\n    createWarning(alertConf) {\r\n        alertConf = this.getAlertConfigFromStringOrConfig(alertConf);\r\n        alertConf.type = IAlertServiceType.WARNING;\r\n        return super.createWarning(alertConf);\r\n    }\r\n    createSuccess(alertConf) {\r\n        alertConf = this.getAlertConfigFromStringOrConfig(alertConf);\r\n        alertConf.type = IAlertServiceType.SUCCESS;\r\n        return super.createSuccess(alertConf);\r\n    }\r\n    /**\r\n     * Accepts message string or config object\r\n     * Will convert a str param to { message: str }\r\n     */\r\n    getAlertConfigFromStringOrConfig(strOrConf) {\r\n        if (typeof strOrConf === 'string') {\r\n            return {\r\n                message: strOrConf\r\n            };\r\n        }\r\n        const config = strOrConf;\r\n        return Object.assign({}, config);\r\n    }\r\n};\r\n/* @ngInject */ AlertFactory = __decorate([\r\n    SeDowngradeService(),\r\n    Injectable(),\r\n    __param(2, Inject(ALERT_CONFIG_DEFAULTS_TOKEN)),\r\n    __metadata(\"design:paramtypes\", [FundamentalAlertService,\r\n        TranslateService,\r\n        AlertConfig])\r\n], /* @ngInject */ AlertFactory);\r\nexport { /* @ngInject */ AlertFactory };\r\n//# sourceMappingURL=AlertFactory.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@fundamental-ngx+core@0.13.2_9a9a80bb6ff375d99f90188f858ebbd5/node_modules/@fundamental-ngx/core/fundamental-ngx-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate+core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"AlertFactory.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/alerts/AlertFactory.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,WAAW,EAAE,YAAY,IAAI,uBAAuB,EAAE,MAAM,uBAAuB,CAAC;AAC7F,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAEH,2BAA2B,EAC3B,gBAAgB,EAEhB,iBAAiB,EACjB,kBAAkB,EACrB,MAAM,kBAAkB,CAAC;AAI1B,mCAAA,kCAA0B,SAAQ,gBAAgB;IAC9C,YACI,uBAAgD,EAChD,gBAAkC,EACG,qBAAkC;QAEvE,KAAK,CAAC,uBAAuB,EAAE,gBAAgB,EAAE,qBAAqB,CAAC,CAAC;IAC5E,CAAC;IAEM,WAAW,CAAC,SAAgC;QAC/C,SAAS,GAAG,IAAI,CAAC,gCAAgC,CAAC,SAAS,CAAC,CAAC;QAC7D,OAAO,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACxC,CAAC;IAEM,UAAU,CAAC,SAAgC;QAC9C,SAAS,GAAG,IAAI,CAAC,gCAAgC,CAAC,SAAS,CAAC,CAAC;QAC7D,SAAS,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC;QACxC,OAAO,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAEM,YAAY,CAAC,SAAgC;QAChD,SAAS,GAAG,IAAI,CAAC,gCAAgC,CAAC,SAAS,CAAC,CAAC;QAC7D,SAAS,CAAC,IAAI,GAAG,iBAAiB,CAAC,MAAM,CAAC;QAC1C,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;IAEM,aAAa,CAAC,SAAgC;QACjD,SAAS,GAAG,IAAI,CAAC,gCAAgC,CAAC,SAAS,CAAC,CAAC;QAC7D,SAAS,CAAC,IAAI,GAAG,iBAAiB,CAAC,OAAO,CAAC;QAC3C,OAAO,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAEM,aAAa,CAAC,SAAgC;QACjD,SAAS,GAAG,IAAI,CAAC,gCAAgC,CAAC,SAAS,CAAC,CAAC;QAC7D,SAAS,CAAC,IAAI,GAAG,iBAAiB,CAAC,OAAO,CAAC;QAC3C,OAAO,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAED;;;OAGG;IACI,gCAAgC,CAAC,SAAgC;QACpE,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YAC/B,OAAO;gBACH,OAAO,EAAE,SAAS;aACrB,CAAC;SACL;QACD,MAAM,MAAM,GAAG,SAAS,CAAC;QACzB,yBACO,MAAM,EACX;IACN,CAAC;CACJ,CAAA;AArDD;IAFC,kBAAkB,EAAE;IACpB,UAAU,EAAE;IAKJ,WAAA,MAAM,CAAC,2BAA2B,CAAC,CAAA;qCAFX,uBAAuB;QAC9B,gBAAgB;QAC0B,WAAW;gCAiD9E\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/alerts/AlertFactory.d.ts","writeByteOrderMark":false,"text":"import { AlertConfig, AlertService as FundamentalAlertService } from '@fundamental-ngx/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Alert, BaseAlertFactory, IAlertConfig } from 'smarteditcommons';\r\nexport declare class AlertFactory extends BaseAlertFactory {\r\n    constructor(fundamentalAlertService: FundamentalAlertService, translateService: TranslateService, ALERT_CONFIG_DEFAULTS: AlertConfig);\r\n    createAlert(alertConf: string | IAlertConfig): Alert;\r\n    createInfo(alertConf: string | IAlertConfig): Alert;\r\n    createDanger(alertConf: string | IAlertConfig): Alert;\r\n    createWarning(alertConf: string | IAlertConfig): Alert;\r\n    createSuccess(alertConf: string | IAlertConfig): Alert;\r\n    /**\r\n     * Accepts message string or config object\r\n     * Will convert a str param to { message: str }\r\n     */\r\n    getAlertConfigFromStringOrConfig(strOrConf: string | IAlertConfig): IAlertConfig;\r\n}\r\n"}}
