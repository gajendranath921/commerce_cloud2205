{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport * as lodash from 'lodash';\r\nimport { GatewayProxied, ISharedDataService, SeDowngradeService } from 'smarteditcommons';\r\n/** @internal */\r\nlet /* @ngInject */ SharedDataService = class /* @ngInject */ SharedDataService extends ISharedDataService {\r\n    constructor() {\r\n        super();\r\n        this.storage = {};\r\n    }\r\n    get(key) {\r\n        return Promise.resolve(this.storage[key]);\r\n    }\r\n    set(key, value) {\r\n        this.storage[key] = value;\r\n        return Promise.resolve();\r\n    }\r\n    update(key, modifyingCallback) {\r\n        return this.get(key).then((oldValue) => modifyingCallback(oldValue).then((newValue) => this.set(key, newValue)));\r\n    }\r\n    remove(key) {\r\n        const value = this.storage[key];\r\n        delete this.storage[key];\r\n        return Promise.resolve(value);\r\n    }\r\n    containsKey(key) {\r\n        return Promise.resolve(lodash.has(this.storage, key));\r\n    }\r\n};\r\n/* @ngInject */ SharedDataService = __decorate([\r\n    SeDowngradeService(ISharedDataService),\r\n    GatewayProxied(),\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [])\r\n], /* @ngInject */ SharedDataService);\r\nexport { /* @ngInject */ SharedDataService };\r\n//# sourceMappingURL=SharedDataServiceOuter.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"SharedDataServiceOuter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/SharedDataServiceOuter.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;AACjC,OAAO,EAEH,cAAc,EACd,kBAAkB,EAClB,kBAAkB,EAErB,MAAM,kBAAkB,CAAC;AAE1B,gBAAgB;AAIhB,wCAAA,uCAA+B,SAAQ,kBAAkB;IAGrD;QACI,KAAK,EAAE,CAAC;QAHJ,YAAO,GAAwB,EAAE,CAAC;IAI1C,CAAC;IAED,GAAG,CAAC,GAAW;QACX,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,GAAG,CAAC,GAAW,EAAE,KAAgB;QAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAC1B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,GAAW,EAAE,iBAAyC;QACzD,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE,CACxC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAC/E,CAAC;IACN,CAAC;IAED,MAAM,CAAC,GAAW;QACd,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACzB,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,WAAW,CAAC,GAAW;QACnB,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;IAC1D,CAAC;CACJ,CAAA;AA/BD;IAHC,kBAAkB,CAAC,kBAAkB,CAAC;IACtC,cAAc,EAAE;IAChB,UAAU,EAAE;;qCAgCZ\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/SharedDataServiceOuter.d.ts","writeByteOrderMark":false,"text":"import { Cloneable, ISharedDataService } from 'smarteditcommons';\r\n/** @internal */\r\nexport declare class SharedDataService extends ISharedDataService {\r\n    private storage;\r\n    constructor();\r\n    get(key: string): Promise<Cloneable>;\r\n    set(key: string, value: Cloneable): Promise<void>;\r\n    update(key: string, modifyingCallback: (oldValue: any) => any): Promise<void>;\r\n    remove(key: string): Promise<Cloneable>;\r\n    containsKey(key: string): Promise<boolean>;\r\n}\r\n"}}
