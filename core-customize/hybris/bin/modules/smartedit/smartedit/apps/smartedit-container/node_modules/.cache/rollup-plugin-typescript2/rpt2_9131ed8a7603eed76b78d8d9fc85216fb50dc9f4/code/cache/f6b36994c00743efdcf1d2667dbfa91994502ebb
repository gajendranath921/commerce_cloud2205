{"code":"import { __awaiter, __decorate, __metadata, __param } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\r\nimport { cloneDeep } from 'lodash';\r\nimport { GENERIC_EDITOR_WIDGET_DATA, ICatalogService, LINKED_DROPDOWN, SystemEventService } from 'smarteditcommons';\r\nimport './ProductCatalogVersionsSelectorComponent.scss';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ProductCatalogVersionsSelectorComponent\", {\r\n    selector: 'se-product-catalog-versions-selector',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {\r\n        '[class.se-product-catalog-versions-selector]': 'true'\r\n    },\r\n    template: `<ng-container *ngIf=\"isReady\"><se-select *ngIf=\"isSingleVersionSelector\" [id]=\"geData.qualifier\" [(model)]=\"geData.model.productCatalogVersions[0]\" [(reset)]=\"reset\" [fetchStrategy]=\"fetchStrategy\"></se-select><se-multi-product-catalog-version-selector *ngIf=\"isMultiVersionSelector\" [productCatalogs]=\"productCatalogs\" [(selectedProductCatalogVersions)]=\"geData.model[geData.qualifier]\"></se-multi-product-catalog-version-selector></ng-container>`\r\n});\r\nlet ProductCatalogVersionsSelectorComponent = class ProductCatalogVersionsSelectorComponent {\r\n    constructor(geData, catalogService, systemEventService, cdr) {\r\n        this.geData = geData;\r\n        this.catalogService = catalogService;\r\n        this.systemEventService = systemEventService;\r\n        this.cdr = cdr;\r\n    }\r\n    ngOnInit() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.contentCatalogVersionId = cloneDeep(this.geData.model.previewCatalog);\r\n            if (this.contentCatalogVersionId) {\r\n                this.isReady = false;\r\n                this.isSingleVersionSelector = false;\r\n                this.isMultiVersionSelector = false;\r\n                const eventId = (this.geData.id || '') + LINKED_DROPDOWN;\r\n                this.$unRegSiteChangeEvent = this.systemEventService.subscribe(eventId, (id, data) => this.resetSelector(id, data));\r\n                yield this.setContent();\r\n            }\r\n            return Promise.resolve();\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.$unRegSiteChangeEvent) {\r\n            this.$unRegSiteChangeEvent();\r\n        }\r\n    }\r\n    resetSelector(_eventId, data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (data.qualifier === 'previewCatalog' &&\r\n                data.optionObject &&\r\n                this.contentCatalogVersionId !== data.optionObject.id) {\r\n                this.contentCatalogVersionId = data.optionObject.id;\r\n                const siteUID = this.getSiteUIDFromContentCatalogVersionId(this.contentCatalogVersionId);\r\n                const productCatalogs = yield this.catalogService.getProductCatalogsForSite(siteUID);\r\n                const activeProductCatalogVersions = yield Promise.resolve(this.catalogService.returnActiveCatalogVersionUIDs(productCatalogs));\r\n                this.geData.model[this.geData.qualifier] = activeProductCatalogVersions;\r\n                if (this.isSingleVersionSelector) {\r\n                    this.reset();\r\n                }\r\n                this.setContent();\r\n            }\r\n        });\r\n    }\r\n    setContent() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const setContent = () => __awaiter(this, void 0, void 0, function* () {\r\n                this.productCatalogs = yield this.catalogService.getProductCatalogsForSite(this.getSiteUIDFromContentCatalogVersionId(this.contentCatalogVersionId));\r\n                if (this.productCatalogs.length === 0) {\r\n                    return;\r\n                }\r\n                if (this.productCatalogs.length === 1) {\r\n                    this.fetchStrategy = {\r\n                        fetchAll: () => {\r\n                            const parsedVersions = this.parseSingleCatalogVersion(this.productCatalogs[0].versions);\r\n                            return Promise.resolve(parsedVersions);\r\n                        }\r\n                    };\r\n                    this.isSingleVersionSelector = true;\r\n                    this.isMultiVersionSelector = false;\r\n                    this.isReady = true;\r\n                    return;\r\n                }\r\n                this.isSingleVersionSelector = false;\r\n                this.isMultiVersionSelector = true;\r\n                this.isReady = true;\r\n            });\r\n            yield setContent();\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    getSiteUIDFromContentCatalogVersionId(id) {\r\n        return id.split('|')[0];\r\n    }\r\n    parseSingleCatalogVersion(versions) {\r\n        return versions.map((version) => ({\r\n            id: version.uuid,\r\n            label: version.version\r\n        }));\r\n    }\r\n};\r\nProductCatalogVersionsSelectorComponent = __decorate([\r\n    Component({\r\n        selector: 'se-product-catalog-versions-selector',\r\n        changeDetection: ChangeDetectionStrategy.OnPush,\r\n        host: {\r\n            '[class.se-product-catalog-versions-selector]': 'true'\r\n        },\r\n        template: `<ng-container *ngIf=\"isReady\"><se-select *ngIf=\"isSingleVersionSelector\" [id]=\"geData.qualifier\" [(model)]=\"geData.model.productCatalogVersions[0]\" [(reset)]=\"reset\" [fetchStrategy]=\"fetchStrategy\"></se-select><se-multi-product-catalog-version-selector *ngIf=\"isMultiVersionSelector\" [productCatalogs]=\"productCatalogs\" [(selectedProductCatalogVersions)]=\"geData.model[geData.qualifier]\"></se-multi-product-catalog-version-selector></ng-container>`\r\n    }),\r\n    __param(0, Inject(GENERIC_EDITOR_WIDGET_DATA)),\r\n    __metadata(\"design:paramtypes\", [Object, ICatalogService,\r\n        SystemEventService,\r\n        ChangeDetectorRef])\r\n], ProductCatalogVersionsSelectorComponent);\r\nexport { ProductCatalogVersionsSelectorComponent };\r\n//# sourceMappingURL=ProductCatalogVersionsSelectorComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"ProductCatalogVersionsSelectorComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/productCatalogVersion/productCatalogVersionsSelector/ProductCatalogVersionsSelectorComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/productCatalogVersion/productCatalogVersionsSelector/ProductCatalogVersionsSelectorComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { FetchStrategy, GenericEditorWidgetData, IBaseCatalog, ICatalogService, SelectReset, SystemEventService, TypedMap } from 'smarteditcommons';\r\nimport './ProductCatalogVersionsSelectorComponent.scss';\r\nexport declare class ProductCatalogVersionsSelectorComponent implements OnInit, OnDestroy {\r\n    geData: GenericEditorWidgetData<TypedMap<any>>;\r\n    private catalogService;\r\n    private systemEventService;\r\n    private cdr;\r\n    contentCatalogVersionId: string;\r\n    isReady: boolean;\r\n    isSingleVersionSelector: boolean;\r\n    isMultiVersionSelector: boolean;\r\n    fetchStrategy: FetchStrategy;\r\n    reset: SelectReset;\r\n    productCatalogs: IBaseCatalog[];\r\n    private $unRegSiteChangeEvent;\r\n    constructor(geData: GenericEditorWidgetData<TypedMap<any>>, catalogService: ICatalogService, systemEventService: SystemEventService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    ngOnDestroy(): void;\r\n    private resetSelector;\r\n    private setContent;\r\n    private getSiteUIDFromContentCatalogVersionId;\r\n    private parseSingleCatalogVersion;\r\n}\r\n"}}
