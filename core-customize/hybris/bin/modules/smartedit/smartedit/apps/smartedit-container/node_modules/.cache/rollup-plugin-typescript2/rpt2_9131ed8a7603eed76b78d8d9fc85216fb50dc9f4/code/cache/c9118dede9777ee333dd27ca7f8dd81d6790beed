{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { objectUtils, stringUtils, ALL_PERSPECTIVE, CrossFrameEventService, EVENT_PERSPECTIVE_ADDED, EVENT_PERSPECTIVE_CHANGED, EVENT_PERSPECTIVE_REFRESHED, EVENT_PERSPECTIVE_UNLOADING, EVENT_PERSPECTIVE_UPDATED, EVENTS, GatewayProxied, IFeatureService, IPermissionService, IPerspectiveService, IStorageService, IWaitDialogService, LogService, NONE_PERSPECTIVE, PERSPECTIVE_SELECTOR_WIDGET_KEY, SeDowngradeService, SmarteditRoutingService, SystemEventService, STORE_FRONT_CONTEXT } from 'smarteditcommons';\r\n/** @internal */\r\nlet /* @ngInject */ PerspectiveService = class /* @ngInject */ PerspectiveService extends IPerspectiveService {\r\n    constructor(routingService, logService, systemEventService, featureService, waitDialogService, storageService, crossFrameEventService, permissionService) {\r\n        super();\r\n        this.routingService = routingService;\r\n        this.logService = logService;\r\n        this.systemEventService = systemEventService;\r\n        this.featureService = featureService;\r\n        this.waitDialogService = waitDialogService;\r\n        this.storageService = storageService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.permissionService = permissionService;\r\n        this.PERSPECTIVE_COOKIE_NAME = 'smartedit-perspectives';\r\n        this.INITIAL_SWITCHTO_ARG = 'INITIAL_SWITCHTO_ARG';\r\n        this.data = {\r\n            activePerspective: undefined,\r\n            previousPerspective: undefined,\r\n            previousSwitchToArg: this.INITIAL_SWITCHTO_ARG\r\n        };\r\n        this.immutablePerspectives = []; // once a perspective is registered it will always exists in this variable\r\n        this.perspectives = [];\r\n        this._addDefaultPerspectives();\r\n        this._registerEventHandlers();\r\n        this.NON_PERSPECTIVE_OBJECT = { key: NONE_PERSPECTIVE, nameI18nKey: '', features: [] };\r\n    }\r\n    register(configuration) {\r\n        this._validate(configuration);\r\n        let perspective = this._findByKey(configuration.key);\r\n        if (!perspective) {\r\n            this._addPerspectiveSelectorWidget(configuration);\r\n            perspective = configuration;\r\n            perspective.isHotkeyDisabled = !!configuration.isHotkeyDisabled;\r\n            this.immutablePerspectives.push(perspective);\r\n            this.perspectives.push(perspective);\r\n            this.systemEventService.publishAsync(EVENT_PERSPECTIVE_ADDED);\r\n        }\r\n        else {\r\n            perspective.features = objectUtils.uniqueArray(perspective.features || [], configuration.features || []);\r\n            perspective.perspectives = objectUtils.uniqueArray(perspective.perspectives || [], configuration.perspectives || []);\r\n            perspective.permissions = objectUtils.uniqueArray(perspective.permissions || [], configuration.permissions || []);\r\n            this.systemEventService.publishAsync(EVENT_PERSPECTIVE_UPDATED);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    // Filters immutablePerspectives to determine which perspectives are available, taking into account security\r\n    getPerspectives() {\r\n        const promises = [];\r\n        this.immutablePerspectives.forEach((perspective) => {\r\n            let promise;\r\n            if (perspective.permissions && perspective.permissions.length > 0) {\r\n                promise = this.permissionService.isPermitted([\r\n                    {\r\n                        names: perspective.permissions\r\n                    }\r\n                ]);\r\n            }\r\n            else {\r\n                promise = Promise.resolve(true);\r\n            }\r\n            promises.push(promise);\r\n        });\r\n        return Promise.all(promises).then((results) => this.immutablePerspectives.filter((perspective, index) => results[index]));\r\n    }\r\n    hasActivePerspective() {\r\n        return Promise.resolve(Boolean(this.data.activePerspective));\r\n    }\r\n    getActivePerspective() {\r\n        return this.data.activePerspective\r\n            ? Object.assign({}, this._findByKey(this.data.activePerspective.key)) : null;\r\n    }\r\n    isEmptyPerspectiveActive() {\r\n        return Promise.resolve(!!this.data.activePerspective && this.data.activePerspective.key === NONE_PERSPECTIVE);\r\n    }\r\n    switchTo(key) {\r\n        if (!this._changeActivePerspective(key)) {\r\n            this.waitDialogService.hideWaitModal();\r\n            return Promise.resolve();\r\n        }\r\n        this._handleUnloadEvent(key);\r\n        this.waitDialogService.showWaitModal();\r\n        const featuresFromPreviousPerspective = [];\r\n        if (this.data.previousPerspective) {\r\n            this._fetchAllFeatures(this.data.previousPerspective, featuresFromPreviousPerspective);\r\n        }\r\n        const featuresFromNewPerspective = [];\r\n        this._fetchAllFeatures(this.data.activePerspective, featuresFromNewPerspective);\r\n        // deactivating any active feature not belonging to either the perspective or one of its nested perspectives\r\n        featuresFromPreviousPerspective\r\n            .filter((featureKey) => !featuresFromNewPerspective.some((f) => featureKey === f))\r\n            .forEach((featureKey) => {\r\n            this.featureService.disable(featureKey);\r\n        });\r\n        // activating any feature belonging to either the perspective or one of its nested perspectives\r\n        const permissionPromises = [];\r\n        featuresFromNewPerspective\r\n            .filter((feature) => !featuresFromPreviousPerspective.some((f) => feature === f))\r\n            .forEach((featureKey) => {\r\n            permissionPromises.push(this._enableOrDisableFeature(featureKey));\r\n        });\r\n        return Promise.all(permissionPromises).then(() => {\r\n            if (this.data.activePerspective.key === NONE_PERSPECTIVE) {\r\n                this.waitDialogService.hideWaitModal();\r\n            }\r\n            this.crossFrameEventService.publish(EVENT_PERSPECTIVE_CHANGED, this.data.activePerspective.key !== NONE_PERSPECTIVE);\r\n        });\r\n    }\r\n    selectDefault() {\r\n        return this.getPerspectives().then((perspectives) => this.storageService\r\n            .getValueFromLocalStorage(this.PERSPECTIVE_COOKIE_NAME, true)\r\n            .then((cookieValue) => {\r\n            //  restricted by permission\r\n            const perspectiveAvailable = perspectives.find((p) => p.key === cookieValue);\r\n            let defaultPerspective;\r\n            let perspective;\r\n            if (!perspectiveAvailable) {\r\n                this.logService.warn('Cannot select mode \"' +\r\n                    cookieValue +\r\n                    '\" It might not exist or is restricted.');\r\n                // from full list of perspectives, regardless of permissions\r\n                const perspectiveFromCookie = this._findByKey(cookieValue);\r\n                if (!!perspectiveFromCookie) {\r\n                    this._disableAllFeaturesForPerspective(perspectiveFromCookie);\r\n                }\r\n                defaultPerspective = this.NON_PERSPECTIVE_OBJECT;\r\n                perspective = this.NON_PERSPECTIVE_OBJECT;\r\n            }\r\n            else {\r\n                const perspectiveFromCookie = this._findByKey(cookieValue);\r\n                defaultPerspective = perspectiveFromCookie\r\n                    ? perspectiveFromCookie\r\n                    : this.NON_PERSPECTIVE_OBJECT;\r\n                perspective = this.data.previousPerspective\r\n                    ? this.data.previousPerspective\r\n                    : defaultPerspective;\r\n            }\r\n            if (defaultPerspective.key !== this.NON_PERSPECTIVE_OBJECT.key) {\r\n                this._disableAllFeaturesForPerspective(defaultPerspective);\r\n            }\r\n            return this.switchTo(perspective.key);\r\n        }));\r\n    }\r\n    refreshPerspective() {\r\n        return this.getPerspectives().then((result) => {\r\n            const activePerspective = this.getActivePerspective();\r\n            if (!activePerspective) {\r\n                return this.selectDefault();\r\n            }\r\n            else {\r\n                this.perspectives = result;\r\n                if (!this._findByKey(activePerspective.key)) {\r\n                    return this.switchTo(NONE_PERSPECTIVE);\r\n                }\r\n                else {\r\n                    const features = [];\r\n                    const permissionPromises = [];\r\n                    this._fetchAllFeatures(activePerspective, features);\r\n                    features.forEach((featureKey) => {\r\n                        permissionPromises.push(this._enableOrDisableFeature(featureKey));\r\n                    });\r\n                    return Promise.all(permissionPromises).then(() => {\r\n                        this.waitDialogService.hideWaitModal();\r\n                        this.crossFrameEventService.publish(EVENT_PERSPECTIVE_REFRESHED, activePerspective.key !== NONE_PERSPECTIVE);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getActivePerspectiveKey() {\r\n        const activePerspective = this.getActivePerspective();\r\n        return Promise.resolve(activePerspective ? activePerspective.key : null);\r\n    }\r\n    isHotkeyEnabledForActivePerspective() {\r\n        const activePerspective = this.getActivePerspective();\r\n        return Promise.resolve(activePerspective && !activePerspective.isHotkeyDisabled);\r\n    }\r\n    _addPerspectiveSelectorWidget(configuration) {\r\n        configuration.features = configuration.features || [];\r\n        if (configuration.features.indexOf(PERSPECTIVE_SELECTOR_WIDGET_KEY) === -1) {\r\n            configuration.features.unshift(PERSPECTIVE_SELECTOR_WIDGET_KEY);\r\n        }\r\n    }\r\n    _addDefaultPerspectives() {\r\n        this.register({\r\n            key: NONE_PERSPECTIVE,\r\n            nameI18nKey: 'se.perspective.none.name',\r\n            isHotkeyDisabled: true,\r\n            descriptionI18nKey: 'se.perspective.none.description.disabled'\r\n        });\r\n        this.register({\r\n            key: ALL_PERSPECTIVE,\r\n            nameI18nKey: 'se.perspective.all.name',\r\n            descriptionI18nKey: 'se.perspective.all.description'\r\n        });\r\n    }\r\n    _registerEventHandlers() {\r\n        this.systemEventService.subscribe(EVENTS.LOGOUT, this._clearPerspectiveFeatures.bind(this));\r\n        this.crossFrameEventService.subscribe(EVENTS.USER_HAS_CHANGED, this._clearPerspectiveFeatures.bind(this));\r\n        // clear the features when navigating to another page than the storefront. this is preventing a flickering of toolbar icons when going back to storefront on another page.\r\n        this.routingService.routeChangeSuccess().subscribe((event) => {\r\n            const url = this.routingService.getCurrentUrlFromEvent(event);\r\n            if ((url || '').includes(STORE_FRONT_CONTEXT)) {\r\n                this._clearPerspectiveFeatures();\r\n            }\r\n        });\r\n    }\r\n    _validate(configuration) {\r\n        if (stringUtils.isBlank(configuration.key)) {\r\n            throw new Error('perspectiveService.configuration.key.error.required');\r\n        }\r\n        if (stringUtils.isBlank(configuration.nameI18nKey)) {\r\n            throw new Error('perspectiveService.configuration.nameI18nKey.error.required');\r\n        }\r\n        if ([NONE_PERSPECTIVE, ALL_PERSPECTIVE].indexOf(configuration.key) === -1 &&\r\n            (stringUtils.isBlank(configuration.features) || configuration.features.length === 0)) {\r\n            throw new Error('perspectiveService.configuration.features.error.required');\r\n        }\r\n    }\r\n    _findByKey(key) {\r\n        return this.perspectives.find((perspective) => perspective.key === key);\r\n    }\r\n    _fetchAllFeatures(perspective, holder) {\r\n        if (!holder) {\r\n            holder = [];\r\n        }\r\n        if (perspective.key === ALL_PERSPECTIVE) {\r\n            objectUtils.uniqueArray(holder, this.featureService.getFeatureKeys() || []);\r\n        }\r\n        else {\r\n            objectUtils.uniqueArray(holder, perspective.features || []);\r\n            (perspective.perspectives || []).forEach((perspectiveKey) => {\r\n                const nestedPerspective = this._findByKey(perspectiveKey);\r\n                if (nestedPerspective) {\r\n                    this._fetchAllFeatures(nestedPerspective, holder);\r\n                }\r\n                else {\r\n                    this.logService.debug('nested perspective ' + perspectiveKey + ' was not found in the registry');\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _enableOrDisableFeature(featureKey) {\r\n        return this.featureService\r\n            .getFeatureProperty(featureKey, 'permissions')\r\n            .then((permissionNames) => {\r\n            if (!Array.isArray(permissionNames)) {\r\n                permissionNames = [];\r\n            }\r\n            return this.permissionService\r\n                .isPermitted([\r\n                {\r\n                    names: permissionNames\r\n                }\r\n            ])\r\n                .then((allowCallback) => {\r\n                if (allowCallback) {\r\n                    this.featureService.enable(featureKey);\r\n                }\r\n                else {\r\n                    this.featureService.disable(featureKey);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Takes care of sending EVENT_PERSPECTIVE_UNLOADING when perspectives change.\r\n     *\r\n     * This function tracks the \"key\" argument in calls to switchTo(..) function in order to detect when a\r\n     * perspective is being switched.\r\n     */\r\n    _handleUnloadEvent(nextPerspectiveKey) {\r\n        if (nextPerspectiveKey !== this.data.previousSwitchToArg &&\r\n            this.data.previousSwitchToArg !== this.INITIAL_SWITCHTO_ARG) {\r\n            this.crossFrameEventService.publish(EVENT_PERSPECTIVE_UNLOADING, this.data.previousSwitchToArg);\r\n        }\r\n        this.data.previousSwitchToArg = nextPerspectiveKey;\r\n    }\r\n    _retrievePerspective(key) {\r\n        // Validation\r\n        // Change the perspective only if it makes sense.\r\n        if (this.data.activePerspective && this.data.activePerspective.key === key) {\r\n            return null;\r\n        }\r\n        const newPerspective = this._findByKey(key);\r\n        if (!newPerspective) {\r\n            throw new Error(\"switchTo() - Couldn't find perspective with key \" + key);\r\n        }\r\n        return newPerspective;\r\n    }\r\n    _changeActivePerspective(newPerspectiveKey) {\r\n        const newPerspective = this._retrievePerspective(newPerspectiveKey);\r\n        if (newPerspective) {\r\n            this.data.previousPerspective = this.data.activePerspective;\r\n            this.data.activePerspective = newPerspective;\r\n            this.storageService.setValueInLocalStorage(this.PERSPECTIVE_COOKIE_NAME, newPerspective.key, true);\r\n        }\r\n        return newPerspective;\r\n    }\r\n    _disableAllFeaturesForPerspective(perspective) {\r\n        const features = [];\r\n        this._fetchAllFeatures(perspective, features);\r\n        features.forEach((featureKey) => {\r\n            this.featureService.disable(featureKey);\r\n        });\r\n    }\r\n    _clearPerspectiveFeatures() {\r\n        // De-activates all current perspective's features (Still leaves the cookie in the system).\r\n        const perspectiveFeatures = [];\r\n        if (this.data && this.data.activePerspective) {\r\n            this._fetchAllFeatures(this.data.activePerspective, perspectiveFeatures);\r\n        }\r\n        perspectiveFeatures.forEach((feature) => {\r\n            this.featureService.disable(feature);\r\n        });\r\n        return Promise.resolve();\r\n    }\r\n};\r\n/* @ngInject */ PerspectiveService = __decorate([\r\n    SeDowngradeService(IPerspectiveService),\r\n    GatewayProxied('register', 'switchTo', 'hasActivePerspective', 'isEmptyPerspectiveActive', 'selectDefault', 'refreshPerspective', 'getActivePerspectiveKey', 'isHotkeyEnabledForActivePerspective'),\r\n    __metadata(\"design:paramtypes\", [SmarteditRoutingService,\r\n        LogService,\r\n        SystemEventService,\r\n        IFeatureService,\r\n        IWaitDialogService,\r\n        IStorageService,\r\n        CrossFrameEventService,\r\n        IPermissionService])\r\n], /* @ngInject */ PerspectiveService);\r\nexport { /* @ngInject */ PerspectiveService };\r\n//# sourceMappingURL=PerspectiveServiceOuter.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+router@8.2.14_e9fbe5720e9434eb9ae0f6720f1ca3f4/node_modules/@angular/router/router.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"PerspectiveServiceOuter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/perspectives/PerspectiveServiceOuter.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/perspectives/PerspectiveServiceOuter.d.ts","writeByteOrderMark":false,"text":"import { CrossFrameEventService, IFeatureService, IPermissionService, IPerspective, IPerspectiveService, IStorageService, IWaitDialogService, LogService, SmarteditRoutingService, SystemEventService } from 'smarteditcommons';\r\n/** @internal */\r\nexport declare class PerspectiveService extends IPerspectiveService {\r\n    private routingService;\r\n    private logService;\r\n    private systemEventService;\r\n    private featureService;\r\n    private waitDialogService;\r\n    private storageService;\r\n    private crossFrameEventService;\r\n    private permissionService;\r\n    private readonly PERSPECTIVE_COOKIE_NAME;\r\n    private readonly INITIAL_SWITCHTO_ARG;\r\n    private data;\r\n    private immutablePerspectives;\r\n    private perspectives;\r\n    private NON_PERSPECTIVE_OBJECT;\r\n    constructor(routingService: SmarteditRoutingService, logService: LogService, systemEventService: SystemEventService, featureService: IFeatureService, waitDialogService: IWaitDialogService, storageService: IStorageService, crossFrameEventService: CrossFrameEventService, permissionService: IPermissionService);\r\n    register(configuration: IPerspective): Promise<void>;\r\n    getPerspectives(): Promise<IPerspective[]>;\r\n    hasActivePerspective(): Promise<boolean>;\r\n    getActivePerspective(): IPerspective;\r\n    isEmptyPerspectiveActive(): Promise<boolean>;\r\n    switchTo(key: string): Promise<void>;\r\n    selectDefault(): Promise<void>;\r\n    refreshPerspective(): Promise<void>;\r\n    getActivePerspectiveKey(): Promise<string>;\r\n    isHotkeyEnabledForActivePerspective(): Promise<boolean>;\r\n    private _addPerspectiveSelectorWidget;\r\n    private _addDefaultPerspectives;\r\n    private _registerEventHandlers;\r\n    private _validate;\r\n    private _findByKey;\r\n    private _fetchAllFeatures;\r\n    private _enableOrDisableFeature;\r\n    /**\r\n     * Takes care of sending EVENT_PERSPECTIVE_UNLOADING when perspectives change.\r\n     *\r\n     * This function tracks the \"key\" argument in calls to switchTo(..) function in order to detect when a\r\n     * perspective is being switched.\r\n     */\r\n    private _handleUnloadEvent;\r\n    private _retrievePerspective;\r\n    private _changeActivePerspective;\r\n    private _disableAllFeaturesForPerspective;\r\n    private _clearPerspectiveFeatures;\r\n}\r\n"}}
