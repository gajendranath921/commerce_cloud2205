{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { forwardRef, Component, Inject, Input } from '@angular/core';\r\nimport { ToolbarDropDownPosition, ToolbarItemType, ToolbarSection } from 'smarteditcommons';\r\nimport { ToolbarComponent } from './ToolbarComponent';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ToolbarActionComponent\", {\r\n    selector: 'se-toolbar-action',\r\n    template: `<div *ngIf=\"item.isPermissionGranted\"><div *ngIf=\"item.type == type.ACTION\" class=\"toolbar-action\"><button type=\"button\" [ngClass]=\"{\n                'toolbar-action--button--compact': isCompact,\n                'toolbar-action--button': !isCompact\n            }\" class=\"btn\" (click)=\"toolbar.triggerAction(item, $event)\" [attr.aria-pressed]=\"false\" [attr.aria-haspopup]=\"true\" [attr.aria-expanded]=\"false\" id=\"{{toolbar.toolbarName}}_option_{{item.key}}_btn\"><span *ngIf=\"item.iconClassName\" id=\"{{toolbar.toolbarName}}_option_{{item.key}}_btn_iconclass\" class=\"{{item.iconClassName}}\" [ngClass]=\"{ 'se-toolbar-actions__icon': isCompact }\"></span> <img *ngIf=\"!item.iconClassName && item.icons\" id=\"{{toolbar.toolbarName}}_option_{{item.key}}\" src=\"{{toolbar.imageRoot}}{{item.icons[0]}}\" class=\"file\" title=\"{{item.name | translate}}\" alt=\"{{item.name | translate}}\"/> <span *ngIf=\"!isCompact\" class=\"toolbar-action-button__txt\" id=\"{{toolbar.toolbarName}}_option_{{item.key}}_btn_lbl\">{{item.name | translate}}</span></button></div><fd-popover class=\"se-toolbar-action__wrapper toolbar-action toolbar-action--hybrid\" *ngIf=\"item.type === type.HYBRID_ACTION\" [attr.data-item-key]=\"item.key\" [triggers]=\"['click']\" [noArrow]=\"false\" [isOpen]=\"item.isOpen\" [closeOnOutsideClick]=\"false\" (isOpenChange)=\"onOpenChange()\" [placement]=\"placement\" seClickOutside (clickOutside)=\"onOutsideClicked()\"><fd-popover-control><button *ngIf=\"item.iconClassName || item.icons\" type=\"button\" class=\"btn\" [ngClass]=\"{\n                    'toolbar-action--button--compact': isCompact,\n                    'toolbar-action--button': !isCompact\n                }\" [disabled]=\"disabled\" [attr.aria-pressed]=\"false \" (click)=\"toolbar.triggerAction(item, $event)\"><span *ngIf=\"item.iconClassName\" class=\"{{item.iconClassName}}\" [ngClass]=\"{ 'se-toolbar-actions__icon': isCompact }\"></span> <img *ngIf=\"!item.iconClassName && item.icons\" id=\"{{toolbar.toolbarName}}_option_{{item.key}}\" src=\"{{toolbar.imageRoot}}{{item.icons[0]}}\" class=\"file\" title=\"{{item.name | translate}}\" alt=\"{{item.name | translate}}\"/> <span *ngIf=\"!isCompact\" class=\"toolbar-action-button__txt\">{{item.name | translate}}</span></button></fd-popover-control><fd-popover-body class=\"se-toolbar-action__body\" [ngClass]=\"{\n                'toolbar-action--include--compact': isCompact,\n                'toolbar-action--include': !isCompact\n              \n            }\"><se-prevent-vertical-overflow><ng-container *ngIf=\"toolbar.getItemVisibility(item) && item.component\"><ng-container *ngComponentOutlet=\"item.component; injector: actionInjector\"></ng-container></ng-container></se-prevent-vertical-overflow></fd-popover-body></fd-popover></div>`\r\n});\r\nlet ToolbarActionComponent = class ToolbarActionComponent {\r\n    constructor(toolbar) {\r\n        this.toolbar = toolbar;\r\n        this.type = ToolbarItemType;\r\n    }\r\n    ngOnInit() {\r\n        this.setup();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.item) {\r\n            this.setup();\r\n        }\r\n    }\r\n    get isCompact() {\r\n        return this.item.actionButtonFormat === 'compact';\r\n    }\r\n    get placement() {\r\n        if (this.item.section === ToolbarSection.left ||\r\n            this.item.section === ToolbarSection.middle) {\r\n            return 'bottom-start';\r\n        }\r\n        else if (this.item.section === ToolbarSection.right) {\r\n            return 'bottom-end';\r\n        }\r\n        switch (this.item.dropdownPosition) {\r\n            case ToolbarDropDownPosition.left:\r\n                return 'bottom-start';\r\n            case ToolbarDropDownPosition.right:\r\n                return 'bottom-end';\r\n            default:\r\n                return 'bottom';\r\n        }\r\n    }\r\n    onOutsideClicked() {\r\n        this.item.isOpen = false;\r\n    }\r\n    onOpenChange() {\r\n        this.item.isOpen = !this.item.isOpen;\r\n    }\r\n    setup() {\r\n        this.actionInjector = this.toolbar.createInjector(this.item);\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], ToolbarActionComponent.prototype, \"item\", void 0);\r\nToolbarActionComponent = __decorate([\r\n    Component({\r\n        selector: 'se-toolbar-action',\r\n        template: `<div *ngIf=\"item.isPermissionGranted\"><div *ngIf=\"item.type == type.ACTION\" class=\"toolbar-action\"><button type=\"button\" [ngClass]=\"{\n                'toolbar-action--button--compact': isCompact,\n                'toolbar-action--button': !isCompact\n            }\" class=\"btn\" (click)=\"toolbar.triggerAction(item, $event)\" [attr.aria-pressed]=\"false\" [attr.aria-haspopup]=\"true\" [attr.aria-expanded]=\"false\" id=\"{{toolbar.toolbarName}}_option_{{item.key}}_btn\"><span *ngIf=\"item.iconClassName\" id=\"{{toolbar.toolbarName}}_option_{{item.key}}_btn_iconclass\" class=\"{{item.iconClassName}}\" [ngClass]=\"{ 'se-toolbar-actions__icon': isCompact }\"></span> <img *ngIf=\"!item.iconClassName && item.icons\" id=\"{{toolbar.toolbarName}}_option_{{item.key}}\" src=\"{{toolbar.imageRoot}}{{item.icons[0]}}\" class=\"file\" title=\"{{item.name | translate}}\" alt=\"{{item.name | translate}}\"/> <span *ngIf=\"!isCompact\" class=\"toolbar-action-button__txt\" id=\"{{toolbar.toolbarName}}_option_{{item.key}}_btn_lbl\">{{item.name | translate}}</span></button></div><fd-popover class=\"se-toolbar-action__wrapper toolbar-action toolbar-action--hybrid\" *ngIf=\"item.type === type.HYBRID_ACTION\" [attr.data-item-key]=\"item.key\" [triggers]=\"['click']\" [noArrow]=\"false\" [isOpen]=\"item.isOpen\" [closeOnOutsideClick]=\"false\" (isOpenChange)=\"onOpenChange()\" [placement]=\"placement\" seClickOutside (clickOutside)=\"onOutsideClicked()\"><fd-popover-control><button *ngIf=\"item.iconClassName || item.icons\" type=\"button\" class=\"btn\" [ngClass]=\"{\n                    'toolbar-action--button--compact': isCompact,\n                    'toolbar-action--button': !isCompact\n                }\" [disabled]=\"disabled\" [attr.aria-pressed]=\"false \" (click)=\"toolbar.triggerAction(item, $event)\"><span *ngIf=\"item.iconClassName\" class=\"{{item.iconClassName}}\" [ngClass]=\"{ 'se-toolbar-actions__icon': isCompact }\"></span> <img *ngIf=\"!item.iconClassName && item.icons\" id=\"{{toolbar.toolbarName}}_option_{{item.key}}\" src=\"{{toolbar.imageRoot}}{{item.icons[0]}}\" class=\"file\" title=\"{{item.name | translate}}\" alt=\"{{item.name | translate}}\"/> <span *ngIf=\"!isCompact\" class=\"toolbar-action-button__txt\">{{item.name | translate}}</span></button></fd-popover-control><fd-popover-body class=\"se-toolbar-action__body\" [ngClass]=\"{\n                'toolbar-action--include--compact': isCompact,\n                'toolbar-action--include': !isCompact\n              \n            }\"><se-prevent-vertical-overflow><ng-container *ngIf=\"toolbar.getItemVisibility(item) && item.component\"><ng-container *ngComponentOutlet=\"item.component; injector: actionInjector\"></ng-container></ng-container></se-prevent-vertical-overflow></fd-popover-body></fd-popover></div>`\r\n    }),\r\n    __param(0, Inject(forwardRef(() => ToolbarComponent))),\r\n    __metadata(\"design:paramtypes\", [ToolbarComponent])\r\n], ToolbarActionComponent);\r\nexport { ToolbarActionComponent };\r\n//# sourceMappingURL=ToolbarActionComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/toolbar/components/ToolbarComponent.ts"],"map":"{\"version\":3,\"file\":\"ToolbarActionComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/services/toolbar/components/ToolbarActionComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EACH,UAAU,EACV,SAAS,EACT,MAAM,EAEN,KAAK,EAIR,MAAM,eAAe,CAAC;AAEvB,OAAO,EAEH,uBAAuB,EAEvB,eAAe,EACf,cAAc,EACjB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;gFAG3C;IACP,QAAQ,EAAE,mBAAmB;IAC7B,QAAQ,EAAE;;;;;;;;;;oSAUsR;CACnS;AACD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAM/B,YAA+D,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QAFjF,SAAI,GAAG,eAAe,CAAC;IAE6D,CAAC;IAE5F,QAAQ;QACJ,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAED,WAAW,CAAC,OAAsB;QAC9B,IAAI,OAAO,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;IACL,CAAC;IAED,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,kBAAkB,KAAK,SAAS,CAAC;IACtD,CAAC;IAED,IAAW,SAAS;QAChB,IACI,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,cAAc,CAAC,IAAI;YACzC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,cAAc,CAAC,MAAM,EAC7C;YACE,OAAO,cAAc,CAAC;SACzB;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,cAAc,CAAC,KAAK,EAAE;YACnD,OAAO,YAAY,CAAC;SACvB;QAED,QAAQ,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAChC,KAAK,uBAAuB,CAAC,IAAI;gBAC7B,OAAO,cAAc,CAAC;YAC1B,KAAK,uBAAuB,CAAC,KAAK;gBAC9B,OAAO,YAAY,CAAC;YACxB;gBACI,OAAO,QAAQ,CAAC;SACvB;IACL,CAAC;IAEM,gBAAgB;QACnB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC7B,CAAC;IAEM,YAAY;QACf,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IACzC,CAAC;IAEO,KAAK;QACT,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;CACJ,CAAA;AApDY;IAAR,KAAK,EAAE;;oDAA2B;AAD1B,sBAAsB;IAdlC,SAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE;;;;;;;;;;oSAUsR;KACnS,CAAC;IAOe,WAAA,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAA;qCAAiB,gBAAgB;GAN/E,sBAAsB,CAqDlC;SArDY,sBAAsB\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/toolbar/components/ToolbarActionComponent.d.ts","writeByteOrderMark":false,"text":"import { Injector, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Placement, ToolbarItemInternal, ToolbarItemType } from 'smarteditcommons';\r\nimport { ToolbarComponent } from './ToolbarComponent';\r\nexport declare class ToolbarActionComponent implements OnInit, OnChanges {\r\n    toolbar: ToolbarComponent;\r\n    item: ToolbarItemInternal;\r\n    actionInjector: Injector;\r\n    type: typeof ToolbarItemType;\r\n    constructor(toolbar: ToolbarComponent);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    get isCompact(): boolean;\r\n    get placement(): Placement;\r\n    onOutsideClicked(): void;\r\n    onOpenChange(): void;\r\n    private setup;\r\n}\r\n"}}
