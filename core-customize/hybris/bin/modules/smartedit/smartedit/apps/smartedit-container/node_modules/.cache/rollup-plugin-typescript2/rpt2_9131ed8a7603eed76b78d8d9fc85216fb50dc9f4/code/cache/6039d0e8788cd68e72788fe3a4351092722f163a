{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport './PerspectiveSelectorComponent.scss';\r\nimport { Component, HostListener, Inject, Input } from '@angular/core';\r\nimport { ALL_PERSPECTIVE, CrossFrameEventService, EVENT_PERSPECTIVE_ADDED, EVENT_PERSPECTIVE_CHANGED, EVENT_PERSPECTIVE_REFRESHED, EVENT_SERVICE, EVENT_STRICT_PREVIEW_MODE_REQUESTED, EVENTS, IIframeClickDetectionService, IPerspectiveService, LogService, NONE_PERSPECTIVE, SeDowngradeComponent, SystemEventService, TestModeService, YJQUERY_TOKEN, UserTrackingService, USER_TRACKING_FUNCTIONALITY } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"PerspectiveSelectorComponent\", {\r\n    selector: 'se-perspective-selector',\r\n    template: `<fd-popover [(isOpen)]=\"isOpen\" [closeOnOutsideClick]=\"false\" [triggers]=\"['click']\" *ngIf=\"hasActivePerspective()\" class=\"se-perspective-selector\" [placement]=\"'bottom-end'\" [disabled]=\"isDisabled\" [options]=\"popperOptions\"><fd-popover-control><div class=\"se-perspective-selector__trigger\"><se-tooltip [isChevronVisible]=\"true\" [triggers]=\"['mouseenter', 'mouseleave']\" *ngIf=\"isTooltipVisible()\"><span se-tooltip-trigger id=\"perspectiveTooltip\" class=\"hyicon hyicon-info se-perspective-selector__hotkey-tooltip--icon\"></span><div se-tooltip-body>{{ activePerspective.descriptionI18nKey | translate }}</div></se-tooltip><button class=\"se-perspective-selector__btn\" [disabled]=\"isDisabled\">{{getActivePerspectiveName() | translate}} <span class=\"se-perspective-selector__btn-arrow icon-navigation-down-arrow\"></span></button></div></fd-popover-control><fd-popover-body><ul class=\"se-perspective__list fd-list-group\" [ngClass]=\"{'se-perspective__list--tooltip': isTooltipVisible()}\" role=\"menu\"><li *ngFor=\"let choice of getDisplayedPerspectives()\" class=\"fd-list-group__item se-perspective__list-item fd-has-padding-none\"><a class=\"item se-perspective__list-item-text\" (click)=\"selectPerspective($event, choice.key);\">{{choice.nameI18nKey | translate}}</a></li></ul></fd-popover-body></fd-popover>`\r\n});\r\nlet /* @ngInject */ PerspectiveSelectorComponent = class /* @ngInject */ PerspectiveSelectorComponent {\r\n    constructor(logService, yjQuery, perspectiveService, iframeClickDetectionService, systemEventService, crossFrameEventService, testModeService, userTrackingService) {\r\n        this.logService = logService;\r\n        this.yjQuery = yjQuery;\r\n        this.perspectiveService = perspectiveService;\r\n        this.iframeClickDetectionService = iframeClickDetectionService;\r\n        this.systemEventService = systemEventService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.testModeService = testModeService;\r\n        this.userTrackingService = userTrackingService;\r\n        this.isOpen = false;\r\n        this.popperOptions = {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {\r\n                    enabled: true,\r\n                    escapeWithReference: true,\r\n                    boundariesElement: 'viewport'\r\n                },\r\n                applyStyle: {\r\n                    gpuAcceleration: false\r\n                }\r\n            }\r\n        };\r\n        this.isDisabled = false;\r\n        this.perspectives = [];\r\n        this.displayedPerspectives = [];\r\n        this.activePerspective = null;\r\n    }\r\n    onDocumentClick(event) {\r\n        this.onClickHandler(event);\r\n    }\r\n    ngOnInit() {\r\n        this.activePerspective = null;\r\n        this.iframeClickDetectionService.registerCallback('perspectiveSelectorClose', () => this.closeDropdown());\r\n        this.unRegOverlayDisabledFn = this.systemEventService.subscribe('OVERLAY_DISABLED', () => this.closeDropdown());\r\n        this.unRegPerspectiveAddedFn = this.systemEventService.subscribe(EVENT_PERSPECTIVE_ADDED, () => this.onPerspectiveAdded());\r\n        this.unRegPerspectiveChgFn = this.crossFrameEventService.subscribe(EVENT_PERSPECTIVE_CHANGED, () => this.refreshPerspectives());\r\n        this.unRegPerspectiveRefreshFn = this.crossFrameEventService.subscribe(EVENT_PERSPECTIVE_REFRESHED, () => this.refreshPerspectives());\r\n        this.unRegUserHasChanged = this.crossFrameEventService.subscribe(EVENTS.USER_HAS_CHANGED, () => this.onPerspectiveAdded());\r\n        this.unRegStrictPreviewModeToggleFn = this.crossFrameEventService.subscribe(EVENT_STRICT_PREVIEW_MODE_REQUESTED, (eventId, isDisabled) => this.togglePerspectiveSelector(isDisabled));\r\n        this.onPerspectiveAdded();\r\n    }\r\n    ngOnDestroy() {\r\n        this.unRegOverlayDisabledFn();\r\n        this.unRegPerspectiveAddedFn();\r\n        this.unRegPerspectiveChgFn();\r\n        this.unRegPerspectiveRefreshFn();\r\n        this.unRegUserHasChanged();\r\n        this.unRegStrictPreviewModeToggleFn();\r\n    }\r\n    selectPerspective(event, choice) {\r\n        event.preventDefault();\r\n        this.userTrackingService.trackingUserAction(USER_TRACKING_FUNCTIONALITY.SELECT_PERSPECTIVE, choice);\r\n        try {\r\n            this.perspectiveService.switchTo(choice);\r\n            this.closeDropdown();\r\n        }\r\n        catch (e) {\r\n            this.logService.error('selectPerspective() - Cannot select perspective.', e);\r\n        }\r\n    }\r\n    getDisplayedPerspectives() {\r\n        return this.displayedPerspectives;\r\n    }\r\n    getActivePerspectiveName() {\r\n        return this.activePerspective ? this.activePerspective.nameI18nKey : '';\r\n    }\r\n    hasActivePerspective() {\r\n        return this.activePerspective !== null;\r\n    }\r\n    isTooltipVisible() {\r\n        return (!!this.activePerspective &&\r\n            !!this.activePerspective.descriptionI18nKey &&\r\n            this.checkTooltipVisibilityCondition());\r\n    }\r\n    checkTooltipVisibilityCondition() {\r\n        if (this.activePerspective.key !== NONE_PERSPECTIVE ||\r\n            (this.activePerspective.key === NONE_PERSPECTIVE && this.isDisabled)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    filterPerspectives(perspectives) {\r\n        return perspectives.filter((perspective) => {\r\n            const isActivePerspective = this.activePerspective && perspective.key === this.activePerspective.key;\r\n            const isAllPerspective = perspective.key === ALL_PERSPECTIVE;\r\n            return !isActivePerspective && (!isAllPerspective || this.testModeService.isE2EMode());\r\n        });\r\n    }\r\n    closeDropdown() {\r\n        this.isOpen = false;\r\n    }\r\n    onPerspectiveAdded() {\r\n        this.perspectiveService.getPerspectives().then((result) => {\r\n            this.perspectives = result;\r\n            this.displayedPerspectives = this.filterPerspectives(this.perspectives);\r\n        });\r\n    }\r\n    refreshPerspectives() {\r\n        this.perspectiveService.getPerspectives().then((result) => {\r\n            this.perspectives = result;\r\n            this._refreshActivePerspective();\r\n            this.displayedPerspectives = this.filterPerspectives(this.perspectives);\r\n        });\r\n    }\r\n    _refreshActivePerspective() {\r\n        this.activePerspective = this.perspectiveService.getActivePerspective();\r\n    }\r\n    onClickHandler(event) {\r\n        if (this.yjQuery(event.target).parents('.se-perspective-selector').length <= 0 &&\r\n            this.isOpen) {\r\n            this.closeDropdown();\r\n        }\r\n    }\r\n    togglePerspectiveSelector(value) {\r\n        this.isDisabled = value;\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ PerspectiveSelectorComponent.prototype, \"isOpen\", void 0);\r\n__decorate([\r\n    HostListener('document:click', ['$event']),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Event]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], /* @ngInject */ PerspectiveSelectorComponent.prototype, \"onDocumentClick\", null);\r\n/* @ngInject */ PerspectiveSelectorComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-perspective-selector',\r\n        template: `<fd-popover [(isOpen)]=\"isOpen\" [closeOnOutsideClick]=\"false\" [triggers]=\"['click']\" *ngIf=\"hasActivePerspective()\" class=\"se-perspective-selector\" [placement]=\"'bottom-end'\" [disabled]=\"isDisabled\" [options]=\"popperOptions\"><fd-popover-control><div class=\"se-perspective-selector__trigger\"><se-tooltip [isChevronVisible]=\"true\" [triggers]=\"['mouseenter', 'mouseleave']\" *ngIf=\"isTooltipVisible()\"><span se-tooltip-trigger id=\"perspectiveTooltip\" class=\"hyicon hyicon-info se-perspective-selector__hotkey-tooltip--icon\"></span><div se-tooltip-body>{{ activePerspective.descriptionI18nKey | translate }}</div></se-tooltip><button class=\"se-perspective-selector__btn\" [disabled]=\"isDisabled\">{{getActivePerspectiveName() | translate}} <span class=\"se-perspective-selector__btn-arrow icon-navigation-down-arrow\"></span></button></div></fd-popover-control><fd-popover-body><ul class=\"se-perspective__list fd-list-group\" [ngClass]=\"{'se-perspective__list--tooltip': isTooltipVisible()}\" role=\"menu\"><li *ngFor=\"let choice of getDisplayedPerspectives()\" class=\"fd-list-group__item se-perspective__list-item fd-has-padding-none\"><a class=\"item se-perspective__list-item-text\" (click)=\"selectPerspective($event, choice.key);\">{{choice.nameI18nKey | translate}}</a></li></ul></fd-popover-body></fd-popover>`\r\n    }),\r\n    __param(1, Inject(YJQUERY_TOKEN)),\r\n    __param(5, Inject(EVENT_SERVICE)),\r\n    __metadata(\"design:paramtypes\", [LogService, Function, IPerspectiveService,\r\n        IIframeClickDetectionService,\r\n        SystemEventService,\r\n        CrossFrameEventService,\r\n        TestModeService,\r\n        UserTrackingService])\r\n], /* @ngInject */ PerspectiveSelectorComponent);\r\nexport { /* @ngInject */ PerspectiveSelectorComponent };\r\n//# sourceMappingURL=PerspectiveSelectorComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"PerspectiveSelectorComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/perspectiveSelectorWidget/PerspectiveSelectorComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/perspectiveSelectorWidget/PerspectiveSelectorComponent.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\n/// <reference types=\"jquery\" />\r\nimport './PerspectiveSelectorComponent.scss';\r\nimport { OnDestroy, OnInit } from '@angular/core';\r\nimport { CrossFrameEventService, IIframeClickDetectionService, IPerspective, IPerspectiveService, LogService, SystemEventService, TestModeService, UserTrackingService } from 'smarteditcommons';\r\nexport declare class PerspectiveSelectorComponent implements OnInit, OnDestroy {\r\n    private logService;\r\n    private yjQuery;\r\n    private perspectiveService;\r\n    private iframeClickDetectionService;\r\n    private systemEventService;\r\n    private crossFrameEventService;\r\n    private testModeService;\r\n    private userTrackingService;\r\n    isOpen: boolean;\r\n    popperOptions: {\r\n        placement: string;\r\n        modifiers: {\r\n            preventOverflow: {\r\n                enabled: boolean;\r\n                escapeWithReference: boolean;\r\n                boundariesElement: string;\r\n            };\r\n            applyStyle: {\r\n                gpuAcceleration: boolean;\r\n            };\r\n        };\r\n    };\r\n    isDisabled: boolean;\r\n    private perspectives;\r\n    private displayedPerspectives;\r\n    private unRegOverlayDisabledFn;\r\n    private unRegPerspectiveAddedFn;\r\n    private unRegPerspectiveChgFn;\r\n    private unRegUserHasChanged;\r\n    private unRegPerspectiveRefreshFn;\r\n    private unRegStrictPreviewModeToggleFn;\r\n    private activePerspective;\r\n    constructor(logService: LogService, yjQuery: JQueryStatic, perspectiveService: IPerspectiveService, iframeClickDetectionService: IIframeClickDetectionService, systemEventService: SystemEventService, crossFrameEventService: CrossFrameEventService, testModeService: TestModeService, userTrackingService: UserTrackingService);\r\n    onDocumentClick(event: Event): void;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    selectPerspective(event: Event, choice: string): void;\r\n    getDisplayedPerspectives(): IPerspective[];\r\n    getActivePerspectiveName(): string;\r\n    hasActivePerspective(): boolean;\r\n    isTooltipVisible(): boolean;\r\n    private checkTooltipVisibilityCondition;\r\n    private filterPerspectives;\r\n    private closeDropdown;\r\n    private onPerspectiveAdded;\r\n    private refreshPerspectives;\r\n    private _refreshActivePerspective;\r\n    private onClickHandler;\r\n    private togglePerspectiveSelector;\r\n}\r\n"}}
