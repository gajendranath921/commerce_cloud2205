{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { ISettingsService } from '../../interfaces';\r\nimport { promiseUtils } from '../../utils';\r\nimport { FileReaderService } from '../file-reader';\r\nlet FileMimeTypeService = class FileMimeTypeService {\r\n    constructor(fileReaderService, settingsService) {\r\n        this.fileReaderService = fileReaderService;\r\n        this.settingsService = settingsService;\r\n    }\r\n    isFileMimeTypeValid(file) {\r\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n            const { error: mimeTypesError, data: mimeTypes } = yield promiseUtils.attempt(this.settingsService.getStringList('smartedit.validFileMimeTypeCodes'));\r\n            if (mimeTypesError) {\r\n                reject(false);\r\n                return;\r\n            }\r\n            this.fileReaderService.read(file, {\r\n                onLoadEnd: (ev) => {\r\n                    if (!this.validateMimeTypeFromFile(ev.target.result, mimeTypes)) {\r\n                        reject();\r\n                        return;\r\n                    }\r\n                    resolve(true);\r\n                },\r\n                onError: () => {\r\n                    reject();\r\n                }\r\n            });\r\n        }));\r\n    }\r\n    /**\r\n     *  Mimetype is valid when starting bytes of the file are matching the Mimetype byte pattern.\r\n     *  For example. 89 50 4E 47 is a png file, so if the first 4 bytes are 89504E47 it is recognized as a png file.\r\n     *\r\n     *  Read more on File Signatures and Image Type Pattern Matching\r\n     *  - https://en.wikipedia.org/wiki/List_of_file_signatures\r\n     *  - https://mimesniff.spec.whatwg.org/#image-type-pattern-matching-algorithm\r\n     */\r\n    validateMimeTypeFromFile(loadedFile, mimeTypes) {\r\n        const fileAsBytes = new Uint8Array(loadedFile).subarray(0, 32);\r\n        const header = fileAsBytes.reduce((head, byte) => {\r\n            let byteAsStr = byte.toString(16);\r\n            if (byteAsStr.length === 1) {\r\n                byteAsStr = '0' + byteAsStr;\r\n            }\r\n            head += byteAsStr;\r\n            return head;\r\n        }, '');\r\n        return mimeTypes.some((mimeTypeCode) => header.toLowerCase().includes(mimeTypeCode.toLowerCase()));\r\n    }\r\n};\r\nFileMimeTypeService = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [FileReaderService,\r\n        ISettingsService])\r\n], FileMimeTypeService);\r\nexport { FileMimeTypeService };\r\n//# sourceMappingURL=file-mime-type.service.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/interfaces/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/utils/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/file-reader/index.ts"],"map":"{\"version\":3,\"file\":\"file-mime-type.service.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/file-mime-type/file-mime-type.service.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAGnD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAC5B,YACY,iBAAoC,EACpC,eAAiC;QADjC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAkB;IAC1C,CAAC;IAEG,mBAAmB,CAAC,IAAiB;QACxC,OAAO,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YACzC,MAAM,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,MAAM,YAAY,CAAC,OAAO,CACzE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,kCAAkC,CAAC,CACzE,CAAC;YACF,IAAI,cAAc,EAAE;gBAChB,MAAM,CAAC,KAAK,CAAC,CAAC;gBACd,OAAO;aACV;YAED,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE;gBAC9B,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE;oBACd,IACI,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,MAAM,CAAC,MAAqB,EAAE,SAAS,CAAC,EAC5E;wBACE,MAAM,EAAE,CAAC;wBACT,OAAO;qBACV;oBACD,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC;gBACD,OAAO,EAAE,GAAG,EAAE;oBACV,MAAM,EAAE,CAAC;gBACb,CAAC;aACJ,CAAC,CAAC;QACP,CAAC,CAAA,CAAC,CAAC;IACP,CAAC;IAED;;;;;;;OAOG;IACK,wBAAwB,CAAC,UAAuB,EAAE,SAAmB;QACzE,MAAM,WAAW,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC/D,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;YAC7C,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAClC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;aAC/B;YACD,IAAI,IAAI,SAAS,CAAC;YAClB,OAAO,IAAI,CAAC;QAChB,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE,CACnC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAC5D,CAAC;IACN,CAAC;CACJ,CAAA;AAxDY,mBAAmB;IAD/B,UAAU,EAAE;qCAGsB,iBAAiB;QACnB,gBAAgB;GAHpC,mBAAmB,CAwD/B;SAxDY,mBAAmB\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/file-mime-type/file-mime-type.service.d.ts","writeByteOrderMark":false,"text":"import { ISettingsService } from '../../interfaces';\r\nimport { FileReaderService } from '../file-reader';\r\nexport declare class FileMimeTypeService {\r\n    private fileReaderService;\r\n    private settingsService;\r\n    constructor(fileReaderService: FileReaderService, settingsService: ISettingsService);\r\n    isFileMimeTypeValid(file: File | Blob): Promise<boolean>;\r\n    /**\r\n     *  Mimetype is valid when starting bytes of the file are matching the Mimetype byte pattern.\r\n     *  For example. 89 50 4E 47 is a png file, so if the first 4 bytes are 89504E47 it is recognized as a png file.\r\n     *\r\n     *  Read more on File Signatures and Image Type Pattern Matching\r\n     *  - https://en.wikipedia.org/wiki/List_of_file_signatures\r\n     *  - https://mimesniff.spec.whatwg.org/#image-type-pattern-matching-algorithm\r\n     */\r\n    private validateMimeTypeFromFile;\r\n}\r\n"}}
