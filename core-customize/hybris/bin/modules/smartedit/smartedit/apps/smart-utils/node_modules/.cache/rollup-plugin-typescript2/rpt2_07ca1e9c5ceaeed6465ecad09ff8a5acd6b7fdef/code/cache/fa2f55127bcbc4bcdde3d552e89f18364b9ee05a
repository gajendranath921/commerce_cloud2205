{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\n/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { ModalRef } from '@fundamental-ngx/core';\r\nimport { noop } from 'lodash';\r\nimport { of, BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { ModalButtonAction } from '../../interfaces';\r\n/**\r\n * Allows to perform operations on a Modal Component such as adding the buttons or getting the modal data.\r\n * It must be injected into a Custom Modal Component.\r\n *\r\n * The Custom Modal Component is rendered by {@link ModalTemplateComponent}.\r\n * A Service or a Component that opens the Modal Component must provide\r\n * [component]{@link ModalOpenConfig#component} and [templateConfig]{@link ModalOpenConfig#templateConfig}.\r\n *\r\n *\r\n * ### Example of a Service or Component that opens the modal\r\n *\r\n *      this.modalService.open({\r\n *           component: YourCustomModalComponent,\r\n *               templateConfig: {\r\n *               title: 'se.cms.synchronization.pagelist.modal.title.prefix',\r\n *               titleSuffix: 'se.cms.pageeditormodal.editpagetab.title'\r\n *           },\r\n *           data: {\r\n *               propA: 'valA'\r\n *           }\r\n *      });\r\n *\r\n * ### Example of YourCustomModalComponent\r\n *\r\n *      export class YourCustomModalComponent implements OnInit {\r\n *          constructor(private modalManager: ModalManagerService) {}\r\n *\r\n *          ngOnInit(): void {\r\n *              this.modalManager.addButtons([]);\r\n *              this.modalManager.getModalData().pipe(take(1)).subscribe(({propA}) => { console.log(propA) });\r\n *          }\r\n *      }\r\n *\r\n */\r\nlet ModalManagerService = class ModalManagerService {\r\n    constructor(modalRef) {\r\n        this.modalRef = modalRef;\r\n        this.title = new BehaviorSubject('');\r\n        this.titleSuffix = new BehaviorSubject('');\r\n        this.modalData = new BehaviorSubject({});\r\n        this.component = new BehaviorSubject(undefined);\r\n        this.isDismissButtonVisible = new BehaviorSubject(false);\r\n        this.buttons = new BehaviorSubject([]);\r\n    }\r\n    init() {\r\n        this.modalData.next(this.modalRef.data.modalData);\r\n        this.component.next(this.modalRef.data.component);\r\n        this.buttons.next(this.modalRef.data.templateConfig.buttons || []);\r\n        this.title.next(this.modalRef.data.templateConfig.title || '');\r\n        this.titleSuffix.next(this.modalRef.data.templateConfig.titleSuffix || '');\r\n        this.isDismissButtonVisible.next(this.modalRef.data.templateConfig.isDismissButtonVisible);\r\n    }\r\n    // getters\r\n    getComponent() {\r\n        return this.component.asObservable();\r\n    }\r\n    getTitle() {\r\n        return this.title.asObservable();\r\n    }\r\n    getTitleSuffix() {\r\n        return this.titleSuffix.asObservable();\r\n    }\r\n    getButtons() {\r\n        return this.buttons.asObservable();\r\n    }\r\n    getModalData() {\r\n        return this.modalData.asObservable();\r\n    }\r\n    getIsDismissButtonVisible() {\r\n        return this.isDismissButtonVisible.asObservable();\r\n    }\r\n    // header dismiss button\r\n    setDismissButtonVisibility(isVisible) {\r\n        this.isDismissButtonVisible.next(isVisible);\r\n    }\r\n    setTitle(title) {\r\n        this.title.next(title);\r\n    }\r\n    /**\r\n     * Use this method for adding only one button.\r\n     *\r\n     * NOTE: For multiple buttons use `addButtons`.\r\n     */\r\n    addButton(button) {\r\n        this.getButtonsValue().subscribe((buttons) => {\r\n            const payload = [...buttons, button];\r\n            this.buttons.next(payload);\r\n        });\r\n    }\r\n    addButtons(buttons) {\r\n        this.getButtonsValue().subscribe((currentButtons) => {\r\n            const payload = [...currentButtons, ...buttons];\r\n            this.buttons.next(payload);\r\n        });\r\n    }\r\n    removeButton(id) {\r\n        this.getButtonsValue().subscribe((buttons) => {\r\n            const payload = buttons.filter((button) => button.id !== id);\r\n            this.buttons.next(payload);\r\n        });\r\n    }\r\n    removeAllButtons() {\r\n        this.buttons.next([]);\r\n    }\r\n    disableButton(id) {\r\n        this.getButtonsValue().subscribe((buttons) => {\r\n            const payload = buttons.map((button) => button.id === id ? Object.assign(Object.assign({}, button), { disabled: true }) : button);\r\n            this.buttons.next(payload);\r\n        });\r\n    }\r\n    setDismissCallback(callback) {\r\n        this.dismissCallback = callback;\r\n    }\r\n    enableButton(id) {\r\n        this.getButtonsValue().subscribe((buttons) => {\r\n            const payload = buttons.map((button) => button.id === id ? Object.assign(Object.assign({}, button), { disabled: false }) : button);\r\n            this.buttons.next(payload);\r\n        });\r\n    }\r\n    onButtonClicked(button) {\r\n        const callbackReturnedObservable = button.callback\r\n            ? button.callback()\r\n            : of(null);\r\n        if (button.action !== ModalButtonAction.None) {\r\n            callbackReturnedObservable.subscribe((data) => button.action === ModalButtonAction.Close ? this.close(data) : this.dismiss(data));\r\n        }\r\n    }\r\n    close(data) {\r\n        this.modalRef.close(data);\r\n    }\r\n    dismiss(data) {\r\n        this.dismissCallback()\r\n            .then(() => this.modalRef.dismiss(data))\r\n            .catch(noop);\r\n    }\r\n    getButtonsValue() {\r\n        return this.buttons.pipe(take(1));\r\n    }\r\n    dismissCallback() {\r\n        return Promise.resolve();\r\n    }\r\n};\r\nModalManagerService = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [ModalRef])\r\n], ModalManagerService);\r\nexport { ModalManagerService };\r\n//# sourceMappingURL=modal-manager.service.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@fundamental-ngx+core@0.13.2_9a9a80bb6ff375d99f90188f858ebbd5/node_modules/@fundamental-ngx/core/fundamental-ngx-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/operators/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/interfaces/index.ts"],"map":"{\"version\":3,\"file\":\"modal-manager.service.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/modal/modal-manager.service.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/modal/modal-manager.service.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { Type } from '@angular/core';\r\nimport { ModalRef } from '@fundamental-ngx/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ModalButtonOptions } from '../../interfaces';\r\n/**\r\n * Allows to perform operations on a Modal Component such as adding the buttons or getting the modal data.\r\n * It must be injected into a Custom Modal Component.\r\n *\r\n * The Custom Modal Component is rendered by {@link ModalTemplateComponent}.\r\n * A Service or a Component that opens the Modal Component must provide\r\n * [component]{@link ModalOpenConfig#component} and [templateConfig]{@link ModalOpenConfig#templateConfig}.\r\n *\r\n *\r\n * ### Example of a Service or Component that opens the modal\r\n *\r\n *      this.modalService.open({\r\n *           component: YourCustomModalComponent,\r\n *               templateConfig: {\r\n *               title: 'se.cms.synchronization.pagelist.modal.title.prefix',\r\n *               titleSuffix: 'se.cms.pageeditormodal.editpagetab.title'\r\n *           },\r\n *           data: {\r\n *               propA: 'valA'\r\n *           }\r\n *      });\r\n *\r\n * ### Example of YourCustomModalComponent\r\n *\r\n *      export class YourCustomModalComponent implements OnInit {\r\n *          constructor(private modalManager: ModalManagerService) {}\r\n *\r\n *          ngOnInit(): void {\r\n *              this.modalManager.addButtons([]);\r\n *              this.modalManager.getModalData().pipe(take(1)).subscribe(({propA}) => { console.log(propA) });\r\n *          }\r\n *      }\r\n *\r\n */\r\nexport declare class ModalManagerService<T = any> {\r\n    private modalRef;\r\n    private title;\r\n    private titleSuffix;\r\n    private modalData;\r\n    private component;\r\n    private isDismissButtonVisible;\r\n    private buttons;\r\n    constructor(modalRef: ModalRef);\r\n    init(): void;\r\n    getComponent(): Observable<Type<any> | undefined>;\r\n    getTitle(): Observable<string>;\r\n    getTitleSuffix(): Observable<string>;\r\n    getButtons(): Observable<ModalButtonOptions[]>;\r\n    getModalData(): Observable<T>;\r\n    getIsDismissButtonVisible(): Observable<boolean>;\r\n    setDismissButtonVisibility(isVisible: boolean): void;\r\n    setTitle(title: string): void;\r\n    /**\r\n     * Use this method for adding only one button.\r\n     *\r\n     * NOTE: For multiple buttons use `addButtons`.\r\n     */\r\n    addButton(button: ModalButtonOptions): void;\r\n    addButtons(buttons: ModalButtonOptions[]): void;\r\n    removeButton(id: string): void;\r\n    removeAllButtons(): void;\r\n    disableButton(id: string): void;\r\n    setDismissCallback(callback: () => Promise<any>): void;\r\n    enableButton(id: string): void;\r\n    onButtonClicked(button: ModalButtonOptions): void;\r\n    close(data?: any): void;\r\n    dismiss(data?: any): void;\r\n    private getButtonsValue;\r\n    private dismissCallback;\r\n}\r\n"}}
