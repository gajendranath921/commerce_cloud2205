{"code":"/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/* eslint-disable max-classes-per-file */\r\n/**\r\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\n/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\n/* tslint:disable:max-classes-per-file */\r\n/**\r\n * @internal\r\n * Internal property on the constructor used for adding decorator metadata\r\n * so that it can be later picked up after component compilation.\r\n */\r\nexport const FORM_PROP = Symbol('_form_prop_');\r\n/**\r\n * Base data PropDecorator.\r\n * @internal\r\n */\r\nexport class PropDecorator {\r\n    constructor(property) {\r\n        this.property = property;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport class InputPropDecorator extends PropDecorator {\r\n    constructor(property, alias) {\r\n        super(property);\r\n        this.alias = alias ? alias : this.property;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport class FormPropDecorator extends PropDecorator {\r\n}\r\n/**\r\n * Used for tagging dynamic inputs and adding them to the FORM_PROP property\r\n * of the target constructor.\r\n */\r\nfunction makePropertyDecorator(factory) {\r\n    return (target, key) => {\r\n        const ctor = target.constructor;\r\n        if (!ctor[FORM_PROP]) {\r\n            ctor[FORM_PROP] = [];\r\n        }\r\n        ctor[FORM_PROP].push(factory(key));\r\n    };\r\n}\r\n/**\r\n * Injects the AbstractForm for the dynamic form component.\r\n */\r\nexport function DynamicForm() {\r\n    return makePropertyDecorator((key) => new FormPropDecorator(key));\r\n}\r\n/**\r\n * Injects a property of the AbstractForm for the dynamic form component.\r\n * Inputs are assigned from the FormSchema's 'inputs' property.\r\n * NOTE:\r\n * Property values are only available ngOnInit or onDynamicInputChange.\r\n * @param alias Use this alias to target a property of the AbstractForm. Defaults\r\n * to the assigned class property.\r\n * @example\r\n * <pre>\r\n *     @Component({ ... })\r\n *     export class DynamicFormComponent {\r\n *         @DynamicInput()\r\n *         property: string\r\n *     }\r\n * <pre>\r\n */\r\nexport const DynamicInput = (alias = null) => makePropertyDecorator((key) => new InputPropDecorator(key, alias));\r\n//# sourceMappingURL=decorators.js.map","references":[],"map":"{\"version\":3,\"file\":\"decorators.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/modules/form-builder/decorators.ts\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;AACH,yCAAyC;AACzC;;;GAGG;AACH;;;GAGG;AACH,yCAAyC;AAEzC;;;;GAIG;AACH,MAAM,CAAC,MAAM,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AAE/C;;;GAGG;AACH,MAAM,OAAO,aAAa;IACtB,YAAmB,QAAgB;QAAhB,aAAQ,GAAR,QAAQ,CAAQ;IAAG,CAAC;CAC1C;AAED;;GAEG;AACH,MAAM,OAAO,kBAAmB,SAAQ,aAAa;IAEjD,YAAY,QAAgB,EAAE,KAAoB;QAC9C,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC/C,CAAC;CACJ;AAED;;GAEG;AACH,MAAM,OAAO,iBAAkB,SAAQ,aAAa;CAAG;AAEvD;;;GAGG;AACH,SAAS,qBAAqB,CAAI,OAAuC;IACrE,OAAO,CAAI,MAAS,EAAE,GAAW,EAAQ,EAAE;QACvC,MAAM,IAAI,GAAI,MAAc,CAAC,WAAW,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;SACxB;QACD,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC;AACN,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,WAAW;IACvB,OAAO,qBAAqB,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;AACtE,CAAC;AAED;;;;;;;;;;;;;;;GAeG;AACH,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,QAAuB,IAAI,EAAyC,EAAE,CAC/F,qBAAqB,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,kBAAkB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/node_modules/.cache/rollup-plugin-typescript2/placeholder/modules/form-builder/decorators.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\n/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\n/**\r\n * @internal\r\n * Internal property on the constructor used for adding decorator metadata\r\n * so that it can be later picked up after component compilation.\r\n */\r\nexport declare const FORM_PROP: unique symbol;\r\n/**\r\n * Base data PropDecorator.\r\n * @internal\r\n */\r\nexport declare class PropDecorator {\r\n    property: string;\r\n    constructor(property: string);\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport declare class InputPropDecorator extends PropDecorator {\r\n    alias: string;\r\n    constructor(property: string, alias: string | null);\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport declare class FormPropDecorator extends PropDecorator {\r\n}\r\n/**\r\n * Injects the AbstractForm for the dynamic form component.\r\n */\r\nexport declare function DynamicForm(): <C>(target: C, key: string) => void;\r\n/**\r\n * Injects a property of the AbstractForm for the dynamic form component.\r\n * Inputs are assigned from the FormSchema's 'inputs' property.\r\n * NOTE:\r\n * Property values are only available ngOnInit or onDynamicInputChange.\r\n * @param alias Use this alias to target a property of the AbstractForm. Defaults\r\n * to the assigned class property.\r\n * @example\r\n * <pre>\r\n *     @Component({ ... })\r\n *     export class DynamicFormComponent {\r\n *         @DynamicInput()\r\n *         property: string\r\n *     }\r\n * <pre>\r\n */\r\nexport declare const DynamicInput: (alias?: string | null) => <C>(target: C, key: string) => void;\r\n"}}
