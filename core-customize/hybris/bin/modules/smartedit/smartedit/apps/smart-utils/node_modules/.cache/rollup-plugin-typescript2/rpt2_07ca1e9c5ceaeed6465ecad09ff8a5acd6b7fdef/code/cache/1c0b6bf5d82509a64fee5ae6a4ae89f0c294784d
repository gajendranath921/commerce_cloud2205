{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Inject, Injectable, Injector } from '@angular/core';\r\nimport { from, Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { I18N_RESOURCE_URI_TOKEN } from '../../constants';\r\nimport { IAuthenticationService, IStorageService } from '../../interfaces';\r\nimport { HttpUtils } from '../../utils';\r\nimport { GET_REQUESTS_ON_HOLD_MAP } from './errors/unauthorized-error.interceptor';\r\n/**\r\n * @ngdoc service\r\n * @name @smartutils.httpAuthInterceptor\r\n *\r\n * @description\r\n * Makes it possible to perform global authentication by intercepting requests before they are forwarded to the server\r\n * and responses before they are forwarded to the application code.\r\n *\r\n */\r\nlet HttpAuthInterceptor = class HttpAuthInterceptor {\r\n    constructor(authenticationService, injector, httpUtils, I18N_RESOURCE_URI) {\r\n        this.authenticationService = authenticationService;\r\n        this.injector = injector;\r\n        this.httpUtils = httpUtils;\r\n        this.I18N_RESOURCE_URI = I18N_RESOURCE_URI;\r\n    }\r\n    /**\r\n     * @ngdoc method\r\n     * @name @smartutils.httpAuthInterceptor#request\r\n     * @methodOf @smartutils.httpAuthInterceptor\r\n     *\r\n     * @description\r\n     * Interceptor method which gets called with a http config object, intercepts any request made using httpClient service.\r\n     * A call to any REST resource will be intercepted by this method, which then adds an authentication token to the request\r\n     * and then forwards it to the REST resource.\r\n     *\r\n     */\r\n    intercept(request, next) {\r\n        if (!this._isCRUDRequest(request)) {\r\n            return next.handle(request);\r\n        }\r\n        if (this._isGetRequest(request)) {\r\n            return this._handleGetRequest(request);\r\n        }\r\n        return this._handleCUDRequest(request, next);\r\n    }\r\n    _isCRUDRequest(request) {\r\n        return (!request.url.includes(this.I18N_RESOURCE_URI) && this.httpUtils.isCRUDRequest(request));\r\n    }\r\n    _isGetRequest(request) {\r\n        return this.httpUtils.isGET(request) && !!GET_REQUESTS_ON_HOLD_MAP[request.url];\r\n    }\r\n    _handleGetRequest(request) {\r\n        return new Observable((obj) => {\r\n            GET_REQUESTS_ON_HOLD_MAP[request.url].then((body) => {\r\n                obj.next(new HttpResponse({ status: 200, body }));\r\n            });\r\n        });\r\n    }\r\n    _addAuthToResponse(request, next, entryPoints) {\r\n        return from(this.injector.get(IStorageService).getAuthToken(entryPoints[0])).pipe(switchMap((authToken) => {\r\n            if (!authToken) {\r\n                return next.handle(request);\r\n            }\r\n            const authReq = request.clone({\r\n                headers: request.headers.set('Authorization', authToken.token_type + ' ' + authToken.access_token)\r\n            });\r\n            return next.handle(authReq);\r\n        }));\r\n    }\r\n    _handleCUDRequest(request, next) {\r\n        return from(this.authenticationService.filterEntryPoints(request.url)).pipe(switchMap((entryPoints) => {\r\n            if (!(entryPoints && entryPoints.length)) {\r\n                return next.handle(request);\r\n            }\r\n            return this._addAuthToResponse(request, next, entryPoints);\r\n        }));\r\n    }\r\n};\r\nHttpAuthInterceptor = __decorate([\r\n    Injectable(),\r\n    __param(3, Inject(I18N_RESOURCE_URI_TOKEN)),\r\n    __metadata(\"design:paramtypes\", [IAuthenticationService,\r\n        Injector,\r\n        HttpUtils, String])\r\n], HttpAuthInterceptor);\r\nexport { HttpAuthInterceptor };\r\n//# sourceMappingURL=http-auth.interceptor.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/operators/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/constants.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/interfaces/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/utils/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/interceptors/errors/unauthorized-error.interceptor.ts"],"map":"{\"version\":3,\"file\":\"http-auth.interceptor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interceptors/http-auth.interceptor.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/interceptors/http-auth.interceptor.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IAuthenticationService } from '../../interfaces';\r\nimport { HttpUtils } from '../../utils';\r\n/**\r\n * @ngdoc service\r\n * @name @smartutils.httpAuthInterceptor\r\n *\r\n * @description\r\n * Makes it possible to perform global authentication by intercepting requests before they are forwarded to the server\r\n * and responses before they are forwarded to the application code.\r\n *\r\n */\r\nexport declare class HttpAuthInterceptor implements HttpInterceptor {\r\n    private authenticationService;\r\n    private injector;\r\n    private httpUtils;\r\n    private I18N_RESOURCE_URI;\r\n    constructor(authenticationService: IAuthenticationService, injector: Injector, httpUtils: HttpUtils, I18N_RESOURCE_URI: string);\r\n    /**\r\n     * @ngdoc method\r\n     * @name @smartutils.httpAuthInterceptor#request\r\n     * @methodOf @smartutils.httpAuthInterceptor\r\n     *\r\n     * @description\r\n     * Interceptor method which gets called with a http config object, intercepts any request made using httpClient service.\r\n     * A call to any REST resource will be intercepted by this method, which then adds an authentication token to the request\r\n     * and then forwards it to the REST resource.\r\n     *\r\n     */\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\r\n    private _isCRUDRequest;\r\n    private _isGetRequest;\r\n    private _handleGetRequest;\r\n    private _addAuthToResponse;\r\n    private _handleCUDRequest;\r\n}\r\n"}}
