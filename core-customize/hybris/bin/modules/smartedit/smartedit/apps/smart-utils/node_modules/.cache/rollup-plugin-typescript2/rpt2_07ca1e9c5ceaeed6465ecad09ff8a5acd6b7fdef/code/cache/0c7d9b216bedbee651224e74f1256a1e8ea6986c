{"code":"var FlawInjectionInterceptor_1;\r\nimport { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { LogService } from '../../../services/log.service';\r\nimport { HttpUtils } from '../../../utils';\r\n/*\r\n * interceptor that will inject flaw into outbound and inbound http calls.\r\n * It is mainly used to validate reliability and consitency of test frameworks\r\n */\r\n/** @internal */\r\nlet FlawInjectionInterceptor = FlawInjectionInterceptor_1 = class FlawInjectionInterceptor {\r\n    constructor(httpUtils, logService) {\r\n        this.httpUtils = httpUtils;\r\n        this.logService = logService;\r\n        this.flawWindow = window;\r\n        this.flawWindow.allRequests = 0;\r\n        this.flawWindow.flawedRequests = 0;\r\n        this.flawWindow.allResponses = 0;\r\n        this.flawWindow.flawedResponses = 0;\r\n    }\r\n    static registerRequestFlaw(mutation) {\r\n        this.requestMutations.push(mutation);\r\n    }\r\n    static registerResponseFlaw(mutation) {\r\n        this.responseMutations.push(mutation);\r\n    }\r\n    intercept(request, next) {\r\n        if (FlawInjectionInterceptor_1.PROBABILITY !== 0 &&\r\n            this.httpUtils.isCRUDRequest(request) &&\r\n            !this._isGET(request)) {\r\n            return this._handleFlawWindow(request, next);\r\n        }\r\n        return next.handle(request);\r\n    }\r\n    _isGET(config) {\r\n        return config.method === 'GET';\r\n    }\r\n    _activateWithProbability(probabilityTrue) {\r\n        return Math.random() >= 1.0 - probabilityTrue;\r\n    }\r\n    _generateResultResponse(request, result) {\r\n        return result.pipe(map((event) => {\r\n            if (event instanceof HttpResponse &&\r\n                this._activateWithProbability(FlawInjectionInterceptor_1.PROBABILITY)) {\r\n                this.flawWindow.flawedResponses++;\r\n                const responseMutation = FlawInjectionInterceptor_1.responseMutations.find((mutation) => mutation.test(request));\r\n                if (responseMutation && event instanceof HttpResponse) {\r\n                    this.logService.error(`FLAWED RESPONSE-\"${request.url}`);\r\n                    return responseMutation.mutate(event);\r\n                }\r\n            }\r\n            return event;\r\n        }));\r\n    }\r\n    _handleFlawWindow(request, next) {\r\n        let result;\r\n        this.flawWindow.allRequests++;\r\n        if (this._activateWithProbability(FlawInjectionInterceptor_1.PROBABILITY)) {\r\n            this.flawWindow.flawedRequests++;\r\n            const requestMutation = FlawInjectionInterceptor_1.requestMutations.find((mutation) => mutation.test(request));\r\n            if (requestMutation) {\r\n                this.logService.error(`FLAWED REQUEST-\"${request.url}`);\r\n                result = next.handle(requestMutation.mutate(request));\r\n            }\r\n        }\r\n        result = next.handle(request);\r\n        return this._generateResultResponse(request, result);\r\n    }\r\n};\r\nFlawInjectionInterceptor.requestMutations = [];\r\nFlawInjectionInterceptor.responseMutations = [];\r\n/*\r\n * probability of flaw occurrence ranging from 0 to 1\r\n */\r\nFlawInjectionInterceptor.PROBABILITY = 0;\r\nFlawInjectionInterceptor = FlawInjectionInterceptor_1 = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [HttpUtils, LogService])\r\n], FlawInjectionInterceptor);\r\nexport { FlawInjectionInterceptor };\r\n//# sourceMappingURL=flaw-injection.interceptor.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/operators/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/log.service.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"flaw-injection.interceptor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/services/interceptors/flaws/flaw-injection.interceptor.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/interceptors/flaws/flaw-injection.interceptor.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LogService } from '../../../services/log.service';\r\nimport { HttpUtils } from '../../../utils';\r\nexport declare type Predicate = (request: HttpRequest<any>) => boolean;\r\nexport declare type RequestHandler = (request: HttpRequest<any>) => HttpRequest<any>;\r\nexport declare type ResponseHandler = (event: HttpResponse<any>) => HttpResponse<any>;\r\n/** @internal */\r\nexport declare class FlawInjectionInterceptor implements HttpInterceptor {\r\n    private httpUtils;\r\n    private logService;\r\n    private static requestMutations;\r\n    private static responseMutations;\r\n    private static PROBABILITY;\r\n    private flawWindow;\r\n    static registerRequestFlaw(mutation: {\r\n        test: Predicate;\r\n        mutate: RequestHandler;\r\n    }): void;\r\n    static registerResponseFlaw(mutation: {\r\n        test: Predicate;\r\n        mutate: ResponseHandler;\r\n    }): void;\r\n    constructor(httpUtils: HttpUtils, logService: LogService);\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\r\n    private _isGET;\r\n    private _activateWithProbability;\r\n    private _generateResultResponse;\r\n    private _handleFlawWindow;\r\n}\r\n"}}
