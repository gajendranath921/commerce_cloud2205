{"code":"/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport * as lo from 'lodash';\r\nimport { functionsUtils } from '../../utils';\r\nimport { annotationService } from '../annotation.service';\r\n/// ////////////////////////////////////////////////////////////////////////////\r\n/// ////////////////////////////// CACHE CONFIG ////////////////////////////////\r\n/// ////////////////////////////////////////////////////////////////////////////\r\nconst cacheConfigAnnotationName = 'CacheConfig';\r\n/**\r\n * @ngdoc object\r\n * @name @smartutils.object:@CacheConfig\r\n * @description\r\n * Class level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} responsible for setting\r\n *  class level cache configuration to be merged into method specific {@link @smartutils.object:@Cached @Cached} and\r\n *  {@link @smartutils.object:@InvalidateCache @InvalidateCache} configurations.\r\n * @param {object} cacheConfig the configuration fo this cache\r\n * @param {cacheAction} cacheConfig.actions the list of {@link @smartutils.object:CacheAction CacheAction} characterizing this cache.\r\n * @param {EvictionTag[]} cacheConfig.tags a list of {@link @smartutils.object:EvictionTag EvictionTag} to control the eviction behaviour of this cache.\r\n */\r\nexport const CacheConfig = annotationService.getClassAnnotationFactory(cacheConfigAnnotationName);\r\nexport function CacheConfigAnnotationFactory(logService) {\r\n    'ngInject';\r\n    return annotationService.setClassAnnotationFactory(cacheConfigAnnotationName, (factoryArguments) => function (instance, originalConstructor, invocationArguments) {\r\n        instance = new (originalConstructor.bind(instance))(...invocationArguments);\r\n        instance.cacheConfig = factoryArguments[0];\r\n        logService.debug(`adding cache config ${JSON.stringify(instance.cacheConfig)} to class ${functionsUtils.getInstanceConstructorName(instance)}`, instance);\r\n        return instance;\r\n    });\r\n}\r\n/// ////////////////////////////////////////////////////////////////////////////\r\n/// ///////////////////////////////// CACHE ////////////////////////////////////\r\n/// ////////////////////////////////////////////////////////////////////////////\r\nconst CachedAnnotationName = 'Cached';\r\n/**\r\n * @ngdoc object\r\n * @name @smartutils.object:@Cached\r\n * @description\r\n * Method level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} responsible for performing\r\n * invocation arguments sensitive method caching.\r\n * <br/> This annotation must only be used on methods returning promises.\r\n * @param {object} cacheConfig the configuration fo this cache\r\n * <br/> This configuration will be merged with a class level {@link @smartutils.object:@CacheConfig @acheConfig} if any.\r\n * @throws if no {@link @smartutils.object:CacheAction CacheAction} is found in the resulting merge\r\n * @param {cacheAction} cacheConfig.actions the list of {@link @smartutils.object:CacheAction CacheAction} characterizing this cache.\r\n * @param {EvictionTag[]} cacheConfig.tags a list of {@link @smartutils.object:EvictionTag EvictionTag} to control the eviction behaviour of this cache.\r\n */\r\nexport const Cached = annotationService.getMethodAnnotationFactory(CachedAnnotationName);\r\nexport function CachedAnnotationFactory(cacheService) {\r\n    'ngInject';\r\n    const result = annotationService.setMethodAnnotationFactory(CachedAnnotationName, (factoryArguments) => function (target, propertyName, originalMethod, invocationArguments) {\r\n        let actions = [];\r\n        let tags = [];\r\n        if (factoryArguments[0]) {\r\n            actions = factoryArguments[0].actions;\r\n            tags = factoryArguments[0].tags;\r\n        }\r\n        if (target.cacheConfig) {\r\n            if (target.cacheConfig.actions) {\r\n                actions = lo.uniq(actions.concat(target.cacheConfig.actions));\r\n            }\r\n            if (target.cacheConfig.tags) {\r\n                tags = lo.uniq(tags.concat(target.cacheConfig.tags));\r\n            }\r\n        }\r\n        if (!actions.length) {\r\n            const constructorName = functionsUtils.getInstanceConstructorName(target);\r\n            throw new Error(`method ${propertyName} of ${constructorName} is @Cached annotated but no CacheAction is specified either through @Cached or through class level @CacheConfig annotation`);\r\n        }\r\n        return cacheService.handle(target, propertyName, originalMethod, Array.prototype.slice.apply(invocationArguments), actions, tags);\r\n    });\r\n    return result;\r\n}\r\n/// ////////////////////////////////////////////////////////////////////////////\r\n/// /////////////////////////// INVALIDATE CACHE ///////////////////////////////\r\n/// ////////////////////////////////////////////////////////////////////////////\r\nconst InvalidateCacheName = 'InvalidateCache';\r\n/**\r\n * @ngdoc object\r\n * @name @smartutils.object:@InvalidateCache\r\n * @description\r\n * Method level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} responsible for\r\n * invalidating all caches either directly or indirectly declaring the {@link @smartutils.object:EvictionTag eviction tag} passed as argument.\r\n * if no eviction tag is passed as argument, defaults to the optional eviction tags passed to the class through {@link @smartutils.object:@CacheConfig @CacheConfig}.\r\n *\r\n * @param {EvictionTag} evictionTag the {@link @smartutils.object:EvictionTag eviction tag}.\r\n */\r\nexport const InvalidateCache = function (tag) {\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    return annotationService.getMethodAnnotationFactory(InvalidateCacheName)(tag);\r\n};\r\nexport function InvalidateCacheAnnotationFactory(cacheService) {\r\n    'ngInject';\r\n    return annotationService.setMethodAnnotationFactory(InvalidateCacheName, (factoryArguments) => function (target, propertyName, originalMethod, invocationArguments) {\r\n        let tags = [];\r\n        const tag = factoryArguments[0];\r\n        if (!tag) {\r\n            if (target.cacheConfig && target.cacheConfig.tags) {\r\n                tags = target.cacheConfig.tags;\r\n            }\r\n        }\r\n        else {\r\n            tags = [tag];\r\n        }\r\n        if (!tags.length) {\r\n            throw new Error(`method ${propertyName} of ${target.constructor.name} is @InvalidateCache annotated but no EvictionTag is specified either through @InvalidateCache or through class level @CacheConfig annotation`);\r\n        }\r\n        // eslint-disable-next-line prefer-spread\r\n        const returnedObject = originalMethod.apply(undefined, Array.prototype.slice.call(invocationArguments));\r\n        if (returnedObject && returnedObject.then) {\r\n            return returnedObject.then((value) => {\r\n                cacheService.evict(...tags);\r\n                return value;\r\n            });\r\n        }\r\n        else {\r\n            cacheService.evict(...tags);\r\n            return returnedObject;\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=cached-annotation.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/utils/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/annotation.service.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/log.service.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/cache/cache-action.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/cache/cache.service.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/cache/engine/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/cache/eviction-tag.ts"],"map":"{\"version\":3,\"file\":\"cached-annotation.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/cache/cached-annotation.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/cache/cached-annotation.d.ts","writeByteOrderMark":false,"text":"import { ClassAnnotationFactory, MethodAnnotationFactory } from '../annotation.service';\r\nimport { LogService } from '../log.service';\r\nimport { CacheAction } from './cache-action';\r\nimport { CacheService } from './cache.service';\r\nimport { EvictionTag } from './eviction-tag';\r\n/**\r\n * @ngdoc object\r\n * @name @smartutils.object:@CacheConfig\r\n * @description\r\n * Class level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} responsible for setting\r\n *  class level cache configuration to be merged into method specific {@link @smartutils.object:@Cached @Cached} and\r\n *  {@link @smartutils.object:@InvalidateCache @InvalidateCache} configurations.\r\n * @param {object} cacheConfig the configuration fo this cache\r\n * @param {cacheAction} cacheConfig.actions the list of {@link @smartutils.object:CacheAction CacheAction} characterizing this cache.\r\n * @param {EvictionTag[]} cacheConfig.tags a list of {@link @smartutils.object:EvictionTag EvictionTag} to control the eviction behaviour of this cache.\r\n */\r\nexport declare const CacheConfig: (args: {\r\n    actions?: CacheAction[];\r\n    tags?: EvictionTag[];\r\n}) => ClassDecorator;\r\nexport declare function CacheConfigAnnotationFactory(logService: LogService): ClassAnnotationFactory;\r\n/**\r\n * @ngdoc object\r\n * @name @smartutils.object:@Cached\r\n * @description\r\n * Method level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} responsible for performing\r\n * invocation arguments sensitive method caching.\r\n * <br/> This annotation must only be used on methods returning promises.\r\n * @param {object} cacheConfig the configuration fo this cache\r\n * <br/> This configuration will be merged with a class level {@link @smartutils.object:@CacheConfig @acheConfig} if any.\r\n * @throws if no {@link @smartutils.object:CacheAction CacheAction} is found in the resulting merge\r\n * @param {cacheAction} cacheConfig.actions the list of {@link @smartutils.object:CacheAction CacheAction} characterizing this cache.\r\n * @param {EvictionTag[]} cacheConfig.tags a list of {@link @smartutils.object:EvictionTag EvictionTag} to control the eviction behaviour of this cache.\r\n */\r\nexport declare const Cached: (args?: {\r\n    actions: CacheAction[];\r\n    tags?: EvictionTag[];\r\n}) => MethodDecorator;\r\nexport declare function CachedAnnotationFactory(cacheService: CacheService): MethodAnnotationFactory;\r\n/**\r\n * @ngdoc object\r\n * @name @smartutils.object:@InvalidateCache\r\n * @description\r\n * Method level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} responsible for\r\n * invalidating all caches either directly or indirectly declaring the {@link @smartutils.object:EvictionTag eviction tag} passed as argument.\r\n * if no eviction tag is passed as argument, defaults to the optional eviction tags passed to the class through {@link @smartutils.object:@CacheConfig @CacheConfig}.\r\n *\r\n * @param {EvictionTag} evictionTag the {@link @smartutils.object:EvictionTag eviction tag}.\r\n */\r\nexport declare const InvalidateCache: (tag?: EvictionTag) => any;\r\nexport declare function InvalidateCacheAnnotationFactory(cacheService: CacheService): MethodAnnotationFactory;\r\n"}}
