{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Component, HostBinding, Inject, Optional } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ModalRef } from '@fundamental-ngx/core';\r\nimport { DEFAULT_AUTHENTICATION_ENTRY_POINT } from '../../constants';\r\nimport { ISessionService, IStorageService } from '../../interfaces';\r\nimport { SSOAuthenticationHelper } from '../../services/authentication/sso-authentication.helper';\r\nimport { LogService } from '../../services/log.service';\r\nimport { UrlUtils } from '../../utils';\r\nimport { LoginDialogResourceProvider } from './login-dialog-resource-provider';\r\nlet LoginDialogComponent = class LoginDialogComponent {\r\n    constructor(modalRef, logService, httpClient, sessionService, storageService, urlUtils, ssoAuthenticationHelper, resource) {\r\n        this.modalRef = modalRef;\r\n        this.logService = logService;\r\n        this.httpClient = httpClient;\r\n        this.sessionService = sessionService;\r\n        this.storageService = storageService;\r\n        this.urlUtils = urlUtils;\r\n        this.ssoAuthenticationHelper = ssoAuthenticationHelper;\r\n        this.resource = resource;\r\n        this.hostClass = true;\r\n        this.data = null;\r\n        this.authURIKey = '';\r\n        this.authURI = '';\r\n        this.isFullScreen = false;\r\n        this.ssoEnabled = false;\r\n        this.form = new FormGroup({\r\n            username: new FormControl('', Validators.required),\r\n            password: new FormControl('', Validators.required)\r\n        });\r\n        this.signinWithSSO = () => {\r\n            this.form.setErrors(null);\r\n            return this.ssoAuthenticationHelper\r\n                .launchSSODialog()\r\n                .then((data) => this.storeAccessToken(data), (error) => this.APIAuthenticationFailureReportFactory(error))\r\n                .then((userHasChanged) => this.acceptUser(userHasChanged));\r\n        };\r\n        this.sendCredentials = (payload) => this.httpClient\r\n            .request('POST', this.authURI, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded'),\r\n            body: this.urlUtils.getQueryString(payload).replace('?', ''),\r\n            observe: 'response'\r\n        })\r\n            .toPromise();\r\n    }\r\n    ngOnInit() {\r\n        this.data = this.modalRef.data || {};\r\n        this.authURI = this.data.authURI;\r\n        this.isFullScreen = this.data.isFullScreen;\r\n        this.ssoEnabled = this.data.ssoEnabled && this.isMainEndPoint();\r\n        this.storageService.removeAuthToken(this.authURI);\r\n        this.authURIKey = btoa(this.authURI).replace(/=/g, '');\r\n        if (this.ssoAuthenticationHelper.isAutoSSOMain()) {\r\n            this.signinWithSSO();\r\n        }\r\n    }\r\n    signinWithCredentials() {\r\n        this.form.setErrors(null);\r\n        if (this.hasRequiredCredentialsError()) {\r\n            this.form.setErrors({\r\n                credentialsRequiredError: 'se.logindialogform.username.and.password.required'\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        const payload = Object.assign(Object.assign({}, (this.data.clientCredentials || {})), { username: this.form.get('username').value, password: this.form.get('password').value, grant_type: 'password' });\r\n        return this.sendCredentials(payload)\r\n            .then((response) => this.storeAccessToken(response), (error) => this.APIAuthenticationFailureReportFactory(error))\r\n            .then((hasUserChanged) => this.acceptUser(hasUserChanged));\r\n    }\r\n    isMainEndPoint() {\r\n        return DEFAULT_AUTHENTICATION_ENTRY_POINT === this.authURI;\r\n    }\r\n    storeAccessToken(response) {\r\n        const token = response instanceof HttpResponse ? response.body : response;\r\n        this.storageService.storeAuthToken(this.authURI, token);\r\n        this.logService.debug(`API Authentication Success: ${this.authURI}`);\r\n        return this.isMainEndPoint()\r\n            ? this.sessionService.hasUserChanged()\r\n            : Promise.resolve(false);\r\n    }\r\n    APIAuthenticationFailureReportFactory(error) {\r\n        this.logService.debug(`API Authentication Failure: ${this.authURI} status: ${error.status}`);\r\n        this.form.setErrors({\r\n            asyncValidationError: (error.error && error.error.error_description) ||\r\n                'se.logindialogform.oauth.error.default'\r\n        });\r\n        return Promise.reject(error);\r\n    }\r\n    acceptUser(userHasChanged) {\r\n        this.modalRef.close({\r\n            userHasChanged\r\n        });\r\n        if (this.isMainEndPoint()) {\r\n            this.sessionService.setCurrentUsername();\r\n        }\r\n        return Promise.resolve({ userHasChanged });\r\n    }\r\n    hasRequiredCredentialsError() {\r\n        const username = this.form.get('username');\r\n        const password = this.form.get('password');\r\n        return ((username.errors && username.errors.required) ||\r\n            (password.errors && password.errors.required));\r\n    }\r\n};\r\n__decorate([\r\n    HostBinding('class.su-login-dialog'),\r\n    __metadata(\"design:type\", Object)\r\n], LoginDialogComponent.prototype, \"hostClass\", void 0);\r\nLoginDialogComponent = __decorate([\r\n    Component({\r\n        selector: 'su-login-dialog',\r\n        styles: [`.su-login{width:500px;min-height:440px;box-shadow:0 1px 4px 0 rgba(0,0,0,.1);background-color:#fff;border-radius:4px;border:1px solid rgba(0,0,0,.2);padding:20px;margin:0 auto}.su-login--wrapper{padding:40px 100px;width:100%}.su-login--form-group{margin-bottom:20px}.su-login--form-sso{margin-top:20px}.su-login--logo-wrapper{display:flex;justify-content:flex-start;align-items:center}.su-login--logo-wrapper.su-login--logo-wrapper_full{padding-bottom:45px}.su-login--logo{height:44px}.su-login--logo-text{font-family:\"72\",web,\"Open Sans\",sans-serif;font-size:1.7142857143rem;line-height:1.3333333333;font-weight:400;padding-left:16px;color:#32363a;font-weight:700}.su-login--logo__best-run{position:absolute;bottom:30px;left:30px}.su-login--btn{font-size:1rem;line-height:1.4285714286;font-weight:400;width:100%}.su-login--auth-message{padding-top:20px;padding-bottom:20px;font-size:1rem;line-height:1.4285714286;font-weight:400}.su-login--alert-error{margin-bottom:0;box-shadow:none}`],\r\n        template: `<div class=\"su-login\"><div class=\"su-login--wrapper\"><div class=\"su-login--logo-wrapper\" [ngClass]=\"{ 'su-login--logo-wrapper_full': !isFullScreen }\"><img *ngIf=\"resource?.topLogoURL\" [src]=\"resource?.topLogoURL\" class=\"su-login--logo\"/> <span class=\"su-login--logo-text\" translate=\"se.application.name\"></span></div><form autocomplete=\"off\" novalidate [formGroup]=\"form\" (submit)=\"signinWithCredentials()\" class=\"su-login--form\"><div class=\"su-login--auth-message\" *ngIf=\"isFullScreen\"><div translate=\"se.logindialogform.reauth.message1\"></div><div translate=\"se.logindialogform.reauth.message2\"></div></div><div *ngIf=\"form.errors\" class=\"su-login--form-group\"><fd-alert type=\"error\" class=\"su-login--alert-error\" id=\"invalidError\" [dismissible]=\"false\"><ng-container *ngIf=\"form.errors?.credentialsRequiredError\">{{ form.errors.credentialsRequiredError | translate }}</ng-container><ng-container *ngIf=\"form.errors?.asyncValidationError\">{{ form.errors.asyncValidationError | translate }}</ng-container></fd-alert></div><div class=\"su-login--form-group\"><input fd-form-control type=\"text\" id=\"username_{{ authURIKey }}\" name=\"username\" formControlName=\"username\" placeholder=\"{{ 'se.authentication.form.input.username' | translate }}\" autofocus autocomplete=\"username\"/></div><div class=\"su-login--form-group\"><input fd-form-control type=\"password\" id=\"password_{{ authURIKey }}\" name=\"password\" placeholder=\"{{ 'se.authentication.form.input.password' | translate }}\" formControlName=\"password\" autocomplete=\"current-password\" required/></div><div class=\"su-login--form-group\"><su-language-dropdown class=\"su-login-language\"></su-language-dropdown></div><button fd-button options=\"emphasized\" class=\"su-login--btn\" id=\"submit_{{ authURIKey }}\" name=\"submit\" type=\"submit\" translate=\"se.authentication.form.button.submit\"></button></form><form *ngIf=\"ssoEnabled\" class=\"su-login--form-sso\" name=\"loginDialogFormSSO\" novalidate (submit)=\"signinWithSSO()\"><button fd-button options=\"emphasized\" class=\"fd-button--emphasized su-login--btn\" id=\"submitSSO_{{ authURIKey }}\" name=\"submitSSO\" type=\"submit\" translate=\"se.authentication.form.button.submit.sso\"></button></form></div></div><img *ngIf=\"resource?.bottomLogoURL\" [src]=\"resource?.bottomLogoURL\" class=\"su-login--logo__best-run\"/>`\r\n    }),\r\n    __param(7, Optional()), __param(7, Inject(LoginDialogResourceProvider)),\r\n    __metadata(\"design:paramtypes\", [ModalRef,\r\n        LogService,\r\n        HttpClient,\r\n        ISessionService,\r\n        IStorageService,\r\n        UrlUtils,\r\n        SSOAuthenticationHelper, Object])\r\n], LoginDialogComponent);\r\nexport { LoginDialogComponent };\r\n//# sourceMappingURL=login-dialog.component.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+forms@8.2.14_e9fbe5720e9434eb9ae0f6720f1ca3f4/node_modules/@angular/forms/forms.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@fundamental-ngx+core@0.13.2_9a9a80bb6ff375d99f90188f858ebbd5/node_modules/@fundamental-ngx/core/fundamental-ngx-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/constants.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/interfaces/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/authentication/sso-authentication.helper.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/log.service.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/utils/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/components/login-dialog/login-dialog-resource-provider.ts"],"map":"{\"version\":3,\"file\":\"login-dialog.component.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/login-dialog/login-dialog.component.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/login-dialog/login-dialog.component.d.ts","writeByteOrderMark":false,"text":"import { HttpClient } from '@angular/common/http';\r\nimport { OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ModalRef } from '@fundamental-ngx/core';\r\nimport { ILoginData, ILoginModalFeedback, ISessionService, IStorageService } from '../../interfaces';\r\nimport { SSOAuthenticationHelper } from '../../services/authentication/sso-authentication.helper';\r\nimport { LogService } from '../../services/log.service';\r\nimport { UrlUtils } from '../../utils';\r\nimport { LoginDialogResource } from './login-dialog-resource-provider';\r\nexport declare class LoginDialogComponent implements OnInit {\r\n    private modalRef;\r\n    private logService;\r\n    private httpClient;\r\n    private sessionService;\r\n    private storageService;\r\n    private urlUtils;\r\n    private ssoAuthenticationHelper;\r\n    resource: LoginDialogResource;\r\n    hostClass: boolean;\r\n    data: ILoginData;\r\n    authURIKey: string;\r\n    authURI: string;\r\n    isFullScreen: boolean;\r\n    ssoEnabled: boolean;\r\n    form: FormGroup;\r\n    constructor(modalRef: ModalRef, logService: LogService, httpClient: HttpClient, sessionService: ISessionService, storageService: IStorageService, urlUtils: UrlUtils, ssoAuthenticationHelper: SSOAuthenticationHelper, resource: LoginDialogResource);\r\n    ngOnInit(): void;\r\n    signinWithSSO: () => Promise<ILoginModalFeedback>;\r\n    signinWithCredentials(): Promise<ILoginModalFeedback>;\r\n    private isMainEndPoint;\r\n    private storeAccessToken;\r\n    private sendCredentials;\r\n    private APIAuthenticationFailureReportFactory;\r\n    private acceptUser;\r\n    private hasRequiredCredentialsError;\r\n}\r\n"}}
