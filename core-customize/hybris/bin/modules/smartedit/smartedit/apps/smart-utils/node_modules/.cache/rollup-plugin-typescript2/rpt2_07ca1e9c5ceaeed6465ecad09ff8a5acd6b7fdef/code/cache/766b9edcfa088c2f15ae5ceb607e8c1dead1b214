{"code":"/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\n/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * @ngdoc interface\r\n * @name smarteditServicesModule.interface:ISessionService\r\n * @description\r\n * The ISessionService provides information related to the current session\r\n * and the authenticated user (including a user readable and writeable languages).\r\n */\r\nexport class ISessionService {\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#getCurrentUsername\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Returns the username, previously mentioned as \"principalUID\",\r\n     * associated to the authenticated user.\r\n     *\r\n     * @returns {Promise<string>} A promise resolving to the username,\r\n     * previously mentioned as \"principalUID\", associated to the\r\n     * authenticated user.\r\n     */\r\n    getCurrentUsername() {\r\n        'proxyFunction';\r\n        return Promise.resolve('');\r\n    }\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#getCurrentUserDisplayName\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Returns the displayed name associated to the authenticated user.\r\n     *\r\n     * @returns {Promise<string>} A promise resolving to the displayed name\r\n     * associated to the authenticated user.\r\n     */\r\n    getCurrentUserDisplayName() {\r\n        'proxyFunction';\r\n        return Promise.resolve('');\r\n    }\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#getCurrentUser\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Returns the data of the current authenticated user.\r\n     * Also note that as part of the User object returned by this method contains\r\n     * the list of readable and writeable languages available to the user.\r\n     *\r\n     * @returns {Promise<User>} A promise resolving to the data of the current\r\n     * authenticated user.\r\n     */\r\n    getCurrentUser() {\r\n        'proxyFunction';\r\n        return Promise.resolve({});\r\n    }\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#hasUserChanged\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Returns boolean indicating whether the current user is different from\r\n     * the last authenticated one.\r\n     *\r\n     * @returns {Promise<boolean>} Boolean indicating whether the current user is\r\n     * different from the last authenticated one.\r\n     */\r\n    hasUserChanged() {\r\n        'proxyFunction';\r\n        return Promise.resolve(true);\r\n    }\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#resetCurrentUserData\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Reset all data associated to the authenticated user.\r\n     * to the authenticated user.\r\n     *\r\n     * @return {Promise<void>} returns an empty promise.\r\n     */\r\n    resetCurrentUserData() {\r\n        'proxyFunction';\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#setCurrentUsername\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Set the username, previously mentioned as \"principalUID\", associated\r\n     * to the authenticated user.\r\n     *\r\n     * @return {Promise<void>} returns an empty promise.\r\n     */\r\n    setCurrentUsername() {\r\n        'proxyFunction';\r\n        return Promise.resolve();\r\n    }\r\n}\r\n//# sourceMappingURL=i-session.service.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/dtos/index.ts"],"map":"{\"version\":3,\"file\":\"i-session.service.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/interfaces/i-session.service.ts\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;AACH;;;GAGG;AACH;;GAEG;AAIH;;;;;;GAMG;AACH,MAAM,OAAgB,eAAe;IACjC;;;;;;;;;;;;OAYG;IACH,kBAAkB;QACd,eAAe,CAAC;QAChB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED;;;;;;;;;;OAUG;IACH,yBAAyB;QACrB,eAAe,CAAC;QAChB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED;;;;;;;;;;;;OAYG;IACH,cAAc;QACV,eAAe,CAAC;QAChB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAU,CAAC,CAAC;IACvC,CAAC;IAED;;;;;;;;;;;OAWG;IACH,cAAc;QACV,eAAe,CAAC;QAChB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED;;;;;;;;;;OAUG;IACH,oBAAoB;QAChB,eAAe,CAAC;QAChB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED;;;;;;;;;;OAUG;IACH,kBAAkB;QACd,eAAe,CAAC;QAChB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;CACJ\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/node_modules/.cache/rollup-plugin-typescript2/placeholder/interfaces/i-session.service.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { User } from '../dtos';\r\n/**\r\n * @ngdoc interface\r\n * @name smarteditServicesModule.interface:ISessionService\r\n * @description\r\n * The ISessionService provides information related to the current session\r\n * and the authenticated user (including a user readable and writeable languages).\r\n */\r\nexport declare abstract class ISessionService {\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#getCurrentUsername\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Returns the username, previously mentioned as \"principalUID\",\r\n     * associated to the authenticated user.\r\n     *\r\n     * @returns {Promise<string>} A promise resolving to the username,\r\n     * previously mentioned as \"principalUID\", associated to the\r\n     * authenticated user.\r\n     */\r\n    getCurrentUsername(): Promise<string>;\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#getCurrentUserDisplayName\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Returns the displayed name associated to the authenticated user.\r\n     *\r\n     * @returns {Promise<string>} A promise resolving to the displayed name\r\n     * associated to the authenticated user.\r\n     */\r\n    getCurrentUserDisplayName(): Promise<string>;\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#getCurrentUser\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Returns the data of the current authenticated user.\r\n     * Also note that as part of the User object returned by this method contains\r\n     * the list of readable and writeable languages available to the user.\r\n     *\r\n     * @returns {Promise<User>} A promise resolving to the data of the current\r\n     * authenticated user.\r\n     */\r\n    getCurrentUser(): Promise<User>;\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#hasUserChanged\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Returns boolean indicating whether the current user is different from\r\n     * the last authenticated one.\r\n     *\r\n     * @returns {Promise<boolean>} Boolean indicating whether the current user is\r\n     * different from the last authenticated one.\r\n     */\r\n    hasUserChanged(): Promise<boolean>;\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#resetCurrentUserData\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Reset all data associated to the authenticated user.\r\n     * to the authenticated user.\r\n     *\r\n     * @return {Promise<void>} returns an empty promise.\r\n     */\r\n    resetCurrentUserData(): Promise<void>;\r\n    /**\r\n     * @ngdoc method\r\n     * @name smarteditServicesModule.interface:ISessionService#setCurrentUsername\r\n     * @methodOf smarteditServicesModule.interface:ISessionService\r\n     *\r\n     * @description\r\n     * Set the username, previously mentioned as \"principalUID\", associated\r\n     * to the authenticated user.\r\n     *\r\n     * @return {Promise<void>} returns an empty promise.\r\n     */\r\n    setCurrentUsername(): Promise<void>;\r\n}\r\n"}}
