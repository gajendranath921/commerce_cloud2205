{"code":"import { __awaiter, __decorate, __metadata, __param } from \"tslib\";\r\nimport { Component, Inject } from '@angular/core';\r\nimport { CrossFrameEventService, EVENT_OUTER_FRAME_CLICKED, ICatalogService, windowUtils, CONTEXTUAL_MENU_ITEM_DATA, ComponentHandlerService, SlotSharedService, IPageInfoService } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SlotSharedButtonComponent\", {\r\n    selector: 'slot-shared-button',\r\n    template: `<div class=\"se-shared-slot-button-template\" *ngIf=\"isGlobalSlot || isSlotShared\"><se-popup-overlay [popupOverlay]=\"popupConfig\" [popupOverlayTrigger]=\"isPopupOpened\" (popupOverlayOnHide)=\"hidePopup()\"><button type=\"button\" id=\"sharedSlotButton-{{ slotId }}\" class=\"se-slot-ctx-menu__dropdown-toggle se-slot-ctx-menu__dropdown-toggle-icon\" [ngClass]=\"{\n                'se-slot-ctx-menu__dropdown-toggle--open': isPopupOpened,\n                'sap-icon--chain-link': isSlotShared,\n                'sap-icon--globe': isGlobalSlot\n            }\" (click)=\"onButtonClick()\"></button><div class=\"se-slot__dropdown-menu\" se-popup-overlay-body><div class=\"se-slot-contextual-menu__header\" [translate]=\"labelL10nKey\"></div><div class=\"se-shared-slot__body\"><div class=\"se-shared-slot__description\" translate=\"se.cms.slot.shared.popover.commonmessage\"></div><div class=\"se-shared-slot__description\" [translate]=\"descriptionL10nKey\" [translateParams]=\"{ catalogVersion: componentAttributes.smarteditCatalogVersionUuid }\"></div><div *seHasOperationPermission=\"'se.shared.slot.override.options'\"><div class=\"se-shared-slot__option\"><a href=\"#\" class=\"se-shared-slot__link replace-slot-link fd-link\" translate=\"se.cms.slot.shared.popover.button.replaceslot\" (click)=\"replaceSlot($event)\"></a></div></div></div></div></se-popup-overlay></div>`\r\n});\r\nlet SlotSharedButtonComponent = class SlotSharedButtonComponent {\r\n    constructor(contextualMenuItem, catalogService, componentHandlerService, crossFrameEventService, pageInfoService, slotSharedService) {\r\n        this.contextualMenuItem = contextualMenuItem;\r\n        this.catalogService = catalogService;\r\n        this.componentHandlerService = componentHandlerService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.pageInfoService = pageInfoService;\r\n        this.slotSharedService = slotSharedService;\r\n        this.popupConfig = {\r\n            halign: 'left',\r\n            valign: 'bottom',\r\n            additionalClasses: [\r\n                'se-slot-ctx-menu__divider',\r\n                'se-slot-ctx-menu__dropdown-toggle-wrapper'\r\n            ]\r\n        };\r\n        this.buttonName = 'slotSharedButton';\r\n        this.isPopupOpened = false;\r\n        this.isPopupOpenedPreviousValue = false;\r\n    }\r\n    ngOnInit() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.isExternalSlot = this.componentHandlerService.isExternalComponent(this.slotId, this.componentAttributes.smarteditComponentType);\r\n            this.unRegOuterFrameClicked = this.crossFrameEventService.subscribe(EVENT_OUTER_FRAME_CLICKED, () => {\r\n                this.isPopupOpened = false;\r\n            });\r\n            const [isSlotShared, isCurrentCatalogMultiCountry, isGlobalSlot, isSameCatalogVersionOfPageAndPageTemplate] = yield Promise.all([\r\n                this.slotSharedService.isSlotShared(this.slotId),\r\n                this.catalogService.isCurrentCatalogMultiCountry(),\r\n                this.slotSharedService.isGlobalSlot(this.slotId, this.componentAttributes.smarteditComponentType),\r\n                this.pageInfoService.isSameCatalogVersionOfPageAndPageTemplate()\r\n            ]);\r\n            const isMultiCountry = isCurrentCatalogMultiCountry;\r\n            this.isSlotShared =\r\n                (!isMultiCountry || (isMultiCountry && isSameCatalogVersionOfPageAndPageTemplate)) &&\r\n                    !this.isExternalSlot &&\r\n                    isSlotShared;\r\n            this.isGlobalSlot = isGlobalSlot;\r\n            this.labelL10nKey = this.isGlobalSlot\r\n                ? 'se.parentslot.decorator.label'\r\n                : 'se.sharedslot.decorator.label';\r\n            this.descriptionL10nKey = this.isGlobalSlot\r\n                ? 'se.cms.slot.shared.parent.popover.message'\r\n                : 'se.cms.slot.shared.popover.message';\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.unRegOuterFrameClicked) {\r\n            this.unRegOuterFrameClicked();\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (this.isPopupOpenedPreviousValue !== this.isPopupOpened) {\r\n            this.contextualMenuItem.setRemainOpen(this.buttonName, this.isPopupOpened);\r\n            this.isPopupOpenedPreviousValue = this.isPopupOpened;\r\n        }\r\n    }\r\n    get componentAttributes() {\r\n        return this.contextualMenuItem.componentAttributes;\r\n    }\r\n    get slotId() {\r\n        return this.componentAttributes.smarteditComponentId;\r\n    }\r\n    onButtonClick() {\r\n        this.isPopupOpened = !this.isPopupOpened;\r\n    }\r\n    hidePopup() {\r\n        this.isPopupOpened = false;\r\n    }\r\n    replaceSlot(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            event.preventDefault();\r\n            let replaceSlotPromise;\r\n            if (this.isGlobalSlot) {\r\n                replaceSlotPromise = this.slotSharedService.replaceGlobalSlot(this.componentAttributes);\r\n            }\r\n            else {\r\n                replaceSlotPromise = this.slotSharedService.replaceSharedSlot(this.componentAttributes);\r\n            }\r\n            yield replaceSlotPromise;\r\n            this.hidePopup();\r\n            this.reload();\r\n        });\r\n    }\r\n    reload() {\r\n        windowUtils.getWindow().location.reload();\r\n    }\r\n};\r\nSlotSharedButtonComponent = __decorate([\r\n    Component({\r\n        selector: 'slot-shared-button',\r\n        template: `<div class=\"se-shared-slot-button-template\" *ngIf=\"isGlobalSlot || isSlotShared\"><se-popup-overlay [popupOverlay]=\"popupConfig\" [popupOverlayTrigger]=\"isPopupOpened\" (popupOverlayOnHide)=\"hidePopup()\"><button type=\"button\" id=\"sharedSlotButton-{{ slotId }}\" class=\"se-slot-ctx-menu__dropdown-toggle se-slot-ctx-menu__dropdown-toggle-icon\" [ngClass]=\"{\n                'se-slot-ctx-menu__dropdown-toggle--open': isPopupOpened,\n                'sap-icon--chain-link': isSlotShared,\n                'sap-icon--globe': isGlobalSlot\n            }\" (click)=\"onButtonClick()\"></button><div class=\"se-slot__dropdown-menu\" se-popup-overlay-body><div class=\"se-slot-contextual-menu__header\" [translate]=\"labelL10nKey\"></div><div class=\"se-shared-slot__body\"><div class=\"se-shared-slot__description\" translate=\"se.cms.slot.shared.popover.commonmessage\"></div><div class=\"se-shared-slot__description\" [translate]=\"descriptionL10nKey\" [translateParams]=\"{ catalogVersion: componentAttributes.smarteditCatalogVersionUuid }\"></div><div *seHasOperationPermission=\"'se.shared.slot.override.options'\"><div class=\"se-shared-slot__option\"><a href=\"#\" class=\"se-shared-slot__link replace-slot-link fd-link\" translate=\"se.cms.slot.shared.popover.button.replaceslot\" (click)=\"replaceSlot($event)\"></a></div></div></div></div></se-popup-overlay></div>`\r\n    }),\r\n    __param(0, Inject(CONTEXTUAL_MENU_ITEM_DATA)),\r\n    __metadata(\"design:paramtypes\", [Object, ICatalogService,\r\n        ComponentHandlerService,\r\n        CrossFrameEventService,\r\n        IPageInfoService,\r\n        SlotSharedService])\r\n], SlotSharedButtonComponent);\r\nexport { SlotSharedButtonComponent };\r\n//# sourceMappingURL=SlotSharedButtonComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"SlotSharedButtonComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/slotShared/SlotSharedButtonComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/slotShared/SlotSharedButtonComponent.d.ts","writeByteOrderMark":false,"text":"import { DoCheck, OnDestroy, OnInit } from '@angular/core';\r\nimport { ComponentAttributes, CrossFrameEventService, ICatalogService, PopupOverlayConfig, ContextualMenuItemData, ComponentHandlerService, SlotSharedService, IPageInfoService } from 'smarteditcommons';\r\nexport declare class SlotSharedButtonComponent implements OnInit, OnDestroy, DoCheck {\r\n    private contextualMenuItem;\r\n    private catalogService;\r\n    private componentHandlerService;\r\n    private crossFrameEventService;\r\n    private pageInfoService;\r\n    private slotSharedService;\r\n    isExternalSlot: boolean;\r\n    isSlotShared: boolean;\r\n    isGlobalSlot: boolean;\r\n    isPopupOpened: boolean;\r\n    popupConfig: PopupOverlayConfig;\r\n    labelL10nKey: string;\r\n    descriptionL10nKey: string;\r\n    private isPopupOpenedPreviousValue;\r\n    private readonly buttonName;\r\n    private unRegOuterFrameClicked;\r\n    constructor(contextualMenuItem: ContextualMenuItemData, catalogService: ICatalogService, componentHandlerService: ComponentHandlerService, crossFrameEventService: CrossFrameEventService, pageInfoService: IPageInfoService, slotSharedService: SlotSharedService);\r\n    ngOnInit(): Promise<void>;\r\n    ngOnDestroy(): void;\r\n    ngDoCheck(): void;\r\n    get componentAttributes(): ComponentAttributes;\r\n    get slotId(): string;\r\n    onButtonClick(): void;\r\n    hidePopup(): void;\r\n    replaceSlot(event: MouseEvent): Promise<void>;\r\n    private reload;\r\n}\r\n"}}
