{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { includes } from 'lodash';\r\nimport { IExperienceService, IRestServiceFactory, PAGE_CONTEXT_CATALOG, PAGE_CONTEXT_CATALOG_VERSION, PAGE_CONTEXT_SITE_ID, SeDowngradeService } from 'smarteditcommons';\r\n/**\r\n * This service allows retrieving information about the containers found in a given page.\r\n */\r\nlet /* @ngInject */ SlotContainerService = class /* @ngInject */ SlotContainerService {\r\n    constructor(restServiceFactory, experienceService) {\r\n        this.experienceService = experienceService;\r\n        const contentSlotContainerResourceURI = `/cmswebservices/v1/sites/${PAGE_CONTEXT_SITE_ID}/catalogs/${PAGE_CONTEXT_CATALOG}/versions/${PAGE_CONTEXT_CATALOG_VERSION}/pagescontentslotscontainers?pageId=:pageId`;\r\n        this.containersRestService = restServiceFactory.get(contentSlotContainerResourceURI);\r\n    }\r\n    /**\r\n     * This method is used to retrieve the information about the container holding the provided component.\r\n     * If the component is not inside a container, the method returns null.\r\n     *\r\n     * @param slotId The SmartEdit id of the slot where the component in question is located.\r\n     * @param componentUuid The UUID of the component as defined in the database.\r\n     *\r\n     * @returns A promise that resolves to the information of the container of the component provided.\r\n     * Will be null if the component is not inside a container.\r\n     */\r\n    getComponentContainer(slotId, componentUuid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const containersInPage = yield this.loadContainersInPageInfo();\r\n            const containers = containersInPage.filter((container) => container.slotId === slotId && includes(container.components, componentUuid));\r\n            return containers.length > 0 ? containers[0] : null;\r\n        });\r\n    }\r\n    loadContainersInPageInfo() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.containersInPage) {\r\n                return this.containersInPage;\r\n            }\r\n            const experience = yield this.experienceService.getCurrentExperience();\r\n            const result = yield this.containersRestService.get({ pageId: experience.pageId });\r\n            this.containersInPage = result.pageContentSlotContainerList;\r\n            return this.containersInPage;\r\n        });\r\n    }\r\n};\r\n/* @ngInject */ SlotContainerService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [IRestServiceFactory,\r\n        IExperienceService])\r\n], /* @ngInject */ SlotContainerService);\r\nexport { /* @ngInject */ SlotContainerService };\r\n//# sourceMappingURL=SlotContainerService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"SlotContainerService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/SlotContainerService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAElC,OAAO,EACH,kBAAkB,EAElB,mBAAmB,EACnB,oBAAoB,EACpB,4BAA4B,EAC5B,oBAAoB,EACpB,kBAAkB,EACrB,MAAM,kBAAkB,CAAC;AAa1B;;GAEG;AAEH,2CAAA;IAII,YACI,kBAAuC,EAC/B,iBAAqC;QAArC,sBAAiB,GAAjB,iBAAiB,CAAoB;QAE7C,MAAM,+BAA+B,GAAG,4BAA4B,oBAAoB,aAAa,oBAAoB,aAAa,4BAA4B,6CAA6C,CAAC;QAChN,IAAI,CAAC,qBAAqB,GAAG,kBAAkB,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IACzF,CAAC;IAED;;;;;;;;;OASG;IACU,qBAAqB,CAC9B,MAAc,EACd,aAAqB;;YAErB,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAC/D,MAAM,UAAU,GAAG,gBAAgB,CAAC,MAAM,CACtC,CAAC,SAAwB,EAAE,EAAE,CACzB,SAAS,CAAC,MAAM,KAAK,MAAM,IAAI,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,aAAa,CAAC,CACnF,CAAC;YAEF,OAAO,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxD,CAAC;KAAA;IAEa,wBAAwB;;YAClC,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACvB,OAAO,IAAI,CAAC,gBAAgB,CAAC;aAChC;YACD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,EAAE,CAAC;YACvE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;YAEnF,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,4BAA4B,CAAC;YAC5D,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC;KAAA;CACJ,CAAA;AA7CD;IADC,kBAAkB,EAAE;qCAMO,mBAAmB;QACZ,kBAAkB;wCAuCpD\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/SlotContainerService.d.ts","writeByteOrderMark":false,"text":"import { IExperienceService, IRestServiceFactory } from 'smarteditcommons';\r\nexport interface ContainerInfo {\r\n    containerId: string;\r\n    containerType: string;\r\n    pageId: string;\r\n    slotId: string;\r\n    components: string[];\r\n}\r\n/**\r\n * This service allows retrieving information about the containers found in a given page.\r\n */\r\nexport declare class SlotContainerService {\r\n    private experienceService;\r\n    private containersInPage;\r\n    private containersRestService;\r\n    constructor(restServiceFactory: IRestServiceFactory, experienceService: IExperienceService);\r\n    /**\r\n     * This method is used to retrieve the information about the container holding the provided component.\r\n     * If the component is not inside a container, the method returns null.\r\n     *\r\n     * @param slotId The SmartEdit id of the slot where the component in question is located.\r\n     * @param componentUuid The UUID of the component as defined in the database.\r\n     *\r\n     * @returns A promise that resolves to the information of the container of the component provided.\r\n     * Will be null if the component is not inside a container.\r\n     */\r\n    getComponentContainer(slotId: string, componentUuid: string): Promise<ContainerInfo>;\r\n    private loadContainersInPageInfo;\r\n}\r\n"}}
