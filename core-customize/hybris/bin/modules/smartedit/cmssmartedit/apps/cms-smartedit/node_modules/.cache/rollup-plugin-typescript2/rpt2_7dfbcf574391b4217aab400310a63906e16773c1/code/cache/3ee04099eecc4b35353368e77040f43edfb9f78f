{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { slotEvictionTag, IPageContentSlotsComponentsRestService, PAGE_CONTEXT_CATALOG, PAGE_CONTEXT_CATALOG_VERSION } from 'cmscommons';\r\nimport { cloneDeep } from 'lodash';\r\nimport { pageChangeEvictionTag, rarelyChangingContent, Cached, GatewayProxied, InvalidateCache, IPageInfoService, IRestServiceFactory, SeDowngradeService, PAGE_CONTEXT_SITE_ID, CmsitemsRestService, cmsitemsEvictionTag } from 'smarteditcommons';\r\nlet /* @ngInject */ PageContentSlotsComponentsRestService = class /* @ngInject */ PageContentSlotsComponentsRestService extends IPageContentSlotsComponentsRestService {\r\n    constructor(restServiceFactory, pageInfoService, cmsitemsRestService) {\r\n        super();\r\n        this.pageInfoService = pageInfoService;\r\n        this.cmsitemsRestService = cmsitemsRestService;\r\n        const contentSlotContainerResourceURI = `/cmswebservices/v1/sites/${PAGE_CONTEXT_SITE_ID}/catalogs/${PAGE_CONTEXT_CATALOG}/versions/${PAGE_CONTEXT_CATALOG_VERSION}/pagescontentslotscomponents?pageId=:pageId`;\r\n        this.pagesContentSlotsComponentsRestService = restServiceFactory.get(contentSlotContainerResourceURI);\r\n    }\r\n    clearCache() {\r\n        return;\r\n    }\r\n    getComponentsForSlot(slotId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const pageUID = yield this.pageInfoService.getPageUID();\r\n            const slotsToComponentsMap = yield this.getSlotsToComponentsMapForPageUid(pageUID);\r\n            return slotsToComponentsMap[slotId] || [];\r\n        });\r\n    }\r\n    /**\r\n     * Returns a list of Page Content Slots Components associated to a page.\r\n     *\r\n     * @param pageUid The uid of the page to retrieve the content slots to components map.\r\n     */\r\n    getSlotsToComponentsMapForPageUid(pageUid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const response = yield this.getCachedSlotsToComponentsMapForPageUid(pageUid);\r\n            return cloneDeep(response);\r\n        });\r\n    }\r\n    getCachedSlotsToComponentsMapForPageUid(pageUid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { pageContentSlotComponentList } = yield this.pagesContentSlotsComponentsRestService.get({\r\n                pageId: pageUid\r\n            });\r\n            const componentUuids = this.mapPageContentSlotComponentListToComponentUuids(pageContentSlotComponentList);\r\n            const { response: components } = yield this.cmsitemsRestService.getByIds(componentUuids, 'DEFAULT');\r\n            const uuidToComponentMap = this.createUuidToComponentMap(components);\r\n            // load all components as SlotUuid-Component[] map\r\n            const allSlotsToComponentsMap = this.createSlotUuidToComponentMap(pageContentSlotComponentList, uuidToComponentMap);\r\n            return allSlotsToComponentsMap;\r\n        });\r\n    }\r\n    createSlotUuidToComponentMap(componentList, uuidToComponentMap) {\r\n        return componentList.reduce((map, component) => {\r\n            map[component.slotId] = map[component.slotId] || [];\r\n            if (uuidToComponentMap[component.componentUuid]) {\r\n                map[component.slotId].push(uuidToComponentMap[component.componentUuid]);\r\n            }\r\n            return map;\r\n        }, {});\r\n    }\r\n    mapPageContentSlotComponentListToComponentUuids(componentList) {\r\n        let componentUuids = componentList.map((pageContentSlotComponent) => pageContentSlotComponent.componentUuid);\r\n        componentUuids = Array.from(new Set(componentUuids)); // remove duplicates\r\n        return componentUuids;\r\n    }\r\n    createUuidToComponentMap(components) {\r\n        return (components || []).reduce((map, component) => {\r\n            map[component.uuid] = component;\r\n            return map;\r\n        }, {});\r\n    }\r\n};\r\n__decorate([\r\n    InvalidateCache(slotEvictionTag),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], /* @ngInject */ PageContentSlotsComponentsRestService.prototype, \"clearCache\", null);\r\n__decorate([\r\n    Cached({\r\n        actions: [rarelyChangingContent],\r\n        tags: [cmsitemsEvictionTag, pageChangeEvictionTag, slotEvictionTag]\r\n    }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], /* @ngInject */ PageContentSlotsComponentsRestService.prototype, \"getCachedSlotsToComponentsMapForPageUid\", null);\r\n/* @ngInject */ PageContentSlotsComponentsRestService = __decorate([\r\n    GatewayProxied('clearCache', 'getSlotsToComponentsMapForPageUid'),\r\n    SeDowngradeService(IPageContentSlotsComponentsRestService),\r\n    __metadata(\"design:paramtypes\", [IRestServiceFactory,\r\n        IPageInfoService,\r\n        CmsitemsRestService])\r\n], /* @ngInject */ PageContentSlotsComponentsRestService);\r\nexport { /* @ngInject */ PageContentSlotsComponentsRestService };\r\n//# sourceMappingURL=PageContentSlotsComponentsRestServiceInner.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"PageContentSlotsComponentsRestServiceInner.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/PageContentSlotsComponentsRestServiceInner.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/PageContentSlotsComponentsRestServiceInner.d.ts","writeByteOrderMark":false,"text":"import { ICMSComponent, IPageContentSlotsComponentsRestService } from 'cmscommons';\r\nimport { IPageInfoService, IRestServiceFactory, TypedMap, CmsitemsRestService } from 'smarteditcommons';\r\nexport interface PageContentSlotComponent {\r\n    pageId: string;\r\n    slotId: string;\r\n    componentId: string;\r\n    componentUuid: string;\r\n    position: number;\r\n}\r\nexport interface PageContentSlotComponentResponse {\r\n    pageContentSlotComponentList: PageContentSlotComponent[];\r\n}\r\nexport declare class PageContentSlotsComponentsRestService extends IPageContentSlotsComponentsRestService {\r\n    private pageInfoService;\r\n    private cmsitemsRestService;\r\n    private pagesContentSlotsComponentsRestService;\r\n    constructor(restServiceFactory: IRestServiceFactory, pageInfoService: IPageInfoService, cmsitemsRestService: CmsitemsRestService);\r\n    clearCache(): void;\r\n    getComponentsForSlot(slotId: string): Promise<ICMSComponent[]>;\r\n    /**\r\n     * Returns a list of Page Content Slots Components associated to a page.\r\n     *\r\n     * @param pageUid The uid of the page to retrieve the content slots to components map.\r\n     */\r\n    getSlotsToComponentsMapForPageUid(pageUid: string): Promise<TypedMap<ICMSComponent[]>>;\r\n    private getCachedSlotsToComponentsMapForPageUid;\r\n    private createSlotUuidToComponentMap;\r\n    private mapPageContentSlotComponentListToComponentUuids;\r\n    private createUuidToComponentMap;\r\n}\r\n"}}
