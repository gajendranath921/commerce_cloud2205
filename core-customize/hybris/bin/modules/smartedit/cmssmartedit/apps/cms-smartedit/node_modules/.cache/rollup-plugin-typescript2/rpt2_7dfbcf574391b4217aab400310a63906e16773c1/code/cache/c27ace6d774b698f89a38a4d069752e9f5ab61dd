{"code":"import { __awaiter, __decorate, __metadata, __param } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SlotUnsharedService } from 'cmssmartedit/services/SlotUnsharedService';\r\nimport { CrossFrameEventService, EVENT_OUTER_FRAME_CLICKED, ICatalogService, IConfirmationModalService, ISharedDataService, windowUtils, MessageType, LogService, CONTEXTUAL_MENU_ITEM_DATA, ComponentHandlerService, IPageInfoService, SlotSharedService } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SlotUnsharedButtonComponent\", {\r\n    selector: 'slot-unshared-button',\r\n    template: `<div class=\"slot-unshared-button-template\" *ngIf=\"isLocalSlot || isNonSharedSlot\"><se-popup-overlay [popupOverlay]=\"popupConfig\" [popupOverlayTrigger]=\"isPopupOpened\" (popupOverlayOnHide)=\"hidePopup()\"><button type=\"button\" id=\"slot-unshared-button-{{ slotId }}\" class=\"se-slot-ctx-menu__dropdown-toggle se-slot-ctx-menu__dropdown-toggle-icon\" [ngClass]=\"{\n                'se-slot-ctx-menu__dropdown-toggle--open': isPopupOpened,\n                'sap-icon--chain-link': isLocalSlot,\n                'sap-icon--broken-link': isNonSharedSlot\n            }\" (click)=\"toggle()\"></button><div class=\"se-toolbar-menu-content se-slot__dropdown-menu\" se-popup-overlay-body><div class=\"se-slot-contextual-menu__header\" [translate]=\"getHeader()\"></div><div class=\"se-shared-slot__body\"><div class=\"se-shared-slot__description\" translate=\"se.cms.slot.unshared.popover.commonmessage\"></div><div *seHasOperationPermission=\"'se.shared.slot.override.options'\" class=\"se-shared-slot-replace__div\"><div *ngIf=\"isLocalSlot\" class=\"se-shared-slot__option\"><a href=\"#\" class=\"se-shared-slot__link replace-slot-link fd-link\" translate=\"se.cms.slot.shared.popover.button.replaceslot\" (click)=\"replaceSlot($event)\"></a></div></div><div *seHasOperationPermission=\"'se.revert.to.global.or.shared.slot.link'\" class=\"se-shared-slot__option\"><a href=\"#\" class=\"se-shared-slot__link revert-slot-link fd-link\" [translate]=\"removeSlotLinkLabel\" (click)=\"removeSlot()\"></a></div></div></div></se-popup-overlay></div>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet SlotUnsharedButtonComponent = class SlotUnsharedButtonComponent {\r\n    constructor(contextualMenuItem, catalogService, confirmationModalService, componentHandlerService, crossFrameEventService, slotUnsharedService, sharedDataService, slotSharedService, translateService, pageInfoService, logService, cdr) {\r\n        this.contextualMenuItem = contextualMenuItem;\r\n        this.catalogService = catalogService;\r\n        this.confirmationModalService = confirmationModalService;\r\n        this.componentHandlerService = componentHandlerService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.slotUnsharedService = slotUnsharedService;\r\n        this.sharedDataService = sharedDataService;\r\n        this.slotSharedService = slotSharedService;\r\n        this.translateService = translateService;\r\n        this.pageInfoService = pageInfoService;\r\n        this.logService = logService;\r\n        this.cdr = cdr;\r\n        this.isPopupOpened = false;\r\n        this.isPopupOpenedPreviousValue = this.isPopupOpened;\r\n        this.popupConfig = {\r\n            halign: 'left',\r\n            valign: 'bottom',\r\n            additionalClasses: [\r\n                'se-slot-ctx-menu__dropdown-toggle-wrapper',\r\n                'se-slot-ctx-menu__divider'\r\n            ]\r\n        };\r\n        this.buttonName = 'slotUnsharedButton';\r\n    }\r\n    ngOnInit() {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.unRegOuterFrameClicked = this.crossFrameEventService.subscribe(EVENT_OUTER_FRAME_CLICKED, () => {\r\n                this.isPopupOpened = false;\r\n            });\r\n            this.isExternalSlot = this.componentHandlerService.isExternalComponent(this.slotId, this.componentAttributes.smarteditComponentType);\r\n            const [isSlotShared, isCurrentCatalogMultiCountry, isSlotUnshared, isSameCatalogVersionOfPageAndPageTemplate, experience] = yield Promise.all([\r\n                this.slotUnsharedService.isSlotShared(this.slotId),\r\n                this.catalogService.isCurrentCatalogMultiCountry(),\r\n                this.slotUnsharedService.isSlotUnshared(this.slotId),\r\n                this.pageInfoService.isSameCatalogVersionOfPageAndPageTemplate(),\r\n                this.sharedDataService.get('experience')\r\n            ]);\r\n            this.isSlotShared = isSlotShared;\r\n            this.isMultiCountry = isCurrentCatalogMultiCountry;\r\n            this.isSlotUnshared = isSlotUnshared;\r\n            const pageContextCatalogVersionUuid = ((_a = experience === null || experience === void 0 ? void 0 : experience.pageContext) === null || _a === void 0 ? void 0 : _a.catalogVersionUuid) || '';\r\n            const catalogDescriptorCatalogVersionUuid = ((_b = experience === null || experience === void 0 ? void 0 : experience.catalogDescriptor) === null || _b === void 0 ? void 0 : _b.catalogVersionUuid) || '';\r\n            this.isCurrentPageFromParent =\r\n                catalogDescriptorCatalogVersionUuid !== pageContextCatalogVersionUuid;\r\n            this.isLocalSlot =\r\n                this.isMultiCountry &&\r\n                    !isSameCatalogVersionOfPageAndPageTemplate &&\r\n                    !this.isExternalSlot &&\r\n                    !this.isCurrentPageFromParent &&\r\n                    this.isSlotShared;\r\n            this.isNonSharedSlot = !this.isExternalSlot && !this.isSlotShared && this.isSlotUnshared;\r\n            this.removeSlotLinkLabel = this.getRemoveSlotLinkLabel();\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.unRegOuterFrameClicked) {\r\n            this.unRegOuterFrameClicked();\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (this.isPopupOpenedPreviousValue !== this.isPopupOpened) {\r\n            this.isPopupOpenedPreviousValue = this.isPopupOpened;\r\n            this.contextualMenuItem.setRemainOpen(this.buttonName, this.isPopupOpened);\r\n        }\r\n    }\r\n    get componentAttributes() {\r\n        return this.contextualMenuItem.componentAttributes;\r\n    }\r\n    get slotId() {\r\n        return this.componentAttributes.smarteditComponentId;\r\n    }\r\n    getHeader() {\r\n        return this.isLocalSlot ? 'se.localslot.decorator.label' : 'se.nonshared.decorator.label';\r\n    }\r\n    toggle() {\r\n        this.isPopupOpened = !this.isPopupOpened;\r\n    }\r\n    hidePopup() {\r\n        this.isPopupOpened = false;\r\n    }\r\n    removeSlot() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const confirmed = yield this.confirmationModalService\r\n                .confirm({\r\n                title: this.removeSlotLinkLabel,\r\n                description: this.isLocalSlot\r\n                    ? 'se.cms.local.slot.remove.description'\r\n                    : 'se.cms.slot.remove.description',\r\n                message: {\r\n                    id: 'removeSlotYMessage',\r\n                    text: this.isLocalSlot\r\n                        ? 'se.cms.local.slot.remove.sync.ymessage'\r\n                        : 'se.cms.slot.remove.sync.ymessage',\r\n                    type: MessageType.info\r\n                }\r\n            })\r\n                .catch(() => {\r\n                this.logService.log('Confirmation cancelled');\r\n            });\r\n            if (!confirmed) {\r\n                return;\r\n            }\r\n            yield this.slotUnsharedService.revertToSharedSlot(this.componentAttributes.smarteditComponentUuid);\r\n            this.isPopupOpened = false;\r\n            this.reload();\r\n        });\r\n    }\r\n    replaceSlot(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            event.preventDefault();\r\n            let replaceSlotPromise;\r\n            if (this.isLocalSlot) {\r\n                replaceSlotPromise = this.slotSharedService.replaceSharedSlot(this.componentAttributes);\r\n            }\r\n            yield replaceSlotPromise;\r\n            this.hidePopup();\r\n            this.reload();\r\n        });\r\n    }\r\n    getRemoveSlotLinkLabel() {\r\n        return this.isLocalSlot\r\n            ? 'se.cms.slot.shared.remove.local.slot.title'\r\n            : 'se.cms.slot.shared.remove.nonshard.slot.title';\r\n    }\r\n    reload() {\r\n        windowUtils.getWindow().location.reload();\r\n    }\r\n};\r\nSlotUnsharedButtonComponent = __decorate([\r\n    Component({\r\n        selector: 'slot-unshared-button',\r\n        template: `<div class=\"slot-unshared-button-template\" *ngIf=\"isLocalSlot || isNonSharedSlot\"><se-popup-overlay [popupOverlay]=\"popupConfig\" [popupOverlayTrigger]=\"isPopupOpened\" (popupOverlayOnHide)=\"hidePopup()\"><button type=\"button\" id=\"slot-unshared-button-{{ slotId }}\" class=\"se-slot-ctx-menu__dropdown-toggle se-slot-ctx-menu__dropdown-toggle-icon\" [ngClass]=\"{\n                'se-slot-ctx-menu__dropdown-toggle--open': isPopupOpened,\n                'sap-icon--chain-link': isLocalSlot,\n                'sap-icon--broken-link': isNonSharedSlot\n            }\" (click)=\"toggle()\"></button><div class=\"se-toolbar-menu-content se-slot__dropdown-menu\" se-popup-overlay-body><div class=\"se-slot-contextual-menu__header\" [translate]=\"getHeader()\"></div><div class=\"se-shared-slot__body\"><div class=\"se-shared-slot__description\" translate=\"se.cms.slot.unshared.popover.commonmessage\"></div><div *seHasOperationPermission=\"'se.shared.slot.override.options'\" class=\"se-shared-slot-replace__div\"><div *ngIf=\"isLocalSlot\" class=\"se-shared-slot__option\"><a href=\"#\" class=\"se-shared-slot__link replace-slot-link fd-link\" translate=\"se.cms.slot.shared.popover.button.replaceslot\" (click)=\"replaceSlot($event)\"></a></div></div><div *seHasOperationPermission=\"'se.revert.to.global.or.shared.slot.link'\" class=\"se-shared-slot__option\"><a href=\"#\" class=\"se-shared-slot__link revert-slot-link fd-link\" [translate]=\"removeSlotLinkLabel\" (click)=\"removeSlot()\"></a></div></div></div></se-popup-overlay></div>`,\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    }),\r\n    __param(0, Inject(CONTEXTUAL_MENU_ITEM_DATA)),\r\n    __metadata(\"design:paramtypes\", [Object, ICatalogService,\r\n        IConfirmationModalService,\r\n        ComponentHandlerService,\r\n        CrossFrameEventService,\r\n        SlotUnsharedService,\r\n        ISharedDataService,\r\n        SlotSharedService,\r\n        TranslateService,\r\n        IPageInfoService,\r\n        LogService,\r\n        ChangeDetectorRef])\r\n], SlotUnsharedButtonComponent);\r\nexport { SlotUnsharedButtonComponent };\r\n//# sourceMappingURL=SlotUnsharedButtonComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate+core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/src/services/SlotUnsharedService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"SlotUnsharedButtonComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/slotUnshared/SlotUnsharedButtonComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/slotUnshared/SlotUnsharedButtonComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, DoCheck, OnDestroy, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SlotUnsharedService } from 'cmssmartedit/services/SlotUnsharedService';\r\nimport { ComponentAttributes, CrossFrameEventService, ICatalogService, IConfirmationModalService, ISharedDataService, PopupOverlayConfig, LogService, ContextualMenuItemData, ComponentHandlerService, IPageInfoService, SlotSharedService } from 'smarteditcommons';\r\nexport declare class SlotUnsharedButtonComponent implements OnInit, OnDestroy, DoCheck {\r\n    private contextualMenuItem;\r\n    private catalogService;\r\n    private confirmationModalService;\r\n    private componentHandlerService;\r\n    private crossFrameEventService;\r\n    private slotUnsharedService;\r\n    private sharedDataService;\r\n    private slotSharedService;\r\n    private translateService;\r\n    private pageInfoService;\r\n    private logService;\r\n    private cdr;\r\n    isPopupOpened: boolean;\r\n    isExternalSlot: boolean;\r\n    popupConfig: PopupOverlayConfig;\r\n    removeSlotLinkLabel?: string;\r\n    isSlotShared?: boolean;\r\n    isSlotUnshared?: boolean;\r\n    isCurrentPageFromParent?: boolean;\r\n    isMultiCountry?: boolean;\r\n    isLocalSlot?: boolean;\r\n    isNonSharedSlot?: boolean;\r\n    private isPopupOpenedPreviousValue;\r\n    private readonly buttonName;\r\n    private unRegOuterFrameClicked;\r\n    constructor(contextualMenuItem: ContextualMenuItemData, catalogService: ICatalogService, confirmationModalService: IConfirmationModalService, componentHandlerService: ComponentHandlerService, crossFrameEventService: CrossFrameEventService, slotUnsharedService: SlotUnsharedService, sharedDataService: ISharedDataService, slotSharedService: SlotSharedService, translateService: TranslateService, pageInfoService: IPageInfoService, logService: LogService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    ngOnDestroy(): void;\r\n    ngDoCheck(): void;\r\n    get componentAttributes(): ComponentAttributes;\r\n    get slotId(): string;\r\n    getHeader(): string;\r\n    toggle(): void;\r\n    hidePopup(): void;\r\n    removeSlot(): Promise<void>;\r\n    replaceSlot(event: MouseEvent): Promise<void>;\r\n    private getRemoveSlotLinkLabel;\r\n    private reload;\r\n}\r\n"}}
