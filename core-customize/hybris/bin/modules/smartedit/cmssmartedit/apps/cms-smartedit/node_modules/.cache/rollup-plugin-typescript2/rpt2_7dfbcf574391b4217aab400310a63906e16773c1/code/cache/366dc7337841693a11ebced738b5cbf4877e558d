{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, Input } from '@angular/core';\r\nimport { IComponentSharedService, IComponentVisibilityAlertService } from 'cmscommons';\r\nimport { ICatalogService, ICatalogVersionPermissionService, SeDowngradeComponent, LogService, IEditorModalService, UserTrackingService, USER_TRACKING_FUNCTIONALITY } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SlotVisibilityComponent\", {\r\n    selector: 'se-slot-visibility-component',\r\n    template: `<div class=\"se-slot-visibility-wrapper\"><div *ngIf=\"isReady\" class=\"se-slot-visiblity-component__content\"><div class=\"se-slot-visibility__icon-wrapper\"><div class=\"se-slot-visibility__icon sap-icon--home-share\"></div><div *ngIf=\"isSharedComponent\" class=\"se-slot-visibility__icon--shared sap-icon--chain-link\"></div></div><div class=\"se-slot-visiblity-component__description\"><div *ngIf=\"readOnly\" class=\"se-slot-visiblity-component__name\">{{ component.name }}</div><div *ngIf=\"!readOnly\" class=\"se-slot-visiblity-component__name--link\" (click)=\"openEditorModal()\">{{ component.name }}</div><div class=\"se-slot-visiblity-component__type\">{{ component.typeCode }}</div><div class=\"se-slot-visiblity-component__visibility\">{{ 'se.genericeditor.tab.visibility.title' | translate }} {{ componentVisibilitySwitch | translate }} / {{ componentRestrictionsCount }} {{ 'se.cms.restrictions.editor.tab' | translate }}</div><div *ngIf=\"component.isExternal\" class=\"sap-icon--globe se-slot-visiblity-component--globe-icon\"></div></div></div><se-hidden-component-menu [slotId]=\"slotId\" [component]=\"component\"></se-hidden-component-menu></div>`,\r\n    styles: [`.se-slot-visiblity-component--globe-icon{margin-left:4px}.se-slot-visiblity-component__content{display:flex;flex-direction:row;align-items:center;flex-grow:1}.se-slot-visiblity-component__description{margin-right:16px}.se-slot-visiblity-component__name,.se-slot-visiblity-component__visibility{color:#32363a}.se-slot-visiblity-component__name--link{cursor:pointer;color:#0a6ed1}.se-slot-visiblity-component__type{color:#6a6d70}`],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet /* @ngInject */ SlotVisibilityComponent = class /* @ngInject */ SlotVisibilityComponent {\r\n    constructor(catalogService, componentSharedService, editorModalService, componentVisibilityAlertService, catalogVersionPermissionService, logService, cdr, userTrackingService) {\r\n        this.catalogService = catalogService;\r\n        this.componentSharedService = componentSharedService;\r\n        this.editorModalService = editorModalService;\r\n        this.componentVisibilityAlertService = componentVisibilityAlertService;\r\n        this.catalogVersionPermissionService = catalogVersionPermissionService;\r\n        this.logService = logService;\r\n        this.cdr = cdr;\r\n        this.userTrackingService = userTrackingService;\r\n        this.isReady = false;\r\n        this.isSharedComponent = false;\r\n        this.readOnly = false;\r\n    }\r\n    ngOnInit() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.isSharedComponent = yield this.componentSharedService.isComponentShared(this.component);\r\n            const { catalogId, version } = yield this.catalogService.getCatalogVersionByUuid(this.component.catalogVersion);\r\n            const isWritable = yield this.catalogVersionPermissionService.hasWritePermission(catalogId, version);\r\n            this.readOnly = !isWritable || this.component.isExternal;\r\n            this.componentVisibilitySwitch = this.component.visible\r\n                ? 'se.cms.component.visibility.status.on'\r\n                : 'se.cms.component.visibility.status.off';\r\n            const count = ((_a = this.component.restrictions) === null || _a === void 0 ? void 0 : _a.length) || 0;\r\n            this.componentRestrictionsCount = `(${count})`;\r\n            this.isReady = true;\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        const componentChange = changes.component;\r\n        if (componentChange) {\r\n            this.componentId = this.component.uid;\r\n        }\r\n    }\r\n    openEditorModal() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.userTrackingService.trackingUserAction(USER_TRACKING_FUNCTIONALITY.CONTEXT_MENU, 'Slot Visibility');\r\n            try {\r\n                const item = yield this.editorModalService.openAndRerenderSlot(this.component.typeCode, this.component.uuid, 'visible');\r\n                this.componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\r\n                    itemId: item.uuid,\r\n                    itemType: item.itemtype,\r\n                    catalogVersion: item.catalogVersion,\r\n                    restricted: item.restricted,\r\n                    slotId: this.slotId,\r\n                    visible: item.visible\r\n                });\r\n            }\r\n            catch (error) {\r\n                this.logService.warn('Something went wrong with openAndRerenderSlot method.', error);\r\n            }\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SlotVisibilityComponent.prototype, \"component\", void 0);\r\n__decorate([\r\n    HostBinding('attr.data-component-id'),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ SlotVisibilityComponent.prototype, \"componentId\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ SlotVisibilityComponent.prototype, \"slotId\", void 0);\r\n/* @ngInject */ SlotVisibilityComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-slot-visibility-component',\r\n        template: `<div class=\"se-slot-visibility-wrapper\"><div *ngIf=\"isReady\" class=\"se-slot-visiblity-component__content\"><div class=\"se-slot-visibility__icon-wrapper\"><div class=\"se-slot-visibility__icon sap-icon--home-share\"></div><div *ngIf=\"isSharedComponent\" class=\"se-slot-visibility__icon--shared sap-icon--chain-link\"></div></div><div class=\"se-slot-visiblity-component__description\"><div *ngIf=\"readOnly\" class=\"se-slot-visiblity-component__name\">{{ component.name }}</div><div *ngIf=\"!readOnly\" class=\"se-slot-visiblity-component__name--link\" (click)=\"openEditorModal()\">{{ component.name }}</div><div class=\"se-slot-visiblity-component__type\">{{ component.typeCode }}</div><div class=\"se-slot-visiblity-component__visibility\">{{ 'se.genericeditor.tab.visibility.title' | translate }} {{ componentVisibilitySwitch | translate }} / {{ componentRestrictionsCount }} {{ 'se.cms.restrictions.editor.tab' | translate }}</div><div *ngIf=\"component.isExternal\" class=\"sap-icon--globe se-slot-visiblity-component--globe-icon\"></div></div></div><se-hidden-component-menu [slotId]=\"slotId\" [component]=\"component\"></se-hidden-component-menu></div>`,\r\n        styles: [`.se-slot-visiblity-component--globe-icon{margin-left:4px}.se-slot-visiblity-component__content{display:flex;flex-direction:row;align-items:center;flex-grow:1}.se-slot-visiblity-component__description{margin-right:16px}.se-slot-visiblity-component__name,.se-slot-visiblity-component__visibility{color:#32363a}.se-slot-visiblity-component__name--link{cursor:pointer;color:#0a6ed1}.se-slot-visiblity-component__type{color:#6a6d70}`],\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    }),\r\n    __metadata(\"design:paramtypes\", [ICatalogService,\r\n        IComponentSharedService,\r\n        IEditorModalService,\r\n        IComponentVisibilityAlertService,\r\n        ICatalogVersionPermissionService,\r\n        LogService,\r\n        ChangeDetectorRef,\r\n        UserTrackingService])\r\n], /* @ngInject */ SlotVisibilityComponent);\r\nexport { /* @ngInject */ SlotVisibilityComponent };\r\n//# sourceMappingURL=SlotVisibilityComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"SlotVisibilityComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/slotVisibility/slotVisibility/SlotVisibilityComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/slotVisibility/slotVisibility/SlotVisibilityComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, OnInit, SimpleChanges } from '@angular/core';\r\nimport { ICMSComponent, IComponentSharedService, IComponentVisibilityAlertService } from 'cmscommons';\r\nimport { ICatalogService, ICatalogVersionPermissionService, LogService, IEditorModalService, UserTrackingService } from 'smarteditcommons';\r\nexport declare class SlotVisibilityComponent implements OnInit {\r\n    private catalogService;\r\n    private componentSharedService;\r\n    private editorModalService;\r\n    private componentVisibilityAlertService;\r\n    private catalogVersionPermissionService;\r\n    private logService;\r\n    private cdr;\r\n    private userTrackingService;\r\n    component: ICMSComponent;\r\n    componentId: string;\r\n    slotId: string;\r\n    isReady: boolean;\r\n    isSharedComponent: boolean;\r\n    readOnly: boolean;\r\n    componentVisibilitySwitch: string;\r\n    componentRestrictionsCount: string;\r\n    constructor(catalogService: ICatalogService, componentSharedService: IComponentSharedService, editorModalService: IEditorModalService, componentVisibilityAlertService: IComponentVisibilityAlertService, catalogVersionPermissionService: ICatalogVersionPermissionService, logService: LogService, cdr: ChangeDetectorRef, userTrackingService: UserTrackingService);\r\n    ngOnInit(): Promise<void>;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    openEditorModal(): Promise<void>;\r\n}\r\n"}}
