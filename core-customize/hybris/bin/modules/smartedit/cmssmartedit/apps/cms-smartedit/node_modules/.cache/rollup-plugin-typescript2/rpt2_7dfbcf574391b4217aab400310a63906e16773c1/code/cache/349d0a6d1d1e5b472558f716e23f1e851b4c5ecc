{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { COMPONENT_UPDATED_EVENT, IComponentVisibilityAlertService, IEditorEnablerService } from 'cmscommons';\r\nimport { IFeatureService, SeDowngradeService, SystemEventService, ISlotRestrictionsService, IEditorModalService, GatewayProxied, ComponentHandlerService, EVENT_PAGE_TREE_SLOT_NEED_UPDATE, CrossFrameEventService } from 'smarteditcommons';\r\n/**\r\n * Allows enabling the Edit Component contextual menu item,\r\n * providing a SmartEdit CMS admin the ability to edit various properties of the given component.\r\n *\r\n * Convenience service to attach the open Editor Modal action to the contextual menu of a given component type, or\r\n * given regex corresponding to a selection of component types.\r\n *\r\n * Example: The Edit button is added to the contextual menu of the CMSParagraphComponent, and all types postfixed\r\n * with BannerComponent.\r\n */\r\nlet /* @ngInject */ EditorEnablerService = class /* @ngInject */ EditorEnablerService extends IEditorEnablerService {\r\n    constructor(componentHandlerService, componentVisibilityAlertService, editorModalService, featureService, slotRestrictionsService, crossFrameEventService, systemEventService) {\r\n        super();\r\n        this.componentHandlerService = componentHandlerService;\r\n        this.componentVisibilityAlertService = componentVisibilityAlertService;\r\n        this.editorModalService = editorModalService;\r\n        this.featureService = featureService;\r\n        this.slotRestrictionsService = slotRestrictionsService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.systemEventService = systemEventService;\r\n        this.contextualMenuButton = {\r\n            key: 'se.cms.edit',\r\n            nameI18nKey: 'se.cms.contextmenu.nameI18nKey.edit',\r\n            i18nKey: 'se.cms.contextmenu.title.edit',\r\n            descriptionI18nKey: 'se.cms.contextmenu.descriptionI18n.edit',\r\n            displayClass: 'editbutton',\r\n            displayIconClass: 'sap-icon--edit',\r\n            displaySmallIconClass: 'sap-icon--edit',\r\n            priority: 400,\r\n            permissions: ['se.context.menu.edit.component'],\r\n            action: {\r\n                callback: (config) => this.onClickEditButton(config)\r\n            },\r\n            condition: (config) => this.isSlotEditableForNonExternalComponent(config)\r\n        };\r\n    }\r\n    /**\r\n     * Enables the Edit contextual menu item for the given component types.\r\n     *\r\n     * @param componentTypes The list of component types, as defined in the platform, for which to enable the Edit contextual menu.\r\n     */\r\n    enableForComponents(componentTypes) {\r\n        const contextualMenuConfig = Object.assign(Object.assign({}, this.contextualMenuButton), { regexpKeys: componentTypes });\r\n        this.featureService.addContextualMenuButton(contextualMenuConfig);\r\n    }\r\n    onClickEditButton({ slotUuid, componentAttributes, isComponentHidden, componentType, componentUuid }) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.isEditorModalOpen) {\r\n                return;\r\n            }\r\n            this.isEditorModalOpen = true;\r\n            try {\r\n                let item;\r\n                if (isComponentHidden) {\r\n                    item = yield this.editorModalService.openAndRerenderSlot(componentType, componentUuid, 'visible');\r\n                }\r\n                else {\r\n                    item = yield this.editorModalService.open(componentAttributes);\r\n                }\r\n                this.isEditorModalOpen = false;\r\n                this.systemEventService.publish(COMPONENT_UPDATED_EVENT, item);\r\n                yield this.componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\r\n                    itemId: item.uuid,\r\n                    itemType: item.itemtype,\r\n                    catalogVersion: item.catalogVersion,\r\n                    restricted: item.restricted,\r\n                    slotId: slotUuid,\r\n                    visible: item.visible\r\n                });\r\n                if (isComponentHidden) {\r\n                    yield this.crossFrameEventService.publish(EVENT_PAGE_TREE_SLOT_NEED_UPDATE, slotUuid);\r\n                }\r\n            }\r\n            catch (_a) {\r\n                this.isEditorModalOpen = false;\r\n            }\r\n        });\r\n    }\r\n    isSlotEditableForNonExternalComponent(config) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let slotId = null;\r\n            if (!!config.element) {\r\n                slotId = this.componentHandlerService.getParentSlotForComponent(config.element);\r\n            }\r\n            else {\r\n                slotId = config.slotId;\r\n            }\r\n            const isEditable = yield this.slotRestrictionsService.isSlotEditable(slotId);\r\n            return (isEditable &&\r\n                !this.componentHandlerService.isExternalComponent(config.componentId, config.componentType));\r\n        });\r\n    }\r\n};\r\n/* @ngInject */ EditorEnablerService = __decorate([\r\n    SeDowngradeService(),\r\n    GatewayProxied('onClickEditButton', 'isSlotEditableForNonExternalComponent'),\r\n    __metadata(\"design:paramtypes\", [ComponentHandlerService,\r\n        IComponentVisibilityAlertService,\r\n        IEditorModalService,\r\n        IFeatureService,\r\n        ISlotRestrictionsService,\r\n        CrossFrameEventService,\r\n        SystemEventService])\r\n], /* @ngInject */ EditorEnablerService);\r\nexport { /* @ngInject */ EditorEnablerService };\r\n//# sourceMappingURL=EditorEnablerServiceInner.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"EditorEnablerServiceInner.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/EditorEnablerServiceInner.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/EditorEnablerServiceInner.d.ts","writeByteOrderMark":false,"text":"import { IComponentVisibilityAlertService, IEditorEnablerService } from 'cmscommons';\r\nimport { IContextualMenuConfiguration, IFeatureService, SystemEventService, ISlotRestrictionsService, IEditorModalService, ComponentHandlerService, CrossFrameEventService } from 'smarteditcommons';\r\n/**\r\n * Allows enabling the Edit Component contextual menu item,\r\n * providing a SmartEdit CMS admin the ability to edit various properties of the given component.\r\n *\r\n * Convenience service to attach the open Editor Modal action to the contextual menu of a given component type, or\r\n * given regex corresponding to a selection of component types.\r\n *\r\n * Example: The Edit button is added to the contextual menu of the CMSParagraphComponent, and all types postfixed\r\n * with BannerComponent.\r\n */\r\nexport declare class EditorEnablerService extends IEditorEnablerService {\r\n    private readonly componentHandlerService;\r\n    private readonly componentVisibilityAlertService;\r\n    private readonly editorModalService;\r\n    private readonly featureService;\r\n    private readonly slotRestrictionsService;\r\n    private readonly crossFrameEventService;\r\n    private readonly systemEventService;\r\n    private readonly contextualMenuButton;\r\n    private isEditorModalOpen;\r\n    constructor(componentHandlerService: ComponentHandlerService, componentVisibilityAlertService: IComponentVisibilityAlertService, editorModalService: IEditorModalService, featureService: IFeatureService, slotRestrictionsService: ISlotRestrictionsService, crossFrameEventService: CrossFrameEventService, systemEventService: SystemEventService);\r\n    /**\r\n     * Enables the Edit contextual menu item for the given component types.\r\n     *\r\n     * @param componentTypes The list of component types, as defined in the platform, for which to enable the Edit contextual menu.\r\n     */\r\n    enableForComponents(componentTypes: string[]): void;\r\n    onClickEditButton({ slotUuid, componentAttributes, isComponentHidden, componentType, componentUuid }: IContextualMenuConfiguration): Promise<void>;\r\n    isSlotEditableForNonExternalComponent(config: IContextualMenuConfiguration): Promise<boolean>;\r\n}\r\n"}}
