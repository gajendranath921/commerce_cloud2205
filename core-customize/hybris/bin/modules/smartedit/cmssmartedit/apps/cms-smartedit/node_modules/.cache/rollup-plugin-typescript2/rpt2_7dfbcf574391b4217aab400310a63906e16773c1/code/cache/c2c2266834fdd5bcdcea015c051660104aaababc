{"code":"var /* @ngInject */ CmsDragAndDropService_1;\r\nimport { __awaiter, __decorate, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AssetsService, COMPONENT_REMOVED_EVENT, DRAG_AND_DROP_EVENTS, IPageContentSlotsComponentsRestService } from 'cmscommons';\r\nimport { CONTENT_SLOT_TYPE, CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS, CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS, DragAndDropService, GatewayFactory, IAlertService, IBrowserService, IWaitDialogService, OVERLAY_RERENDERED_EVENT, SeDowngradeService, SMARTEDIT_COMPONENT_PROCESS_STATUS, SystemEventService, windowUtils, YJQUERY_TOKEN, DOMAIN_TOKEN, ISlotRestrictionsService, COMPONENT_IN_SLOT_STATUS, ComponentHandlerService } from 'smarteditcommons';\r\nimport { ComponentEditingFacade } from './ComponentEditingFacade';\r\n/**\r\n * This service provides a rich drag and drop experience tailored for CMS operations.\r\n */\r\nlet /* @ngInject */ CmsDragAndDropService = /* @ngInject */ CmsDragAndDropService_1 = class /* @ngInject */ CmsDragAndDropService {\r\n    constructor(alertService, assetsService, browserService, componentEditingFacade, componentHandlerService, dragAndDropService, gatewayFactory, translateService, pageContentSlotsComponentsRestService, slotRestrictionsService, systemEventService, waitDialogService, yjQuery, domain) {\r\n        this.alertService = alertService;\r\n        this.assetsService = assetsService;\r\n        this.browserService = browserService;\r\n        this.componentEditingFacade = componentEditingFacade;\r\n        this.componentHandlerService = componentHandlerService;\r\n        this.dragAndDropService = dragAndDropService;\r\n        this.gatewayFactory = gatewayFactory;\r\n        this.translateService = translateService;\r\n        this.pageContentSlotsComponentsRestService = pageContentSlotsComponentsRestService;\r\n        this.slotRestrictionsService = slotRestrictionsService;\r\n        this.systemEventService = systemEventService;\r\n        this.waitDialogService = waitDialogService;\r\n        this.yjQuery = yjQuery;\r\n        this.domain = domain;\r\n        this.cachedSlots = {};\r\n        this.highlightedSlot = null;\r\n        this.highlightedComponent = null;\r\n        this.highlightedHint = null;\r\n        this.dragInfo = null;\r\n        this.overlayRenderedUnSubscribeFn = null;\r\n        this.componentRemovedUnSubscribeFn = null;\r\n        this._window = windowUtils.getWindow();\r\n        this.gateway = this.gatewayFactory.createGateway('cmsDragAndDrop');\r\n    }\r\n    /**\r\n     * This method registers this drag and drop instance in SmartEdit.\r\n     */\r\n    register() {\r\n        this.dragAndDropService.register({\r\n            id: /* @ngInject */ CmsDragAndDropService_1.CMS_DRAG_AND_DROP_ID,\r\n            sourceSelector: [\r\n                /* @ngInject */ CmsDragAndDropService_1.SOURCE_SELECTOR,\r\n                /* @ngInject */ CmsDragAndDropService_1.MORE_MENU_SOURCE_SELECTOR\r\n            ],\r\n            targetSelector: /* @ngInject */ CmsDragAndDropService_1.TARGET_SELECTOR,\r\n            startCallback: (event) => this.onStart(event),\r\n            dragEnterCallback: (event) => this.onDragEnter(event),\r\n            dragOverCallback: (event) => this.onDragOver(event),\r\n            dropCallback: (event) => this.onDrop(event),\r\n            outCallback: (event) => this.onDragLeave(event),\r\n            stopCallback: (event) => this.onStop(event),\r\n            enableScrolling: true,\r\n            helper: () => this.getDragImageSrc()\r\n        });\r\n    }\r\n    /**\r\n     * This method unregisters this drag and drop instance from SmartEdit.\r\n     */\r\n    unregister() {\r\n        this.dragAndDropService.unregister([/* @ngInject */ CmsDragAndDropService_1.CMS_DRAG_AND_DROP_ID]);\r\n        if (this.overlayRenderedUnSubscribeFn) {\r\n            this.overlayRenderedUnSubscribeFn();\r\n        }\r\n        if (this.componentRemovedUnSubscribeFn) {\r\n            this.componentRemovedUnSubscribeFn();\r\n        }\r\n    }\r\n    /**\r\n     * This method applies this drag and drop instance in the current page. After this method is executed,\r\n     * the user can start a drag and drop operation.\r\n     */\r\n    apply() {\r\n        this.dragAndDropService.apply(/* @ngInject */ CmsDragAndDropService_1.CMS_DRAG_AND_DROP_ID);\r\n        this.addUIHelpers();\r\n        // Register a listener for every time the overlay is updated.\r\n        this.overlayRenderedUnSubscribeFn = this.systemEventService.subscribe(OVERLAY_RERENDERED_EVENT, () => this.onOverlayUpdate());\r\n        this.componentRemovedUnSubscribeFn = this.systemEventService.subscribe(COMPONENT_REMOVED_EVENT, () => this.onOverlayUpdate());\r\n        this.gateway.subscribe(DRAG_AND_DROP_EVENTS.DRAG_STARTED, (eventId, data) => {\r\n            this.dragAndDropService.markDragStarted();\r\n            this.initializeDragOperation(data);\r\n        });\r\n        this.gateway.subscribe(DRAG_AND_DROP_EVENTS.DRAG_STOPPED, () => {\r\n            this.dragAndDropService.markDragStopped();\r\n            this.cleanDragOperation();\r\n        });\r\n    }\r\n    /**\r\n     * This method updates this drag and drop instance in the current page. It is important to execute\r\n     * this method every time a draggable or droppable element is added or removed from the page DOM.\r\n     */\r\n    update() {\r\n        this.dragAndDropService.update(/* @ngInject */ CmsDragAndDropService_1.CMS_DRAG_AND_DROP_ID);\r\n        // Add UI helpers -> They identify the places where you can drop components.\r\n        this.addUIHelpers();\r\n        // Update cache elements AFTER adding UI Helpers\r\n        this.cacheElements();\r\n    }\r\n    // Other Event Handlers\r\n    onOverlayUpdate() {\r\n        this.update();\r\n        return Promise.resolve();\r\n    }\r\n    // Drag and Drop Event Handlers\r\n    onStart(event) {\r\n        // Find element\r\n        let targetElm = this.getSelector(event.target);\r\n        // when the DnD icon is in the more option dropdown, the targetElm is a span and has no data-component-id. Here we get the closest element (i.e. <contextual-menu-item>)\r\n        if (!targetElm.attr('data-component-id')) {\r\n            targetElm = this.yjQuery(targetElm).closest('[data-component-id]');\r\n        }\r\n        const component = targetElm.closest(/* @ngInject */ CmsDragAndDropService_1.COMPONENT_SELECTOR);\r\n        const slot = component.closest(/* @ngInject */ CmsDragAndDropService_1.SLOT_SELECTOR);\r\n        // Here if the component evaluated above exits that means the component has been located and we can fetch its attributes\r\n        // else it is not located as the DnD option is hidden inside the more option of the contextual menu in which case\r\n        // we find the component/slot info by accessing attributes of the DnD icon.\r\n        const componentId = component.length > 0\r\n            ? this.componentHandlerService.getId(component)\r\n            : targetElm.attr('data-component-id');\r\n        const componentUuid = component.length > 0\r\n            ? this.componentHandlerService.getSlotOperationRelatedUuid(component)\r\n            : targetElm.attr('data-component-uuid');\r\n        const componentType = component.length > 0\r\n            ? this.componentHandlerService.getType(component)\r\n            : targetElm.attr('data-component-type');\r\n        const slotOperationRelatedId = component.length > 0\r\n            ? this.componentHandlerService.getSlotOperationRelatedId(component)\r\n            : targetElm.attr('data-component-id');\r\n        const slotOperationRelatedType = component.length > 0\r\n            ? this.componentHandlerService.getSlotOperationRelatedType(component)\r\n            : targetElm.attr('data-component-type');\r\n        const slotId = component.length > 0\r\n            ? this.componentHandlerService.getId(slot)\r\n            : targetElm.attr('data-slot-id');\r\n        const slotUuid = component.length > 0\r\n            ? this.componentHandlerService.getId(slot)\r\n            : targetElm.attr('data-slot-uuid');\r\n        const dragInfo = {\r\n            componentId,\r\n            componentUuid,\r\n            componentType,\r\n            slotUuid,\r\n            slotId,\r\n            slotOperationRelatedId,\r\n            slotOperationRelatedType\r\n        };\r\n        component.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.COMPONENT_DRAGGED);\r\n        this.initializeDragOperation(dragInfo);\r\n        this.toggleKeepVisibleComponentAndSlot(true);\r\n    }\r\n    onDragEnter(event) {\r\n        return this.highlightSlot(event);\r\n    }\r\n    onDragOver(event) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.highlightSlot(event);\r\n            if (!this.highlightedSlot || !this.highlightedSlot.isAllowed) {\r\n                return;\r\n            }\r\n            const slotId = this.componentHandlerService.getId(this.highlightedSlot.original);\r\n            // Check which component is highlighted\r\n            if (this.highlightedHint && this.isMouseInRegion(event, this.highlightedHint)) {\r\n                // If right hint is already highlighted don't do anything.\r\n                return;\r\n            }\r\n            else if (this.highlightedHint) {\r\n                // Hint is not longer hovered.\r\n                this.clearHighlightedHint();\r\n            }\r\n            const cachedSlot = this.cachedSlots[slotId];\r\n            if (cachedSlot.components.length > 0) {\r\n                // Find the hovered component.\r\n                if (!this.highlightedComponent ||\r\n                    !this.isMouseInRegion(event, this.highlightedComponent)) {\r\n                    this.clearHighlightedComponent();\r\n                    // Find the component, if any, to higlight.\r\n                    const componentToHighlight = this.selectMouseOverElement(event, cachedSlot.components);\r\n                    if (componentToHighlight) {\r\n                        this.highlightedComponent = componentToHighlight;\r\n                    }\r\n                }\r\n                // Find the hint, if any, to highlight.\r\n                if ((_a = this.highlightedComponent) === null || _a === void 0 ? void 0 : _a.hints) {\r\n                    const hintToHighlight = this.selectMouseOverElement(event, this.highlightedComponent.hints);\r\n                    if (hintToHighlight) {\r\n                        this.highlightedHint = hintToHighlight;\r\n                    }\r\n                }\r\n            }\r\n            if (this.highlightedComponent &&\r\n                this.highlightedComponent.id === this.dragInfo.slotOperationRelatedId) {\r\n                this.highlightedComponent.original.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.COMPONENT_DRAGGED_HOVERED);\r\n            }\r\n            else if (this.highlightedHint) {\r\n                if (this.highlightedSlot.isAllowed) {\r\n                    this.highlightedHint.original.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_HOVERED);\r\n                    if (this.highlightedSlot.mayBeAllowed) {\r\n                        this.highlightedHint.original.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_MAY_BE_ALLOWED);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    selectMouseOverElement(event, elements) {\r\n        return elements.find((element) => this.isMouseInRegion(event, element));\r\n    }\r\n    onDrop(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.highlightedSlot) {\r\n                const sourceSlotId = this.dragInfo.slotId;\r\n                const targetSlotId = this.componentHandlerService.getId(this.highlightedSlot.original);\r\n                const targetSlotUUId = this.componentHandlerService.getUuid(this.highlightedSlot.original);\r\n                const sourceComponentId = this.dragInfo.componentId;\r\n                // if component is dragged from component-menu, there is no slotOperationRelated(Id/Type) available.\r\n                const sourceSlotOperationRelatedId = this.dragInfo.slotOperationRelatedId || this.dragInfo.componentId;\r\n                const componentType = this.dragInfo.slotOperationRelatedType || this.dragInfo.componentType;\r\n                if (!this.highlightedSlot.isAllowed) {\r\n                    const translation = this.translateService.instant('se.drag.and.drop.not.valid.component.type', {\r\n                        slotUID: targetSlotId,\r\n                        componentUID: sourceSlotOperationRelatedId\r\n                    });\r\n                    this.alertService.showDanger({\r\n                        message: translation\r\n                    });\r\n                    return;\r\n                }\r\n                if (this.highlightedHint || this.highlightedSlot.components.length === 0) {\r\n                    let position = this.highlightedHint ? this.highlightedHint.position : 0;\r\n                    let performAction;\r\n                    this.waitDialogService.showWaitModal();\r\n                    if (!sourceSlotId) {\r\n                        if (!sourceComponentId) {\r\n                            const slotInfo = {\r\n                                targetSlotId,\r\n                                targetSlotUUId\r\n                            };\r\n                            const catalogVersionUuid = this.componentHandlerService.getCatalogVersionUuid(this.highlightedSlot.original);\r\n                            performAction = this.componentEditingFacade.addNewComponentToSlot(slotInfo, catalogVersionUuid, componentType, position);\r\n                        }\r\n                        else {\r\n                            const dragInfo = {\r\n                                componentId: sourceComponentId,\r\n                                componentUuid: this.dragInfo.componentUuid,\r\n                                componentType\r\n                            };\r\n                            const componentProperties = {\r\n                                targetSlotId,\r\n                                dragInfo,\r\n                                position\r\n                            };\r\n                            performAction = this.dragInfo.cloneOnDrop\r\n                                ? this.componentEditingFacade.cloneExistingComponentToSlot(componentProperties)\r\n                                : this.componentEditingFacade.addExistingComponentToSlot(targetSlotId, dragInfo, position);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (sourceSlotId === targetSlotId) {\r\n                            const currentComponentPos = this.getComponentPositionFromCachedSlot(sourceSlotId, sourceComponentId);\r\n                            if (currentComponentPos < position) {\r\n                                // The current component will be removed from its current position, thus the target\r\n                                // position needs to take this into account.\r\n                                position--;\r\n                            }\r\n                            else if (currentComponentPos === position) {\r\n                                // Do not perform update if position and slot has not changed.\r\n                                this.waitDialogService.hideWaitModal();\r\n                                return;\r\n                            }\r\n                        }\r\n                        performAction = this.componentEditingFacade.moveComponent(sourceSlotId, targetSlotId, sourceSlotOperationRelatedId, position);\r\n                    }\r\n                    try {\r\n                        yield performAction;\r\n                        this.scrollToModifiedSlot(targetSlotId);\r\n                    }\r\n                    catch (_a) {\r\n                        this.onStop(event);\r\n                    }\r\n                    finally {\r\n                        this.waitDialogService.hideWaitModal();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getComponentPositionFromCachedSlot(slotId, componentId) {\r\n        const cachedSlot = this.cachedSlots[slotId];\r\n        const componentsInCachedSlot = (cachedSlot === null || cachedSlot === void 0 ? void 0 : cachedSlot.components) ? cachedSlot.components : [];\r\n        const cachedComponent = componentsInCachedSlot.find((component) => this.componentHandlerService.getId(component.original) === componentId);\r\n        const currentComponentPos = cachedComponent\r\n            ? cachedComponent.position\r\n            : this.componentHandlerService.getComponentPositionInSlot(slotId, componentId);\r\n        return currentComponentPos;\r\n    }\r\n    onDragLeave(event) {\r\n        if (this.highlightedSlot) {\r\n            const slotId = this.componentHandlerService.getId(this.highlightedSlot.original);\r\n            const cachedSlot = this.cachedSlots[slotId];\r\n            if (!this.isMouseInRegion(event, cachedSlot)) {\r\n                this.clearHighlightedSlot();\r\n            }\r\n        }\r\n    }\r\n    onStop(event) {\r\n        const component = this.getSelector(event.target).closest(/* @ngInject */ CmsDragAndDropService_1.COMPONENT_SELECTOR);\r\n        this.toggleKeepVisibleComponentAndSlot(false);\r\n        this.cleanDragOperation(component);\r\n        this.systemEventService.publish(CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS.RESTART_PROCESS);\r\n    }\r\n    /**\r\n     * This function returns the source of the image used as drag image. Currently, the\r\n     * image is only returned for Safari; all the other browsers display default images\r\n     * properly.\r\n     */\r\n    getDragImageSrc() {\r\n        let imagePath = '';\r\n        if (this.browserService.isSafari()) {\r\n            imagePath = this.assetsService.getAssetsRoot() + /* @ngInject */ CmsDragAndDropService_1.DEFAULT_DRAG_IMG;\r\n        }\r\n        return this.domain + imagePath;\r\n    }\r\n    initializeDragOperation(dragInfo) {\r\n        this.dragInfo = dragInfo;\r\n        this.cacheElements();\r\n        // Prepare UI\r\n        const overlay = this.componentHandlerService.getOverlay();\r\n        overlay.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.OVERLAY_IN_DRAG_DROP);\r\n        // Send an event to signal that the drag operation is started. Other pieces of SE, like contextual menus\r\n        // need to be aware.\r\n        this.systemEventService.publishAsync(DRAG_AND_DROP_EVENTS.DRAG_STARTED);\r\n    }\r\n    cleanDragOperation(draggedComponent) {\r\n        this.clearHighlightedSlot();\r\n        if (draggedComponent) {\r\n            draggedComponent.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.COMPONENT_DRAGGED);\r\n        }\r\n        const overlay = this.componentHandlerService.getOverlay();\r\n        overlay.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.OVERLAY_IN_DRAG_DROP);\r\n        this.systemEventService.publishAsync(DRAG_AND_DROP_EVENTS.DRAG_STOPPED);\r\n        this.dragInfo = null;\r\n        this.cachedSlots = {};\r\n        this.highlightedSlot = null;\r\n    }\r\n    highlightSlot(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const slot = this.yjQuery(event.target).closest(/* @ngInject */ CmsDragAndDropService_1.SLOT_SELECTOR);\r\n            const slotId = this.componentHandlerService.getId(slot);\r\n            let oldSlotId;\r\n            if (this.highlightedSlot) {\r\n                oldSlotId = this.componentHandlerService.getId(this.highlightedSlot.original);\r\n                if (oldSlotId !== slotId) {\r\n                    this.clearHighlightedSlot();\r\n                }\r\n            }\r\n            if (!this.highlightedSlot || this.highlightedSlot.isAllowed === undefined) {\r\n                this.highlightedSlot = this.cachedSlots[slotId];\r\n                const dragInfo = Object.assign({}, this.dragInfo);\r\n                // if component is dragged from component-menu, there is no slotOperationRelated(Id/Type) available.\r\n                dragInfo.componentId =\r\n                    this.dragInfo.slotOperationRelatedId || this.dragInfo.componentId;\r\n                dragInfo.componentType =\r\n                    this.dragInfo.slotOperationRelatedType || this.dragInfo.componentType;\r\n                if (dragInfo.cloneOnDrop) {\r\n                    delete dragInfo.componentId;\r\n                }\r\n                const isComponentAllowed = yield this.slotRestrictionsService.isComponentAllowedInSlot(this.highlightedSlot, dragInfo);\r\n                const isSlotEditable = yield this.slotRestrictionsService.isSlotEditable(slotId);\r\n                // The highlighted slot might have changed while waiting for the promise to be resolved.\r\n                if (this.highlightedSlot && this.highlightedSlot.id === slotId) {\r\n                    const isAllowed = isComponentAllowed === COMPONENT_IN_SLOT_STATUS.ALLOWED && isSlotEditable;\r\n                    const mayBeAllowed = isComponentAllowed === COMPONENT_IN_SLOT_STATUS.MAYBEALLOWED && isSlotEditable;\r\n                    /* Basically the component could be allowed to drop in the slot if the isComponentAllowed status is either ALLOWED or MAYBEALLOWED.\r\n                     * But in order to differentiate between ALLOWED and MAYBEALLOWED, we store it in highlightedSlot.isAllowed and highlightedSlot.mayBeAllowed respectively.\r\n                     */\r\n                    this.highlightedSlot.isAllowed = isAllowed || mayBeAllowed;\r\n                    this.highlightedSlot.mayBeAllowed = mayBeAllowed;\r\n                    if (this.highlightedSlot.isAllowed) {\r\n                        slot.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_ALLOWED);\r\n                        if (mayBeAllowed) {\r\n                            slot.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_MAY_BE_ALLOWED);\r\n                        }\r\n                    }\r\n                    else {\r\n                        slot.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_NOT_ALLOWED);\r\n                    }\r\n                    if (event.type === 'dragenter' && (!oldSlotId || oldSlotId !== slotId)) {\r\n                        if (this.highlightedSlot && this.highlightedSlot.id === slotId) {\r\n                            this.systemEventService.publish(slotId + '_SHOW_SLOT_MENU');\r\n                            this.systemEventService.publish(DRAG_AND_DROP_EVENTS.DRAG_OVER, slotId); // can be used to perform any actions on encountering a drag over event.\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    addUIHelpers() {\r\n        const overlay = this.componentHandlerService.getOverlay();\r\n        // First remove all dropzones.\r\n        overlay.find('.' + /* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.UI_HELPER_OVERLAY).remove();\r\n        const vm = this;\r\n        overlay.find(/* @ngInject */ CmsDragAndDropService_1.SLOT_SELECTOR).each((i, overlayElement) => {\r\n            const slot = vm.yjQuery(overlayElement);\r\n            const slotHeight = slot[0].offsetHeight;\r\n            const slotWidth = slot[0].offsetWidth;\r\n            const components = slot.find(/* @ngInject */ CmsDragAndDropService_1.COMPONENT_SELECTOR);\r\n            if (components.length === 0) {\r\n                const uiHelperOverlay = vm.yjQuery('<div></div>');\r\n                uiHelperOverlay.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.UI_HELPER_OVERLAY);\r\n                const uiHelper = vm.yjQuery('<div></div>');\r\n                uiHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE);\r\n                uiHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_FULL);\r\n                uiHelperOverlay.height(slotHeight);\r\n                uiHelperOverlay.width(slotWidth);\r\n                uiHelperOverlay.append(uiHelper);\r\n                slot.append(uiHelperOverlay);\r\n            }\r\n            else {\r\n                components.each((j, componentElement) => {\r\n                    const component = vm.yjQuery(componentElement);\r\n                    const componentHeight = component[0].offsetHeight;\r\n                    const componentWidth = component[0].offsetWidth;\r\n                    const uiHelperOverlay = vm.yjQuery('<div></div>');\r\n                    uiHelperOverlay.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.UI_HELPER_OVERLAY);\r\n                    uiHelperOverlay.height(componentHeight);\r\n                    uiHelperOverlay.width(componentWidth);\r\n                    const firstHelper = vm.yjQuery('<div></div>');\r\n                    const secondHelper = vm.yjQuery('<div></div>');\r\n                    firstHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE);\r\n                    secondHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE);\r\n                    if (componentWidth === slotWidth) {\r\n                        firstHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_TOP);\r\n                        secondHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_BOTTOM);\r\n                    }\r\n                    else {\r\n                        firstHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_LEFT);\r\n                        secondHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_RIGHT);\r\n                    }\r\n                    uiHelperOverlay.append(firstHelper);\r\n                    uiHelperOverlay.append(secondHelper);\r\n                    component.append(uiHelperOverlay);\r\n                });\r\n            }\r\n        });\r\n    }\r\n    cacheElements() {\r\n        const overlay = this.componentHandlerService.getOverlay();\r\n        if (!overlay) {\r\n            return;\r\n        }\r\n        const scrollY = this.getWindowScrolling();\r\n        overlay.find(/* @ngInject */ CmsDragAndDropService_1.SLOT_SELECTOR).each((si, slotElement) => {\r\n            const slot = this.yjQuery(slotElement);\r\n            const slotId = this.componentHandlerService.getId(slot);\r\n            const slotUuid = this.componentHandlerService.getUuid(slot);\r\n            // Fetch all components (visible or not) in each slot to get proper position values.\r\n            // The componentHandlerService.getComponentPositionInSlot method is not used here, because it's only based on visible components in the DOM.\r\n            this.pageContentSlotsComponentsRestService\r\n                .getComponentsForSlot(slotId)\r\n                .then((componentsForSlot) => {\r\n                const cachedSlot = {\r\n                    id: slotId,\r\n                    uuid: slotUuid,\r\n                    original: slot,\r\n                    components: [],\r\n                    rect: this.getElementRects(slot, scrollY),\r\n                    hint: null\r\n                };\r\n                const components = slot.children(/* @ngInject */ CmsDragAndDropService_1.COMPONENT_SELECTOR);\r\n                if (components.length === 0) {\r\n                    const hint = slot.find(/* @ngInject */ CmsDragAndDropService_1.HINT_SELECTOR);\r\n                    cachedSlot.hint =\r\n                        hint.length > 0\r\n                            ? {\r\n                                original: hint,\r\n                                rect: this.getElementRects(hint, scrollY)\r\n                            }\r\n                            : null;\r\n                }\r\n                else {\r\n                    components.each((ci, componentElement) => {\r\n                        const component = this.yjQuery(componentElement);\r\n                        let positionInSlot = componentsForSlot.findIndex((componentInSlot) => componentInSlot.uuid ===\r\n                            this.componentHandlerService.getUuid(component));\r\n                        if (positionInSlot === -1) {\r\n                            positionInSlot = ci;\r\n                        }\r\n                        const cachedComponent = {\r\n                            id: this.componentHandlerService.getSlotOperationRelatedId(component),\r\n                            type: this.componentHandlerService.getSlotOperationRelatedType(component),\r\n                            original: component,\r\n                            position: positionInSlot,\r\n                            hints: [],\r\n                            rect: this.getElementRects(component, scrollY)\r\n                        };\r\n                        let positionInComponent = positionInSlot++;\r\n                        component\r\n                            .find(/* @ngInject */ CmsDragAndDropService_1.HINT_SELECTOR)\r\n                            .each((hi, hintElement) => {\r\n                            const hint = this.yjQuery(hintElement);\r\n                            const cachedHint = {\r\n                                original: hint,\r\n                                position: positionInComponent++,\r\n                                rect: this.getElementRects(hint, scrollY)\r\n                            };\r\n                            cachedComponent.hints.push(cachedHint);\r\n                        });\r\n                        cachedSlot.components.push(cachedComponent);\r\n                    });\r\n                }\r\n                this.cachedSlots[cachedSlot.id] = cachedSlot;\r\n            });\r\n        });\r\n    }\r\n    clearHighlightedHint() {\r\n        if (this.highlightedHint) {\r\n            this.highlightedHint.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_HOVERED);\r\n            this.highlightedHint.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_MAY_BE_ALLOWED);\r\n            this.highlightedHint = null;\r\n        }\r\n    }\r\n    clearHighlightedComponent() {\r\n        this.clearHighlightedHint();\r\n        if (this.highlightedComponent) {\r\n            this.highlightedComponent.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.COMPONENT_DRAGGED_HOVERED);\r\n            this.highlightedComponent = null;\r\n        }\r\n    }\r\n    clearHighlightedSlot() {\r\n        this.clearHighlightedComponent();\r\n        if (this.highlightedSlot) {\r\n            this.highlightedSlot.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_ALLOWED);\r\n            this.highlightedSlot.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_NOT_ALLOWED);\r\n            this.highlightedSlot.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_MAY_BE_ALLOWED);\r\n            this.systemEventService.publish('HIDE_SLOT_MENU');\r\n            this.systemEventService.publish(DRAG_AND_DROP_EVENTS.DRAG_LEAVE); // can be used to perform any actions on encountering a drag leave event.\r\n        }\r\n        this.highlightedSlot = null;\r\n    }\r\n    isMouseInRegion(event, element) {\r\n        const boundingRect = element.rect;\r\n        return (event.pageX >= boundingRect.left &&\r\n            event.pageX <= boundingRect.right &&\r\n            event.pageY >= boundingRect.top &&\r\n            event.pageY <= boundingRect.bottom);\r\n    }\r\n    getElementRects(element, scrollY) {\r\n        const baseRect = element[0].getBoundingClientRect();\r\n        return {\r\n            left: baseRect.left,\r\n            right: baseRect.right,\r\n            bottom: baseRect.bottom + scrollY,\r\n            top: baseRect.top + scrollY\r\n        };\r\n    }\r\n    getWindowScrolling() {\r\n        return this._window.pageYOffset;\r\n    }\r\n    scrollToModifiedSlot(componentId) {\r\n        const component = this.componentHandlerService.getComponentInOverlay(componentId, CONTENT_SLOT_TYPE);\r\n        if (component && component.length > 0) {\r\n            component[0].scrollIntoView();\r\n        }\r\n    }\r\n    getSelector(selector) {\r\n        return this.yjQuery(selector);\r\n    }\r\n    /**\r\n     * When a PROCESS_COMPONENTS is occuring, it could remove the currently dragged component if this one is not in the viewport.\r\n     * To avoid having the dragged component and it's slot removed we mark then as \"KEEP_VISIBLE\" when the drag and drop start.\r\n     * On drag end, an event is sent to call a RESTART_PROCESS to add or remove the components according to their viewport visibility and the component and slot are marked as \"PROCESS\".\r\n     * Using yjQuery.each() here because of MiniCart component (among other slots/compoents) that have multiple occurences in DOM.\r\n     */\r\n    toggleKeepVisibleComponentAndSlot(keepVisible) {\r\n        if (this.dragInfo) {\r\n            const status = keepVisible\r\n                ? CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS.KEEP_VISIBLE\r\n                : CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS.PROCESS;\r\n            this.yjQuery.each(this.componentHandlerService.getComponentUnderSlot(this.dragInfo.componentId, this.dragInfo.componentType, this.dragInfo.slotId), (i, element) => {\r\n                element.dataset[SMARTEDIT_COMPONENT_PROCESS_STATUS] = status;\r\n            });\r\n            this.yjQuery.each(this.componentHandlerService.getComponent(this.dragInfo.slotId, CONTENT_SLOT_TYPE), (i, element) => {\r\n                element.dataset[SMARTEDIT_COMPONENT_PROCESS_STATUS] = status;\r\n            });\r\n        }\r\n    }\r\n};\r\n/* @ngInject */ CmsDragAndDropService.CMS_DRAG_AND_DROP_ID = 'se.cms.dragAndDrop';\r\n/* @ngInject */ CmsDragAndDropService.TARGET_SELECTOR = \"#smarteditoverlay .smartEditComponentX[data-smartedit-component-type='ContentSlot']\";\r\n/* @ngInject */ CmsDragAndDropService.SOURCE_SELECTOR = \"#smarteditoverlay .smartEditComponentX[data-smartedit-component-type!='ContentSlot'] .movebutton\";\r\n/* @ngInject */ CmsDragAndDropService.MORE_MENU_SOURCE_SELECTOR = '.movebutton';\r\n/* @ngInject */ CmsDragAndDropService.SLOT_SELECTOR = \".smartEditComponentX[data-smartedit-component-type='ContentSlot']\";\r\n/* @ngInject */ CmsDragAndDropService.COMPONENT_SELECTOR = \".smartEditComponentX[data-smartedit-component-type!='ContentSlot']\";\r\n/* @ngInject */ CmsDragAndDropService.HINT_SELECTOR = '.overlayDropzone';\r\n/* @ngInject */ CmsDragAndDropService.CSS_CLASSES = {\r\n    UI_HELPER_OVERLAY: 'overlayDnd',\r\n    DROPZONE: 'overlayDropzone',\r\n    DROPZONE_FULL: 'overlayDropzone--full',\r\n    DROPZONE_TOP: 'overlayDropzone--top',\r\n    DROPZONE_BOTTOM: 'overlayDropzone--bottom',\r\n    DROPZONE_LEFT: 'overlayDropzone--left',\r\n    DROPZONE_RIGHT: 'overlayDropzone--right',\r\n    DROPZONE_HOVERED: 'overlayDropzone--hovered',\r\n    DROPZONE_MAY_BE_ALLOWED: 'overlayDropzone--mayBeAllowed',\r\n    OVERLAY_IN_DRAG_DROP: 'smarteditoverlay_dndRendering',\r\n    COMPONENT_DRAGGED: 'component_dragged',\r\n    COMPONENT_DRAGGED_HOVERED: 'component_dragged_hovered',\r\n    SLOTS_MARKED: 'slot-marked',\r\n    SLOT_ALLOWED: 'over-slot-enabled',\r\n    SLOT_NOT_ALLOWED: 'over-slot-disabled',\r\n    SLOT_MAY_BE_ALLOWED: 'over-slot-maybeenabled'\r\n};\r\n/* @ngInject */ CmsDragAndDropService.DEFAULT_DRAG_IMG = '/images/contextualmenu_move_on.png';\r\n/* @ngInject */ CmsDragAndDropService = /* @ngInject */ CmsDragAndDropService_1 = __decorate([\r\n    SeDowngradeService(),\r\n    __param(12, Inject(YJQUERY_TOKEN)),\r\n    __param(13, Inject(DOMAIN_TOKEN)),\r\n    __metadata(\"design:paramtypes\", [IAlertService,\r\n        AssetsService,\r\n        IBrowserService,\r\n        ComponentEditingFacade,\r\n        ComponentHandlerService,\r\n        DragAndDropService,\r\n        GatewayFactory,\r\n        TranslateService,\r\n        IPageContentSlotsComponentsRestService,\r\n        ISlotRestrictionsService,\r\n        SystemEventService,\r\n        IWaitDialogService, Function, String])\r\n], /* @ngInject */ CmsDragAndDropService);\r\nexport { /* @ngInject */ CmsDragAndDropService };\r\n//# sourceMappingURL=CmsDragAndDropServiceInner.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate+core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/src/services/dragAndDrop/ComponentEditingFacade.ts"],"map":"{\"version\":3,\"file\":\"CmsDragAndDropServiceInner.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/dragAndDrop/CmsDragAndDropServiceInner.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/dragAndDrop/CmsDragAndDropServiceInner.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\n/// <reference types=\"jquery\" />\r\n/// <reference types=\"eonasdan-bootstrap-datetimepicker\" />\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AssetsService, IPageContentSlotsComponentsRestService } from 'cmscommons';\r\nimport { DragAndDropService, GatewayFactory, IAlertService, IBrowserService, IWaitDialogService, Payload, SystemEventService, TypedMap, ISlotRestrictionsService, ComponentHandlerService } from 'smarteditcommons';\r\nimport { ComponentEditingFacade } from './ComponentEditingFacade';\r\nexport interface CmsDragAndDropCachedComponentHint {\r\n    original: JQuery<HTMLElement>;\r\n    position: number;\r\n    rect: TypedMap<number>;\r\n}\r\nexport interface CmsDragAndDropCachedComponent {\r\n    id: string;\r\n    type: string;\r\n    original: JQuery<HTMLElement>;\r\n    position: number;\r\n    rect: TypedMap<number>;\r\n    hints: CmsDragAndDropCachedComponentHint[];\r\n}\r\nexport interface CmsDragAndDropCachedSlot {\r\n    id: string;\r\n    uuid: string;\r\n    original: JQuery<HTMLElement>;\r\n    /**\r\n     * The list of components contained in the slot, they must contain an \"id\" property\r\n     */\r\n    components: CmsDragAndDropCachedComponent[];\r\n    hint: {\r\n        original: JQuery<HTMLElement>;\r\n        rect: TypedMap<number>;\r\n    };\r\n    rect: TypedMap<number>;\r\n    isAllowed?: boolean;\r\n    mayBeAllowed?: boolean;\r\n}\r\nexport interface CmsDragAndDropDragInfo extends Payload {\r\n    /**\r\n     * The smartedit id of the component.\r\n     */\r\n    componentId: string;\r\n    componentUuid: string;\r\n    componentType: string;\r\n    slotUuid: string;\r\n    /**\r\n     * The smartedit id of the slot from which the component originates.\r\n     */\r\n    slotId: string;\r\n    slotOperationRelatedId: string;\r\n    slotOperationRelatedType: string;\r\n    /**\r\n     * The boolean that determines if the component should be cloned or not.\r\n     */\r\n    cloneOnDrop?: boolean;\r\n}\r\n/**\r\n * This service provides a rich drag and drop experience tailored for CMS operations.\r\n */\r\nexport declare class CmsDragAndDropService {\r\n    private alertService;\r\n    private assetsService;\r\n    private browserService;\r\n    private componentEditingFacade;\r\n    private componentHandlerService;\r\n    private dragAndDropService;\r\n    private gatewayFactory;\r\n    private translateService;\r\n    private pageContentSlotsComponentsRestService;\r\n    private slotRestrictionsService;\r\n    private systemEventService;\r\n    private waitDialogService;\r\n    private yjQuery;\r\n    private domain;\r\n    private static readonly CMS_DRAG_AND_DROP_ID;\r\n    private static readonly TARGET_SELECTOR;\r\n    private static readonly SOURCE_SELECTOR;\r\n    private static readonly MORE_MENU_SOURCE_SELECTOR;\r\n    private static readonly SLOT_SELECTOR;\r\n    private static readonly COMPONENT_SELECTOR;\r\n    private static readonly HINT_SELECTOR;\r\n    private static readonly CSS_CLASSES;\r\n    private static readonly DEFAULT_DRAG_IMG;\r\n    private cachedSlots;\r\n    private highlightedSlot;\r\n    private highlightedComponent;\r\n    private highlightedHint;\r\n    private dragInfo;\r\n    private overlayRenderedUnSubscribeFn;\r\n    private componentRemovedUnSubscribeFn;\r\n    private gateway;\r\n    private _window;\r\n    constructor(alertService: IAlertService, assetsService: AssetsService, browserService: IBrowserService, componentEditingFacade: ComponentEditingFacade, componentHandlerService: ComponentHandlerService, dragAndDropService: DragAndDropService, gatewayFactory: GatewayFactory, translateService: TranslateService, pageContentSlotsComponentsRestService: IPageContentSlotsComponentsRestService, slotRestrictionsService: ISlotRestrictionsService, systemEventService: SystemEventService, waitDialogService: IWaitDialogService, yjQuery: JQueryStatic, domain: string);\r\n    /**\r\n     * This method registers this drag and drop instance in SmartEdit.\r\n     */\r\n    register(): void;\r\n    /**\r\n     * This method unregisters this drag and drop instance from SmartEdit.\r\n     */\r\n    unregister(): void;\r\n    /**\r\n     * This method applies this drag and drop instance in the current page. After this method is executed,\r\n     * the user can start a drag and drop operation.\r\n     */\r\n    apply(): void;\r\n    /**\r\n     * This method updates this drag and drop instance in the current page. It is important to execute\r\n     * this method every time a draggable or droppable element is added or removed from the page DOM.\r\n     */\r\n    update(): void;\r\n    private onOverlayUpdate;\r\n    private onStart;\r\n    private onDragEnter;\r\n    private onDragOver;\r\n    private selectMouseOverElement;\r\n    private onDrop;\r\n    private getComponentPositionFromCachedSlot;\r\n    private onDragLeave;\r\n    private onStop;\r\n    /**\r\n     * This function returns the source of the image used as drag image. Currently, the\r\n     * image is only returned for Safari; all the other browsers display default images\r\n     * properly.\r\n     */\r\n    private getDragImageSrc;\r\n    private initializeDragOperation;\r\n    private cleanDragOperation;\r\n    private highlightSlot;\r\n    private addUIHelpers;\r\n    private cacheElements;\r\n    private clearHighlightedHint;\r\n    private clearHighlightedComponent;\r\n    private clearHighlightedSlot;\r\n    private isMouseInRegion;\r\n    private getElementRects;\r\n    private getWindowScrolling;\r\n    private scrollToModifiedSlot;\r\n    private getSelector;\r\n    /**\r\n     * When a PROCESS_COMPONENTS is occuring, it could remove the currently dragged component if this one is not in the viewport.\r\n     * To avoid having the dragged component and it's slot removed we mark then as \"KEEP_VISIBLE\" when the drag and drop start.\r\n     * On drag end, an event is sent to call a RESTART_PROCESS to add or remove the components according to their viewport visibility and the component and slot are marked as \"PROCESS\".\r\n     * Using yjQuery.each() here because of MiniCart component (among other slots/compoents) that have multiple occurences in DOM.\r\n     */\r\n    private toggleKeepVisibleComponentAndSlot;\r\n}\r\n"}}
