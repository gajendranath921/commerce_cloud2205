{"code":"import { __awaiter, __decorate, __metadata, __param } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { ISlotVisibilityService } from 'cmscommons';\r\nimport { CrossFrameEventService, EVENT_OUTER_FRAME_CLICKED, ISharedDataService, CONTEXTUAL_MENU_ITEM_DATA } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SlotVisibilityButtonComponent\", {\r\n    selector: 'se-slot-visibility-button',\r\n    template: `<se-popup-overlay *ngIf=\"buttonVisible\" class=\"se-slot-visibility\" [popupOverlay]=\"popupConfig\" [popupOverlayTrigger]=\"isPopupOpened\" (popupOverlayOnHide)=\"hideMenu()\"><button type=\"button\" id=\"slot-visibility-button-{{ slotId }}\" class=\"se-slot-ctx-menu__dropdown-toggle se-slot-ctx-menu__dropdown-toggle--slot-visibility\" [ngClass]=\"{\n            'se-slot-ctx-menu__dropdown-toggle--open': isPopupOpened\n        }\" (click)=\"toggleMenu()\"><span class=\"se-slot-ctx-menu__dropdown-toggle-icon sap-icon--hide\"></span> <span class=\"se-slot-ctx-menu__dropdown-toggle-add-on\">{{ hiddenComponentCount }}</span></button><div se-popup-overlay-body id=\"slot-visibility-list-{{ slotId }}\" class=\"se-slot__dropdown-menu\" (click)=\"onInsideClick($event)\"><div class=\"se-slot-contextual-menu__header\" translate=\"se.cms.slotvisibility.list.title\"></div><ul class=\"se-slot-visibility__component-list\"><li *ngFor=\"let component of hiddenComponents; trackBy: hiddenComponentTrackBy\" class=\"se-slot-visibility__component-list-item\"><se-tooltip *ngIf=\"component.isExternal\" [appendTo]=\"'body'\" [placement]=\"'top'\" [triggers]=\"['mouseenter', 'mouseleave']\"><se-slot-visibility-component se-tooltip-trigger [component]=\"component\" [slotId]=\"slotId\"></se-slot-visibility-component><span se-tooltip-body translate=\"se.cms.slotvisibility.external.component\"></span></se-tooltip><se-slot-visibility-component *ngIf=\"!component.isExternal\" [component]=\"component\" [slotId]=\"slotId\"></se-slot-visibility-component></li></ul></div></se-popup-overlay>`,\r\n    styles: [`#smarteditoverlay .se-slot-visibility__component-list{padding:16px 20px;list-style:none}#smarteditoverlay .se-slot-visibility__component-list-item{margin-bottom:16px}#smarteditoverlay .se-slot-visibility__component-list-item:last-child{margin-bottom:0}`],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet SlotVisibilityButtonComponent = class SlotVisibilityButtonComponent {\r\n    constructor(contextualMenuItem, slotVisibilityService, sharedDataService, crossFrameEventService, cdr) {\r\n        this.contextualMenuItem = contextualMenuItem;\r\n        this.slotVisibilityService = slotVisibilityService;\r\n        this.sharedDataService = sharedDataService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.cdr = cdr;\r\n        this.isPopupOpened = false;\r\n        this.isPopupOpenedPreviousValue = this.isPopupOpened;\r\n        this.buttonVisible = false;\r\n        this.hiddenComponents = [];\r\n        this.popupConfig = {\r\n            halign: 'left',\r\n            valign: 'bottom',\r\n            additionalClasses: [\r\n                'se-slot-ctx-menu__dropdown-toggle-wrapper',\r\n                'se-slot-ctx-menu__dropdown-toggle-wrapper--slot-visibility',\r\n                'se-slot-ctx-menu__divider'\r\n            ]\r\n        };\r\n        this.buttonName = 'slotVisibilityButton';\r\n    }\r\n    ngOnInit() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.unRegOuterFrameClicked = this.crossFrameEventService.subscribe(EVENT_OUTER_FRAME_CLICKED, () => {\r\n                this.isPopupOpened = false;\r\n            });\r\n            const hiddenComponents = yield this.slotVisibilityService.getHiddenComponents(this.slotId);\r\n            const experience = (yield this.sharedDataService.get('experience'));\r\n            this.hiddenComponents = this.markExternalComponents(experience, hiddenComponents);\r\n            this.hiddenComponentCount = hiddenComponents.length;\r\n            if (this.hiddenComponentCount > 0) {\r\n                this.buttonVisible = true;\r\n            }\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.unRegOuterFrameClicked) {\r\n            this.unRegOuterFrameClicked();\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (this.isPopupOpenedPreviousValue !== this.isPopupOpened) {\r\n            this.isPopupOpenedPreviousValue = this.isPopupOpened;\r\n            this.contextualMenuItem.setRemainOpen(this.buttonName, this.isPopupOpened);\r\n        }\r\n    }\r\n    get slotId() {\r\n        return this.contextualMenuItem.componentAttributes.smarteditComponentId;\r\n    }\r\n    hiddenComponentTrackBy(index, _hiddenComponent) {\r\n        return index;\r\n    }\r\n    toggleMenu() {\r\n        this.isPopupOpened = !this.isPopupOpened;\r\n    }\r\n    hideMenu() {\r\n        this.isPopupOpened = false;\r\n    }\r\n    onInsideClick(event) {\r\n        event.stopPropagation();\r\n    }\r\n    markExternalComponents(experience, hiddenComponents) {\r\n        return hiddenComponents.map((component) => (Object.assign(Object.assign({}, component), { isExternal: component.catalogVersion !== experience.pageContext.catalogVersionUuid })));\r\n    }\r\n};\r\nSlotVisibilityButtonComponent = __decorate([\r\n    Component({\r\n        selector: 'se-slot-visibility-button',\r\n        template: `<se-popup-overlay *ngIf=\"buttonVisible\" class=\"se-slot-visibility\" [popupOverlay]=\"popupConfig\" [popupOverlayTrigger]=\"isPopupOpened\" (popupOverlayOnHide)=\"hideMenu()\"><button type=\"button\" id=\"slot-visibility-button-{{ slotId }}\" class=\"se-slot-ctx-menu__dropdown-toggle se-slot-ctx-menu__dropdown-toggle--slot-visibility\" [ngClass]=\"{\n            'se-slot-ctx-menu__dropdown-toggle--open': isPopupOpened\n        }\" (click)=\"toggleMenu()\"><span class=\"se-slot-ctx-menu__dropdown-toggle-icon sap-icon--hide\"></span> <span class=\"se-slot-ctx-menu__dropdown-toggle-add-on\">{{ hiddenComponentCount }}</span></button><div se-popup-overlay-body id=\"slot-visibility-list-{{ slotId }}\" class=\"se-slot__dropdown-menu\" (click)=\"onInsideClick($event)\"><div class=\"se-slot-contextual-menu__header\" translate=\"se.cms.slotvisibility.list.title\"></div><ul class=\"se-slot-visibility__component-list\"><li *ngFor=\"let component of hiddenComponents; trackBy: hiddenComponentTrackBy\" class=\"se-slot-visibility__component-list-item\"><se-tooltip *ngIf=\"component.isExternal\" [appendTo]=\"'body'\" [placement]=\"'top'\" [triggers]=\"['mouseenter', 'mouseleave']\"><se-slot-visibility-component se-tooltip-trigger [component]=\"component\" [slotId]=\"slotId\"></se-slot-visibility-component><span se-tooltip-body translate=\"se.cms.slotvisibility.external.component\"></span></se-tooltip><se-slot-visibility-component *ngIf=\"!component.isExternal\" [component]=\"component\" [slotId]=\"slotId\"></se-slot-visibility-component></li></ul></div></se-popup-overlay>`,\r\n        styles: [`#smarteditoverlay .se-slot-visibility__component-list{padding:16px 20px;list-style:none}#smarteditoverlay .se-slot-visibility__component-list-item{margin-bottom:16px}#smarteditoverlay .se-slot-visibility__component-list-item:last-child{margin-bottom:0}`],\r\n        encapsulation: ViewEncapsulation.None,\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    }),\r\n    __param(0, Inject(CONTEXTUAL_MENU_ITEM_DATA)),\r\n    __metadata(\"design:paramtypes\", [Object, ISlotVisibilityService,\r\n        ISharedDataService,\r\n        CrossFrameEventService,\r\n        ChangeDetectorRef])\r\n], SlotVisibilityButtonComponent);\r\nexport { SlotVisibilityButtonComponent };\r\n//# sourceMappingURL=SlotVisibilityButtonComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"SlotVisibilityButtonComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/slotVisibility/slotVisibilityButton/SlotVisibilityButtonComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/slotVisibility/slotVisibilityButton/SlotVisibilityButtonComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, DoCheck, OnDestroy, OnInit } from '@angular/core';\r\nimport { ICMSComponent, ISlotVisibilityService } from 'cmscommons';\r\nimport { CrossFrameEventService, ISharedDataService, PopupOverlayConfig, ContextualMenuItemData } from 'smarteditcommons';\r\nexport declare class SlotVisibilityButtonComponent implements OnInit, OnDestroy, DoCheck {\r\n    private contextualMenuItem;\r\n    private slotVisibilityService;\r\n    private sharedDataService;\r\n    private crossFrameEventService;\r\n    private cdr;\r\n    isPopupOpened: boolean;\r\n    buttonVisible: boolean;\r\n    hiddenComponents: ICMSComponent[];\r\n    hiddenComponentCount?: number;\r\n    popupConfig: PopupOverlayConfig;\r\n    private readonly buttonName;\r\n    private isPopupOpenedPreviousValue;\r\n    private unRegOuterFrameClicked;\r\n    constructor(contextualMenuItem: ContextualMenuItemData, slotVisibilityService: ISlotVisibilityService, sharedDataService: ISharedDataService, crossFrameEventService: CrossFrameEventService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    ngOnDestroy(): void;\r\n    ngDoCheck(): void;\r\n    get slotId(): string;\r\n    hiddenComponentTrackBy(index: number, _hiddenComponent: ICMSComponent): number;\r\n    toggleMenu(): void;\r\n    hideMenu(): void;\r\n    onInsideClick(event: MouseEvent): void;\r\n    private markExternalComponents;\r\n}\r\n"}}
