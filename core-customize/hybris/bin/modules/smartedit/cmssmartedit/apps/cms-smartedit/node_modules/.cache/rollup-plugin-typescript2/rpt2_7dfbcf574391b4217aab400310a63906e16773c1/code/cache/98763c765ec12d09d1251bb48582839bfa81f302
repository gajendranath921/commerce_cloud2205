{"code":"import { __awaiter, __decorate, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Inject } from '@angular/core';\r\nimport { CONTENT_SLOTS_TYPE_RESTRICTION_RESOURCE_URI, IPageContentSlotsComponentsRestService, TypePermissionsRestService } from 'cmscommons';\r\nimport { flatten, uniq, chunk, includes } from 'lodash';\r\nimport { GatewayProxied, IPageInfoService, LogService, SeDowngradeService, YJQUERY_TOKEN, stringUtils, CONTENT_SLOT_TYPE, IRestServiceFactory, CrossFrameEventService, EVENTS, CMSModesService, ISlotRestrictionsService, COMPONENT_IN_SLOT_STATUS, ComponentHandlerService, SlotSharedService } from 'smarteditcommons';\r\nlet /* @ngInject */ SlotRestrictionsService = class /* @ngInject */ SlotRestrictionsService extends ISlotRestrictionsService {\r\n    constructor(componentHandlerService, logService, pageContentSlotsComponentsRestService, pageInfoService, restServiceFactory, slotSharedService, typePermissionsRestService, yjQuery, crossFrameEventService, cMSModesService) {\r\n        super();\r\n        this.componentHandlerService = componentHandlerService;\r\n        this.logService = logService;\r\n        this.pageContentSlotsComponentsRestService = pageContentSlotsComponentsRestService;\r\n        this.pageInfoService = pageInfoService;\r\n        this.restServiceFactory = restServiceFactory;\r\n        this.slotSharedService = slotSharedService;\r\n        this.typePermissionsRestService = typePermissionsRestService;\r\n        this.yjQuery = yjQuery;\r\n        this.cMSModesService = cMSModesService;\r\n        this.currentPageId = null;\r\n        this.slotRestrictions = {};\r\n        this.CONTENT_SLOTS_TYPE_RESTRICTION_FETCH_LIMIT = 100;\r\n        crossFrameEventService.subscribe(EVENTS.PAGE_CHANGE, () => __awaiter(this, void 0, void 0, function* () {\r\n            //  CMSX-10058: In versioning perspective, edit page is not allowed, do not need to update the slots restrictions cache\r\n            const isVersioningPerspectiveActive = yield this.cMSModesService.isVersioningPerspectiveActive();\r\n            if (!isVersioningPerspectiveActive) {\r\n                this.emptyCache();\r\n                this.cacheSlotsRestrictions();\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * @deprecated since 2005\r\n     */\r\n    getAllComponentTypesSupportedOnPage() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const slots = this.yjQuery(this.componentHandlerService.getAllSlotsSelector());\r\n            const slotIds = slots\r\n                .get()\r\n                .map((slot) => this.componentHandlerService.getId(slot));\r\n            const slotRestrictionPromises = slotIds.map((slotId) => this.getSlotRestrictions(slotId));\r\n            try {\r\n                const arrayOfSlotRestrictions = yield Promise.all(slotRestrictionPromises);\r\n                return flatten(arrayOfSlotRestrictions);\r\n            }\r\n            catch (error) {\r\n                this.logService.info(error);\r\n            }\r\n        });\r\n    }\r\n    getSlotRestrictions(slotId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const pageId = yield this.getPageUID(this.currentPageId);\r\n            this.currentPageId = pageId;\r\n            const restrictionId = this.getEntryId(this.currentPageId, slotId);\r\n            if (this.slotRestrictions[restrictionId]) {\r\n                return this.slotRestrictions[restrictionId];\r\n            }\r\n            else if (this.isExternalSlot(slotId)) {\r\n                this.slotRestrictions[restrictionId] = [];\r\n                return [];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * This methods determines whether a component of the provided type is allowed in the slot.\r\n     *\r\n     * @param slot The slot for which to verify if it allows a component of the provided type.\r\n     * @returns Promise containing COMPONENT_IN_SLOT_STATUS (ALLOWED, DISALLOWED, MAYBEALLOWED) string that determines whether a component of the provided type is allowed in the slot.\r\n     *\r\n     * TODO: The name is misleading. To not introduce breaking change in 2105, consider changing the name in the next release (after 2105).\r\n     * Candidates: \"getComponentStatusInSlot\", \"determineComponentStatusInSlot\"\r\n     */\r\n    isComponentAllowedInSlot(slot, dragInfo) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const currentSlotRestrictions = yield this.getSlotRestrictions(slot.id);\r\n            const componentsForSlot = yield this.pageContentSlotsComponentsRestService.getComponentsForSlot(slot.id);\r\n            const isComponentIdAllowed = slot.id === dragInfo.slotId ||\r\n                !componentsForSlot.some((component) => component.uid === dragInfo.componentId);\r\n            if (isComponentIdAllowed) {\r\n                if (currentSlotRestrictions) {\r\n                    return includes(currentSlotRestrictions, dragInfo.componentType)\r\n                        ? COMPONENT_IN_SLOT_STATUS.ALLOWED\r\n                        : COMPONENT_IN_SLOT_STATUS.DISALLOWED;\r\n                }\r\n                return COMPONENT_IN_SLOT_STATUS.MAYBEALLOWED;\r\n            }\r\n            return COMPONENT_IN_SLOT_STATUS.DISALLOWED;\r\n        });\r\n    }\r\n    isSlotEditable(slotId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // This method can get called with slotId as \"undefined\", which means that the slot has not been rendered yet.\r\n            if (!slotId) {\r\n                return Promise.resolve(false);\r\n            }\r\n            const slotPermissions = yield this.typePermissionsRestService.hasUpdatePermissionForTypes([\r\n                CONTENT_SLOT_TYPE\r\n            ]);\r\n            const isShared = yield this.slotSharedService.isSlotShared(slotId);\r\n            let result = slotPermissions[CONTENT_SLOT_TYPE];\r\n            if (isShared) {\r\n                const isExternalSlot = this.isExternalSlot(slotId);\r\n                result = result && !isExternalSlot && !this.slotSharedService.areSharedSlotsDisabled();\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    emptyCache() {\r\n        this.slotRestrictions = {};\r\n        this.currentPageId = null;\r\n    }\r\n    cacheSlotsRestrictions() {\r\n        const originalSlotIds = this.componentHandlerService.getAllSlotUids() || [];\r\n        const nonExternalOriginalSlotIds = originalSlotIds.filter((slotId) => !this.isExternalSlot(slotId));\r\n        const uniqueSlotIds = uniq(nonExternalOriginalSlotIds);\r\n        const chunks = chunk(uniqueSlotIds, this.CONTENT_SLOTS_TYPE_RESTRICTION_FETCH_LIMIT);\r\n        return this.recursiveFetchSlotsRestrictions(chunks, 0);\r\n    }\r\n    // Recursively fetch slots restrictions by the number of chunks of slotIds split by fetch limit\r\n    recursiveFetchSlotsRestrictions(slotIdsByChunks, chunkIndex) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (chunkIndex === slotIdsByChunks.length) {\r\n                return;\r\n            }\r\n            yield this.fetchSlotsRestrictions(slotIdsByChunks[chunkIndex]);\r\n            this.recursiveFetchSlotsRestrictions(slotIdsByChunks, chunkIndex + 1);\r\n        });\r\n    }\r\n    // Fetch slot restriction and cache them in-memory\r\n    fetchSlotsRestrictions(slotIds) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const pageId = yield this.getPageUID(this.currentPageId);\r\n            this.currentPageId = pageId;\r\n            this.slotsRestrictionsRestService =\r\n                this.slotsRestrictionsRestService ||\r\n                    this.restServiceFactory.get(CONTENT_SLOTS_TYPE_RESTRICTION_RESOURCE_URI, this.currentPageId);\r\n            try {\r\n                const contentSlotsResponse = yield this.slotsRestrictionsRestService.save({\r\n                    slotIds,\r\n                    pageUid: this.currentPageId\r\n                });\r\n                const contentSlots = contentSlotsResponse || [];\r\n                contentSlots.forEach((slot) => {\r\n                    const restrictionId = this.getEntryId(this.currentPageId, slot.contentSlotUid);\r\n                    this.slotRestrictions[restrictionId] = slot.validComponentTypes;\r\n                });\r\n            }\r\n            catch (error) {\r\n                this.logService.info(error);\r\n                throw new Error(error);\r\n            }\r\n        });\r\n    }\r\n    getPageUID(pageUID) {\r\n        return !stringUtils.isBlank(pageUID)\r\n            ? Promise.resolve(pageUID)\r\n            : this.pageInfoService.getPageUID();\r\n    }\r\n    getEntryId(pageId, slotId) {\r\n        return `${pageId}_${slotId}`;\r\n    }\r\n    isExternalSlot(slotId) {\r\n        return this.componentHandlerService.isExternalComponent(slotId, CONTENT_SLOT_TYPE);\r\n    }\r\n};\r\n/* @ngInject */ SlotRestrictionsService = __decorate([\r\n    SeDowngradeService(ISlotRestrictionsService),\r\n    GatewayProxied('getAllComponentTypesSupportedOnPage', 'getSlotRestrictions'),\r\n    __param(7, Inject(YJQUERY_TOKEN)),\r\n    __metadata(\"design:paramtypes\", [ComponentHandlerService,\r\n        LogService,\r\n        IPageContentSlotsComponentsRestService,\r\n        IPageInfoService,\r\n        IRestServiceFactory,\r\n        SlotSharedService,\r\n        TypePermissionsRestService, Function, CrossFrameEventService,\r\n        CMSModesService])\r\n], /* @ngInject */ SlotRestrictionsService);\r\nexport { /* @ngInject */ SlotRestrictionsService };\r\n//# sourceMappingURL=SlotRestrictionsServiceInner.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/src/services/dragAndDrop/index.ts"],"map":"{\"version\":3,\"file\":\"SlotRestrictionsServiceInner.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/SlotRestrictionsServiceInner.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/SlotRestrictionsServiceInner.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\n/// <reference types=\"jquery\" />\r\nimport { IPageContentSlotsComponentsRestService, TypePermissionsRestService } from 'cmscommons';\r\nimport { IPageInfoService, LogService, IRestServiceFactory, CrossFrameEventService, CMSModesService, ISlotRestrictionsService, COMPONENT_IN_SLOT_STATUS, ComponentHandlerService, SlotSharedService } from 'smarteditcommons';\r\nimport { CmsDragAndDropCachedSlot, CmsDragAndDropDragInfo } from './dragAndDrop';\r\nexport interface ContentSlot {\r\n    /**\r\n     * The uid of content slot.\r\n     *\r\n     * E.g. 'NavigationBarSlot'\r\n     */\r\n    contentSlotUid: string;\r\n    /**\r\n     * Components types that can be placed within the slot.\r\n     *\r\n     * E.g.\r\n     * ['NavigationBarComponent', 'SimpleBannerComponent', 'BannerComponent', 'CMSParagraphComponent']\r\n     */\r\n    validComponentTypes: string[];\r\n}\r\nexport declare class SlotRestrictionsService extends ISlotRestrictionsService {\r\n    private componentHandlerService;\r\n    private logService;\r\n    private pageContentSlotsComponentsRestService;\r\n    private pageInfoService;\r\n    private restServiceFactory;\r\n    private slotSharedService;\r\n    private typePermissionsRestService;\r\n    private yjQuery;\r\n    private cMSModesService;\r\n    private currentPageId;\r\n    private slotRestrictions;\r\n    private slotsRestrictionsRestService;\r\n    private readonly CONTENT_SLOTS_TYPE_RESTRICTION_FETCH_LIMIT;\r\n    constructor(componentHandlerService: ComponentHandlerService, logService: LogService, pageContentSlotsComponentsRestService: IPageContentSlotsComponentsRestService, pageInfoService: IPageInfoService, restServiceFactory: IRestServiceFactory, slotSharedService: SlotSharedService, typePermissionsRestService: TypePermissionsRestService, yjQuery: JQueryStatic, crossFrameEventService: CrossFrameEventService, cMSModesService: CMSModesService);\r\n    /**\r\n     * @deprecated since 2005\r\n     */\r\n    getAllComponentTypesSupportedOnPage(): Promise<string[] | void>;\r\n    getSlotRestrictions(slotId: string): Promise<string[] | void>;\r\n    /**\r\n     * This methods determines whether a component of the provided type is allowed in the slot.\r\n     *\r\n     * @param slot The slot for which to verify if it allows a component of the provided type.\r\n     * @returns Promise containing COMPONENT_IN_SLOT_STATUS (ALLOWED, DISALLOWED, MAYBEALLOWED) string that determines whether a component of the provided type is allowed in the slot.\r\n     *\r\n     * TODO: The name is misleading. To not introduce breaking change in 2105, consider changing the name in the next release (after 2105).\r\n     * Candidates: \"getComponentStatusInSlot\", \"determineComponentStatusInSlot\"\r\n     */\r\n    isComponentAllowedInSlot(slot: CmsDragAndDropCachedSlot, dragInfo: CmsDragAndDropDragInfo): Promise<COMPONENT_IN_SLOT_STATUS>;\r\n    isSlotEditable(slotId: string): Promise<boolean>;\r\n    private emptyCache;\r\n    private cacheSlotsRestrictions;\r\n    private recursiveFetchSlotsRestrictions;\r\n    private fetchSlotsRestrictions;\r\n    private getPageUID;\r\n    private getEntryId;\r\n    private isExternalSlot;\r\n}\r\n"}}
