{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CrossFrameEventService, EVENT_CONTENT_CATALOG_UPDATE, IAlertService, ICatalogService, ISharedDataService, IWaitDialogService, LogService, SeDowngradeComponent, SystemEventService, TimerService, EXPERIENCE_STORAGE_KEY, UserTrackingService, USER_TRACKING_FUNCTIONALITY } from 'smarteditcommons';\r\nimport { DEFAULT_SYNCHRONIZATION_POLLING } from '../../constants';\r\nimport { synchronizationUtils } from '../../SynchronizationUtils';\r\nimport { SyncQueue } from '../../SyncQueue';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SynchronizationPanelComponent\", {\r\n    selector: 'se-synchronization-panel',\r\n    template: `<div class=\"se-sync-panel\"><se-message *ngIf=\"message\" [type]=\"message.type\"><ng-container se-message-description>{{ message.description }}</ng-container></se-message><div class=\"se-sync-panel__sync-info\" [style.visibility]=\"showItemList ? 'visible': 'hidden'\"><se-spinner [isSpinning]=\"isLoading\"></se-spinner><se-synchronization-panel-item *ngFor=\"let item of getAllItems(); let i = index\" class=\"se-sync-panel__row\" [index]=\"i\" [item]=\"item\" [rootItem]=\"getRootItem()\" [selectAllLabel]=\"selectAllLabel\" [disableList]=\"disableList\" [disableItem]=\"api.disableItem\" (selectionChange)=\"selectionChange($event)\"></se-synchronization-panel-item></div><div class=\"se-sync-panel__footer\" *ngIf=\"showFooter\"><button class=\"se-sync-panel__sync-btn fd-button--emphasized\" [disabled]=\"isSyncButtonDisabled()\" (click)=\"syncItems()\" translate=\"se.cms.actionitem.page.sync\"></button></div></div>`,\r\n    styles: [`.se-sync-panel__sync-info{max-height:300px;overflow-y:auto}.se-sync-panel__row{display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding:0 20px;height:40px;border-bottom:1px solid #d9d9d9}.se-sync-panel__row:first-child{height:50px}.se-sync-panel__row:last-child{border-bottom:none}.se-sync-panel__footer{padding:20px;border-top:1px solid #d9d9d9;display:flex;flex-direction:row;align-items:center;justify-content:flex-end}.se-sync-panel__sync-btn{text-transform:capitalize;padding:0 20px;margin-left:8px}`]\r\n});\r\nlet /* @ngInject */ SynchronizationPanelComponent = class /* @ngInject */ SynchronizationPanelComponent {\r\n    constructor(waitDialogService, logService, crossFrameEventService, systemEventService, timerService, alertService, translateService, sharedDataService, catalogService, userTrackingService) {\r\n        this.waitDialogService = waitDialogService;\r\n        this.logService = logService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.systemEventService = systemEventService;\r\n        this.timerService = timerService;\r\n        this.alertService = alertService;\r\n        this.translateService = translateService;\r\n        this.sharedDataService = sharedDataService;\r\n        this.catalogService = catalogService;\r\n        this.userTrackingService = userTrackingService;\r\n        this.getApi = new EventEmitter();\r\n        this.selectedItemsUpdate = new EventEmitter();\r\n        this.syncStatusReady = new EventEmitter();\r\n        this.showFooter = true;\r\n        this.showItemList = true;\r\n        this.message = null;\r\n        this.disableList = false;\r\n        this.isLoading = false;\r\n        this.SYNC_POLLING_SPEED_PREFIX = 'syncPanel-';\r\n        this.syncQueue = new SyncQueue();\r\n        this.api = {\r\n            selectAll: () => {\r\n                if (!this.isRootItemExist()) {\r\n                    throw new Error(\"Synchronization status is not available. The 'selectAll' function should be used with 'onSyncStatusReady' event.\");\r\n                }\r\n                this.toogleRootItem(true);\r\n            },\r\n            displayItemList: (visible) => {\r\n                this.showItemList = visible;\r\n            },\r\n            disableItemList: (disableList) => {\r\n                this.disableList = disableList;\r\n            },\r\n            setMessage: (msgConfig) => {\r\n                this.message = msgConfig;\r\n            },\r\n            disableItem: null\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        this.getApi.emit(this.api);\r\n        this.unsubscribeFastFetch = this.crossFrameEventService.subscribe(DEFAULT_SYNCHRONIZATION_POLLING.FAST_FETCH, (id, data) => this.fetchSyncStatus(data));\r\n        this.fetchSyncStatus();\r\n        this.resynchTimer = this.timerService.createTimer(() => this.fetchSyncStatus(), DEFAULT_SYNCHRONIZATION_POLLING.SLOW_POLLING_TIME);\r\n        this.resynchTimer.start();\r\n    }\r\n    ngOnDestroy() {\r\n        const finalizeTimer = this.timerService.createTimer(() => {\r\n            if (this.syncQueue.isEmpty()) {\r\n                this.resynchTimer.teardown();\r\n                this.unsubscribeFastFetch();\r\n                this.systemEventService.publishAsync(DEFAULT_SYNCHRONIZATION_POLLING.SLOW_DOWN, this.SYNC_POLLING_SPEED_PREFIX + this.itemId);\r\n                this.toggleWaitModal(false);\r\n                finalizeTimer.teardown();\r\n            }\r\n            else {\r\n                this.toggleWaitModal(true);\r\n            }\r\n        }, 200);\r\n        finalizeTimer.start();\r\n    }\r\n    syncItems() {\r\n        const selectedItemPayloads = this.getSelectedItemPayloads();\r\n        const selectedItemPayloadIds = selectedItemPayloads.map((syncItemPayload) => syncItemPayload.itemId);\r\n        this.userTrackingService.trackingUserAction(USER_TRACKING_FUNCTIONALITY.TOOL_BAR, 'Sync');\r\n        this.syncQueue.addItems(selectedItemPayloadIds);\r\n        if (this.atLeastOneSelectedItemExists()) {\r\n            this.toggleWaitModal(true);\r\n            return this.performSync(selectedItemPayloads).then(() => {\r\n                this.speedUpPolling();\r\n            }, () => {\r\n                this.logService.warn('[synchronizationPanel] - Could not perform synchronization.');\r\n                this.toggleWaitModal(false);\r\n                this.syncQueue.emptyItems();\r\n            });\r\n        }\r\n        else {\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n    selectionChange(index) {\r\n        if (index === 0) {\r\n            this.toggleAllDependentItems();\r\n        }\r\n        this.saveCurrentlySelectedItemsInStorage();\r\n        this.selectedItemsUpdate.emit(this.getSelectedItems());\r\n    }\r\n    isSyncButtonDisabled() {\r\n        return this.disableList || this.noSelectedItems() || this.syncQueue.hasAtLeastOneItem();\r\n    }\r\n    fetchSyncStatus(eventData) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (eventData && eventData.itemId !== this.itemId) {\r\n                return;\r\n            }\r\n            this.isLoading = true;\r\n            const rootItem = yield this.getSyncStatus(this.itemId);\r\n            this.setRootItem(rootItem);\r\n            this.restoreSelectionAfterFetchingUpdatedItems();\r\n            this.markExternalItems();\r\n            this.showSyncErrors();\r\n            this.updateSyncQueue();\r\n            this.setExternalItemsCatalogVersionName();\r\n            if (this.syncQueue.isEmpty()) {\r\n                this.slowDownPolling();\r\n                this.toggleWaitModal(false);\r\n            }\r\n            this.syncStatusReady.emit(this.getRootItem());\r\n            this.isLoading = false;\r\n        });\r\n    }\r\n    markExternalItems() {\r\n        const rootItem = this.getRootItem();\r\n        const rootItemCatalogVersion = rootItem.catalogVersionUuid;\r\n        const dependentItems = this.getDependentItems();\r\n        dependentItems.forEach((item) => {\r\n            item.isExternal = item.catalogVersionUuid !== rootItemCatalogVersion;\r\n        });\r\n    }\r\n    getAllItems() {\r\n        return this.isRootItemExist() ? [this.getRootItem(), ...this.getDependentItems()] : [];\r\n    }\r\n    setExternalItemsCatalogVersionName() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const experience = yield this.getCurrentExperience();\r\n            const allItems = this.getAllItems();\r\n            const externalItems = allItems.filter((item) => synchronizationUtils.isExternalItem(item));\r\n            const catalogVersionPromises = externalItems.map((externalItem) => new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\r\n                const { catalogName } = yield this.catalogService.getCatalogVersionByUuid(externalItem.catalogVersionUuid, experience.siteDescriptor.uid);\r\n                externalItem.catalogVersionName = catalogName;\r\n                resolve(externalItem);\r\n            })));\r\n            yield Promise.all(catalogVersionPromises);\r\n        });\r\n    }\r\n    slowDownPolling() {\r\n        this.resynchTimer.restart(DEFAULT_SYNCHRONIZATION_POLLING.SLOW_POLLING_TIME);\r\n        this.systemEventService.publishAsync(DEFAULT_SYNCHRONIZATION_POLLING.SLOW_DOWN, this.SYNC_POLLING_SPEED_PREFIX + this.itemId);\r\n    }\r\n    speedUpPolling() {\r\n        this.resynchTimer.restart(DEFAULT_SYNCHRONIZATION_POLLING.FAST_POLLING_TIME);\r\n        this.systemEventService.publishAsync(DEFAULT_SYNCHRONIZATION_POLLING.SPEED_UP, this.SYNC_POLLING_SPEED_PREFIX + this.itemId);\r\n    }\r\n    setRootItem(rootItem) {\r\n        this.rootItem = rootItem;\r\n    }\r\n    getRootItem() {\r\n        return this.rootItem;\r\n    }\r\n    isRootItemExist() {\r\n        return this.getRootItem() != null;\r\n    }\r\n    getDependentItems() {\r\n        return this.isRootItemExist() ? this.getRootItem().selectedDependencies : [];\r\n    }\r\n    getCurrentExperience() {\r\n        return this.sharedDataService.get(EXPERIENCE_STORAGE_KEY);\r\n    }\r\n    getSelectedItemPayloads() {\r\n        return this.getSelectedItems().map(({ itemId, itemType }) => ({\r\n            itemId,\r\n            itemType\r\n        }));\r\n    }\r\n    getSelectedItems() {\r\n        return this.getAllItems().filter((item) => item.selected);\r\n    }\r\n    toogleRootItem(selected) {\r\n        if (this.isRootItemExist()) {\r\n            const rootItem = this.getRootItem();\r\n            rootItem.selected = selected;\r\n            this.selectionChange(0);\r\n        }\r\n    }\r\n    toggleAllDependentItems() {\r\n        this.getDependentItems()\r\n            .filter((item) => !synchronizationUtils.isInSync(item))\r\n            .filter((item) => !synchronizationUtils.isExternalItem(item))\r\n            .forEach((item) => {\r\n            item.selected = this.getRootItem().selected;\r\n        });\r\n    }\r\n    toggleWaitModal(show) {\r\n        if (show) {\r\n            this.waitDialogService.showWaitModal('se.sync.synchronizing');\r\n        }\r\n        else {\r\n            this.waitDialogService.hideWaitModal();\r\n        }\r\n    }\r\n    saveCurrentlySelectedItemsInStorage() {\r\n        this.selectedItemsStorage = this.getSelectedItems();\r\n    }\r\n    getSelectedItemsFromStorage() {\r\n        return this.selectedItemsStorage || [];\r\n    }\r\n    restoreSelectionAfterFetchingUpdatedItems() {\r\n        const selectedItemsFromStorage = this.getSelectedItemsFromStorage();\r\n        const selectedItemsFromStorageIds = selectedItemsFromStorage.map((item) => item.itemId);\r\n        this.getAllItems()\r\n            .filter((item) => !synchronizationUtils.isInSync(item))\r\n            .filter((item) => selectedItemsFromStorageIds.indexOf(item.itemId) > -1)\r\n            .forEach((item) => (item.selected = true));\r\n    }\r\n    updateSyncQueue() {\r\n        const syncQueueWasNotEmpty = this.syncQueue.hasAtLeastOneItem();\r\n        const allItems = this.getAllItems();\r\n        allItems\r\n            .filter((item) => this.syncQueue.itemExists(item))\r\n            .filter((item) => !(synchronizationUtils.isSyncInProgress(item) ||\r\n            synchronizationUtils.isInNotSync(item)))\r\n            .forEach((item) => this.syncQueue.removeItem(item));\r\n        allItems\r\n            .filter((item) => !this.syncQueue.itemExists(item))\r\n            .filter((item) => synchronizationUtils.isSyncInProgress(item))\r\n            .forEach((item) => this.syncQueue.addItems([item.itemId]));\r\n        const syncQueueIsNowEmpty = this.syncQueue.isEmpty();\r\n        if (syncQueueWasNotEmpty && syncQueueIsNowEmpty) {\r\n            this.systemEventService.publishAsync(EVENT_CONTENT_CATALOG_UPDATE);\r\n        }\r\n    }\r\n    showSyncErrors() {\r\n        const itemsInErrors = this.getAllItems()\r\n            .filter((item) => this.syncQueue.itemExists(item))\r\n            .filter((item) => synchronizationUtils.isSyncInFailed(item))\r\n            .map((item) => item.itemId);\r\n        if (itemsInErrors.length > 0) {\r\n            this.alertService.showDanger({\r\n                message: this.translateService.instant('se.cms.synchronization.panel.failure.message', {\r\n                    items: itemsInErrors.join(' ')\r\n                })\r\n            });\r\n        }\r\n    }\r\n    atLeastOneSelectedItemExists() {\r\n        return this.getSelectedItems().length > 0;\r\n    }\r\n    noSelectedItems() {\r\n        return this.getSelectedItems().length === 0;\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ SynchronizationPanelComponent.prototype, \"itemId\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ SynchronizationPanelComponent.prototype, \"selectAllLabel\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ SynchronizationPanelComponent.prototype, \"getSyncStatus\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ SynchronizationPanelComponent.prototype, \"performSync\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], /* @ngInject */ SynchronizationPanelComponent.prototype, \"showFooter\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SynchronizationPanelComponent.prototype, \"getApi\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SynchronizationPanelComponent.prototype, \"selectedItemsUpdate\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SynchronizationPanelComponent.prototype, \"syncStatusReady\", void 0);\r\n/* @ngInject */ SynchronizationPanelComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-synchronization-panel',\r\n        template: `<div class=\"se-sync-panel\"><se-message *ngIf=\"message\" [type]=\"message.type\"><ng-container se-message-description>{{ message.description }}</ng-container></se-message><div class=\"se-sync-panel__sync-info\" [style.visibility]=\"showItemList ? 'visible': 'hidden'\"><se-spinner [isSpinning]=\"isLoading\"></se-spinner><se-synchronization-panel-item *ngFor=\"let item of getAllItems(); let i = index\" class=\"se-sync-panel__row\" [index]=\"i\" [item]=\"item\" [rootItem]=\"getRootItem()\" [selectAllLabel]=\"selectAllLabel\" [disableList]=\"disableList\" [disableItem]=\"api.disableItem\" (selectionChange)=\"selectionChange($event)\"></se-synchronization-panel-item></div><div class=\"se-sync-panel__footer\" *ngIf=\"showFooter\"><button class=\"se-sync-panel__sync-btn fd-button--emphasized\" [disabled]=\"isSyncButtonDisabled()\" (click)=\"syncItems()\" translate=\"se.cms.actionitem.page.sync\"></button></div></div>`,\r\n        styles: [`.se-sync-panel__sync-info{max-height:300px;overflow-y:auto}.se-sync-panel__row{display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding:0 20px;height:40px;border-bottom:1px solid #d9d9d9}.se-sync-panel__row:first-child{height:50px}.se-sync-panel__row:last-child{border-bottom:none}.se-sync-panel__footer{padding:20px;border-top:1px solid #d9d9d9;display:flex;flex-direction:row;align-items:center;justify-content:flex-end}.se-sync-panel__sync-btn{text-transform:capitalize;padding:0 20px;margin-left:8px}`]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [IWaitDialogService,\r\n        LogService,\r\n        CrossFrameEventService,\r\n        SystemEventService,\r\n        TimerService,\r\n        IAlertService,\r\n        TranslateService,\r\n        ISharedDataService,\r\n        ICatalogService,\r\n        UserTrackingService])\r\n], /* @ngInject */ SynchronizationPanelComponent);\r\nexport { /* @ngInject */ SynchronizationPanelComponent };\r\n//# sourceMappingURL=SynchronizationPanelComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate+core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/src/modules/synchronizationPanel/constants.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/src/modules/synchronizationPanel/SynchronizationUtils.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/src/modules/synchronizationPanel/SyncQueue.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/src/modules/synchronizationPanel/types.ts"],"map":"{\"version\":3,\"file\":\"SynchronizationPanelComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/modules/synchronizationPanel/components/synchronizationPanel/SynchronizationPanelComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/node_modules/.cache/rollup-plugin-typescript2/placeholder/modules/synchronizationPanel/components/synchronizationPanel/SynchronizationPanelComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CrossFrameEventService, IAlertService, ICatalogService, ISharedDataService, IWaitDialogService, LogService, SystemEventService, TimerService, TypedMap, UserTrackingService } from 'smarteditcommons';\r\nimport { ISynchronizationPanelApi, ISyncStatusItem } from '../../types';\r\nexport declare class SynchronizationPanelComponent implements OnInit, OnDestroy {\r\n    private waitDialogService;\r\n    private logService;\r\n    private crossFrameEventService;\r\n    private systemEventService;\r\n    private timerService;\r\n    private alertService;\r\n    private translateService;\r\n    private sharedDataService;\r\n    private catalogService;\r\n    private userTrackingService;\r\n    itemId: string;\r\n    selectAllLabel: string;\r\n    getSyncStatus: (id: string) => Promise<ISyncStatusItem>;\r\n    performSync: (payload: TypedMap<string>[]) => Promise<any>;\r\n    showFooter: boolean;\r\n    getApi: EventEmitter<ISynchronizationPanelApi>;\r\n    selectedItemsUpdate: EventEmitter<ISyncStatusItem[]>;\r\n    syncStatusReady: EventEmitter<ISyncStatusItem>;\r\n    showItemList: boolean;\r\n    message: {\r\n        type: string;\r\n        description: string;\r\n    };\r\n    isLoading: boolean;\r\n    disableList: boolean;\r\n    private SYNC_POLLING_SPEED_PREFIX;\r\n    private syncQueue;\r\n    private selectedItemsStorage;\r\n    private rootItem;\r\n    private resynchTimer;\r\n    private unsubscribeFastFetch;\r\n    private api;\r\n    constructor(waitDialogService: IWaitDialogService, logService: LogService, crossFrameEventService: CrossFrameEventService, systemEventService: SystemEventService, timerService: TimerService, alertService: IAlertService, translateService: TranslateService, sharedDataService: ISharedDataService, catalogService: ICatalogService, userTrackingService: UserTrackingService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    syncItems(): Promise<void>;\r\n    selectionChange(index?: number): void;\r\n    isSyncButtonDisabled(): boolean;\r\n    fetchSyncStatus(eventData?: ISyncStatusItem): Promise<void>;\r\n    markExternalItems(): void;\r\n    getAllItems(): ISyncStatusItem[];\r\n    private setExternalItemsCatalogVersionName;\r\n    private slowDownPolling;\r\n    private speedUpPolling;\r\n    private setRootItem;\r\n    private getRootItem;\r\n    private isRootItemExist;\r\n    private getDependentItems;\r\n    private getCurrentExperience;\r\n    private getSelectedItemPayloads;\r\n    private getSelectedItems;\r\n    private toogleRootItem;\r\n    private toggleAllDependentItems;\r\n    private toggleWaitModal;\r\n    private saveCurrentlySelectedItemsInStorage;\r\n    private getSelectedItemsFromStorage;\r\n    private restoreSelectionAfterFetchingUpdatedItems;\r\n    private updateSyncQueue;\r\n    private showSyncErrors;\r\n    private atLeastOneSelectedItemExists;\r\n    private noSelectedItems;\r\n}\r\n"}}
