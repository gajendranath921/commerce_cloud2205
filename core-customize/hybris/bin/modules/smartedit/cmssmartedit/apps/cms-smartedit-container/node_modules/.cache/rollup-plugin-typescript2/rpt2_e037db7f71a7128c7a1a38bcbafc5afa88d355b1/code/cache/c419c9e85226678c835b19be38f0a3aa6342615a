{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { ICatalogService, ModalWizard, SeDowngradeService } from 'smarteditcommons';\r\nimport { PageFacade } from '../../../facades';\r\nimport { ClonePageWizardComponent } from './ClonePageWizardComponent';\r\nlet /* @ngInject */ ClonePageWizardService = class /* @ngInject */ ClonePageWizardService {\r\n    constructor(modalWizard, catalogService, pageFacade) {\r\n        this.modalWizard = modalWizard;\r\n        this.catalogService = catalogService;\r\n        this.pageFacade = pageFacade;\r\n    }\r\n    /**\r\n     * When called, this method opens a modal window containing a wizard to clone an existing page.\r\n     *\r\n     * @param pageData An object containing the pageData when the clone page wizard is opened from the page list.\r\n     * @returns A promise that will resolve when the modal wizard is closed or reject if it's canceled.\r\n     *\r\n     */\r\n    openClonePageWizard(pageData) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const uriContext = pageData\r\n                ? yield this.catalogService.retrieveUriContext()\r\n                : yield this.pageFacade.retrievePageUriContext();\r\n            return this.modalWizard.open({\r\n                component: ClonePageWizardComponent,\r\n                properties: {\r\n                    uriContext,\r\n                    basePageUUID: pageData ? pageData.uuid : undefined\r\n                }\r\n            });\r\n        });\r\n    }\r\n};\r\n/* @ngInject */ ClonePageWizardService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [ModalWizard,\r\n        ICatalogService,\r\n        PageFacade])\r\n], /* @ngInject */ ClonePageWizardService);\r\nexport { /* @ngInject */ ClonePageWizardService };\r\n//# sourceMappingURL=ClonePageWizardService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/facades/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/pages/clonePageWizard/ClonePageWizardComponent.ts"],"map":"{\"version\":3,\"file\":\"ClonePageWizardService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/pages/clonePageWizard/ClonePageWizardService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAY,MAAM,kBAAkB,CAAC;AAC9F,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AAGtE,6CAAA;IACI,YACY,WAAwB,EACxB,cAA+B,EAC/B,UAAsB;QAFtB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,eAAU,GAAV,UAAU,CAAY;IAC/B,CAAC;IAEJ;;;;;;OAMG;IAEU,mBAAmB,CAAC,QAAmB;;YAChD,MAAM,UAAU,GAAG,QAAQ;gBACvB,CAAC,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;gBAChD,CAAC,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC;YAErD,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBACzB,SAAS,EAAE,wBAAwB;gBACnC,UAAU,EAAE;oBACR,UAAU;oBACV,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;iBACrD;aACJ,CAAC,CAAC;QACP,CAAC;KAAA;CACJ,CAAA;AA5BD;IADC,kBAAkB,EAAE;qCAGQ,WAAW;QACR,eAAe;QACnB,UAAU;0CAwBrC\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/pages/clonePageWizard/ClonePageWizardService.d.ts","writeByteOrderMark":false,"text":"import { ICatalogService, ModalWizard, ICMSPage } from 'smarteditcommons';\r\nimport { PageFacade } from '../../../facades';\r\nexport declare class ClonePageWizardService {\r\n    private modalWizard;\r\n    private catalogService;\r\n    private pageFacade;\r\n    constructor(modalWizard: ModalWizard, catalogService: ICatalogService, pageFacade: PageFacade);\r\n    /**\r\n     * When called, this method opens a modal window containing a wizard to clone an existing page.\r\n     *\r\n     * @param pageData An object containing the pageData when the clone page wizard is opened from the page list.\r\n     * @returns A promise that will resolve when the modal wizard is closed or reject if it's canceled.\r\n     *\r\n     */\r\n    openClonePageWizard(pageData?: ICMSPage): Promise<any>;\r\n}\r\n"}}
