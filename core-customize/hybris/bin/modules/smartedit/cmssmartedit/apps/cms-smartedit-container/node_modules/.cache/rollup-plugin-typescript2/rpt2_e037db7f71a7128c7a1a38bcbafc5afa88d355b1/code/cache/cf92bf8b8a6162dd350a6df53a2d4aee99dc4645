{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { IModalService, SeDowngradeService } from 'smarteditcommons';\r\nimport { GenericEditorModalComponent } from './components/GenericEditorModalComponent';\r\n/**\r\n * The Generic Editor Modal Service is used to open an editor modal window that contains a tabset.\r\n */\r\nlet /* @ngInject */ GenericEditorModalService = class /* @ngInject */ GenericEditorModalService {\r\n    constructor(modalService) {\r\n        this.modalService = modalService;\r\n    }\r\n    /**\r\n     * Function that opens an editor modal. For this method, you must specify an object to contain the edited information, and a save\r\n     * callback that will be triggered once the Save button is clicked.\r\n     */\r\n    open(data, saveCallback, errorCallback, config) {\r\n        const modalConfig = config ? Object.assign({}, config) : {};\r\n        modalConfig.modalPanelClass = `modal-lg ${modalConfig.modalPanelClass || ''}`.trimRight();\r\n        modalConfig.escKeyCloseable = false;\r\n        modalConfig.focusTrapped = false;\r\n        modalConfig.backdropClickCloseable = false;\r\n        const ref = this.modalService.open({\r\n            component: GenericEditorModalComponent,\r\n            data: {\r\n                data,\r\n                saveCallback,\r\n                errorCallback\r\n            },\r\n            config: modalConfig,\r\n            templateConfig: {\r\n                title: data.title,\r\n                isDismissButtonVisible: true,\r\n                titleSuffix: 'se.cms.editor.title.suffix'\r\n            }\r\n        });\r\n        return new Promise((resolve, reject) => ref.afterClosed.subscribe(resolve, reject));\r\n    }\r\n};\r\n/* @ngInject */ GenericEditorModalService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [IModalService])\r\n], /* @ngInject */ GenericEditorModalService);\r\nexport { /* @ngInject */ GenericEditorModalService };\r\n//# sourceMappingURL=GenericEditorModalService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/components/GenericEditorModalComponent.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/genericEditorModalTypes.ts"],"map":"{\"version\":3,\"file\":\"GenericEditorModalService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/GenericEditorModalService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EACH,aAAa,EACb,kBAAkB,EAGrB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,2BAA2B,EAAE,MAAM,0CAA0C,CAAC;AAOvF;;GAEG;AAGH,gDAAA;IACI,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;IAAG,CAAC;IAEnD;;;OAGG;IACI,IAAI,CACP,IAAyC,EACzC,YAAyD,EACzD,aAAwD,EACxD,MAAoB;QAEpB,MAAM,WAAW,GAAgB,MAAM,CAAC,CAAC,mBAAM,MAAM,EAAG,CAAC,CAAC,EAAE,CAAC;QAE7D,WAAW,CAAC,eAAe,GAAG,YAAY,WAAW,CAAC,eAAe,IAAI,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC;QAC1F,WAAW,CAAC,eAAe,GAAG,KAAK,CAAC;QACpC,WAAW,CAAC,YAAY,GAAG,KAAK,CAAC;QACjC,WAAW,CAAC,sBAAsB,GAAG,KAAK,CAAC;QAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAmC;YACjE,SAAS,EAAE,2BAA2B;YACtC,IAAI,EAAE;gBACF,IAAI;gBACJ,YAAY;gBACZ,aAAa;aAChB;YACD,MAAM,EAAE,WAAW;YACnB,cAAc,EAAE;gBACZ,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,sBAAsB,EAAE,IAAI;gBAC5B,WAAW,EAAE,4BAA4B;aAC5C;SACJ,CAAC,CAAC;QAEH,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IACxF,CAAC;CACJ,CAAA;AApCD;IADC,kBAAkB,EAAE;qCAEiB,aAAa;6CAmClD\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/GenericEditorModalService.d.ts","writeByteOrderMark":false,"text":"import { IModalService, ModalConfig, IGenericEditorModalServiceComponent } from 'smarteditcommons';\r\nimport { GenericEditorModalComponentErrorCallback, GenericEditorModalComponentSaveCallback } from './genericEditorModalTypes';\r\n/**\r\n * The Generic Editor Modal Service is used to open an editor modal window that contains a tabset.\r\n */\r\nexport declare class GenericEditorModalService {\r\n    private modalService;\r\n    constructor(modalService: IModalService);\r\n    /**\r\n     * Function that opens an editor modal. For this method, you must specify an object to contain the edited information, and a save\r\n     * callback that will be triggered once the Save button is clicked.\r\n     */\r\n    open<T = any>(data: IGenericEditorModalServiceComponent, saveCallback?: GenericEditorModalComponentSaveCallback<T>, errorCallback?: GenericEditorModalComponentErrorCallback, config?: ModalConfig): Promise<T>;\r\n}\r\n"}}
