{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ItemManagementComponent\", {\r\n    selector: 'se-item-manager',\r\n    template: `<div><se-generic-editor [id]=\"editorId\" [smarteditComponentId]=\"itemId\" [smarteditComponentType]=\"componentType\" [structureApi]=\"structureApi\" [content]=\"item\" [contentApi]=\"contentApi\" [(isDirty)]=\"isDirtyInternal\" [(submit)]=\"submit\" [uriContext]=\"uriContext\" [reset]=\"reset\"></se-generic-editor></div>`\r\n});\r\nlet /* @ngInject */ ItemManagementComponent = class /* @ngInject */ ItemManagementComponent {\r\n    constructor() {\r\n        this.supportedModes = ['add', 'edit', 'create'];\r\n        this.editorId = 'se-item-management-editor';\r\n        this.isDirtyChange = new EventEmitter();\r\n        this.submitFunctionChange = new EventEmitter();\r\n        this.reset = true;\r\n    }\r\n    ngOnInit() {\r\n        this.validateMode();\r\n        this.submitFunctionChange.emit(() => this.submitInternal());\r\n        this.isDirtyChange.emit(() => this.isDirtyLocal());\r\n        if (!this.componentType && this.item) {\r\n            this.componentType = this.item.typeCode;\r\n        }\r\n        if (!this.item) {\r\n            this.itemId = null;\r\n        }\r\n        if (this.item && this.item.uuid) {\r\n            this.itemId = this.item.uuid;\r\n        }\r\n        else if (this.item && this.item.uid) {\r\n            this.itemId = this.item.uid;\r\n        }\r\n    }\r\n    ngOnChanges(changes) {\r\n        const itemChange = changes.item;\r\n        if (itemChange) {\r\n            this.itemId = null;\r\n            if (this.item && this.item.uuid) {\r\n                this.itemId = this.item.uuid;\r\n            }\r\n            else if (this.item && this.item.uid) {\r\n                this.itemId = this.item.uid;\r\n            }\r\n        }\r\n    }\r\n    validateMode() {\r\n        if (!this.supportedModes.includes(this.mode)) {\r\n            throw 'ItemManagementComponent.ngOnInit() - Mode not supported: ' + this.mode;\r\n        }\r\n    }\r\n    submitInternal() {\r\n        switch (this.mode.toLowerCase()) {\r\n            case 'add':\r\n                return Promise.resolve(this.item);\r\n            case 'edit':\r\n                return this.submit();\r\n            case 'create':\r\n                return this.submit().then((itemResponse) => itemResponse);\r\n            default:\r\n                throw `ItemManagementController - The given mode [${this.mode}] has not been implemented for this component`;\r\n        }\r\n    }\r\n    isDirtyLocal() {\r\n        if (this.isDirtyInternal) {\r\n            return this.isDirtyInternal();\r\n        }\r\n        return false;\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ ItemManagementComponent.prototype, \"item\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ ItemManagementComponent.prototype, \"uriContext\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ ItemManagementComponent.prototype, \"mode\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ ItemManagementComponent.prototype, \"contentApi\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ ItemManagementComponent.prototype, \"structureApi\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ ItemManagementComponent.prototype, \"componentType\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ ItemManagementComponent.prototype, \"isDirty\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ ItemManagementComponent.prototype, \"submitFunction\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ ItemManagementComponent.prototype, \"isDirtyChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ ItemManagementComponent.prototype, \"submitFunctionChange\", void 0);\r\n/* @ngInject */ ItemManagementComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-item-manager',\r\n        template: `<div><se-generic-editor [id]=\"editorId\" [smarteditComponentId]=\"itemId\" [smarteditComponentType]=\"componentType\" [structureApi]=\"structureApi\" [content]=\"item\" [contentApi]=\"contentApi\" [(isDirty)]=\"isDirtyInternal\" [(submit)]=\"submit\" [uriContext]=\"uriContext\" [reset]=\"reset\"></se-generic-editor></div>`\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], /* @ngInject */ ItemManagementComponent);\r\nexport { /* @ngInject */ ItemManagementComponent };\r\n//# sourceMappingURL=ItemManagerComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"ItemManagerComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/itemManagement/ItemManagerComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/itemManagement/ItemManagerComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, OnInit, SimpleChanges } from '@angular/core';\r\nimport { IUriContext, CMSItem } from 'smarteditcommons';\r\nexport declare class ItemManagementComponent implements OnInit {\r\n    item: CMSItem;\r\n    uriContext: IUriContext;\r\n    mode: string;\r\n    contentApi: string;\r\n    structureApi: string;\r\n    componentType?: string;\r\n    isDirty: () => boolean;\r\n    submitFunction: () => Promise<CMSItem>;\r\n    isDirtyChange: EventEmitter<() => boolean>;\r\n    submitFunctionChange: EventEmitter<() => Promise<CMSItem>>;\r\n    editorId: string;\r\n    itemId: string;\r\n    submit: () => Promise<CMSItem>;\r\n    isDirtyInternal: () => boolean;\r\n    reset: boolean;\r\n    private readonly supportedModes;\r\n    constructor();\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    private validateMode;\r\n    private submitInternal;\r\n    private isDirtyLocal;\r\n}\r\n"}}
