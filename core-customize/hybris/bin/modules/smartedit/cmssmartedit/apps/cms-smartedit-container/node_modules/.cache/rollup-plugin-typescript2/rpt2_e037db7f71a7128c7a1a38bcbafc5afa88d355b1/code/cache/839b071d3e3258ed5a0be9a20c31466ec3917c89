{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ComponentService, IContextAwareEditableItemService } from 'cmscommons';\r\nimport { isNil } from 'lodash';\r\nimport { stringUtils, GatewayProxied, GenericEditorStackService, IRenderService, SeDowngradeService, CmsitemsRestService, IEditorModalService } from 'smarteditcommons';\r\nimport { GenericEditorModalService } from './GenericEditorModalService';\r\nlet /* @ngInject */ EditorModalService = class /* @ngInject */ EditorModalService extends IEditorModalService {\r\n    constructor(genericEditorModalService, componentService, renderService, contextAwareEditableItemService, cmsitemsRestService, translateService, genericEditorStackService) {\r\n        super();\r\n        this.genericEditorModalService = genericEditorModalService;\r\n        this.componentService = componentService;\r\n        this.renderService = renderService;\r\n        this.contextAwareEditableItemService = contextAwareEditableItemService;\r\n        this.cmsitemsRestService = cmsitemsRestService;\r\n        this.translateService = translateService;\r\n        this.genericEditorStackService = genericEditorStackService;\r\n    }\r\n    openAndRerenderSlot(componentType, componentUuid, targetedQualifier, saveCallback, editorStackId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const componentAttributes = {\r\n                smarteditComponentType: componentType,\r\n                smarteditComponentUuid: componentUuid\r\n            };\r\n            const attributes = yield this.preloadContent(componentUuid, componentAttributes);\r\n            const componentData = this.createComponentData(attributes, {\r\n                targetedQualifier\r\n            }, editorStackId || stringUtils.generateIdentifier());\r\n            return this.markAndOpenGenericEditor(componentData, saveCallback);\r\n        });\r\n    }\r\n    open(componentAttributes, targetSlotId, position, targetedQualifier, saveCallback, editorStackId, config) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const attributes = yield this.preloadContent(componentAttributes.smarteditComponentUuid, componentAttributes);\r\n            const componentData = this.createComponentData(attributes, {\r\n                slotId: targetSlotId,\r\n                position,\r\n                targetedQualifier\r\n            }, editorStackId || stringUtils.generateIdentifier());\r\n            return this.markAndOpenGenericEditor(componentData, saveCallback, config);\r\n        });\r\n    }\r\n    openGenericEditor(data, saveCallback, errorCallback, config) {\r\n        return this.genericEditorModalService.open(data, saveCallback, errorCallback, config);\r\n    }\r\n    /**\r\n     * Loads content of the item by uuid and populates the content attribute of componentAttributes object only if it's not already provided.\r\n     */\r\n    preloadContent(uuid, componentAttributes) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const component = yield this.getContentByUuid(uuid);\r\n            if (component !== null && isNil(componentAttributes.content)) {\r\n                componentAttributes.content = component;\r\n            }\r\n            return componentAttributes;\r\n        });\r\n    }\r\n    /**\r\n     * Opens generic editor.\r\n     *\r\n     * @param componentData Object that contains all parameters for generic editor.\r\n     * Note: if the componentUuid is not provided the generic editor will be opened for creation.\r\n     *\r\n     * @param saveCallback the save callback that is triggered after submit.\r\n     */\r\n    markAndOpenGenericEditor(componentData, saveCallback, config) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.markComponentAsShared(componentData.content, componentData);\r\n            return this.genericEditorModalService.open(componentData, (item) => {\r\n                if (saveCallback) {\r\n                    saveCallback(item);\r\n                }\r\n                if (componentData.editorStackId) {\r\n                    const [topEditor] = this.genericEditorStackService.getEditorsStack(componentData.editorStackId);\r\n                    const { component: { uuid } } = topEditor;\r\n                    this.componentService\r\n                        .getSlotsForComponent(uuid)\r\n                        .then((slotIds) => {\r\n                        this.renderService.renderSlots(slotIds);\r\n                    });\r\n                }\r\n            }, null, config);\r\n        });\r\n    }\r\n    /**\r\n     * Retrieves a content object by its uuid. If the uuid is undefined, null is returned.\r\n     */\r\n    getContentByUuid(uuid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!isNil(uuid)) {\r\n                return this.cmsitemsRestService.getById(uuid);\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n    /**\r\n     * Verifies whether the component is shared in workflow context. If yes, then makes the component readonly and adds a message that the component\r\n     * is used in different workflow. If no, checks whether the component is shared in page context and adds a message about it.\r\n     */\r\n    markComponentAsShared(componentContent, modelServiceParameters) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!(componentContent === null || componentContent === void 0 ? void 0 : componentContent.uid)) {\r\n                return;\r\n            }\r\n            const componentIsEditable = yield this.contextAwareEditableItemService.isItemEditable(componentContent.uid);\r\n            modelServiceParameters.readOnlyMode = !componentIsEditable;\r\n            if (modelServiceParameters.readOnlyMode && this.componentIsShared(componentContent)) {\r\n                this.addComponentInfoMessage('se.cms.component.workflow.shared.component', modelServiceParameters);\r\n            }\r\n            else if (this.componentIsShared(componentContent) &&\r\n                !modelServiceParameters.readOnlyMode) {\r\n                this.addComponentInfoMessage('se.cms.component.shared.component', modelServiceParameters);\r\n            }\r\n            else if (!this.componentIsShared(componentContent) &&\r\n                modelServiceParameters.readOnlyMode) {\r\n                this.addComponentInfoMessage('se.cms.component.workflow.component', modelServiceParameters);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Verifies whether the component is shared or not by checking the slots attribute of the component payload.\r\n     */\r\n    componentIsShared(componentContent) {\r\n        var _a;\r\n        return ((_a = componentContent.slots) === null || _a === void 0 ? void 0 : _a.length) > 1;\r\n    }\r\n    /**\r\n     * Adds a message to a messages attribute of IGenericEditorModalServiceComponent. If the attribute is undefined then the new one is created.\r\n     */\r\n    addComponentInfoMessage(message, modelServiceParameters) {\r\n        modelServiceParameters.messages = modelServiceParameters.messages || [];\r\n        modelServiceParameters.messages.push({\r\n            type: 'info',\r\n            message: this.translateService.instant(message)\r\n        });\r\n    }\r\n    prepareContentForCreate(content, componentType, catalogVersionUuid, slotId, position) {\r\n        const preparedContent = content ? Object.assign({}, content) : {};\r\n        preparedContent.position = !stringUtils.isBlank(preparedContent.position)\r\n            ? preparedContent.position\r\n            : position;\r\n        preparedContent.slotId = preparedContent.slotId || slotId;\r\n        preparedContent.typeCode = preparedContent.typeCode || componentType;\r\n        preparedContent.itemtype = preparedContent.itemtype || componentType;\r\n        preparedContent.catalogVersion = preparedContent.catalogVersion || catalogVersionUuid;\r\n        preparedContent.visible = !stringUtils.isBlank(preparedContent.visible)\r\n            ? preparedContent.visible\r\n            : true;\r\n        return preparedContent;\r\n    }\r\n    createComponentData(componentAttributes, params, editorStackId) {\r\n        let type;\r\n        try {\r\n            type = componentAttributes.smarteditComponentType.toLowerCase();\r\n        }\r\n        catch (error) {\r\n            throw new Error(`editorModalService.createComponentData - invalid component type in componentAttributes. ${error}`);\r\n        }\r\n        const isCreateOperation = isNil(componentAttributes.smarteditComponentUuid);\r\n        let content;\r\n        if (isCreateOperation) {\r\n            content = this.prepareContentForCreate(componentAttributes.content, componentAttributes.smarteditComponentType, componentAttributes.catalogVersionUuid, params.slotId, params.position);\r\n        }\r\n        else {\r\n            content = componentAttributes.content;\r\n        }\r\n        return {\r\n            componentUuid: componentAttributes.smarteditComponentUuid,\r\n            componentType: componentAttributes.smarteditComponentType,\r\n            title: `type.${type}.name`,\r\n            targetedQualifier: params.targetedQualifier,\r\n            initialDirty: componentAttributes.initialDirty,\r\n            content,\r\n            editorStackId\r\n        };\r\n    }\r\n};\r\n/* @ngInject */ EditorModalService = __decorate([\r\n    SeDowngradeService(IEditorModalService),\r\n    GatewayProxied('open', 'openAndRerenderSlot', 'openGenericEditor'),\r\n    __metadata(\"design:paramtypes\", [GenericEditorModalService,\r\n        ComponentService,\r\n        IRenderService,\r\n        IContextAwareEditableItemService,\r\n        CmsitemsRestService,\r\n        TranslateService,\r\n        GenericEditorStackService])\r\n], /* @ngInject */ EditorModalService);\r\nexport { /* @ngInject */ EditorModalService };\r\n//# sourceMappingURL=EditorModalServiceOuter.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate+core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/GenericEditorModalService.ts"],"map":"{\"version\":3,\"file\":\"EditorModalServiceOuter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/EditorModalServiceOuter.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/EditorModalServiceOuter.d.ts","writeByteOrderMark":false,"text":"import { TranslateService } from '@ngx-translate/core';\r\nimport { ComponentService, IContextAwareEditableItemService } from 'cmscommons';\r\nimport { GenericEditorStackService, IRenderService, ModalConfig, CmsitemsRestService, IGenericEditorModalServiceComponent, IEditorModalService, IComponent } from 'smarteditcommons';\r\nimport { GenericEditorModalService } from './GenericEditorModalService';\r\nexport declare class EditorModalService extends IEditorModalService {\r\n    private genericEditorModalService;\r\n    private componentService;\r\n    private renderService;\r\n    private contextAwareEditableItemService;\r\n    private cmsitemsRestService;\r\n    private translateService;\r\n    private genericEditorStackService;\r\n    constructor(genericEditorModalService: GenericEditorModalService, componentService: ComponentService, renderService: IRenderService, contextAwareEditableItemService: IContextAwareEditableItemService, cmsitemsRestService: CmsitemsRestService, translateService: TranslateService, genericEditorStackService: GenericEditorStackService);\r\n    openAndRerenderSlot(componentType: string, componentUuid: string, targetedQualifier: string, saveCallback?: (item: any) => void, editorStackId?: string): Promise<any>;\r\n    open(componentAttributes: IComponent, targetSlotId?: string, position?: number, targetedQualifier?: string, saveCallback?: (item: any) => void, editorStackId?: string, config?: ModalConfig): Promise<any>;\r\n    openGenericEditor(data: IGenericEditorModalServiceComponent, saveCallback?: () => void, errorCallback?: () => void, config?: ModalConfig): Promise<any>;\r\n    /**\r\n     * Loads content of the item by uuid and populates the content attribute of componentAttributes object only if it's not already provided.\r\n     */\r\n    private preloadContent;\r\n    /**\r\n     * Opens generic editor.\r\n     *\r\n     * @param componentData Object that contains all parameters for generic editor.\r\n     * Note: if the componentUuid is not provided the generic editor will be opened for creation.\r\n     *\r\n     * @param saveCallback the save callback that is triggered after submit.\r\n     */\r\n    private markAndOpenGenericEditor;\r\n    /**\r\n     * Retrieves a content object by its uuid. If the uuid is undefined, null is returned.\r\n     */\r\n    private getContentByUuid;\r\n    /**\r\n     * Verifies whether the component is shared in workflow context. If yes, then makes the component readonly and adds a message that the component\r\n     * is used in different workflow. If no, checks whether the component is shared in page context and adds a message about it.\r\n     */\r\n    private markComponentAsShared;\r\n    /**\r\n     * Verifies whether the component is shared or not by checking the slots attribute of the component payload.\r\n     */\r\n    private componentIsShared;\r\n    /**\r\n     * Adds a message to a messages attribute of IGenericEditorModalServiceComponent. If the attribute is undefined then the new one is created.\r\n     */\r\n    private addComponentInfoMessage;\r\n    private prepareContentForCreate;\r\n    private createComponentData;\r\n}\r\n"}}
