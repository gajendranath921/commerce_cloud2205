{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { DEFAULT_SYNCHRONIZATION_POLLING as SYNCHRONIZATION_POLLING } from 'cmscommons';\r\nimport { CrossFrameEventService, EVENT_CONTENT_CATALOG_UPDATE, LogService, SeDowngradeService, SystemEventService } from 'smarteditcommons';\r\nimport { GenericEditorModalService } from '../../../services';\r\nimport { PageEditorModalConfigService } from './PageEditorModalConfigService';\r\n/**\r\n * The page editor modal service module provides a service that allows opening an editor modal for a given page. The editor modal is populated with a save and cancel button, and is loaded with the\r\n * editorTabset of cmssmarteditContainer as its content, providing a way to edit\r\n * various fields of the given page.\r\n *\r\n * Convenience service to open an editor modal window for a given page's data.\r\n */\r\nlet /* @ngInject */ PageEditorModalService = class /* @ngInject */ PageEditorModalService {\r\n    constructor(genericEditorModalService, crossFrameEventService, systemEventService, pageEditorModalConfigService, logService) {\r\n        this.genericEditorModalService = genericEditorModalService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.systemEventService = systemEventService;\r\n        this.pageEditorModalConfigService = pageEditorModalConfigService;\r\n        this.logService = logService;\r\n    }\r\n    /**\r\n     * Opens Editor Modal.\r\n     *\r\n     * The editor modal is initialized with a title in the format '<TypeName> Editor', ie: 'Paragraph Editor'.\r\n     * The editor modal is also wired with a save and cancel button.\r\n     *\r\n     * @returns A promise that resolves to the data returned by the modal when it is closed.\r\n     */\r\n    open(page) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const config = yield this.pageEditorModalConfigService.create(page);\r\n            try {\r\n                const updatedCmsPage = yield this.genericEditorModalService.open(config, () => {\r\n                    this.crossFrameEventService.publish(SYNCHRONIZATION_POLLING.FETCH_SYNC_STATUS_ONCE, page.uuid);\r\n                });\r\n                this.systemEventService.publishAsync(EVENT_CONTENT_CATALOG_UPDATE, updatedCmsPage);\r\n            }\r\n            catch (error) {\r\n                this.logService.debug('Page Editor Modal dismissed', error);\r\n            }\r\n        });\r\n    }\r\n};\r\n/* @ngInject */ PageEditorModalService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [GenericEditorModalService,\r\n        CrossFrameEventService,\r\n        SystemEventService,\r\n        PageEditorModalConfigService,\r\n        LogService])\r\n], /* @ngInject */ PageEditorModalService);\r\nexport { /* @ngInject */ PageEditorModalService };\r\n//# sourceMappingURL=PageEditorModalService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/pages/services/PageEditorModalConfigService.ts"],"map":"{\"version\":3,\"file\":\"PageEditorModalService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/pages/services/PageEditorModalService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,+BAA+B,IAAI,uBAAuB,EAAE,MAAM,YAAY,CAAC;AACxF,OAAO,EACH,sBAAsB,EACtB,4BAA4B,EAC5B,UAAU,EACV,kBAAkB,EAClB,kBAAkB,EAErB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,yBAAyB,EAAE,MAAM,mBAAmB,CAAC;AAC9D,OAAO,EAAE,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AAE9E;;;;;;GAMG;AAEH,6CAAA;IACI,YACY,yBAAoD,EACpD,sBAA8C,EAC9C,kBAAsC,EACtC,4BAA0D,EAC1D,UAAsB;QAJtB,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,eAAU,GAAV,UAAU,CAAY;IAC/B,CAAC;IAEJ;;;;;;;OAOG;IACU,IAAI,CAAC,IAAc;;YAC5B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,4BAA4B,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACpE,IAAI;gBACA,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAC5D,MAAM,EACN,GAAG,EAAE;oBACD,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAC/B,uBAAuB,CAAC,sBAAsB,EAC9C,IAAI,CAAC,IAAI,CACZ,CAAC;gBACN,CAAC,CACJ,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,4BAA4B,EAAE,cAAc,CAAC,CAAC;aACtF;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;aAC/D;QACL,CAAC;KAAA;CACJ,CAAA;AAlCD;IADC,kBAAkB,EAAE;qCAGsB,yBAAyB;QAC5B,sBAAsB;QAC1B,kBAAkB;QACR,4BAA4B;QAC9C,UAAU;0CA4BrC\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/pages/services/PageEditorModalService.d.ts","writeByteOrderMark":false,"text":"import { CrossFrameEventService, LogService, SystemEventService, ICMSPage } from 'smarteditcommons';\r\nimport { GenericEditorModalService } from '../../../services';\r\nimport { PageEditorModalConfigService } from './PageEditorModalConfigService';\r\n/**\r\n * The page editor modal service module provides a service that allows opening an editor modal for a given page. The editor modal is populated with a save and cancel button, and is loaded with the\r\n * editorTabset of cmssmarteditContainer as its content, providing a way to edit\r\n * various fields of the given page.\r\n *\r\n * Convenience service to open an editor modal window for a given page's data.\r\n */\r\nexport declare class PageEditorModalService {\r\n    private genericEditorModalService;\r\n    private crossFrameEventService;\r\n    private systemEventService;\r\n    private pageEditorModalConfigService;\r\n    private logService;\r\n    constructor(genericEditorModalService: GenericEditorModalService, crossFrameEventService: CrossFrameEventService, systemEventService: SystemEventService, pageEditorModalConfigService: PageEditorModalConfigService, logService: LogService);\r\n    /**\r\n     * Opens Editor Modal.\r\n     *\r\n     * The editor modal is initialized with a title in the format '<TypeName> Editor', ie: 'Paragraph Editor'.\r\n     * The editor modal is also wired with a save and cancel button.\r\n     *\r\n     * @returns A promise that resolves to the data returned by the modal when it is closed.\r\n     */\r\n    open(page: ICMSPage): Promise<any>;\r\n}\r\n"}}
