{"code":"var /* @ngInject */ NavigationEditorTreeActions_1;\r\nimport { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { NAVIGATION_NODE_ROOT_NODE_UID, NAVIGATION_NODE_TYPECODE } from 'cmscommons';\r\nimport { assign } from 'lodash';\r\nimport { IConfirmationModalService, InvalidateCache, LogService, CmsitemsRestService, cmsitemsEvictionTag, UserTrackingService, USER_TRACKING_FUNCTIONALITY } from 'smarteditcommons';\r\nimport { NavigationNodeEditorModalService } from '../navigationNodeEditor/NavigationNodeEditorModalService';\r\nimport { NavigationEditorNodeService } from './NavigationEditorNodeService';\r\n// TODO: unit tests\r\nlet /* @ngInject */ NavigationEditorTreeActions = /* @ngInject */ NavigationEditorTreeActions_1 = class /* @ngInject */ NavigationEditorTreeActions {\r\n    constructor(logService, cmsitemsRestService, confirmationModalService, navigationEditorNodeService, navigationNodeEditorModalService, userTrackingService) {\r\n        this.logService = logService;\r\n        this.cmsitemsRestService = cmsitemsRestService;\r\n        this.confirmationModalService = confirmationModalService;\r\n        this.navigationEditorNodeService = navigationEditorNodeService;\r\n        this.navigationNodeEditorModalService = navigationNodeEditorModalService;\r\n        this.userTrackingService = userTrackingService;\r\n    }\r\n    /**\r\n     * Sets fields required for this service to work properly\r\n     */\r\n    setup(readOnly, rootNodeUid, uriContext) {\r\n        this.readOnly = readOnly;\r\n        this.rootNodeUid = rootNodeUid;\r\n        this.uriContext = uriContext;\r\n    }\r\n    /**\r\n     * Exposes methods of this service to a literal object.\r\n     *\r\n     * This literal object is used by `TreeComponent#setNodeActions` (smarteditcommons)\r\n     * It sets new context and \"inject\" treeService param for all methods using `.bind`\r\n     *\r\n     * It is done this way, so TreeComponent can easily iterate over the methods, if we would passed instance of this class it wouldn't be easy to iterate over these methods\r\n     */\r\n    getActions() {\r\n        return {\r\n            isReadOnly: () => this.isReadOnly(),\r\n            hasChildren: (treeService, nodeData) => this.hasChildren(treeService, nodeData),\r\n            fetchData: (treeService, nodeData) => this.fetchData(treeService, nodeData),\r\n            removeItem: (treeService, nodeData) => this.removeItem(treeService, nodeData),\r\n            performMove: (treeService, nodeData, refreshNodeItself) => this.performMove(treeService, nodeData, refreshNodeItself),\r\n            dragAndDrop: (treeService, event) => this.dragAndDrop(treeService, event),\r\n            moveUp: (treeService, nodeData) => this.moveUp(treeService, nodeData),\r\n            moveDown: (treeService, nodeData) => this.moveDown(treeService, nodeData),\r\n            isMoveUpAllowed: (treeService, nodeData) => this.isMoveUpAllowed(treeService, nodeData),\r\n            isMoveDownAllowed: (treeService, nodeData) => this.isMoveDownAllowed(treeService, nodeData),\r\n            refreshNode: (treeService, nodeData) => this.refreshNode(treeService, nodeData),\r\n            refreshParentNode: (treeService, nodeData) => this.refreshParentNode(treeService, nodeData),\r\n            editNavigationNode: (treeService, nodeData) => this.editNavigationNode(treeService, nodeData),\r\n            addTopLevelNode: (treeService, nodeData) => this.addTopLevelNode(treeService, nodeData),\r\n            getEntryString: (treeService, nodeData) => this.getEntryString(treeService, nodeData),\r\n            getEntryTooltipString: (treeService, nodeData) => this.getEntryTooltipString(treeService, nodeData),\r\n            addNewChild: (treeService, nodeData) => this.addNewChild(treeService, nodeData),\r\n            addNewSibling: (treeService, nodeData) => this.addNewSibling(treeService, nodeData),\r\n            getDropdownItems: (treeService) => this.getDropdownItems(treeService),\r\n            _findNodeById: (treeService, nodeUid) => this._findNodeById(treeService, nodeUid),\r\n            _expandIfNeeded: (treeService, nodeData) => this._expandIfNeeded(treeService, nodeData)\r\n        };\r\n    }\r\n    getNavigationNodeCMSItemByUid(uid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield this.cmsitemsRestService.get({\r\n                typeCode: NAVIGATION_NODE_TYPECODE,\r\n                pageSize: 1,\r\n                currentPage: 0,\r\n                itemSearchParams: 'uid:' + uid\r\n            });\r\n            return result.response[0];\r\n        });\r\n    }\r\n    hasNotMoved(source, destinationPosition, destinationParent) {\r\n        return (source.position === destinationPosition && source.parentUid === destinationParent.uid);\r\n    }\r\n    getEntriesCommaSeparated(entries) {\r\n        return entries.map((entry) => `${entry.name} (${entry.itemType})`).join(', ');\r\n    }\r\n    /** Actions */\r\n    isReadOnly() {\r\n        return this.readOnly;\r\n    }\r\n    hasChildren(_treeService, nodeData) {\r\n        return nodeData.hasChildren;\r\n    }\r\n    fetchData(treeService, nodeData) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (nodeData.initiated) {\r\n                return nodeData.nodes;\r\n            }\r\n            if (nodeData.uid === NAVIGATION_NODE_ROOT_NODE_UID) {\r\n                nodeData.initiated = false;\r\n                const node = yield this.getNavigationNodeCMSItemByUid(this.rootNodeUid);\r\n                assign(nodeData, node);\r\n            }\r\n            nodeData.removeAllNodes();\r\n            return treeService.fetchChildren(nodeData);\r\n        });\r\n    }\r\n    removeItem(treeService, node) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.readOnly) {\r\n                throw /* @ngInject */ NavigationEditorTreeActions_1.READY_ONLY_ERROR_I18N;\r\n            }\r\n            this.userTrackingService.trackingUserAction(USER_TRACKING_FUNCTIONALITY.NAVIGATION_MANAGEMENT, 'Delete');\r\n            let isConfirmed = true;\r\n            try {\r\n                // IMPORTANT NOTE\r\n                // `confirmationModalService.confirm` resolves to null\r\n                // that's why `isConfirmed` is not set here\r\n                yield this.confirmationModalService.confirm({\r\n                    description: 'se.cms.navigationmanagement.navnode.removenode.confirmation.message',\r\n                    title: 'se.cms.navigationmanagement.navnode.removenode.confirmation.title'\r\n                });\r\n            }\r\n            catch (_a) {\r\n                isConfirmed = false;\r\n            }\r\n            if (isConfirmed) {\r\n                yield this.cmsitemsRestService.delete(node.uuid);\r\n                this.refreshParentNode(treeService, node);\r\n            }\r\n        });\r\n    }\r\n    performMove(treeService, node, refreshNodeItself) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.readOnly) {\r\n                throw /* @ngInject */ NavigationEditorTreeActions_1.READY_ONLY_ERROR_I18N;\r\n            }\r\n            try {\r\n                yield this.navigationEditorNodeService.updateNavigationNodePosition(node);\r\n                if (!node) {\r\n                    yield this.fetchData(treeService, treeService.root);\r\n                }\r\n                else if (refreshNodeItself) {\r\n                    yield this.refreshNode(treeService, node);\r\n                }\r\n                else {\r\n                    yield this.refreshParentNode(treeService, node);\r\n                }\r\n            }\r\n            catch (err) {\r\n                this.logService.error(`Error updating node position:\\n${err}`);\r\n            }\r\n        });\r\n    }\r\n    dragAndDrop(treeService, event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const nodeData = event.sourceNode;\r\n            const destinationNodes = event.destinationNodes;\r\n            const destination = destinationNodes.find((node) => node.uid !== nodeData.uid);\r\n            // this method is still triggered on drop, even if drop is not allowed\r\n            // so its possible that destination does not exist, in which case we return silently\r\n            if (!destination) {\r\n                return;\r\n            }\r\n            const destinationParent = destination.parent;\r\n            if (this.hasNotMoved(nodeData, event.position, destinationParent)) {\r\n                return;\r\n            }\r\n            nodeData.position = event.position;\r\n            nodeData.setParent(destinationParent);\r\n            yield this.performMove(treeService, nodeData, true);\r\n            if (event.sourceParentNode.uid !== event.destinationParentNode.uid) {\r\n                this.refreshNode(treeService, event.sourceParentNode);\r\n            }\r\n        });\r\n    }\r\n    moveUp(treeService, nodeData) {\r\n        if (this.readOnly) {\r\n            throw /* @ngInject */ NavigationEditorTreeActions_1.READY_ONLY_ERROR_I18N;\r\n        }\r\n        this.userTrackingService.trackingUserAction(USER_TRACKING_FUNCTIONALITY.NAVIGATION_MANAGEMENT, 'Move Up');\r\n        nodeData.position = nodeData.position - 1;\r\n        return this.performMove(treeService, nodeData);\r\n    }\r\n    moveDown(treeService, nodeData) {\r\n        if (this.readOnly) {\r\n            throw /* @ngInject */ NavigationEditorTreeActions_1.READY_ONLY_ERROR_I18N;\r\n        }\r\n        this.userTrackingService.trackingUserAction(USER_TRACKING_FUNCTIONALITY.NAVIGATION_MANAGEMENT, 'Move Down');\r\n        nodeData.position = nodeData.position + 1;\r\n        return this.performMove(treeService, nodeData);\r\n    }\r\n    isMoveUpAllowed(_treeService, nodeData) {\r\n        return nodeData.position !== 0;\r\n    }\r\n    isMoveDownAllowed(_treeService, nodeData) {\r\n        nodeData.parent.nodes = nodeData.parent.nodes || [];\r\n        return nodeData.position < nodeData.parent.nodes.length - 1;\r\n    }\r\n    refreshNode(treeService, nodeData) {\r\n        nodeData.setInitiated(false);\r\n        return treeService.fetchChildren(nodeData);\r\n    }\r\n    refreshParentNode(treeService, nodeData) {\r\n        return this.refreshNode(treeService, nodeData.parent);\r\n    }\r\n    editNavigationNode(treeService, nodeData) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.userTrackingService.trackingUserAction(USER_TRACKING_FUNCTIONALITY.NAVIGATION_MANAGEMENT, 'Edit');\r\n            try {\r\n                yield this.navigationNodeEditorModalService.open(this.uriContext, nodeData.parent, nodeData);\r\n                yield this.refreshNode(treeService, nodeData.parent);\r\n                let targetNode;\r\n                if (nodeData.parent.uid === NAVIGATION_NODE_ROOT_NODE_UID) {\r\n                    targetNode = nodeData;\r\n                }\r\n                else {\r\n                    targetNode = nodeData.parent;\r\n                }\r\n                const refreshedNode = yield this.navigationEditorNodeService.getNavigationNode(targetNode.uid, this.uriContext);\r\n                assign(targetNode, refreshedNode);\r\n                if (nodeData.parent.uid === NAVIGATION_NODE_ROOT_NODE_UID) {\r\n                    return this.refreshNode(treeService, nodeData);\r\n                }\r\n                return this.refreshParentNode(treeService, nodeData);\r\n            }\r\n            catch (_a) {\r\n                this.logService.warn('navigationNodeEditorModalService closed when editing navigation node');\r\n            }\r\n        });\r\n    }\r\n    addTopLevelNode(treeService, nodeData) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.userTrackingService.trackingUserAction(USER_TRACKING_FUNCTIONALITY.NAVIGATION_MANAGEMENT, 'Create Top Level');\r\n            const created = !!(yield this.addNewChild(treeService, nodeData));\r\n            if (created) {\r\n                const node = yield this.getNavigationNodeCMSItemByUid(this.rootNodeUid);\r\n                yield this.fetchData(treeService, node);\r\n            }\r\n        });\r\n    }\r\n    getEntryString(_treeService, node) {\r\n        return this.getEntriesCommaSeparated(node.entries || []);\r\n    }\r\n    getEntryTooltipString(_treeService, node) {\r\n        return [\r\n            '<div>',\r\n            ...(node.entries || []).map((entry) => `<div>${entry.name} (${entry.itemType})</div>`),\r\n            '</div>'\r\n        ].join('');\r\n    }\r\n    addNewChild(treeService, nodeData) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.userTrackingService.trackingUserAction(USER_TRACKING_FUNCTIONALITY.NAVIGATION_MANAGEMENT, 'Add a Child');\r\n            const parent = nodeData ? nodeData : this._findNodeById(treeService, this.rootNodeUid);\r\n            yield this._expandIfNeeded(treeService, nodeData);\r\n            try {\r\n                yield this.navigationNodeEditorModalService.open(this.uriContext, parent);\r\n                return this.refreshNode(treeService, parent);\r\n            }\r\n            catch (_a) {\r\n                this.logService.warn('navigationNodeEditorModalService closed when adding new child');\r\n            }\r\n        });\r\n    }\r\n    addNewSibling(treeService, nodeData) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.userTrackingService.trackingUserAction(USER_TRACKING_FUNCTIONALITY.NAVIGATION_MANAGEMENT, 'Add a Sibling');\r\n            const parent = nodeData.parent;\r\n            try {\r\n                yield this.navigationNodeEditorModalService.open(this.uriContext, parent);\r\n                return this.refreshNode(treeService, parent);\r\n            }\r\n            catch (_a) {\r\n                this.logService.warn('navigationNodeEditorModalService closed when adding new sibling');\r\n            }\r\n        });\r\n    }\r\n    getDropdownItems(treeService) {\r\n        return [\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.edit',\r\n                callback: (node) => {\r\n                    this.editNavigationNode(treeService, node);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.removenode',\r\n                customCss: 'se-dropdown-item__delete',\r\n                callback: (node) => {\r\n                    this.removeItem(treeService, node);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.move.up',\r\n                condition: (node) => this.isMoveUpAllowed(treeService, node),\r\n                callback: (node) => {\r\n                    this.moveUp(treeService, node);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.move.down',\r\n                condition: (node) => this.isMoveDownAllowed(treeService, node),\r\n                callback: (node) => {\r\n                    this.moveDown(treeService, node);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.addchild',\r\n                callback: (node) => {\r\n                    this.addNewChild(treeService, node);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.addsibling',\r\n                callback: (node) => {\r\n                    this.addNewSibling(treeService, node);\r\n                }\r\n            }\r\n        ];\r\n    }\r\n    _findNodeById(treeService, nodeUid) {\r\n        return treeService.getNodeById(nodeUid);\r\n    }\r\n    _expandIfNeeded(treeService, nodeData) {\r\n        return nodeData && !nodeData.isExpanded ? treeService.toggle(nodeData) : Promise.resolve();\r\n    }\r\n};\r\n/* @ngInject */ NavigationEditorTreeActions.READY_ONLY_ERROR_I18N = 'navigation.in.readonly.mode';\r\n__decorate([\r\n    InvalidateCache(cmsitemsEvictionTag),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], /* @ngInject */ NavigationEditorTreeActions.prototype, \"getNavigationNodeCMSItemByUid\", null);\r\n/* @ngInject */ NavigationEditorTreeActions = /* @ngInject */ NavigationEditorTreeActions_1 = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [LogService,\r\n        CmsitemsRestService,\r\n        IConfirmationModalService,\r\n        NavigationEditorNodeService,\r\n        NavigationNodeEditorModalService,\r\n        UserTrackingService])\r\n], /* @ngInject */ NavigationEditorTreeActions);\r\nexport { /* @ngInject */ NavigationEditorTreeActions };\r\n//# sourceMappingURL=NavigationEditorTreeActionsService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/navigation/navigationNodeEditor/NavigationNodeEditorModalService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/navigation/types.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/navigation/navigationEditor/NavigationEditorNodeService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/navigation/navigationEditor/types.ts"],"map":"{\"version\":3,\"file\":\"NavigationEditorTreeActionsService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/navigation/navigationEditor/NavigationEditorTreeActionsService.ts\"],\"names\":[],\"mappings\":\";;AAAA;;GAEG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,6BAA6B,EAAE,wBAAwB,EAAE,MAAM,YAAY,CAAC;AACrF,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,EAEH,yBAAyB,EAEzB,eAAe,EAGf,UAAU,EAOV,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,2BAA2B,EAC9B,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,gCAAgC,EAAE,MAAM,0DAA0D,CAAC;AAE5G,OAAO,EAAE,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AAG5E,mBAAmB;AAEnB,kGAAA;IAOI,YACY,UAAsB,EACtB,mBAAwC,EACxC,wBAAmD,EACnD,2BAAwD,EACxD,gCAAkE,EAClE,mBAAwC;QALxC,eAAU,GAAV,UAAU,CAAY;QACtB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,6BAAwB,GAAxB,wBAAwB,CAA2B;QACnD,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,qCAAgC,GAAhC,gCAAgC,CAAkC;QAClE,wBAAmB,GAAnB,mBAAmB,CAAqB;IACjD,CAAC;IAEJ;;OAEG;IACI,KAAK,CAAC,QAAiB,EAAE,WAAmB,EAAE,UAAuB;QACxE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED;;;;;;;OAOG;IACI,UAAU;QACb,OAAO;YACH,UAAU,EAAE,GAAY,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE;YAC5C,WAAW,EAAE,CACT,WAAmE,EACnE,QAA4B,EACrB,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC;YACrD,SAAS,EAAE,CACP,WAAmE,EACnE,QAA4B,EACgB,EAAE,CAC9C,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,QAAQ,CAAC;YACzC,UAAU,EAAE,CACR,WAAmE,EACnE,QAA4B,EACf,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,QAAQ,CAAC;YAC1D,WAAW,EAAE,CACT,WAAmE,EACnE,QAA4B,EAC5B,iBAA2B,EACd,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,EAAE,iBAAiB,CAAC;YAC9E,WAAW,EAAE,CACT,WAAmE,EACnE,KAA+C,EAClC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,KAAK,CAAC;YACxD,MAAM,EAAE,CACJ,WAAmE,EACnE,QAA4B,EACf,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,QAAQ,CAAC;YACtD,QAAQ,EAAE,CACN,WAAmE,EACnE,QAA4B,EACf,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC;YACxD,eAAe,EAAE,CACb,WAAmE,EACnE,QAA4B,EACrB,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,QAAQ,CAAC;YACzD,iBAAiB,EAAE,CACf,WAAmE,EACnE,QAA4B,EACrB,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC;YAC3D,WAAW,EAAE,CACT,WAAmE,EACnE,QAA4B,EACgB,EAAE,CAC9C,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC;YAC3C,iBAAiB,EAAE,CACf,WAAmE,EACnE,QAA4B,EACgB,EAAE,CAC9C,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC;YACjD,kBAAkB,EAAE,CAChB,WAAmE,EACnE,QAA4B,EACgB,EAAE,CAC9C,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,QAAQ,CAAC;YAClD,eAAe,EAAE,CACb,WAAmE,EACnE,QAA4B,EACf,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,QAAQ,CAAC;YAC/D,cAAc,EAAE,CACZ,WAAmE,EACnE,QAA4B,EACtB,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,QAAQ,CAAC;YACvD,qBAAqB,EAAE,CACnB,WAAmE,EACnE,QAA4B,EACtB,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,QAAQ,CAAC;YAC9D,WAAW,EAAE,CACT,WAAmE,EACnE,QAA4B,EACgB,EAAE,CAC9C,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC;YAC3C,aAAa,EAAE,CACX,WAAmE,EACnE,QAA4B,EACgB,EAAE,CAC9C,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,QAAQ,CAAC;YAC7C,gBAAgB,EAAE,CACd,WAAmE,EAChD,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;YAC5D,aAAa,EAAE,CACX,WAAmE,EACnE,OAAe,EACD,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,OAAO,CAAC;YAC7D,eAAe,EAAE,CACb,WAAmE,EACnE,QAA4B,EACuB,EAAE,CACrD,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,QAAQ,CAAC;SAClD,CAAC;IACN,CAAC;IAGa,6BAA6B,CACvC,GAAW;;YAEX,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAwB;gBACrE,QAAQ,EAAE,wBAAwB;gBAClC,QAAQ,EAAE,CAAC;gBACX,WAAW,EAAE,CAAC;gBACd,gBAAgB,EAAE,MAAM,GAAG,GAAG;aACjC,CAAC,CAAC;YAEH,OAAQ,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAkD,CAAC;QAChF,CAAC;KAAA;IAEO,WAAW,CACf,MAAsB,EACtB,mBAA2B,EAC3B,iBAAiC;QAEjC,OAAO,CACH,MAAM,CAAC,QAAQ,KAAK,mBAAmB,IAAI,MAAM,CAAC,SAAS,KAAK,iBAAiB,CAAC,GAAG,CACxF,CAAC;IACN,CAAC;IAEO,wBAAwB,CAAC,OAA8B;QAC3D,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClF,CAAC;IAED,cAAc;IACN,UAAU;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEO,WAAW,CACf,YAAoE,EACpE,QAA4B;QAE5B,OAAO,QAAQ,CAAC,WAAW,CAAC;IAChC,CAAC;IAEa,SAAS,CACnB,WAAmE,EACnE,QAA2C;;YAE3C,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACpB,OAAO,QAAQ,CAAC,KAAK,CAAC;aACzB;YAED,IAAI,QAAQ,CAAC,GAAG,KAAK,6BAA6B,EAAE;gBAChD,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;gBAC3B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACxE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aAC1B;YAED,QAAQ,CAAC,cAAc,EAAE,CAAC;YAC1B,OAAO,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/C,CAAC;KAAA;IAEa,UAAU,CACpB,WAAmE,EACnE,IAAwB;;YAExB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,MAAM,6CAA2B,CAAC,qBAAqB,CAAC;aAC3D;YAED,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CACvC,2BAA2B,CAAC,qBAAqB,EACjD,QAAQ,CACX,CAAC;YAEF,IAAI,WAAW,GAAG,IAAI,CAAC;YACvB,IAAI;gBACA,iBAAiB;gBACjB,sDAAsD;gBACtD,2CAA2C;gBAC3C,MAAM,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC;oBACxC,WAAW,EAAE,qEAAqE;oBAClF,KAAK,EAAE,mEAAmE;iBAClD,CAAC,CAAC;aACjC;YAAC,WAAM;gBACJ,WAAW,GAAG,KAAK,CAAC;aACvB;YAED,IAAI,WAAW,EAAE;gBACb,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjD,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;aAC7C;QACL,CAAC;KAAA;IAEa,WAAW,CACrB,WAAmE,EACnE,IAAwB,EACxB,iBAA2B;;YAE3B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,MAAM,6CAA2B,CAAC,qBAAqB,CAAC;aAC3D;YACD,IAAI;gBACA,MAAM,IAAI,CAAC,2BAA2B,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;gBAE1E,IAAI,CAAC,IAAI,EAAE;oBACP,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;iBACvD;qBAAM,IAAI,iBAAiB,EAAE;oBAC1B,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;iBAC7C;qBAAM;oBACH,MAAM,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;iBACnD;aACJ;YAAC,OAAO,GAAG,EAAE;gBACV,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,kCAAkC,GAAG,EAAE,CAAC,CAAC;aAClE;QACL,CAAC;KAAA;IAEa,WAAW,CACrB,WAAmE,EACnE,KAA+C;;YAE/C,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC;YAClC,MAAM,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;YAEhD,MAAM,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC;YAE/E,sEAAsE;YACtE,oFAAoF;YACpF,IAAI,CAAC,WAAW,EAAE;gBACd,OAAO;aACV;YACD,MAAM,iBAAiB,GAAG,WAAW,CAAC,MAAM,CAAC;YAE7C,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,iBAAiB,CAAC,EAAE;gBAC/D,OAAO;aACV;YAED,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAEnC,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;YAEtC,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;YAEpD,IAAI,KAAK,CAAC,gBAAgB,CAAC,GAAG,KAAK,KAAK,CAAC,qBAAqB,CAAC,GAAG,EAAE;gBAChE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC;aACzD;QACL,CAAC;KAAA;IAEO,MAAM,CACV,WAAmE,EACnE,QAA4B;QAE5B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,MAAM,6CAA2B,CAAC,qBAAqB,CAAC;SAC3D;QAED,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CACvC,2BAA2B,CAAC,qBAAqB,EACjD,SAAS,CACZ,CAAC;QAEF,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEO,QAAQ,CACZ,WAAmE,EACnE,QAA4B;QAE5B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,MAAM,6CAA2B,CAAC,qBAAqB,CAAC;SAC3D;QAED,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CACvC,2BAA2B,CAAC,qBAAqB,EACjD,WAAW,CACd,CAAC;QACF,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEO,eAAe,CACnB,YAAoE,EACpE,QAA4B;QAE5B,OAAO,QAAQ,CAAC,QAAQ,KAAK,CAAC,CAAC;IACnC,CAAC;IAEO,iBAAiB,CACrB,YAAoE,EACpE,QAA4B;QAE5B,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;QACpD,OAAO,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAChE,CAAC;IAEO,WAAW,CACf,WAAmE,EACnE,QAA4B;QAE5B,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAE7B,OAAO,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAEO,iBAAiB,CACrB,WAAmE,EACnE,QAA4B;QAE5B,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAEa,kBAAkB,CAC5B,WAAmE,EACnE,QAA4B;;YAE5B,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CACvC,2BAA2B,CAAC,qBAAqB,EACjD,MAAM,CACT,CAAC;YAEF,IAAI;gBACA,MAAM,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAC5C,IAAI,CAAC,UAAU,EACf,QAAQ,CAAC,MAAM,EACf,QAAQ,CACX,CAAC;gBACF,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAErD,IAAI,UAA8B,CAAC;gBAEnC,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,KAAK,6BAA6B,EAAE;oBACvD,UAAU,GAAG,QAAQ,CAAC;iBACzB;qBAAM;oBACH,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;iBAChC;gBAED,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,2BAA2B,CAAC,iBAAiB,CAC1E,UAAU,CAAC,GAAG,EACd,IAAI,CAAC,UAAU,CAClB,CAAC;gBACF,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;gBAElC,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,KAAK,6BAA6B,EAAE;oBACvD,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;iBAClD;gBAED,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;aACxD;YAAC,WAAM;gBACJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAChB,sEAAsE,CACzE,CAAC;aACL;QACL,CAAC;KAAA;IAEa,eAAe,CACzB,WAAmE,EACnE,QAA4B;;YAE5B,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CACvC,2BAA2B,CAAC,qBAAqB,EACjD,kBAAkB,CACrB,CAAC;YACF,MAAM,OAAO,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;YAClE,IAAI,OAAO,EAAE;gBACT,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACxE,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;aAC3C;QACL,CAAC;KAAA;IAEO,cAAc,CAClB,YAAoE,EACpE,IAAwB;QAExB,OAAO,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;IAC7D,CAAC;IAEO,qBAAqB,CACzB,YAAoE,EACpE,IAAwB;QAExB,OAAO;YACH,OAAO;YACP,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,GAAG,CACvB,CAAC,KAA0B,EAAE,EAAE,CAAC,QAAQ,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,SAAS,CACjF;YACD,QAAQ;SACX,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACf,CAAC;IAEa,WAAW,CACrB,WAAmE,EACnE,QAA4B;;YAE5B,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CACvC,2BAA2B,CAAC,qBAAqB,EACjD,aAAa,CAChB,CAAC;YACF,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACvF,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAClD,IAAI;gBACA,MAAM,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAE1E,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,MAA4B,CAAC,CAAC;aACtE;YAAC,WAAM;gBACJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,+DAA+D,CAAC,CAAC;aACzF;QACL,CAAC;KAAA;IAEa,aAAa,CACvB,WAAmE,EACnE,QAA4B;;YAE5B,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CACvC,2BAA2B,CAAC,qBAAqB,EACjD,eAAe,CAClB,CAAC;YACF,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC/B,IAAI;gBACA,MAAM,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAE1E,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;aAChD;YAAC,WAAM;gBACJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iEAAiE,CAAC,CAAC;aAC3F;QACL,CAAC;KAAA;IAEO,gBAAgB,CACpB,WAAmE;QAEnE,OAAO;YACH;gBACI,GAAG,EAAE,0CAA0C;gBAC/C,QAAQ,EAAE,CAAC,IAAwB,EAAQ,EAAE;oBACzC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAC/C,CAAC;aACJ;YACD;gBACI,GAAG,EAAE,gDAAgD;gBACrD,SAAS,EAAE,0BAA0B;gBACrC,QAAQ,EAAE,CAAC,IAAwB,EAAQ,EAAE;oBACzC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBACvC,CAAC;aACJ;YACD;gBACI,GAAG,EAAE,6CAA6C;gBAClD,SAAS,EAAE,CAAC,IAAwB,EAAW,EAAE,CAC7C,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC;gBAC3C,QAAQ,EAAE,CAAC,IAAwB,EAAQ,EAAE;oBACzC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBACnC,CAAC;aACJ;YACD;gBACI,GAAG,EAAE,+CAA+C;gBACpD,SAAS,EAAE,CAAC,IAAwB,EAAW,EAAE,CAC7C,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC;gBAC7C,QAAQ,EAAE,CAAC,IAAwB,EAAQ,EAAE;oBACzC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBACrC,CAAC;aACJ;YACD;gBACI,GAAG,EAAE,8CAA8C;gBACnD,QAAQ,EAAE,CAAC,IAAwB,EAAQ,EAAE;oBACzC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBACxC,CAAC;aACJ;YACD;gBACI,GAAG,EAAE,gDAAgD;gBACrD,QAAQ,EAAE,CAAC,IAAwB,EAAQ,EAAE;oBACzC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAC1C,CAAC;aACJ;SACJ,CAAC;IACN,CAAC;IAEO,aAAa,CACjB,WAAmE,EACnE,OAAe;QAEf,OAAQ,WAAW,CAAC,WAAW,CAAC,OAAO,CAA+B,CAAC;IAC3E,CAAC;IAEO,eAAe,CACnB,WAAmE,EACnE,QAA4B;QAE5B,OAAO,QAAQ,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC/F,CAAC;CACJ,CAAA;AA7f2B,iEAAqB,GAAG,6BAA6B,CAAC;AA8H9E;IADC,eAAe,CAAC,mBAAmB,CAAC;;;;gGAYpC;AA1IL;IADC,UAAU,EAAE;qCASe,UAAU;QACD,mBAAmB;QACd,yBAAyB;QACtB,2BAA2B;QACtB,gCAAgC;QAC7C,mBAAmB;+CAifvD\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/navigation/navigationEditor/NavigationEditorTreeActionsService.d.ts","writeByteOrderMark":false,"text":"import { IConfirmationModalService, IUriContext, LogService, CmsitemsRestService, UserTrackingService } from 'smarteditcommons';\r\nimport { NavigationNodeEditorModalService } from '../navigationNodeEditor/NavigationNodeEditorModalService';\r\nimport { NavigationEditorNodeService } from './NavigationEditorNodeService';\r\nimport { NavigationTreeActions } from './types';\r\nexport declare class NavigationEditorTreeActions {\r\n    private logService;\r\n    private cmsitemsRestService;\r\n    private confirmationModalService;\r\n    private navigationEditorNodeService;\r\n    private navigationNodeEditorModalService;\r\n    private userTrackingService;\r\n    private static readonly READY_ONLY_ERROR_I18N;\r\n    private readOnly;\r\n    private rootNodeUid;\r\n    private uriContext;\r\n    constructor(logService: LogService, cmsitemsRestService: CmsitemsRestService, confirmationModalService: IConfirmationModalService, navigationEditorNodeService: NavigationEditorNodeService, navigationNodeEditorModalService: NavigationNodeEditorModalService, userTrackingService: UserTrackingService);\r\n    /**\r\n     * Sets fields required for this service to work properly\r\n     */\r\n    setup(readOnly: boolean, rootNodeUid: string, uriContext: IUriContext): void;\r\n    /**\r\n     * Exposes methods of this service to a literal object.\r\n     *\r\n     * This literal object is used by `TreeComponent#setNodeActions` (smarteditcommons)\r\n     * It sets new context and \"inject\" treeService param for all methods using `.bind`\r\n     *\r\n     * It is done this way, so TreeComponent can easily iterate over the methods, if we would passed instance of this class it wouldn't be easy to iterate over these methods\r\n     */\r\n    getActions(): NavigationTreeActions;\r\n    private getNavigationNodeCMSItemByUid;\r\n    private hasNotMoved;\r\n    private getEntriesCommaSeparated;\r\n    /** Actions */\r\n    private isReadOnly;\r\n    private hasChildren;\r\n    private fetchData;\r\n    private removeItem;\r\n    private performMove;\r\n    private dragAndDrop;\r\n    private moveUp;\r\n    private moveDown;\r\n    private isMoveUpAllowed;\r\n    private isMoveDownAllowed;\r\n    private refreshNode;\r\n    private refreshParentNode;\r\n    private editNavigationNode;\r\n    private addTopLevelNode;\r\n    private getEntryString;\r\n    private getEntryTooltipString;\r\n    private addNewChild;\r\n    private addNewSibling;\r\n    private getDropdownItems;\r\n    private _findNodeById;\r\n    private _expandIfNeeded;\r\n}\r\n"}}
