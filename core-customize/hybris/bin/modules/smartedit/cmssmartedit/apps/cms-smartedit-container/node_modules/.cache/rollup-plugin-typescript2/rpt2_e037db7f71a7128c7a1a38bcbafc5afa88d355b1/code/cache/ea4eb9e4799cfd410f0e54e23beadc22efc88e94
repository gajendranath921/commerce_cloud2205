{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { Component, Input, EventEmitter, Output } from '@angular/core';\r\nimport { DisplayConditionsFacade } from 'cmssmarteditcontainer/facades';\r\nimport { SeDowngradeComponent, IPageService } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"DisplayConditionsPrimaryPageComponent\", {\r\n    selector: 'se-display-conditions-primary-page',\r\n    template: `<div class=\"form-group form-group__inline\"><label class=\"se-control-label control-label__margin\" translate=\"se.cms.display.conditions.primary.page.label\"></label><div *ngIf=\"readOnly\" class=\"dc-associated-primary-page form-readonly-text form-readonly-text__tight\">{{ associatedPrimaryPage?.name }}</div><div *ngIf=\"!readOnly\"><se-select id=\"display-conditions-primary-association-selector\" [model]=\"associatedPrimaryPageUid\" (modelChange)=\"associatedPrimaryPageUidOnChange($event)\" [fetchStrategy]=\"fetchStrategy\"></se-select><span *ngIf=\"associatedPrimaryPage?.name\" class=\"se-form-help-message\"><span>{{ 'se.cms.page.label.label' | translate }}: {{ associatedPrimaryPage.label }}</span></span></div></div>`\r\n});\r\nlet /* @ngInject */ DisplayConditionsPrimaryPageComponent = class /* @ngInject */ DisplayConditionsPrimaryPageComponent {\r\n    constructor(pageService, displayConditionsFacade) {\r\n        this.pageService = pageService;\r\n        this.displayConditionsFacade = displayConditionsFacade;\r\n        this.associatedPrimaryPageUid = null;\r\n        this.onPrimaryPageSelect = new EventEmitter();\r\n        this.fetchStrategy = {\r\n            fetchEntity: () => Promise.resolve({\r\n                id: this.associatedPrimaryPage.uid,\r\n                label: this.associatedPrimaryPage.name\r\n            }),\r\n            fetchPage: (search, pageSize, currentPage) => this.displayConditionsFacade.getPrimaryPagesForPageType(this.pageType, null, {\r\n                search,\r\n                pageSize,\r\n                currentPage\r\n            })\r\n        };\r\n    }\r\n    ngOnChanges(changes) {\r\n        const associatedPrimaryPageChange = changes.associatedPrimaryPage;\r\n        if (associatedPrimaryPageChange && !!associatedPrimaryPageChange.currentValue) {\r\n            this.setAssociatedPrimaryPageSelected(associatedPrimaryPageChange.currentValue);\r\n        }\r\n    }\r\n    associatedPrimaryPageUidOnChange(uid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const page = yield this.pageService.getPageById(uid);\r\n            this.setAssociatedPrimaryPageSelected(page);\r\n            this.onPrimaryPageSelect.emit(this.associatedPrimaryPage);\r\n        });\r\n    }\r\n    setAssociatedPrimaryPageSelected(page) {\r\n        this.associatedPrimaryPage = page;\r\n        this.associatedPrimaryPageUid = page.uid;\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], /* @ngInject */ DisplayConditionsPrimaryPageComponent.prototype, \"readOnly\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ DisplayConditionsPrimaryPageComponent.prototype, \"associatedPrimaryPage\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ DisplayConditionsPrimaryPageComponent.prototype, \"pageType\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ DisplayConditionsPrimaryPageComponent.prototype, \"onPrimaryPageSelect\", void 0);\r\n/* @ngInject */ DisplayConditionsPrimaryPageComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-display-conditions-primary-page',\r\n        template: `<div class=\"form-group form-group__inline\"><label class=\"se-control-label control-label__margin\" translate=\"se.cms.display.conditions.primary.page.label\"></label><div *ngIf=\"readOnly\" class=\"dc-associated-primary-page form-readonly-text form-readonly-text__tight\">{{ associatedPrimaryPage?.name }}</div><div *ngIf=\"!readOnly\"><se-select id=\"display-conditions-primary-association-selector\" [model]=\"associatedPrimaryPageUid\" (modelChange)=\"associatedPrimaryPageUidOnChange($event)\" [fetchStrategy]=\"fetchStrategy\"></se-select><span *ngIf=\"associatedPrimaryPage?.name\" class=\"se-form-help-message\"><span>{{ 'se.cms.page.label.label' | translate }}: {{ associatedPrimaryPage.label }}</span></span></div></div>`\r\n    }),\r\n    __metadata(\"design:paramtypes\", [IPageService,\r\n        DisplayConditionsFacade])\r\n], /* @ngInject */ DisplayConditionsPrimaryPageComponent);\r\nexport { /* @ngInject */ DisplayConditionsPrimaryPageComponent };\r\n//# sourceMappingURL=DisplayConditionsPrimaryPageComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/facades/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"DisplayConditionsPrimaryPageComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/pages/displayConditions/displayConditionsPrimaryPage/DisplayConditionsPrimaryPageComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EAAE,SAAS,EAA4B,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACjG,OAAO,EAAE,uBAAuB,EAAE,MAAM,+BAA+B,CAAC;AACxE,OAAO,EACH,oBAAoB,EAKpB,YAAY,EAEf,MAAM,kBAAkB,CAAC;+FAGf;IACP,QAAQ,EAAE,oCAAoC;IAC9C,QAAQ,EAAE,qsBAAqsB;CACltB;AACD,4DAAA;IASI,YACY,WAAyB,EACzB,uBAAgD;QADhD,gBAAW,GAAX,WAAW,CAAc;QACzB,4BAAuB,GAAvB,uBAAuB,CAAyB;QAExD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,mBAAmB,GAAG,IAAI,YAAY,EAAE,CAAC;QAE9C,IAAI,CAAC,aAAa,GAAG;YACjB,WAAW,EAAE,GAAyB,EAAE,CACpC,OAAO,CAAC,OAAO,CAAC;gBACZ,EAAE,EAAE,IAAI,CAAC,qBAAqB,CAAC,GAAG;gBAClC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI;aACzC,CAAC;YACN,SAAS,EAAE,CACP,MAAc,EACd,QAAgB,EAChB,WAAmB,EACM,EAAE,CAC3B,IAAI,CAAC,uBAAuB,CAAC,0BAA0B,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE;gBACzE,MAAM;gBACN,QAAQ;gBACR,WAAW;aACd,CAAC;SACT,CAAC;IACN,CAAC;IAED,WAAW,CAAC,OAAsB;QAC9B,MAAM,2BAA2B,GAAG,OAAO,CAAC,qBAAqB,CAAC;QAClE,IAAI,2BAA2B,IAAI,CAAC,CAAC,2BAA2B,CAAC,YAAY,EAAE;YAC3E,IAAI,CAAC,gCAAgC,CAAC,2BAA2B,CAAC,YAAY,CAAC,CAAC;SACnF;IACL,CAAC;IAEY,gCAAgC,CAAC,GAAW;;YACrD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACrD,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAC9D,CAAC;KAAA;IAEO,gCAAgC,CAAC,IAAc;QACnD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,GAAG,CAAC;IAC7C,CAAC;CACJ,CAAA;AAnDY;IAAR,KAAK,EAAE;;uFAAmB;AAClB;IAAR,KAAK,EAAE;;oGAAiC;AAChC;IAAR,KAAK,EAAE;;uFAAkB;AAChB;IAAT,MAAM,EAAE;8BAAsB,YAAY;kGAAW;AAJ1D;IALC,oBAAoB,EAAE;IACtB,SAAS,CAAC;QACP,QAAQ,EAAE,oCAAoC;QAC9C,QAAQ,EAAE,qsBAAqsB;KACltB,CAAC;qCAW2B,YAAY;QACA,uBAAuB;yDAyC/D\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/pages/displayConditions/displayConditionsPrimaryPage/DisplayConditionsPrimaryPageComponent.d.ts","writeByteOrderMark":false,"text":"import { OnChanges, SimpleChanges, EventEmitter } from '@angular/core';\r\nimport { DisplayConditionsFacade } from 'cmssmarteditcontainer/facades';\r\nimport { FetchStrategy, IPageService, ICMSPage } from 'smarteditcommons';\r\nexport declare class DisplayConditionsPrimaryPageComponent implements OnChanges {\r\n    private pageService;\r\n    private displayConditionsFacade;\r\n    readOnly: boolean;\r\n    associatedPrimaryPage: ICMSPage;\r\n    pageType: string;\r\n    onPrimaryPageSelect: EventEmitter<ICMSPage>;\r\n    associatedPrimaryPageUid: string;\r\n    fetchStrategy: FetchStrategy;\r\n    constructor(pageService: IPageService, displayConditionsFacade: DisplayConditionsFacade);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    associatedPrimaryPageUidOnChange(uid: string): Promise<void>;\r\n    private setAssociatedPrimaryPageSelected;\r\n}\r\n"}}
