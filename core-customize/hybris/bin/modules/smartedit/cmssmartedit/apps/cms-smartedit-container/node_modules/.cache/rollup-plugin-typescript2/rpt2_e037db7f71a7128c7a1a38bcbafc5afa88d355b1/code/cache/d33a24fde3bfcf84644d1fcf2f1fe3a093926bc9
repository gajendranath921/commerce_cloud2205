{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { CONTEXT_CATALOG, CONTEXT_CATALOG_VERSION, CONTEXT_SITE_ID, RestServiceFactory, SeDowngradeService } from 'smarteditcommons';\r\n/**\r\n * @ngdoc service\r\n * @name CatalogVersionRestService\r\n * @description\r\n *\r\n * Provides REST services for the CMS catalog version endpoint\r\n */\r\nlet /* @ngInject */ CatalogVersionRestService = class /* @ngInject */ CatalogVersionRestService {\r\n    constructor(restServiceFactory) {\r\n        this.restServiceFactory = restServiceFactory;\r\n        this.URI = `/cmswebservices/v1/sites/:${CONTEXT_SITE_ID}/catalogs/:${CONTEXT_CATALOG}/versions/:${CONTEXT_CATALOG_VERSION}/targets?mode=cloneableTo`;\r\n    }\r\n    /**\r\n     * @ngdoc method\r\n     * @name CatalogVersionRestService#getCloneableTargets\r\n     * @methodOf CatalogVersionRestService\r\n     *\r\n     * @description\r\n     * Fetches all cloneable target catalog versions for a given site+catalog+catalogversion\r\n     *\r\n     * @param {Object} uriContext A {@link resourceLocationsModule.object:UriContext UriContext}\r\n     *\r\n     * @returns {Object} A JSON object with a single field 'versions' containing a list of catalog versions, or an empty list.\r\n     */\r\n    getCloneableTargets(uriContext) {\r\n        const rest = this.restServiceFactory.get(this.URI);\r\n        return rest.get(uriContext);\r\n    }\r\n};\r\n/* @ngInject */ CatalogVersionRestService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [RestServiceFactory])\r\n], /* @ngInject */ CatalogVersionRestService);\r\nexport { /* @ngInject */ CatalogVersionRestService };\r\n//# sourceMappingURL=CatalogVersionRestService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"CatalogVersionRestService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/dao/CatalogVersionRestService.ts\"],\"names\":[],\"mappings\":\";AAIA,OAAO,EACH,eAAe,EACf,uBAAuB,EACvB,eAAe,EAEf,kBAAkB,EAClB,kBAAkB,EACrB,MAAM,kBAAkB,CAAC;AAE1B;;;;;;GAMG;AAEH,gDAAA;IAGI,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAFzC,QAAG,GAAW,6BAA6B,eAAe,cAAc,eAAe,cAAc,uBAAuB,2BAA2B,CAAC;IAE5G,CAAC;IAE9D;;;;;;;;;;;OAWG;IACI,mBAAmB,CAAC,UAAuB;QAC9C,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAA2B,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7E,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;CACJ,CAAA;AArBD;IADC,kBAAkB,EAAE;qCAIuB,kBAAkB;6CAkB7D\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/dao/CatalogVersionRestService.d.ts","writeByteOrderMark":false,"text":"import { ICloneableCatalogVersion } from 'cmscommons';\r\nimport { IUriContext, RestServiceFactory } from 'smarteditcommons';\r\n/**\r\n * @ngdoc service\r\n * @name CatalogVersionRestService\r\n * @description\r\n *\r\n * Provides REST services for the CMS catalog version endpoint\r\n */\r\nexport declare class CatalogVersionRestService {\r\n    private restServiceFactory;\r\n    private readonly URI;\r\n    constructor(restServiceFactory: RestServiceFactory);\r\n    /**\r\n     * @ngdoc method\r\n     * @name CatalogVersionRestService#getCloneableTargets\r\n     * @methodOf CatalogVersionRestService\r\n     *\r\n     * @description\r\n     * Fetches all cloneable target catalog versions for a given site+catalog+catalogversion\r\n     *\r\n     * @param {Object} uriContext A {@link resourceLocationsModule.object:UriContext UriContext}\r\n     *\r\n     * @returns {Object} A JSON object with a single field 'versions' containing a list of catalog versions, or an empty list.\r\n     */\r\n    getCloneableTargets(uriContext: IUriContext): Promise<ICloneableCatalogVersion>;\r\n}\r\n"}}
