{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { isEqual } from 'lodash';\r\nimport { take } from 'rxjs/operators';\r\nimport { IUrlService, L10nPipe, LogService, SeDowngradeComponent, IPageService } from 'smarteditcommons';\r\nimport { DisplayConditionsFacade } from '../../../../../facades';\r\nimport { HomepageService, PageDisplayConditionsService } from '../../../../../services';\r\nvar CatalogHomepageDetailsStatus;\r\n(function (CatalogHomepageDetailsStatus) {\r\n    CatalogHomepageDetailsStatus[\"PENDING\"] = \"PENDING\";\r\n    CatalogHomepageDetailsStatus[\"NO_HOMEPAGE\"] = \"NO_HOMEPAGE\";\r\n    CatalogHomepageDetailsStatus[\"LOCAL\"] = \"LOCAL\";\r\n    CatalogHomepageDetailsStatus[\"OLD\"] = \"OLD\";\r\n    CatalogHomepageDetailsStatus[\"PARENT\"] = \"PARENT\";\r\n})(CatalogHomepageDetailsStatus || (CatalogHomepageDetailsStatus = {}));\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"NewPageDisplayConditionComponent\", {\r\n    selector: 'se-new-page-display-condition',\r\n    template: `<div *ngIf=\"isReady\"><div class=\"form-group\"><label for=\"page-condition-selector-id\" class=\"se-control-label\" translate=\"se.cms.page.condition.selection.label\"></label><se-select id=\"page-condition-selector-id\" [model]=\"conditionSelected.label\" (modelChange)=\"onConditionChange($event)\" [fetchStrategy]=\"conditionSelectorFetchStrategy\" [onChange]=\"onDataChange\" [searchEnabled]=\"false\"></se-select><span class=\"se-form-help-message\"><span [translate]=\"conditionSelected.description\"></span></span></div><div *ngIf=\"showPrimarySelector()\" class=\"form-group\"><label for=\"page-condition-primary-selector-id\" class=\"se-control-label\" translate=\"se.cms.page.condition.primary.association.label\"></label><se-select id=\"page-condition-primary-selector-id\" [model]=\"primarySelectedModel\" (modelChange)=\"primarySelectedModelOnChange($event)\" [fetchStrategy]=\"primaryPageChoicesFetchStrategy\" [onChange]=\"onDataChange\"></se-select><span *ngIf=\"primarySelected?.label\" class=\"se-form-help-message\"><span>{{ 'se.cms.page.label.label' | translate }}: {{ primarySelected.label }}</span></span></div><div *ngIf=\"showHomePageWidget()\"><div class=\"fd-form__item\"><input type=\"checkbox\" id=\"set-homepage-checkbox\" class=\"se-component-item--details se-component-homepage__checkbox-input fd-form__control\" name=\"clone-on-drop\" (ngModelChange)=\"onHomePageChange($event)\" [ngModel]=\"homepage\"/> <label class=\"se-control-label se-component-homepage--label fd-form__label\" for=\"set-homepage-checkbox\" translate=\"se.cms.display.conditions.homepage.set\"></label></div><label class=\"se-control-label se-component-homepage--label\" for=\"set-homepage-checkbox\" *ngIf=\"showReplaceLabel\">{{ \"se.cms.display.conditions.homepage.replace\" | translate: { currentHomepage: currentHomePageName } }}</label></div></div>`,\r\n    styles: [`.se-component-homepage__checkbox-input{margin:0 4px 0 0;outline:0;box-shadow:none}`],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [L10nPipe]\r\n});\r\nlet /* @ngInject */ NewPageDisplayConditionComponent = class /* @ngInject */ NewPageDisplayConditionComponent {\r\n    constructor(urlService, homepageService, displayConditionsFacade, translateService, pageService, logService, pageDisplayConditions, l10n, cdr) {\r\n        this.urlService = urlService;\r\n        this.homepageService = homepageService;\r\n        this.displayConditionsFacade = displayConditionsFacade;\r\n        this.translateService = translateService;\r\n        this.pageService = pageService;\r\n        this.logService = logService;\r\n        this.pageDisplayConditions = pageDisplayConditions;\r\n        this.l10n = l10n;\r\n        this.cdr = cdr;\r\n        this.conditions = null;\r\n        this.homepage = false;\r\n        this.homepageDetails = {\r\n            status: CatalogHomepageDetailsStatus.PENDING\r\n        };\r\n        this.isReady = false;\r\n        this.primarySelected = null;\r\n        this.primarySelectedModel = null;\r\n        this.showReplaceLabel = false;\r\n    }\r\n    ngOnInit() {\r\n        this.onDataChange = () => this.dataChanged();\r\n        this.conditionSelected = {};\r\n        this.conditionSelectorFetchStrategy = {\r\n            fetchAll: () => Promise.resolve((this.conditions || []).map((condition) => ({\r\n                id: condition.label,\r\n                label: condition.label\r\n            })))\r\n        };\r\n        this.initialConditionSelectedKey =\r\n            this.initialConditionSelectedKey || 'page.displaycondition.primary';\r\n        this.primaryPageChoicesFetchStrategy = {\r\n            fetchEntity: () => Promise.resolve({\r\n                id: this.primarySelected.uid,\r\n                label: this.primarySelected.name || this.primarySelected.label\r\n            }),\r\n            fetchPage: (search, pageSize, currentPage) => this.displayConditionsFacade.getPrimaryPagesForPageType(this.pageTypeCode, this.uriContext, {\r\n                search,\r\n                pageSize,\r\n                currentPage\r\n            })\r\n        };\r\n    }\r\n    ngOnChanges(changes) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const hasPageTypeCodeChanged = !!changes.pageTypeCode &&\r\n                changes.pageTypeCode.currentValue != changes.pageTypeCode.previousValue;\r\n            const hasTargetCatalogVersionChanged = !!changes.targetCatalogVersion &&\r\n                !isEqual(changes.targetCatalogVersion.currentValue, changes.targetCatalogVersion.previousValue);\r\n            if (hasPageTypeCodeChanged || hasTargetCatalogVersionChanged) {\r\n                if (!this.targetCatalogVersion ||\r\n                    this.isUriContextEqualToCatalogVersion(this.uriContext, this.targetCatalogVersion)) {\r\n                    yield this.getSelectedPrimaryPageAndDisplayCondition();\r\n                }\r\n                else {\r\n                    this.getOnlyPrimaryDisplayCondition();\r\n                }\r\n                const context = this.targetCatalogVersion === undefined\r\n                    ? this.uriContext\r\n                    : this.urlService.buildUriContext(this.targetCatalogVersion.siteId, this.targetCatalogVersion.catalogId, this.targetCatalogVersion.version);\r\n                const homepageDetails = yield this.homepageService.getHomepageDetailsForContext(context);\r\n                this.homepageDetails = homepageDetails;\r\n                yield this.updateHomepageUiProperties();\r\n            }\r\n            else {\r\n                yield this.updateHomepageUiProperties();\r\n            }\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    showPrimarySelector() {\r\n        return !(this.conditionSelected && this.conditionSelected.isPrimary);\r\n    }\r\n    onConditionChange(selectedConditionLabel) {\r\n        this.conditionSelected = this.conditions.find((condition) => condition.label === selectedConditionLabel);\r\n    }\r\n    onHomePageChange(isHomepage) {\r\n        this.homepage = isHomepage;\r\n        this.dataChanged();\r\n    }\r\n    showHomePageWidget() {\r\n        return this.isPrimaryContentPage();\r\n    }\r\n    primarySelectedModelOnChange(uid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const page = yield this.pageService.getPageById(uid);\r\n            this.setPrimarySelected(page);\r\n            this.dataChanged();\r\n        });\r\n    }\r\n    dataChanged() {\r\n        if (!this.isPrimaryContentPage()) {\r\n            this.homepage = undefined;\r\n        }\r\n        this.updateHomepageUiProperties();\r\n        if (this.resultFn) {\r\n            this.resultFn(this.getResults());\r\n        }\r\n    }\r\n    isPrimaryContentPage() {\r\n        var _a;\r\n        return ((_a = this.conditionSelected) === null || _a === void 0 ? void 0 : _a.isPrimary) && this.pageTypeCode === 'ContentPage';\r\n    }\r\n    updateHomepageUiProperties() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.homepage) {\r\n                switch (this.homepageDetails.status) {\r\n                    case CatalogHomepageDetailsStatus.NO_HOMEPAGE:\r\n                        this.homepageService.sendEventHideReplaceParentHomePageInfo();\r\n                        this.showReplaceLabel = false;\r\n                        break;\r\n                    case CatalogHomepageDetailsStatus.PARENT:\r\n                        const [parentCatalogName, targetCatalogName] = yield this.getTranslatedNames(this.homepageDetails.parentCatalogName, this.homepageDetails.targetCatalogName);\r\n                        this.homepageService.sendEventShowReplaceParentHomePageInfo({\r\n                            description: this.translateService.instant('se.cms.display.conditions.homepage.replace.parent.info.header', {\r\n                                parentCatalogName,\r\n                                parentCatalogVersion: this.homepageDetails.parentCatalogVersion,\r\n                                targetCatalogName,\r\n                                targetCatalogVersion: this.homepageDetails.targetCatalogVersion\r\n                            })\r\n                        });\r\n                        this.showReplaceLabel = false;\r\n                        break;\r\n                    case CatalogHomepageDetailsStatus.LOCAL:\r\n                        this.homepageService.sendEventHideReplaceParentHomePageInfo();\r\n                        this.currentHomePageName = this.homepageDetails.currentHomepageName;\r\n                        this.showReplaceLabel = true;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                this.homepageService.sendEventHideReplaceParentHomePageInfo();\r\n                this.showReplaceLabel = false;\r\n            }\r\n        });\r\n    }\r\n    getTranslatedNames(name, secondName) {\r\n        return Promise.all([\r\n            this.l10n.transform(name).pipe(take(1)).toPromise(),\r\n            this.l10n.transform(secondName).pipe(take(1)).toPromise()\r\n        ]);\r\n    }\r\n    getResults() {\r\n        const result = {\r\n            homepage: this.homepage,\r\n            isPrimary: this.conditionSelected && this.conditionSelected.isPrimary,\r\n            primaryPage: null\r\n        };\r\n        if (this.conditionSelected && !this.conditionSelected.isPrimary) {\r\n            result.primaryPage = this.primarySelected;\r\n        }\r\n        return result;\r\n    }\r\n    getSelectedPrimaryPageAndDisplayCondition() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.pageTypeCode) {\r\n                try {\r\n                    if (this.pageUuid) {\r\n                        const page = yield this.pageService.getPageByUuid(this.pageUuid);\r\n                        const primaryPage = yield (!page.defaultPage\r\n                            ? this.pageService.getPrimaryPage(page.uid)\r\n                            : page);\r\n                        this.setPrimarySelected(primaryPage);\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    this.logService.error(error);\r\n                }\r\n                finally {\r\n                    this.getAllPrimaryDisplayCondition();\r\n                }\r\n            }\r\n            else {\r\n                this.getAllPrimaryDisplayCondition();\r\n            }\r\n        });\r\n    }\r\n    getAllPrimaryDisplayCondition() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const response = yield this.pageDisplayConditions.getNewPageConditions(this.pageTypeCode, this.uriContext);\r\n                if (!response.length) {\r\n                    return;\r\n                }\r\n                this.conditions = response;\r\n                this.conditionSelected = this.conditions[0];\r\n                if (this.conditions.length > 1) {\r\n                    this.conditionSelected = this.conditions.find((condition) => condition.label === this.initialConditionSelectedKey);\r\n                }\r\n                this.isReady = true;\r\n            }\r\n            catch (error) {\r\n                this.logService.error(error);\r\n            }\r\n            finally {\r\n                if (this.targetCatalogVersion &&\r\n                    !this.isUriContextEqualToCatalogVersion(this.uriContext, this.targetCatalogVersion)) {\r\n                    this.getOnlyPrimaryDisplayCondition();\r\n                }\r\n                else {\r\n                    this.dataChanged();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getOnlyPrimaryDisplayCondition() {\r\n        this.conditions = [\r\n            {\r\n                description: 'page.displaycondition.primary.description',\r\n                isPrimary: true,\r\n                label: 'page.displaycondition.primary'\r\n            }\r\n        ];\r\n        this.conditionSelected = this.conditions[0];\r\n        this.isReady = true;\r\n        this.dataChanged();\r\n    }\r\n    isUriContextEqualToCatalogVersion(uriContext, catalogVersion) {\r\n        return (uriContext &&\r\n            catalogVersion &&\r\n            catalogVersion.siteId === uriContext.CURRENT_CONTEXT_SITE_ID &&\r\n            catalogVersion.catalogId === uriContext.CURRENT_CONTEXT_CATALOG &&\r\n            catalogVersion.version === uriContext.CURRENT_CONTEXT_CATALOG_VERSION);\r\n    }\r\n    setPrimarySelected(page) {\r\n        this.primarySelected = page;\r\n        this.primarySelectedModel = page.uid;\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"pageTypeCode\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"uriContext\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"resultFn\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"pageUuid\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"initialConditionSelectedKey\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"targetCatalogVersion\", void 0);\r\n/* @ngInject */ NewPageDisplayConditionComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-new-page-display-condition',\r\n        template: `<div *ngIf=\"isReady\"><div class=\"form-group\"><label for=\"page-condition-selector-id\" class=\"se-control-label\" translate=\"se.cms.page.condition.selection.label\"></label><se-select id=\"page-condition-selector-id\" [model]=\"conditionSelected.label\" (modelChange)=\"onConditionChange($event)\" [fetchStrategy]=\"conditionSelectorFetchStrategy\" [onChange]=\"onDataChange\" [searchEnabled]=\"false\"></se-select><span class=\"se-form-help-message\"><span [translate]=\"conditionSelected.description\"></span></span></div><div *ngIf=\"showPrimarySelector()\" class=\"form-group\"><label for=\"page-condition-primary-selector-id\" class=\"se-control-label\" translate=\"se.cms.page.condition.primary.association.label\"></label><se-select id=\"page-condition-primary-selector-id\" [model]=\"primarySelectedModel\" (modelChange)=\"primarySelectedModelOnChange($event)\" [fetchStrategy]=\"primaryPageChoicesFetchStrategy\" [onChange]=\"onDataChange\"></se-select><span *ngIf=\"primarySelected?.label\" class=\"se-form-help-message\"><span>{{ 'se.cms.page.label.label' | translate }}: {{ primarySelected.label }}</span></span></div><div *ngIf=\"showHomePageWidget()\"><div class=\"fd-form__item\"><input type=\"checkbox\" id=\"set-homepage-checkbox\" class=\"se-component-item--details se-component-homepage__checkbox-input fd-form__control\" name=\"clone-on-drop\" (ngModelChange)=\"onHomePageChange($event)\" [ngModel]=\"homepage\"/> <label class=\"se-control-label se-component-homepage--label fd-form__label\" for=\"set-homepage-checkbox\" translate=\"se.cms.display.conditions.homepage.set\"></label></div><label class=\"se-control-label se-component-homepage--label\" for=\"set-homepage-checkbox\" *ngIf=\"showReplaceLabel\">{{ \"se.cms.display.conditions.homepage.replace\" | translate: { currentHomepage: currentHomePageName } }}</label></div></div>`,\r\n        styles: [`.se-component-homepage__checkbox-input{margin:0 4px 0 0;outline:0;box-shadow:none}`],\r\n        changeDetection: ChangeDetectionStrategy.OnPush,\r\n        providers: [L10nPipe]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [IUrlService,\r\n        HomepageService,\r\n        DisplayConditionsFacade,\r\n        TranslateService,\r\n        IPageService,\r\n        LogService,\r\n        PageDisplayConditionsService,\r\n        L10nPipe,\r\n        ChangeDetectorRef])\r\n], /* @ngInject */ NewPageDisplayConditionComponent);\r\nexport { /* @ngInject */ NewPageDisplayConditionComponent };\r\n//# sourceMappingURL=NewPageDisplayConditionComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate+core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/operators/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/facades/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/index.ts"],"map":"{\"version\":3,\"file\":\"NewPageDisplayConditionComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/pages/addPageWizard/components/newPageDisplayCondition/NewPageDisplayConditionComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/pages/addPageWizard/components/newPageDisplayCondition/NewPageDisplayConditionComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FetchStrategy, ICatalogVersion, IUriContext, IUrlService, L10nPipe, LogService, IPageService, ICMSPage } from 'smarteditcommons';\r\nimport { DisplayConditionsFacade } from '../../../../../facades';\r\nimport { HomepageService, IDisplayCondition, PageDisplayConditionsService } from '../../../../../services';\r\ninterface DisplayConditionDTO {\r\n    homepage: boolean;\r\n    isPrimary: boolean;\r\n    primaryPage?: ICMSPage;\r\n}\r\nexport declare class NewPageDisplayConditionComponent implements OnInit, OnChanges {\r\n    private urlService;\r\n    private homepageService;\r\n    private displayConditionsFacade;\r\n    private translateService;\r\n    private pageService;\r\n    private logService;\r\n    private pageDisplayConditions;\r\n    private l10n;\r\n    private cdr;\r\n    pageTypeCode: string;\r\n    uriContext: IUriContext;\r\n    resultFn?: (data: DisplayConditionDTO) => void;\r\n    pageUuid?: string;\r\n    initialConditionSelectedKey?: string;\r\n    targetCatalogVersion?: ICatalogVersion;\r\n    conditions: IDisplayCondition[];\r\n    conditionSelected: IDisplayCondition;\r\n    conditionSelectorFetchStrategy: FetchStrategy;\r\n    currentHomePageName: string;\r\n    isReady: boolean;\r\n    homepage: boolean;\r\n    showReplaceLabel: boolean;\r\n    primarySelected: ICMSPage;\r\n    primarySelectedModel: string;\r\n    primaryPageChoicesFetchStrategy: FetchStrategy;\r\n    onDataChange: () => void;\r\n    private homepageDetails;\r\n    constructor(urlService: IUrlService, homepageService: HomepageService, displayConditionsFacade: DisplayConditionsFacade, translateService: TranslateService, pageService: IPageService, logService: LogService, pageDisplayConditions: PageDisplayConditionsService, l10n: L10nPipe, cdr: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): Promise<void>;\r\n    showPrimarySelector(): boolean;\r\n    onConditionChange(selectedConditionLabel: string): void;\r\n    onHomePageChange(isHomepage: boolean): void;\r\n    showHomePageWidget(): boolean;\r\n    primarySelectedModelOnChange(uid: string): Promise<void>;\r\n    private dataChanged;\r\n    private isPrimaryContentPage;\r\n    private updateHomepageUiProperties;\r\n    private getTranslatedNames;\r\n    private getResults;\r\n    private getSelectedPrimaryPageAndDisplayCondition;\r\n    private getAllPrimaryDisplayCondition;\r\n    private getOnlyPrimaryDisplayCondition;\r\n    private isUriContextEqualToCatalogVersion;\r\n    private setPrimarySelected;\r\n}\r\nexport {};\r\n"}}
