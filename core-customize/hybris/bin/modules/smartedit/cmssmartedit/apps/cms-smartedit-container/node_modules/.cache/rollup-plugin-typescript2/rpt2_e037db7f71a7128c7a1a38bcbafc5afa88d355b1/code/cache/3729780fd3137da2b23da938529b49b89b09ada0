{"code":"import { __awaiter, __decorate, __metadata, __param } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\r\nimport { MAX_UPLOAD_FILE_SIZE } from 'cmssmarteditcontainer/constants';\r\nimport { GENERIC_EDITOR_WIDGET_DATA, LogService, GenericEditorMediaType, ISharedDataService, FILE_VALIDATION_CONFIG, IFileValidation } from 'smarteditcommons';\r\nimport { MediaService, MediaUtilService } from '../../services';\r\nconst VIDEO_MIME_PREFIX = 'video';\r\nconst MP4_MIME_PREFIX = 'mp4';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"MediaComponent\", {\r\n    selector: 'se-media',\r\n    template: `<div class=\"se-media\"><se-media-selector *ngIf=\"!image\" [id]=\"mediaSelectorId\" [isDisabled]=\"isFieldDisabled\" [mediaId]=\"mediaIdByLang[lang]\" [mimeType]=\"field.allowMediaType\" (mediaIdChange)=\"onMediaIdChange($event)\"></se-media-selector><se-media-file-selector *ngIf=\"canShowFileSelector()\" [labelI18nKey]=\"'se.upload.image.to.library'\" [acceptedFileTypes]=\"acceptedFileTypes\" [selectionMode]=\"'upload'\" [disabled]=\"isFieldDisabled\" (onFileSelect)=\"onFileSelect($event)\"></se-media-file-selector><se-media-upload-form *ngIf=\"image\" class=\"se-media-upload-form-wrapper\" [image]=\"image\" [allowMediaType]=\"field.allowMediaType\" [maxUploadFileSize]=\"maxUploadFileSize\" (onCancel)=\"resetImage()\" (onSelect)=\"onFileSelect($event)\" (onUploadSuccess)=\"onMediaUploaded($event)\"></se-media-upload-form><se-message *ngIf=\"previewMessage\" [type]=\"'warning'\"><ng-container se-message-description>{{ 'se.upload.video.cant.preview' | translate }}</ng-container></se-message><se-media-errors *ngIf=\"fileErrors.length > 0\" [errors]=\"fileErrors\" [maxUploadFileSize]=\"maxUploadFileSize\"></se-media-errors></div>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet MediaComponent = class MediaComponent {\r\n    constructor(cdr, fileValidationService, logService, mediaUtilService, mediaService, sharedDataService, data) {\r\n        this.cdr = cdr;\r\n        this.fileValidationService = fileValidationService;\r\n        this.logService = logService;\r\n        this.mediaUtilService = mediaUtilService;\r\n        this.mediaService = mediaService;\r\n        this.sharedDataService = sharedDataService;\r\n        this.previewMessage = false;\r\n        ({ field: this.field, model: this.mediaIdByLang, qualifier: this.lang } = data);\r\n        this.acceptedFileTypes = this.mediaUtilService.getAcceptedFileTypes(this.field.allowMediaType);\r\n        this.fileErrors = [];\r\n        this.image = null;\r\n        this.isFieldDisabled = data.isFieldDisabled();\r\n        this.mediaSelectorId = this.field.qualifier;\r\n        this.field.allowMediaType = this.field.allowMediaType || GenericEditorMediaType.DEFAULT;\r\n    }\r\n    ngOnInit() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.mediaIdByLang[this.lang]) {\r\n                yield this.checkMediaPreview(this.mediaIdByLang[this.lang]);\r\n            }\r\n            const maxUploadFileSizeConfiguration = yield this.sharedDataService.get(MAX_UPLOAD_FILE_SIZE);\r\n            this.maxUploadFileSize =\r\n                maxUploadFileSizeConfiguration && typeof maxUploadFileSizeConfiguration === 'number'\r\n                    ? maxUploadFileSizeConfiguration\r\n                    : FILE_VALIDATION_CONFIG.DEFAULT_MAX_UPLOAD_FILE_SIZE;\r\n        });\r\n    }\r\n    onMediaIdChange(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.fileErrors = [];\r\n            this.previewMessage = false;\r\n            this.mediaIdByLang[this.lang] = id;\r\n            if (id) {\r\n                yield this.checkMediaPreview(id);\r\n            }\r\n        });\r\n    }\r\n    onFileSelect(fileList) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.mediaIdByLang[this.lang] = undefined;\r\n            this.resetImage();\r\n            const file = fileList[0];\r\n            try {\r\n                yield this.fileValidationService.validate(file, this.maxUploadFileSize, this.fileErrors);\r\n                this.image = file;\r\n            }\r\n            catch (_a) {\r\n                this.logService.warn('Invalid file');\r\n            }\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    onMediaUploaded(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.resetImage();\r\n            yield this.onMediaIdChange(id);\r\n            if (this.field.initiated) {\r\n                this.field.initiated.length = 0;\r\n            }\r\n        });\r\n    }\r\n    resetImage() {\r\n        this.fileErrors = [];\r\n        this.image = null;\r\n    }\r\n    canShowFileSelector() {\r\n        return this.mediaIdByLang && !this.mediaIdByLang[this.lang] && !this.image;\r\n    }\r\n    canVideoPreview(mime) {\r\n        if (mime && mime.includes(VIDEO_MIME_PREFIX) && mime.indexOf(MP4_MIME_PREFIX) === -1) {\r\n            this.previewMessage = true;\r\n        }\r\n    }\r\n    checkMediaPreview(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const media = yield this.mediaService.getMedia(id);\r\n            this.canVideoPreview(media === null || media === void 0 ? void 0 : media.mime);\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n};\r\nMediaComponent = __decorate([\r\n    Component({\r\n        selector: 'se-media',\r\n        template: `<div class=\"se-media\"><se-media-selector *ngIf=\"!image\" [id]=\"mediaSelectorId\" [isDisabled]=\"isFieldDisabled\" [mediaId]=\"mediaIdByLang[lang]\" [mimeType]=\"field.allowMediaType\" (mediaIdChange)=\"onMediaIdChange($event)\"></se-media-selector><se-media-file-selector *ngIf=\"canShowFileSelector()\" [labelI18nKey]=\"'se.upload.image.to.library'\" [acceptedFileTypes]=\"acceptedFileTypes\" [selectionMode]=\"'upload'\" [disabled]=\"isFieldDisabled\" (onFileSelect)=\"onFileSelect($event)\"></se-media-file-selector><se-media-upload-form *ngIf=\"image\" class=\"se-media-upload-form-wrapper\" [image]=\"image\" [allowMediaType]=\"field.allowMediaType\" [maxUploadFileSize]=\"maxUploadFileSize\" (onCancel)=\"resetImage()\" (onSelect)=\"onFileSelect($event)\" (onUploadSuccess)=\"onMediaUploaded($event)\"></se-media-upload-form><se-message *ngIf=\"previewMessage\" [type]=\"'warning'\"><ng-container se-message-description>{{ 'se.upload.video.cant.preview' | translate }}</ng-container></se-message><se-media-errors *ngIf=\"fileErrors.length > 0\" [errors]=\"fileErrors\" [maxUploadFileSize]=\"maxUploadFileSize\"></se-media-errors></div>`,\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    }),\r\n    __param(6, Inject(GENERIC_EDITOR_WIDGET_DATA)),\r\n    __metadata(\"design:paramtypes\", [ChangeDetectorRef,\r\n        IFileValidation,\r\n        LogService,\r\n        MediaUtilService,\r\n        MediaService,\r\n        ISharedDataService, Object])\r\n], MediaComponent);\r\nexport { MediaComponent };\r\n//# sourceMappingURL=MediaComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/constants.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/genericEditor/media/services/index.ts"],"map":"{\"version\":3,\"file\":\"MediaComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/genericEditor/media/components/media/MediaComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/media/components/media/MediaComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, OnInit } from '@angular/core';\r\nimport { ErrorContext, GenericEditorWidgetData, LogService, TypedMap, ISharedDataService, IFileValidation } from 'smarteditcommons';\r\nimport { MediaService, MediaUtilService } from '../../services';\r\nexport declare class MediaComponent implements OnInit {\r\n    private cdr;\r\n    private fileValidationService;\r\n    private logService;\r\n    private mediaUtilService;\r\n    private mediaService;\r\n    private sharedDataService;\r\n    acceptedFileTypes: string[];\r\n    fileErrors: ErrorContext[];\r\n    image: File | null;\r\n    isFieldDisabled: boolean;\r\n    mediaSelectorId: string;\r\n    previewMessage: boolean;\r\n    maxUploadFileSize: number;\r\n    private readonly mediaIdByLang;\r\n    private readonly lang;\r\n    private field;\r\n    constructor(cdr: ChangeDetectorRef, fileValidationService: IFileValidation, logService: LogService, mediaUtilService: MediaUtilService, mediaService: MediaService, sharedDataService: ISharedDataService, data: GenericEditorWidgetData<TypedMap<string>>);\r\n    ngOnInit(): Promise<void>;\r\n    onMediaIdChange(id: string): Promise<void>;\r\n    onFileSelect(fileList: FileList): Promise<void>;\r\n    onMediaUploaded(id: string): Promise<void>;\r\n    resetImage(): void;\r\n    canShowFileSelector(): boolean;\r\n    private canVideoPreview;\r\n    private checkMediaPreview;\r\n}\r\n"}}
