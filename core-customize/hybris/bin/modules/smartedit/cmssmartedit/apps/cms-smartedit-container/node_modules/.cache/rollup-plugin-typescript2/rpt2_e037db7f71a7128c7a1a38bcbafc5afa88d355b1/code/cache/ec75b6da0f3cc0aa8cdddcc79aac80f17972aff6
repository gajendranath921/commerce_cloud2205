{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Input, Output, Type, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { LogService, SeDowngradeComponent } from 'smarteditcommons';\r\nimport { ItemSelectorPanelComponent } from '../itemSelectorPanel';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"CatalogAwareSelectorComponent\", {\r\n    selector: 'se-catalog-aware-selector',\r\n    host: {\r\n        '[class.se-catalog-aware-selector]': 'true'\r\n    },\r\n    template: `<div *ngIf=\"selectedItemListIsEmpty()\"><button type=\"button\" id=\"catalog-aware-selector-add-item\" class=\"fd-button fd-button--compact se-catalog-aware-selector__add-item-btn\" *ngIf=\"editable\" (click)=\"openItemSelectorPanel()\"><span translate=\"se.cms.catalogaware.newbutton.title\" [translateParams]=\"{ catalogItemType: catalogItemTypeI18nKey | translate }\" class=\"se-catalog-aware-selector__add-item-btn-text\"></span></button></div><div *ngIf=\"!selectedItemListIsEmpty()\" class=\"se-catalog-aware-selector__content\"><div class=\"se-catalog-aware-selector__add-more-btn-wrapper\" *ngIf=\"editable\"><button type=\"button\" class=\"fd-button--light\" translate=\"se.cms.catalogaware.list.addmore\" (click)=\"openItemSelectorPanel()\"></button></div><se-editable-list [id]=\"editableListId\" [itemComponent]=\"nodeComponent\" [(items)]=\"itemList\" [onChange]=\"onListChange\" [editable]=\"editable\" [(refresh)]=\"refreshItemListWidget\" class=\"se-catalog-aware-selector__list\"></se-editable-list></div><se-item-selector-panel [itemComponent]=\"itemComponent\" [getCatalogs]=\"getCatalogs\" [itemsFetchStrategy]=\"itemsFetchStrategy\" [catalogItemTypeI18nKey]=\"catalogItemTypeI18nKey\" (onSaveChanges)=\"onItemSelectorPanelSaveChanges($event)\"></se-item-selector-panel>`,\r\n    styles: [`.se-catalog-aware-selector__add-item-btn{display:flex;flex-direction:row;align-items:center;color:#0a6ed1}.se-catalog-aware-selector__add-more-btn-wrapper{display:flex;justify-content:flex-end;align-items:center}.se-catalog-aware-selector__list .se-tree-node{color:var(--sapList_TextColor);background-color:#fff}.se-catalog-aware-selector__list .se-tree__nodes--item .se-tree-node,.se-catalog-aware-selector__list .se-tree__nodes--item .se-tree-node__ol{display:flex;flex-direction:column;align-items:center}.se-catalog-aware-selector__list .se-tree__nodes--item .se-tree-node .se-tree-node__li,.se-catalog-aware-selector__list .se-tree__nodes--item .se-tree-node__ol .se-tree-node__li{width:100%}`],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet /* @ngInject */ CatalogAwareSelectorComponent = class /* @ngInject */ CatalogAwareSelectorComponent {\r\n    constructor(logService, cdr) {\r\n        this.logService = logService;\r\n        this.cdr = cdr;\r\n        this.selectedItemIds = [];\r\n        this.selectedItemIdsChange = new EventEmitter();\r\n        this.itemList = [];\r\n        this.onListChange = () => this.selectItemsFromItemList();\r\n    }\r\n    ngOnInit() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.editable === undefined) {\r\n                this.editable = true;\r\n            }\r\n            this.editableListId = `${this.id}_list`;\r\n            if (this.selectedItemIds.length > 0) {\r\n                return this.syncFromSelectedItemsToItemsList(this.selectedItemIds);\r\n            }\r\n        });\r\n    }\r\n    selectedItemListIsEmpty() {\r\n        return this.selectedItemIds.length === 0;\r\n    }\r\n    openItemSelectorPanel() {\r\n        this.itemSelectorPanel.initAndShowPanel([...this.selectedItemIds]);\r\n        if (!this.cdr.destroyed) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    onItemSelectorPanelSaveChanges(selectedItemIds) {\r\n        this.selectedItemIdsChange.emit(selectedItemIds);\r\n        return this.syncFromSelectedItemsToItemsList(selectedItemIds);\r\n    }\r\n    selectItemsFromItemList() {\r\n        const selectedItemIds = this.itemList.map((item) => item.id);\r\n        this.selectedItemIdsChange.emit(selectedItemIds);\r\n    }\r\n    syncFromSelectedItemsToItemsList(selectedItemIds) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const [idsFoundInList, idsMissingInList] = this.selectItemIdsFromItemList(selectedItemIds, this.itemList);\r\n            const itemsFoundInList = new Map();\r\n            this.itemList\r\n                .filter(({ id }) => idsFoundInList.includes(id))\r\n                .forEach((item) => {\r\n                itemsFoundInList.set(item.id, item);\r\n            });\r\n            if (idsMissingInList.length > 0) {\r\n                const newItems = yield this.fetchItems(idsMissingInList);\r\n                newItems.forEach((item) => {\r\n                    itemsFoundInList.set(item.id, item);\r\n                });\r\n            }\r\n            this.itemList.length = 0;\r\n            selectedItemIds.forEach((id) => {\r\n                const item = itemsFoundInList.get(id);\r\n                if (!item) {\r\n                    this.logService.warn(`[${this.constructor.name}] - Cannot find item with key `, id);\r\n                    return;\r\n                }\r\n                this.itemList.push(item);\r\n            });\r\n            if (this.itemList.length > 0) {\r\n                this.updatePosition();\r\n            }\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    updatePosition() {\r\n        if (!!this.refreshItemListWidget) {\r\n            this.refreshItemListWidget();\r\n        }\r\n    }\r\n    selectItemIdsFromItemList(selectedItemIds, itemList) {\r\n        const idsFound = [];\r\n        const idsMissing = [];\r\n        const itemIds = new Set(itemList.map(({ id }) => id));\r\n        selectedItemIds.forEach((id) => {\r\n            if (itemIds.has(id)) {\r\n                idsFound.push(id);\r\n            }\r\n            else {\r\n                idsMissing.push(id);\r\n            }\r\n        });\r\n        return [idsFound, idsMissing];\r\n    }\r\n    fetchItems(itemsToRetrieve) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const fetchEntityPromises = itemsToRetrieve.map((id) => this.itemsFetchStrategy.fetchEntity(id));\r\n            return Promise.all(fetchEntityPromises);\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    HostBinding('attr.id'),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ CatalogAwareSelectorComponent.prototype, \"id\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Array)\r\n], /* @ngInject */ CatalogAwareSelectorComponent.prototype, \"selectedItemIds\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ CatalogAwareSelectorComponent.prototype, \"getCatalogs\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ CatalogAwareSelectorComponent.prototype, \"itemsFetchStrategy\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Type)\r\n], /* @ngInject */ CatalogAwareSelectorComponent.prototype, \"itemComponent\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Type)\r\n], /* @ngInject */ CatalogAwareSelectorComponent.prototype, \"nodeComponent\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ CatalogAwareSelectorComponent.prototype, \"catalogItemTypeI18nKey\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], /* @ngInject */ CatalogAwareSelectorComponent.prototype, \"editable\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ CatalogAwareSelectorComponent.prototype, \"selectedItemIdsChange\", void 0);\r\n__decorate([\r\n    ViewChild(ItemSelectorPanelComponent, { static: false }),\r\n    __metadata(\"design:type\", ItemSelectorPanelComponent)\r\n], /* @ngInject */ CatalogAwareSelectorComponent.prototype, \"itemSelectorPanel\", void 0);\r\n/* @ngInject */ CatalogAwareSelectorComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-catalog-aware-selector',\r\n        host: {\r\n            '[class.se-catalog-aware-selector]': 'true'\r\n        },\r\n        template: `<div *ngIf=\"selectedItemListIsEmpty()\"><button type=\"button\" id=\"catalog-aware-selector-add-item\" class=\"fd-button fd-button--compact se-catalog-aware-selector__add-item-btn\" *ngIf=\"editable\" (click)=\"openItemSelectorPanel()\"><span translate=\"se.cms.catalogaware.newbutton.title\" [translateParams]=\"{ catalogItemType: catalogItemTypeI18nKey | translate }\" class=\"se-catalog-aware-selector__add-item-btn-text\"></span></button></div><div *ngIf=\"!selectedItemListIsEmpty()\" class=\"se-catalog-aware-selector__content\"><div class=\"se-catalog-aware-selector__add-more-btn-wrapper\" *ngIf=\"editable\"><button type=\"button\" class=\"fd-button--light\" translate=\"se.cms.catalogaware.list.addmore\" (click)=\"openItemSelectorPanel()\"></button></div><se-editable-list [id]=\"editableListId\" [itemComponent]=\"nodeComponent\" [(items)]=\"itemList\" [onChange]=\"onListChange\" [editable]=\"editable\" [(refresh)]=\"refreshItemListWidget\" class=\"se-catalog-aware-selector__list\"></se-editable-list></div><se-item-selector-panel [itemComponent]=\"itemComponent\" [getCatalogs]=\"getCatalogs\" [itemsFetchStrategy]=\"itemsFetchStrategy\" [catalogItemTypeI18nKey]=\"catalogItemTypeI18nKey\" (onSaveChanges)=\"onItemSelectorPanelSaveChanges($event)\"></se-item-selector-panel>`,\r\n        styles: [`.se-catalog-aware-selector__add-item-btn{display:flex;flex-direction:row;align-items:center;color:#0a6ed1}.se-catalog-aware-selector__add-more-btn-wrapper{display:flex;justify-content:flex-end;align-items:center}.se-catalog-aware-selector__list .se-tree-node{color:var(--sapList_TextColor);background-color:#fff}.se-catalog-aware-selector__list .se-tree__nodes--item .se-tree-node,.se-catalog-aware-selector__list .se-tree__nodes--item .se-tree-node__ol{display:flex;flex-direction:column;align-items:center}.se-catalog-aware-selector__list .se-tree__nodes--item .se-tree-node .se-tree-node__li,.se-catalog-aware-selector__list .se-tree__nodes--item .se-tree-node__ol .se-tree-node__li{width:100%}`],\r\n        encapsulation: ViewEncapsulation.None,\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    }),\r\n    __metadata(\"design:paramtypes\", [LogService, ChangeDetectorRef])\r\n], /* @ngInject */ CatalogAwareSelectorComponent);\r\nexport { /* @ngInject */ CatalogAwareSelectorComponent };\r\n//# sourceMappingURL=CatalogAwareSelectorComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/genericEditor/catalog/services/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/genericEditor/catalog/components/itemSelectorPanel/index.ts"],"map":"{\"version\":3,\"file\":\"CatalogAwareSelectorComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/genericEditor/catalog/components/catalogAwareSelector/CatalogAwareSelectorComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/catalog/components/catalogAwareSelector/CatalogAwareSelectorComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, EventEmitter, OnInit, Type } from '@angular/core';\r\nimport { EditableListNodeItemDTO, LogService } from 'smarteditcommons';\r\nimport { CatalogFetchStrategy, ProductCatalog } from '../../services';\r\nimport { ItemSelectorPanelComponent } from '../itemSelectorPanel';\r\nexport declare class CatalogAwareSelectorComponent implements OnInit {\r\n    private logService;\r\n    private cdr;\r\n    id: string;\r\n    selectedItemIds: string[];\r\n    getCatalogs: () => Promise<ProductCatalog[]>;\r\n    itemsFetchStrategy: CatalogFetchStrategy<EditableListNodeItemDTO>;\r\n    itemComponent: Type<any>;\r\n    nodeComponent: Type<any>;\r\n    catalogItemTypeI18nKey: string;\r\n    editable: boolean;\r\n    selectedItemIdsChange: EventEmitter<string[]>;\r\n    itemSelectorPanel: ItemSelectorPanelComponent;\r\n    itemList: EditableListNodeItemDTO[];\r\n    onListChange: () => void;\r\n    refreshItemListWidget: () => void;\r\n    editableListId: string;\r\n    constructor(logService: LogService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    selectedItemListIsEmpty(): boolean;\r\n    openItemSelectorPanel(): void;\r\n    onItemSelectorPanelSaveChanges(selectedItemIds: string[]): Promise<void>;\r\n    private selectItemsFromItemList;\r\n    private syncFromSelectedItemsToItemsList;\r\n    private updatePosition;\r\n    private selectItemIdsFromItemList;\r\n    private fetchItems;\r\n}\r\n"}}
