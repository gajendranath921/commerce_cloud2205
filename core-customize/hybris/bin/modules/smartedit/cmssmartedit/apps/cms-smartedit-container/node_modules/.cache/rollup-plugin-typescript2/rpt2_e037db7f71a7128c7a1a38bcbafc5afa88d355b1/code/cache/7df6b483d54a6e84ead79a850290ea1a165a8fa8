{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { ICatalogService, SeDowngradeService } from 'smarteditcommons';\r\n/**\r\n * The pageDisplayConditionsService provides an abstraction layer for the business logic of\r\n * primary/variant display conditions of a page\r\n */\r\nlet /* @ngInject */ PageDisplayConditionsService = class /* @ngInject */ PageDisplayConditionsService {\r\n    /**\r\n     * An object representing a page display condition<br/>\r\n     * Structure:<br/>\r\n     * ```\r\n     * {\r\n     *      label: [string] key to be localized to render this condition on a webpage\r\n     *      description: [string] key to be localized to render this condition description on a webpage\r\n     *      isPrimary: [boolean]\r\n     * }\r\n     * ```\r\n     */\r\n    constructor(catalogService) {\r\n        this.catalogService = catalogService;\r\n    }\r\n    /**\r\n     * @returns An array of page conditions that are the\r\n     * possible conditions if you wish to create a new page of the given page type that has the given possible primary\r\n     * pages\r\n     */\r\n    getNewPageConditions(pageTypeCode, uriContext) {\r\n        return this.getPageDisplayConditionsByPageType(pageTypeCode, uriContext);\r\n    }\r\n    fetchDisplayConditionsForPageType(pageType, uriContext) {\r\n        return this.catalogService\r\n            .getContentCatalogVersion(uriContext)\r\n            .then((catalogVersion) => catalogVersion.pageDisplayConditions.find((condition) => condition.typecode === pageType));\r\n    }\r\n    getPageDisplayConditionsByPageType(pageType, uriContext) {\r\n        return this.fetchDisplayConditionsForPageType(pageType, uriContext).then((obj) => {\r\n            if (!obj || !obj.options) {\r\n                return [];\r\n            }\r\n            return obj.options.map((option) => ({\r\n                label: option.label,\r\n                description: option.label + '.description',\r\n                isPrimary: option.id === 'PRIMARY'\r\n            }));\r\n        });\r\n    }\r\n};\r\n/* @ngInject */ PageDisplayConditionsService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [ICatalogService])\r\n], /* @ngInject */ PageDisplayConditionsService);\r\nexport { /* @ngInject */ PageDisplayConditionsService };\r\n//# sourceMappingURL=PageDisplayConditionsService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"PageDisplayConditionsService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/pageDisplayConditions/PageDisplayConditionsService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAEH,eAAe,EAIf,kBAAkB,EACrB,MAAM,kBAAkB,CAAC;AAO1B;;;GAGG;AAGH,mDAAA;IACI;;;;;;;;;;OAUG;IAEH,YAAoB,cAA+B;QAA/B,mBAAc,GAAd,cAAc,CAAiB;IAAG,CAAC;IAEvD;;;;OAIG;IAEI,oBAAoB,CACvB,YAAoB,EACpB,UAAuB;QAEvB,OAAO,IAAI,CAAC,kCAAkC,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;IAC7E,CAAC;IAEO,iCAAiC,CACrC,QAAgB,EAChB,UAAuB;QAEvB,OAAO,IAAI,CAAC,cAAc;aACrB,wBAAwB,CAAC,UAAU,CAAC;aACpC,IAAI,CAAC,CAAC,cAAmC,EAAE,EAAE,CAC1C,cAAc,CAAC,qBAAqB,CAAC,IAAI,CACrC,CAAC,SAAiC,EAAE,EAAE,CAAC,SAAS,CAAC,QAAQ,KAAK,QAAQ,CACzE,CACJ,CAAC;IACV,CAAC;IAEO,kCAAkC,CACtC,QAAgB,EAChB,UAAuB;QAEvB,OAAO,IAAI,CAAC,iCAAiC,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7E,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;gBACtB,OAAO,EAAE,CAAC;aACb;YAED,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAoC,EAAE,EAAE,CAAC,CAAC;gBAC9D,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,WAAW,EAAE,MAAM,CAAC,KAAK,GAAG,cAAc;gBAC1C,SAAS,EAAE,MAAM,CAAC,EAAE,KAAK,SAAS;aACrC,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;IACP,CAAC;CACJ,CAAA;AAzDD;IADC,kBAAkB,EAAE;qCAcmB,eAAe;gDA4CtD\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/pageDisplayConditions/PageDisplayConditionsService.d.ts","writeByteOrderMark":false,"text":"import { ICatalogService, IUriContext } from 'smarteditcommons';\r\nexport interface IDisplayCondition {\r\n    label: string;\r\n    description: string;\r\n    isPrimary: boolean;\r\n}\r\n/**\r\n * The pageDisplayConditionsService provides an abstraction layer for the business logic of\r\n * primary/variant display conditions of a page\r\n */\r\nexport declare class PageDisplayConditionsService {\r\n    private catalogService;\r\n    /**\r\n     * An object representing a page display condition<br/>\r\n     * Structure:<br/>\r\n     * ```\r\n     * {\r\n     *      label: [string] key to be localized to render this condition on a webpage\r\n     *      description: [string] key to be localized to render this condition description on a webpage\r\n     *      isPrimary: [boolean]\r\n     * }\r\n     * ```\r\n     */\r\n    constructor(catalogService: ICatalogService);\r\n    /**\r\n     * @returns An array of page conditions that are the\r\n     * possible conditions if you wish to create a new page of the given page type that has the given possible primary\r\n     * pages\r\n     */\r\n    getNewPageConditions(pageTypeCode: string, uriContext: IUriContext): Promise<IDisplayCondition[]>;\r\n    private fetchDisplayConditionsForPageType;\r\n    private getPageDisplayConditionsByPageType;\r\n}\r\n"}}
