{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TypePermissionsRestService } from 'cmscommons';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nimport { PageTypeService } from '../../../../../dao/PageTypeService';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SelectPageTypeComponent\", {\r\n    selector: 'se-select-page-type',\r\n    template: `<div><div class=\"se-add-page__sub-header\">{{ 'se.cms.addpagewizard.pagetype.description' | translate }}</div><div class=\"se-add-page__list fd-menu\" *ngIf=\"pageTypes.length > 0\"><div class=\"se-add-page__item fd-menu__item\" *ngFor=\"let pageType of pageTypes\" [ngClass]=\"{ 'is-selected': isSelected(pageType)}\" (click)=\"selectType(pageType)\"><div class=\"se-add-page__item-title\">{{ pageType.name | seL10n | async }}</div><div class=\"se-add-page__item-description\">{{ pageType.description | seL10n | async }}</div></div></div></div>`,\r\n    styles: [`.se-add-page__sub-header{padding-bottom:16px;color:#51555a}.se-add-page__sub-header-title{margin-bottom:8px}.se-add-page__list.fd-menu{border-top:1px solid #d9d9d9;padding:0}.se-add-page__item{cursor:pointer}.se-add-page__item--page-template{height:48px;display:flex;flex-direction:row;align-items:center}.se-add-page__item-title{font-weight:700}.se-add-page__item-description{white-space:normal}`],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet /* @ngInject */ SelectPageTypeComponent = class /* @ngInject */ SelectPageTypeComponent {\r\n    constructor(pageTypeService, typePermissionsRestService, cdr) {\r\n        this.pageTypeService = pageTypeService;\r\n        this.typePermissionsRestService = typePermissionsRestService;\r\n        this.cdr = cdr;\r\n        this.onTypeSelected = new EventEmitter();\r\n        this.pageTypes = [];\r\n    }\r\n    ngOnInit() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.loadPageTypes();\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    selectType(pageType) {\r\n        this.onTypeSelected.emit(pageType);\r\n    }\r\n    isSelected(pageType) {\r\n        return pageType.code === this.pageTypeCode;\r\n    }\r\n    loadPageTypes() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const pageTypes = yield this.pageTypeService.getPageTypes();\r\n            const allPageTypeCodes = pageTypes.map((pageType) => pageType.code);\r\n            const createPermissionResult = yield this.typePermissionsRestService.hasCreatePermissionForTypes(allPageTypeCodes);\r\n            this.pageTypes = pageTypes.filter((pageType) => createPermissionResult[pageType.code]);\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ SelectPageTypeComponent.prototype, \"pageTypeCode\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ SelectPageTypeComponent.prototype, \"onTypeSelected\", void 0);\r\n/* @ngInject */ SelectPageTypeComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-select-page-type',\r\n        template: `<div><div class=\"se-add-page__sub-header\">{{ 'se.cms.addpagewizard.pagetype.description' | translate }}</div><div class=\"se-add-page__list fd-menu\" *ngIf=\"pageTypes.length > 0\"><div class=\"se-add-page__item fd-menu__item\" *ngFor=\"let pageType of pageTypes\" [ngClass]=\"{ 'is-selected': isSelected(pageType)}\" (click)=\"selectType(pageType)\"><div class=\"se-add-page__item-title\">{{ pageType.name | seL10n | async }}</div><div class=\"se-add-page__item-description\">{{ pageType.description | seL10n | async }}</div></div></div></div>`,\r\n        styles: [`.se-add-page__sub-header{padding-bottom:16px;color:#51555a}.se-add-page__sub-header-title{margin-bottom:8px}.se-add-page__list.fd-menu{border-top:1px solid #d9d9d9;padding:0}.se-add-page__item{cursor:pointer}.se-add-page__item--page-template{height:48px;display:flex;flex-direction:row;align-items:center}.se-add-page__item-title{font-weight:700}.se-add-page__item-description{white-space:normal}`],\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    }),\r\n    __metadata(\"design:paramtypes\", [PageTypeService,\r\n        TypePermissionsRestService,\r\n        ChangeDetectorRef])\r\n], /* @ngInject */ SelectPageTypeComponent);\r\nexport { /* @ngInject */ SelectPageTypeComponent };\r\n//# sourceMappingURL=SelectPageTypeComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/PageTypeService.ts"],"map":"{\"version\":3,\"file\":\"SelectPageTypeComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/pages/addPageWizard/components/selectPageType/SelectPageTypeComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EACH,uBAAuB,EACvB,iBAAiB,EACjB,SAAS,EACT,YAAY,EACZ,KAAK,EAEL,MAAM,EAET,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,0BAA0B,EAAE,MAAM,YAAY,CAAC;AACxD,OAAO,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AACxD,OAAO,EAAY,eAAe,EAAE,MAAM,oCAAoC,CAAC;iFAGpE;IACP,QAAQ,EAAE,qBAAqB;IAC/B,QAAQ,EAAE,khBAAkhB;IAC5hB,MAAM,EAAE,CAAC,8YAA8Y,CAAC;IACxZ,eAAe,EAAE,uBAAuB,CAAC,MAAM;CAClD;AACD,8CAAA;IAMI,YACY,eAAgC,EAChC,0BAAsD,EACtD,GAAsB;QAFtB,oBAAe,GAAf,eAAe,CAAiB;QAChC,+BAA0B,GAA1B,0BAA0B,CAA4B;QACtD,QAAG,GAAH,GAAG,CAAmB;QAE9B,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,EAAE,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAEK,QAAQ;;YACV,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;YAC3B,IAAI,CAAE,IAAI,CAAC,GAAe,CAAC,SAAS,EAAE;gBAClC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC5B;QACL,CAAC;KAAA;IAEM,UAAU,CAAC,QAAkB;QAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAEM,UAAU,CAAC,QAAkB;QAChC,OAAO,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,YAAY,CAAC;IAC/C,CAAC;IAEa,aAAa;;YACvB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;YAC5D,MAAM,gBAAgB,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACpE,MAAM,sBAAsB,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,2BAA2B,CAC5F,gBAAgB,CACnB,CAAC;YACF,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3F,CAAC;KAAA;CACJ,CAAA;AArCY;IAAR,KAAK,EAAE;;6EAAsB;AACpB;IAAT,MAAM,EAAE;8BAAiB,YAAY;+EAAW;AAFrD;IAPC,oBAAoB,EAAE;IACtB,SAAS,CAAC;QACP,QAAQ,EAAE,qBAAqB;QAC/B,QAAQ,EAAE,khBAAkhB;QAC5hB,MAAM,EAAE,CAAC,8YAA8Y,CAAC;QACxZ,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAClD,CAAC;qCAQ+B,eAAe;QACJ,0BAA0B;QACjD,iBAAiB;2CA6BrC\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/pages/addPageWizard/components/selectPageType/SelectPageTypeComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, EventEmitter, OnInit } from '@angular/core';\r\nimport { TypePermissionsRestService } from 'cmscommons';\r\nimport { PageType, PageTypeService } from '../../../../../dao/PageTypeService';\r\nexport declare class SelectPageTypeComponent implements OnInit {\r\n    private pageTypeService;\r\n    private typePermissionsRestService;\r\n    private cdr;\r\n    pageTypeCode: string;\r\n    onTypeSelected: EventEmitter<PageType>;\r\n    pageTypes: PageType[];\r\n    constructor(pageTypeService: PageTypeService, typePermissionsRestService: TypePermissionsRestService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    selectType(pageType: PageType): void;\r\n    isSelected(pageType: PageType): boolean;\r\n    private loadPageTypes;\r\n}\r\n"}}
