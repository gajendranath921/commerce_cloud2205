{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"MediaUploadFieldComponent\", {\r\n    selector: 'se-media-upload-field',\r\n    template: `<div class=\"se-media-upload__file-info-field\" [ngClass]=\"getContainerClassName()\"><label class=\"se-control-label\" [ngClass]=\"{ 'se-media-upload-has-error': hasError(), required: isRequired }\" [translate]=\"labelI18nKey\"></label> <input type=\"text\" [ngClass]=\"{ 'is-invalid': hasError() }\" class=\"fd-form__control\" [attr.name]=\"fieldName\" [ngModel]=\"fieldValue\" (ngModelChange)=\"onChangeValue($event)\"/> <span class=\"upload-field-error fd-form__message fd-form__message--error\" [ngClass]=\"getErrorClassName()\" *ngFor=\"let error of fieldErrors\">{{ error | translate }}</span></div>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet /* @ngInject */ MediaUploadFieldComponent = class /* @ngInject */ MediaUploadFieldComponent {\r\n    constructor() {\r\n        this.isRequired = false;\r\n        this.fieldValueChange = new EventEmitter();\r\n    }\r\n    onChangeValue(value) {\r\n        this.fieldValueChange.emit(value);\r\n    }\r\n    hasError() {\r\n        var _a;\r\n        return ((_a = this.fieldErrors) === null || _a === void 0 ? void 0 : _a.length) > 0;\r\n    }\r\n    getContainerClassName() {\r\n        return `se-media-upload__file-info-field--${this.fieldName}`;\r\n    }\r\n    getErrorClassName() {\r\n        return `upload-field-error--${this.fieldName}`;\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ MediaUploadFieldComponent.prototype, \"fieldValue\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ MediaUploadFieldComponent.prototype, \"fieldName\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Array)\r\n], /* @ngInject */ MediaUploadFieldComponent.prototype, \"fieldErrors\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ MediaUploadFieldComponent.prototype, \"isRequired\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ MediaUploadFieldComponent.prototype, \"labelI18nKey\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ MediaUploadFieldComponent.prototype, \"fieldValueChange\", void 0);\r\n/* @ngInject */ MediaUploadFieldComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-media-upload-field',\r\n        template: `<div class=\"se-media-upload__file-info-field\" [ngClass]=\"getContainerClassName()\"><label class=\"se-control-label\" [ngClass]=\"{ 'se-media-upload-has-error': hasError(), required: isRequired }\" [translate]=\"labelI18nKey\"></label> <input type=\"text\" [ngClass]=\"{ 'is-invalid': hasError() }\" class=\"fd-form__control\" [attr.name]=\"fieldName\" [ngModel]=\"fieldValue\" (ngModelChange)=\"onChangeValue($event)\"/> <span class=\"upload-field-error fd-form__message fd-form__message--error\" [ngClass]=\"getErrorClassName()\" *ngFor=\"let error of fieldErrors\">{{ error | translate }}</span></div>`,\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    })\r\n], /* @ngInject */ MediaUploadFieldComponent);\r\nexport { /* @ngInject */ MediaUploadFieldComponent };\r\n//# sourceMappingURL=MediaUploadFieldComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"MediaUploadFieldComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../src/components/genericEditor/media/components/mediaUploadForm/mediaUploadField/MediaUploadFieldComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAChG,OAAO,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;mFAG7C;IACP,QAAQ,EAAE,uBAAuB;IACjC,QAAQ,EAAE,okBAAokB;IAC9kB,eAAe,EAAE,uBAAuB,CAAC,MAAM;CAClD;AACD,gDAAA;IAAA;QAIa,eAAU,GAAI,KAAK,CAAC;QAGnB,qBAAgB,GAAG,IAAI,YAAY,EAAU,CAAC;IAgB5D,CAAC;IAdU,aAAa,CAAC,KAAa;QAC9B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IACM,QAAQ;;QACX,OAAO,OAAA,IAAI,CAAC,WAAW,0CAAE,MAAM,IAAG,CAAC,CAAC;IACxC,CAAC;IAEM,qBAAqB;QACxB,OAAO,qCAAqC,IAAI,CAAC,SAAS,EAAE,CAAC;IACjE,CAAC;IAEM,iBAAiB;QACpB,OAAO,uBAAuB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnD,CAAC;CACJ,CAAA;AAtBY;IAAR,KAAK,EAAE;;6EAAoB;AACnB;IAAR,KAAK,EAAE;;4EAAmB;AAClB;IAAR,KAAK,EAAE;;8EAAuB;AACtB;IAAR,KAAK,EAAE;;6EAAqB;AACpB;IAAR,KAAK,EAAE;;+EAAsB;AAEpB;IAAT,MAAM,EAAE;;mFAA+C;AAP5D;IANC,oBAAoB,EAAE;IACtB,SAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,QAAQ,EAAE,okBAAokB;QAC9kB,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAClD,CAAC;6CAwBD\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/media/components/mediaUploadForm/mediaUploadField/MediaUploadFieldComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter } from '@angular/core';\r\nexport declare class MediaUploadFieldComponent {\r\n    fieldValue: string;\r\n    fieldName: string;\r\n    fieldErrors: string[];\r\n    isRequired?: boolean;\r\n    labelI18nKey: string;\r\n    fieldValueChange: EventEmitter<string>;\r\n    onChangeValue(value: string): void;\r\n    hasError(): boolean;\r\n    getContainerClassName(): string;\r\n    getErrorClassName(): string;\r\n}\r\n"}}
