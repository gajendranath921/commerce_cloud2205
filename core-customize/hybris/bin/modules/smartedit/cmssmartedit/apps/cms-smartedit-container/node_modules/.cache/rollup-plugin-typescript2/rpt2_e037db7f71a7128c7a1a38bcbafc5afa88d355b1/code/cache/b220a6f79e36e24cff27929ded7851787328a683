{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { HomepageService, HomepageType } from 'cmssmarteditcontainer/services';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"HomepageIconComponent\", {\r\n    selector: 'se-homepage-icon',\r\n    template: `<se-tooltip *ngIf=\"isVisible()\" [isChevronVisible]=\"true\" [triggers]=\"['mouseenter', 'mouseleave']\"><span se-tooltip-trigger class=\"sap-icon--home se-homepage-icon\" [ngClass]=\"getIconClass()\"></span> <span se-tooltip-body [translate]=\"getTooltipMessage()\"></span></se-tooltip>`,\r\n    styles: [`.se-homepage-icon{margin-right:4px}.se-homepage-icon--current{color:#0a6ed1}.se-homepage-icon--old{color:#32363a}`],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet /* @ngInject */ HomepageIconComponent = class /* @ngInject */ HomepageIconComponent {\r\n    constructor(homepageService, cdr) {\r\n        this.homepageService = homepageService;\r\n        this.cdr = cdr;\r\n    }\r\n    ngOnChanges() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.cmsPage && !this.uriContext) {\r\n                return;\r\n            }\r\n            this.type = yield this.homepageService.getHomepageType(this.cmsPage, this.uriContext);\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    isVisible() {\r\n        return !!this.type;\r\n    }\r\n    getIconClass() {\r\n        return {\r\n            'se-homepage-icon--current': this.type === HomepageType.CURRENT,\r\n            'se-homepage-icon--old': this.type === HomepageType.OLD\r\n        };\r\n    }\r\n    getTooltipMessage() {\r\n        const state = this.getHomepageState(this.type);\r\n        return `se.cms.homepage.tooltip.message.${state}`;\r\n    }\r\n    getHomepageState(type) {\r\n        return HomepageType.CURRENT === type ? 'current' : 'previous';\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ HomepageIconComponent.prototype, \"cmsPage\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ HomepageIconComponent.prototype, \"uriContext\", void 0);\r\n/* @ngInject */ HomepageIconComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-homepage-icon',\r\n        template: `<se-tooltip *ngIf=\"isVisible()\" [isChevronVisible]=\"true\" [triggers]=\"['mouseenter', 'mouseleave']\"><span se-tooltip-trigger class=\"sap-icon--home se-homepage-icon\" [ngClass]=\"getIconClass()\"></span> <span se-tooltip-body [translate]=\"getTooltipMessage()\"></span></se-tooltip>`,\r\n        styles: [`.se-homepage-icon{margin-right:4px}.se-homepage-icon--current{color:#0a6ed1}.se-homepage-icon--old{color:#32363a}`],\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    }),\r\n    __metadata(\"design:paramtypes\", [HomepageService, ChangeDetectorRef])\r\n], /* @ngInject */ HomepageIconComponent);\r\nexport { /* @ngInject */ HomepageIconComponent };\r\n//# sourceMappingURL=HomepageIconComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"HomepageIconComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/pages/homepageIcon/HomepageIconComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EACH,uBAAuB,EACvB,iBAAiB,EACjB,SAAS,EACT,KAAK,EAGR,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,eAAe,EAAE,YAAY,EAAE,MAAM,gCAAgC,CAAC;AAC/E,OAAO,EAAe,oBAAoB,EAAsB,MAAM,kBAAkB,CAAC;+EAI9E;IACP,QAAQ,EAAE,kBAAkB;IAC5B,QAAQ,EAAE,sRAAsR;IAChS,MAAM,EAAE,CAAC,mHAAmH,CAAC;IAC7H,eAAe,EAAE,uBAAuB,CAAC,MAAM;CAClD;AACD,4CAAA;IAMI,YAAmB,eAAgC,EAAU,GAAsB;QAAhE,oBAAe,GAAf,eAAe,CAAiB;QAAU,QAAG,GAAH,GAAG,CAAmB;IAAG,CAAC;IAEjF,WAAW;;YACb,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACnC,OAAO;aACV;YAED,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACtF,IAAI,CAAE,IAAI,CAAC,GAAe,CAAC,SAAS,EAAE;gBAClC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC5B;QACL,CAAC;KAAA;IAEM,SAAS;QACZ,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IACvB,CAAC;IAEM,YAAY;QACf,OAAO;YACH,2BAA2B,EAAE,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,OAAO;YAC/D,uBAAuB,EAAE,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,GAAG;SAC1D,CAAC;IACN,CAAC;IAEM,iBAAiB;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,OAAO,mCAAmC,KAAK,EAAE,CAAC;IACtD,CAAC;IAEO,gBAAgB,CAAC,IAAkB;QACvC,OAAO,YAAY,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;IAClE,CAAC;CACJ,CAAA;AArCY;IAAR,KAAK,EAAE;;sEAAmB;AAClB;IAAR,KAAK,EAAE;;yEAAyB;AAFrC;IAPC,oBAAoB,EAAE;IACtB,SAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,sRAAsR;QAChS,MAAM,EAAE,CAAC,mHAAmH,CAAC;QAC7H,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAClD,CAAC;qCAOsC,eAAe,EAAe,iBAAiB;yCAgCtF\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/pages/homepageIcon/HomepageIconComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, OnChanges } from '@angular/core';\r\nimport { HomepageService, HomepageType } from 'cmssmarteditcontainer/services';\r\nimport { IUriContext, TypedMap, ICMSPage } from 'smarteditcommons';\r\nexport declare class HomepageIconComponent implements OnChanges {\r\n    homepageService: HomepageService;\r\n    private cdr;\r\n    cmsPage: ICMSPage;\r\n    uriContext: IUriContext;\r\n    type: HomepageType;\r\n    constructor(homepageService: HomepageService, cdr: ChangeDetectorRef);\r\n    ngOnChanges(): Promise<void>;\r\n    isVisible(): boolean;\r\n    getIconClass(): TypedMap<boolean>;\r\n    getTooltipMessage(): string;\r\n    private getHomepageState;\r\n}\r\n"}}
