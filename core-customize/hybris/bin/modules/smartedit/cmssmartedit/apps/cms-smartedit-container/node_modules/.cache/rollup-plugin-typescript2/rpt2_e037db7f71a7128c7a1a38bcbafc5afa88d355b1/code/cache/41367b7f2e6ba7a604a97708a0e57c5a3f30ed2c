{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { CONTEXT_CATALOG } from 'cmscommons';\r\nimport { ICatalogService, SeDowngradeService, SystemEventService } from 'smarteditcommons';\r\n/**\r\n * Expose through angular the event for sendEventShowReplaceParentHomePageInfo()\r\n */\r\nexport const CMS_EVENT_SHOW_REPLACE_PARENT_HOMEPAGE_INFO = 'CMS_EVENT_SHOW_REPLACE_PARENT_HOMEPAGE_INFO';\r\n/** @internal */\r\n/**\r\n * Expose through angular the event for sendEventHideReplaceParentHomePageInfo()\r\n */\r\nexport const CMS_EVENT_HIDE_REPLACE_PARENT_HOMEPAGE_INFO = 'CMS_EVENT_HIDE_REPLACE_PARENT_HOMEPAGE_INFO';\r\n/** @internal */\r\n/**\r\n * !NGDOC\r\n * Status of a ICatalogHomepageDetails\r\n */\r\nexport var CatalogHomepageDetailsStatus;\r\n(function (CatalogHomepageDetailsStatus) {\r\n    // Status is being calculated\r\n    CatalogHomepageDetailsStatus[\"PENDING\"] = \"PENDING\";\r\n    // No current homepage for the given catalog version\r\n    CatalogHomepageDetailsStatus[\"NO_HOMEPAGE\"] = \"NO_HOMEPAGE\";\r\n    // There is a homepage is in the given catalog version (not inherited)\r\n    CatalogHomepageDetailsStatus[\"LOCAL\"] = \"LOCAL\";\r\n    // The old homepage is in the given catalog version\r\n    CatalogHomepageDetailsStatus[\"OLD\"] = \"OLD\";\r\n    // There is a homepage, but it is inherited from a parent catalog\r\n    CatalogHomepageDetailsStatus[\"PARENT\"] = \"PARENT\";\r\n})(CatalogHomepageDetailsStatus || (CatalogHomepageDetailsStatus = {}));\r\n/**\r\n * An enum type representing the homepage type of a cms page.\r\n */\r\nexport var HomepageType;\r\n(function (HomepageType) {\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page was previously a homepage.\r\n     */\r\n    HomepageType[\"OLD\"] = \"old\";\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page is a current homepage.\r\n     */\r\n    HomepageType[\"CURRENT\"] = \"current\";\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page is a fallback homepage.\r\n     */\r\n    HomepageType[\"FALLBACK\"] = \"fallback\";\r\n})(HomepageType || (HomepageType = {}));\r\n/**\r\n * This service is used to determine if a cms page is a current, a previous homepage, or neither.\r\n */\r\nlet /* @ngInject */ HomepageService = class /* @ngInject */ HomepageService {\r\n    constructor(catalogService, systemEventService) {\r\n        this.catalogService = catalogService;\r\n        this.systemEventService = systemEventService;\r\n    }\r\n    /**\r\n     * Send an event to show info to the user about replacing a homepage from a parent catalog.\r\n     */\r\n    sendEventHideReplaceParentHomePageInfo(data) {\r\n        this.systemEventService.publish(CMS_EVENT_HIDE_REPLACE_PARENT_HOMEPAGE_INFO, data);\r\n    }\r\n    /**\r\n     * Send an event to hide the info to the user about replacing a homepage from a parent catalog.\r\n     */\r\n    sendEventShowReplaceParentHomePageInfo(data) {\r\n        this.systemEventService.publish(CMS_EVENT_SHOW_REPLACE_PARENT_HOMEPAGE_INFO, data);\r\n    }\r\n    /**\r\n     * getHomepageDetailsForContext is a mashup of logic needed for the frontend\r\n     * Both the pageDisplayConditions and newPageDisplayConditions components use it for various\r\n     * ui related things, like enable/disable of the homepage checkbox, or show messages on the UI\r\n     *\r\n     * Given a uriContext, basically there are 3 mains return types, mashed into 1 typescript type\r\n     *\r\n     * 1) CatalogHomepageDetailsStatus.NO_HOMEPAGE\r\n     * This means that the given uriContext has no homepage whatsoever. This probably indicates an issue with the data.\r\n     *\r\n     * 2) CatalogHomepageDetailsStatus.PARENT\r\n     * This means that the current homepage for the given uriContext is inherited from a parent catalog.\r\n     * In this case, the returned ICatalogHomepageDetails contains the parentCatalogName, parentCatalogVersion,\r\n     * targetCatalogName, and targetCatalogVersion,\r\n     *\r\n     * 3) CatalogHomepageDetailsStatus.LOCAL\r\n     * This means that the current homepage for the given uriContext belongs to the catalog of that uriContext.\r\n     * In this case, the returned ICatalogHomepageDetails contains the currentHomepageName, currentHomepageUid,\r\n     * and oldHomepageUid\r\n     *\r\n     * @param uriContext A IUriContext object\r\n     *\r\n     * @returns ICatalogHomepageDetails with one of the 3 options as indicated above\r\n     */\r\n    getHomepageDetailsForContext(uriContext) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const catalogVersion = yield this.catalogService.getContentCatalogVersion(uriContext);\r\n            const homepageForCurrentCatalog = catalogVersion.homepage\r\n                ? catalogVersion.homepage.current\r\n                : null;\r\n            return this.buildHomepageDetailsForContext(homepageForCurrentCatalog, uriContext);\r\n        });\r\n    }\r\n    /**\r\n     * This method checks if the cms page is a current homepage.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a boolean indicating whether the cms page is the current homepage.\r\n     */\r\n    isCurrentHomepage(cmsPage, uriContext) {\r\n        return this.isHomepageType(cmsPage, uriContext, HomepageType.CURRENT);\r\n    }\r\n    /**\r\n     * This method checks if the cms page is a current homepage.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a boolean indicating whether the cms page is a previous homepage.\r\n     */\r\n    isOldHomepage(cmsPage, uriContext) {\r\n        return this.isHomepageType(cmsPage, uriContext, HomepageType.OLD);\r\n    }\r\n    /**\r\n     * This method returns the homepage type of a cms page.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a enum type indicating whether the cms page is a current, previous homepage or null if neither.\r\n     */\r\n    getHomepageType(cmsPage, uriContext) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const catalog = yield this.catalogService.getContentCatalogVersion(uriContext);\r\n            if (!catalog || !catalog.homepage) {\r\n                return null;\r\n            }\r\n            if (catalog.homepage.current &&\r\n                catalog.homepage.current.uid === cmsPage.uid &&\r\n                catalog.homepage.current.catalogVersionUuid === cmsPage.catalogVersion) {\r\n                return HomepageType.CURRENT;\r\n            }\r\n            else if (catalog.homepage.old && catalog.homepage.old.uid === cmsPage.uid) {\r\n                return this.compareCatalogVersions(catalog.homepage.old.catalogVersionUuid, cmsPage.catalogVersion, (oldHomepageCatalog, pageCatalog) => oldHomepageCatalog.catalogId === pageCatalog.catalogId ? HomepageType.OLD : null);\r\n            }\r\n            else if (catalog.homepage.fallback && catalog.homepage.fallback.uid === cmsPage.uid) {\r\n                return this.compareCatalogVersions(catalog.homepage.fallback.catalogVersionUuid, cmsPage.catalogVersion, (fallbackCatalog, pageCatalog) => fallbackCatalog.uuid === pageCatalog.uuid ? HomepageType.FALLBACK : null);\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n    /**\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved to true when the catalog has a fallback homepage.\r\n     */\r\n    hasFallbackHomePage(uriContext) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const catalog = yield this.catalogService.getContentCatalogVersion(uriContext);\r\n            if (!catalog || !catalog.homepage) {\r\n                throw Error(`HomepageService.hasFallbackHomePage - Catalog does not have homepage fallback property`);\r\n            }\r\n            return !!catalog.homepage.fallback;\r\n        });\r\n    }\r\n    /**\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved to true when the page can be synced.\r\n     */\r\n    canSyncHomepage(cmsPage, uriContext) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const isOld = yield this.isOldHomepage(cmsPage, uriContext);\r\n            if (!isOld) {\r\n                return true;\r\n            }\r\n            const catalog = yield this.catalogService.getContentCatalogVersion(uriContext);\r\n            return this.compareCatalogVersions(catalog.homepage.current.catalogVersionUuid, cmsPage.catalogVersion, (currentCatalog, pageCatalog) => cmsPage.uid !== catalog.homepage.current.uid &&\r\n                currentCatalog.catalogId !== pageCatalog.catalogId);\r\n        });\r\n    }\r\n    compareCatalogVersions(catalogAUuid, catalogBUuid, compare) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const [catalogVersionA, catalogVersionB] = yield Promise.all([\r\n                this.catalogService.getCatalogVersionByUuid(catalogAUuid),\r\n                this.catalogService.getCatalogVersionByUuid(catalogBUuid)\r\n            ]);\r\n            return compare(catalogVersionA, catalogVersionB);\r\n        });\r\n    }\r\n    isHomepageType(cmsPage, uriContext, type) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const homepageType = yield this.getHomepageType(cmsPage, uriContext);\r\n            return homepageType === type;\r\n        });\r\n    }\r\n    buildHomepageDetailsForContext(homepageForCurrentCatalog, uriContext) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!homepageForCurrentCatalog) {\r\n                return {\r\n                    status: CatalogHomepageDetailsStatus.NO_HOMEPAGE\r\n                };\r\n            }\r\n            const homepageCatalogVersion = yield this.catalogService.getCatalogVersionByUuid(homepageForCurrentCatalog.catalogVersionUuid);\r\n            const homepageComesFromParent = homepageCatalogVersion.catalogId !== uriContext[CONTEXT_CATALOG];\r\n            const currentCatalogVersion = yield this.catalogService.getContentCatalogVersion(uriContext);\r\n            if (homepageComesFromParent) {\r\n                return {\r\n                    status: CatalogHomepageDetailsStatus.PARENT,\r\n                    parentCatalogName: homepageCatalogVersion.catalogName,\r\n                    parentCatalogVersion: homepageCatalogVersion.version,\r\n                    targetCatalogName: currentCatalogVersion.catalogName,\r\n                    targetCatalogVersion: currentCatalogVersion.version\r\n                };\r\n            }\r\n            return {\r\n                status: CatalogHomepageDetailsStatus.LOCAL,\r\n                currentHomepageName: homepageForCurrentCatalog.name,\r\n                currentHomepageUid: homepageForCurrentCatalog.uid,\r\n                oldHomepageUid: homepageCatalogVersion.homepage\r\n                    ? homepageCatalogVersion.homepage.old\r\n                        ? homepageCatalogVersion.homepage.old.uid\r\n                        : null\r\n                    : null\r\n            };\r\n        });\r\n    }\r\n};\r\n/* @ngInject */ HomepageService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [ICatalogService,\r\n        SystemEventService])\r\n], /* @ngInject */ HomepageService);\r\nexport { /* @ngInject */ HomepageService };\r\n//# sourceMappingURL=HomepageService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"HomepageService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/pageDisplayConditions/HomepageService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/pageDisplayConditions/HomepageService.d.ts","writeByteOrderMark":false,"text":"import { EventMessageData, ICatalogService, IUriContext, SystemEventService, TypedMap, ICMSPage } from 'smarteditcommons';\r\n/**\r\n * Expose through angular the event for sendEventShowReplaceParentHomePageInfo()\r\n */\r\nexport declare const CMS_EVENT_SHOW_REPLACE_PARENT_HOMEPAGE_INFO = \"CMS_EVENT_SHOW_REPLACE_PARENT_HOMEPAGE_INFO\";\r\n/** @internal */\r\n/**\r\n * Expose through angular the event for sendEventHideReplaceParentHomePageInfo()\r\n */\r\nexport declare const CMS_EVENT_HIDE_REPLACE_PARENT_HOMEPAGE_INFO = \"CMS_EVENT_HIDE_REPLACE_PARENT_HOMEPAGE_INFO\";\r\n/** @internal */\r\n/**\r\n * !NGDOC\r\n * Status of a ICatalogHomepageDetails\r\n */\r\nexport declare enum CatalogHomepageDetailsStatus {\r\n    PENDING = \"PENDING\",\r\n    NO_HOMEPAGE = \"NO_HOMEPAGE\",\r\n    LOCAL = \"LOCAL\",\r\n    OLD = \"OLD\",\r\n    PARENT = \"PARENT\"\r\n}\r\n/**\r\n * ICatalogHomepageDetails is a mashup of a bunch of different values needed in the UI\r\n * Since the logic is a big insane, to try and keep the components clean we dump all the crap into\r\n * this 1 object.\r\n * Depending on the status, some of the other fields will be filled, but not others\r\n */\r\nexport interface ICatalogHomepageDetails {\r\n    status: CatalogHomepageDetailsStatus;\r\n    parentCatalogName?: TypedMap<string>;\r\n    parentCatalogVersion?: string;\r\n    targetCatalogName?: TypedMap<string>;\r\n    targetCatalogVersion?: string;\r\n    currentHomepageName?: string;\r\n    currentHomepageUid?: string;\r\n    oldHomepageUid?: string;\r\n}\r\n/**\r\n * An enum type representing the homepage type of a cms page.\r\n */\r\nexport declare enum HomepageType {\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page was previously a homepage.\r\n     */\r\n    OLD = \"old\",\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page is a current homepage.\r\n     */\r\n    CURRENT = \"current\",\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page is a fallback homepage.\r\n     */\r\n    FALLBACK = \"fallback\"\r\n}\r\n/**\r\n * This service is used to determine if a cms page is a current, a previous homepage, or neither.\r\n */\r\nexport declare class HomepageService {\r\n    private catalogService;\r\n    private systemEventService;\r\n    constructor(catalogService: ICatalogService, systemEventService: SystemEventService);\r\n    /**\r\n     * Send an event to show info to the user about replacing a homepage from a parent catalog.\r\n     */\r\n    sendEventHideReplaceParentHomePageInfo(data?: EventMessageData): void;\r\n    /**\r\n     * Send an event to hide the info to the user about replacing a homepage from a parent catalog.\r\n     */\r\n    sendEventShowReplaceParentHomePageInfo(data?: EventMessageData): void;\r\n    /**\r\n     * getHomepageDetailsForContext is a mashup of logic needed for the frontend\r\n     * Both the pageDisplayConditions and newPageDisplayConditions components use it for various\r\n     * ui related things, like enable/disable of the homepage checkbox, or show messages on the UI\r\n     *\r\n     * Given a uriContext, basically there are 3 mains return types, mashed into 1 typescript type\r\n     *\r\n     * 1) CatalogHomepageDetailsStatus.NO_HOMEPAGE\r\n     * This means that the given uriContext has no homepage whatsoever. This probably indicates an issue with the data.\r\n     *\r\n     * 2) CatalogHomepageDetailsStatus.PARENT\r\n     * This means that the current homepage for the given uriContext is inherited from a parent catalog.\r\n     * In this case, the returned ICatalogHomepageDetails contains the parentCatalogName, parentCatalogVersion,\r\n     * targetCatalogName, and targetCatalogVersion,\r\n     *\r\n     * 3) CatalogHomepageDetailsStatus.LOCAL\r\n     * This means that the current homepage for the given uriContext belongs to the catalog of that uriContext.\r\n     * In this case, the returned ICatalogHomepageDetails contains the currentHomepageName, currentHomepageUid,\r\n     * and oldHomepageUid\r\n     *\r\n     * @param uriContext A IUriContext object\r\n     *\r\n     * @returns ICatalogHomepageDetails with one of the 3 options as indicated above\r\n     */\r\n    getHomepageDetailsForContext(uriContext: IUriContext): Promise<ICatalogHomepageDetails>;\r\n    /**\r\n     * This method checks if the cms page is a current homepage.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a boolean indicating whether the cms page is the current homepage.\r\n     */\r\n    isCurrentHomepage(cmsPage: ICMSPage, uriContext: IUriContext): Promise<boolean>;\r\n    /**\r\n     * This method checks if the cms page is a current homepage.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a boolean indicating whether the cms page is a previous homepage.\r\n     */\r\n    isOldHomepage(cmsPage: ICMSPage, uriContext: IUriContext): Promise<boolean>;\r\n    /**\r\n     * This method returns the homepage type of a cms page.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a enum type indicating whether the cms page is a current, previous homepage or null if neither.\r\n     */\r\n    getHomepageType(cmsPage: ICMSPage, uriContext: IUriContext): Promise<HomepageType>;\r\n    /**\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved to true when the catalog has a fallback homepage.\r\n     */\r\n    hasFallbackHomePage(uriContext: IUriContext): Promise<boolean>;\r\n    /**\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved to true when the page can be synced.\r\n     */\r\n    canSyncHomepage(cmsPage: ICMSPage, uriContext: IUriContext): Promise<boolean>;\r\n    private compareCatalogVersions;\r\n    private isHomepageType;\r\n    private buildHomepageDetailsForContext;\r\n}\r\n"}}
