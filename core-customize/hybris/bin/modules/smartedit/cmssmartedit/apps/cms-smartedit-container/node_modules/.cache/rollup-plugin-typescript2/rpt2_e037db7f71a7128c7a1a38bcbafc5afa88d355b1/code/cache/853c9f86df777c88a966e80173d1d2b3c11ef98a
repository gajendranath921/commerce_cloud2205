{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { isNil, cloneDeep, remove, concat } from 'lodash';\r\nimport { LogService, SeDowngradeService, PageVersionSelectionService, IPageService } from 'smarteditcommons';\r\nimport { TypeStructureRestService } from '../../../dao/TypeStructureRestService';\r\nimport { DisplayConditionsFacade } from '../../../facades';\r\nimport { PageEditorModalService } from './PageEditorModalService';\r\n/**\r\n * This service is used to provide all the information necessary to properly display the Page Info Menu.\r\n */\r\nlet /* @ngInject */ PageInfoMenuService = class /* @ngInject */ PageInfoMenuService {\r\n    constructor(displayConditionsFacade, logService, pageEditorModalService, pageService, pageVersionSelectionService, translateService, typeStructureRestService) {\r\n        this.displayConditionsFacade = displayConditionsFacade;\r\n        this.logService = logService;\r\n        this.pageEditorModalService = pageEditorModalService;\r\n        this.pageService = pageService;\r\n        this.pageVersionSelectionService = pageVersionSelectionService;\r\n        this.translateService = translateService;\r\n        this.typeStructureRestService = typeStructureRestService;\r\n        this.ALL_RESTRICTIONS_CRITERIA_LABEL = 'se.cms.restrictions.criteria.all';\r\n        this.ANY_RESTRICTIONS_CRITERIA_LABEL = 'se.cms.restrictions.criteria.any';\r\n        this.isPageEditorOpened = false;\r\n    }\r\n    openPageEditor(pageInfo) {\r\n        if (isNil(pageInfo)) {\r\n            this.logService.warn(`[${this.constructor.name}] - Cannot open page editor. Provided page is empty.`);\r\n            return;\r\n        }\r\n        if (!this.isPageEditorOpened) {\r\n            this.isPageEditorOpened = true;\r\n            this.pageEditorModalService.open(pageInfo).finally(() => {\r\n                this.isPageEditorOpened = false;\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves the information for the current page and prepares it to be displayed in the Page Info Menu.\r\n     */\r\n    getCurrentPageInfo() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const pageInfo = yield this.pageService.getCurrentPageInfoByVersion(this.getCurrentPageVersionId());\r\n                const primaryPageName = yield this.getPrimaryPageName(pageInfo);\r\n                pageInfo.template = pageInfo.masterTemplateId;\r\n                const pageInfoForViewing = cloneDeep(pageInfo);\r\n                pageInfoForViewing.content = pageInfo;\r\n                pageInfoForViewing.primaryPage = primaryPageName;\r\n                pageInfoForViewing.localizedType = pageInfo.typeCode;\r\n                pageInfoForViewing.displayCondition = this.getPageDisplayCondition(pageInfo);\r\n                pageInfoForViewing.restrictionsCriteria = this.getPageRestrictionsCriteria(pageInfo);\r\n                // Note: In the previous implementation of the page info, there was a call to the catalog service to retrieve the URI context\r\n                // and assign it to the page content. However, that field doesn't seem to be in use anymore, so it was removed.\r\n                return pageInfoForViewing;\r\n            }\r\n            catch (_a) {\r\n                this.logService.warn(`[${this.constructor.name}] - Cannot retrieve page info. Please try again later.`);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Retrieves the page structure and adapts the fields to match the order expected in the Page Info Menu.\r\n     */\r\n    getPageStructureForViewing(pageTypeCode, isPrimaryPage) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const structureToMap = yield this.typeStructureRestService.getStructureByType(pageTypeCode);\r\n                const structure = structureToMap.map((field) => (Object.assign(Object.assign({}, field), { editable: false })));\r\n                // This method needs to ensure that the page structure contains only the fields needed for viewing and in the right order.\r\n                // The final list of attributes will have our fields in the right order. Any other fields in the structure, will appear at the end.\r\n                this.removeFieldFromStructure(structure, 'uid');\r\n                this.removeFieldFromStructure(structure, 'restrictions');\r\n                const fieldsInRightOrder = [];\r\n                const nameField = this.removeFieldFromStructure(structure, 'name');\r\n                nameField.cmsStructureType = 'InfoPageName';\r\n                this.addFieldToStructure(fieldsInRightOrder, nameField);\r\n                this.addFieldToStructure(fieldsInRightOrder, this.buildField('displayCondition'));\r\n                const descriptionFlag = this.structureContainsItemByFieldQualifier(structure, 'description');\r\n                if (descriptionFlag) {\r\n                    const descriptionField = this.removeFieldFromStructure(structure, 'description');\r\n                    descriptionField.cmsStructureType = 'InfoPageName';\r\n                    this.addFieldToStructure(fieldsInRightOrder, descriptionField);\r\n                }\r\n                const titleFlag = this.structureContainsItemByFieldQualifier(structure, 'title');\r\n                if (titleFlag) {\r\n                    const titleField = this.removeFieldFromStructure(structure, 'title');\r\n                    titleField.cmsStructureType = 'InfoPageName';\r\n                    this.addFieldToStructure(fieldsInRightOrder, titleField);\r\n                }\r\n                const labelFlag = this.structureContainsItemByFieldQualifier(structure, 'label');\r\n                if (labelFlag) {\r\n                    const labelField = this.removeFieldFromStructure(structure, 'label');\r\n                    labelField.cmsStructureType = 'InfoPageName';\r\n                    this.addFieldToStructure(fieldsInRightOrder, labelField);\r\n                }\r\n                this.addFieldToStructure(fieldsInRightOrder, this.buildField('localizedType'));\r\n                this.addFieldToStructure(fieldsInRightOrder, this.buildField('template'));\r\n                if (!isPrimaryPage) {\r\n                    this.addFieldToStructure(fieldsInRightOrder, this.buildField('primaryPage'));\r\n                    this.addFieldToStructure(fieldsInRightOrder, this.buildField('restrictions', 'RestrictionsList'));\r\n                }\r\n                this.addFieldToStructure(fieldsInRightOrder, this.removeFieldFromStructure(structure, 'creationtime'));\r\n                this.addFieldToStructure(fieldsInRightOrder, this.removeFieldFromStructure(structure, 'modifiedtime'));\r\n                return {\r\n                    attributes: concat(fieldsInRightOrder, structure),\r\n                    category: 'PAGE'\r\n                };\r\n            }\r\n            catch (_a) {\r\n                this.logService.warn(`[${this.constructor.name}] - Cannot retrieve page info structure. Please try again later.`);\r\n            }\r\n        });\r\n    }\r\n    // ------------------------------------------------------------------------\r\n    // Helper Methods\r\n    // ------------------------------------------------------------------------\r\n    addFieldToStructure(structure, field) {\r\n        if (field) {\r\n            structure.push(field);\r\n        }\r\n    }\r\n    buildField(qualifier, cmsStructureType = 'ShortString') {\r\n        return {\r\n            cmsStructureType,\r\n            qualifier,\r\n            i18nKey: 'se.cms.pageinfo.page.' + qualifier.toLocaleLowerCase(),\r\n            editable: false\r\n        };\r\n    }\r\n    structureContainsItemByFieldQualifier(structure, fieldQualifier) {\r\n        return !!structure.find((item) => item.qualifier === fieldQualifier);\r\n    }\r\n    removeFieldFromStructure(structure, fieldQualifier) {\r\n        const removedElements = remove(structure, (field) => field.qualifier === fieldQualifier);\r\n        return removedElements[0];\r\n    }\r\n    getPrimaryPageName(pageInfo) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.isVariationPage(pageInfo)) {\r\n                const { name } = yield this.displayConditionsFacade.getPrimaryPageForVariationPage(pageInfo.uid);\r\n                return name || null;\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n    isVariationPage(pageInfo) {\r\n        return !pageInfo.defaultPage;\r\n    }\r\n    getPageDisplayCondition(pageInfo) {\r\n        const conditionTranslKey = this.isVariationPage(pageInfo)\r\n            ? 'page.displaycondition.variation'\r\n            : 'page.displaycondition.primary';\r\n        return this.translateService.instant(conditionTranslKey);\r\n    }\r\n    getPageRestrictionsCriteria(pageInfo) {\r\n        if (this.isVariationPage(pageInfo) && pageInfo.onlyOneRestrictionMustApply !== undefined) {\r\n            const criteriaTranslKey = pageInfo.onlyOneRestrictionMustApply\r\n                ? this.ANY_RESTRICTIONS_CRITERIA_LABEL\r\n                : this.ALL_RESTRICTIONS_CRITERIA_LABEL;\r\n            return this.translateService.instant(criteriaTranslKey);\r\n        }\r\n        return null;\r\n    }\r\n    getCurrentPageVersionId() {\r\n        const pageVersion = this.pageVersionSelectionService.getSelectedPageVersion();\r\n        return pageVersion ? pageVersion.uid : null;\r\n    }\r\n};\r\n/* @ngInject */ PageInfoMenuService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [DisplayConditionsFacade,\r\n        LogService,\r\n        PageEditorModalService,\r\n        IPageService,\r\n        PageVersionSelectionService,\r\n        TranslateService,\r\n        TypeStructureRestService])\r\n], /* @ngInject */ PageInfoMenuService);\r\nexport { /* @ngInject */ PageInfoMenuService };\r\n//# sourceMappingURL=PageInfoMenuService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate+core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/TypeStructureRestService.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/facades/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/pages/services/PageEditorModalService.ts"],"map":"{\"version\":3,\"file\":\"PageInfoMenuService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/pages/services/PageInfoMenuService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/pages/services/PageInfoMenuService.d.ts","writeByteOrderMark":false,"text":"import { TranslateService } from '@ngx-translate/core';\r\nimport { CMSItemStructure } from 'cmscommons';\r\nimport { LogService, PageVersionSelectionService, IPageService, ICMSPage } from 'smarteditcommons';\r\nimport { TypeStructureRestService } from '../../../dao/TypeStructureRestService';\r\nimport { DisplayConditionsFacade } from '../../../facades';\r\nimport { PageEditorModalService } from './PageEditorModalService';\r\nexport interface PageInfoForViewing extends ICMSPage {\r\n    template: string;\r\n    primaryPage: string | null;\r\n    displayCondition: string;\r\n    content: ICMSPage;\r\n    localizedType: string;\r\n    restrictionsCriteria: string | null;\r\n}\r\n/**\r\n * This service is used to provide all the information necessary to properly display the Page Info Menu.\r\n */\r\nexport declare class PageInfoMenuService {\r\n    private displayConditionsFacade;\r\n    private logService;\r\n    private pageEditorModalService;\r\n    private pageService;\r\n    private pageVersionSelectionService;\r\n    private translateService;\r\n    private typeStructureRestService;\r\n    private ALL_RESTRICTIONS_CRITERIA_LABEL;\r\n    private ANY_RESTRICTIONS_CRITERIA_LABEL;\r\n    private isPageEditorOpened;\r\n    constructor(displayConditionsFacade: DisplayConditionsFacade, logService: LogService, pageEditorModalService: PageEditorModalService, pageService: IPageService, pageVersionSelectionService: PageVersionSelectionService, translateService: TranslateService, typeStructureRestService: TypeStructureRestService);\r\n    openPageEditor(pageInfo: ICMSPage): void;\r\n    /**\r\n     * Retrieves the information for the current page and prepares it to be displayed in the Page Info Menu.\r\n     */\r\n    getCurrentPageInfo(): Promise<PageInfoForViewing | void>;\r\n    /**\r\n     * Retrieves the page structure and adapts the fields to match the order expected in the Page Info Menu.\r\n     */\r\n    getPageStructureForViewing(pageTypeCode: string, isPrimaryPage: boolean): Promise<CMSItemStructure | void>;\r\n    private addFieldToStructure;\r\n    private buildField;\r\n    private structureContainsItemByFieldQualifier;\r\n    private removeFieldFromStructure;\r\n    private getPrimaryPageName;\r\n    private isVariationPage;\r\n    private getPageDisplayCondition;\r\n    private getPageRestrictionsCriteria;\r\n    private getCurrentPageVersionId;\r\n}\r\n"}}
