{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { IAlertService, SeDowngradeService } from 'smarteditcommons';\r\nvar AlertTypesMapping;\r\n(function (AlertTypesMapping) {\r\n    AlertTypesMapping[\"information\"] = \"showInfo\";\r\n    AlertTypesMapping[\"success\"] = \"showSuccess\";\r\n    AlertTypesMapping[\"warning\"] = \"showWarning\";\r\n    AlertTypesMapping[\"error\"] = \"showDanger\";\r\n})(AlertTypesMapping || (AlertTypesMapping = {}));\r\n/**\r\n * The actionableAlertService is used by external modules to render an\r\n * Alert structured around a description, an hyperlink label and a custom\r\n * controller.\r\n **/\r\nlet /* @ngInject */ ActionableAlertService = class /* @ngInject */ ActionableAlertService {\r\n    constructor(alertService) {\r\n        this.alertService = alertService;\r\n    }\r\n    /**\r\n     * @param alertContent A JSON object containing the specific configuration to be applied on the actionableAlert.\r\n     * @param alertType A string representing the type of alert to display. The string must match one of the types\r\n     * If the alert type is null, or it doesn't match any of the valid types this method will default to INFO.\r\n     */\r\n    displayActionableAlert(alertContent, alertType) {\r\n        const alertMethodName = this.getMethodNameByAlertType(alertType);\r\n        return this.alertService[alertMethodName](alertContent);\r\n    }\r\n    getMethodNameByAlertType(alertType) {\r\n        if (alertType && AlertTypesMapping[alertType]) {\r\n            return AlertTypesMapping[alertType];\r\n        }\r\n        return AlertTypesMapping.information;\r\n    }\r\n};\r\n/* @ngInject */ ActionableAlertService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [IAlertService])\r\n], /* @ngInject */ ActionableAlertService);\r\nexport { /* @ngInject */ ActionableAlertService };\r\n//# sourceMappingURL=ActionableAlertService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"ActionableAlertService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/actionableAlert/ActionableAlertService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAEH,aAAa,EAEb,kBAAkB,EACrB,MAAM,kBAAkB,CAAC;AAwB1B,IAAK,iBAKJ;AALD,WAAK,iBAAiB;IAClB,6CAAwB,CAAA;IACxB,4CAAuB,CAAA;IACvB,4CAAuB,CAAA;IACvB,yCAAoB,CAAA;AACxB,CAAC,EALI,iBAAiB,KAAjB,iBAAiB,QAKrB;AAED;;;;IAII;AAEJ,6CAAA;IACI,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;IAAG,CAAC;IAEnD;;;;OAIG;IACI,sBAAsB,CAAC,YAA0B,EAAE,SAA6B;QACnF,MAAM,eAAe,GAAG,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;QACjE,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC;IAC5D,CAAC;IAEO,wBAAwB,CAAC,SAA4B;QACzD,IAAI,SAAS,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE;YAC3C,OAAO,iBAAiB,CAAC,SAAS,CAAC,CAAC;SACvC;QACD,OAAO,iBAAiB,CAAC,WAAW,CAAC;IACzC,CAAC;CACJ,CAAA;AAnBD;IADC,kBAAkB,EAAE;qCAEiB,aAAa;0CAkBlD\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/actionableAlert/ActionableAlertService.d.ts","writeByteOrderMark":false,"text":"import { IAlertConfig, IAlertService, IAlertServiceType } from 'smarteditcommons';\r\n/**\r\n * AlertContent interface\r\n * This interface can be removed when clonePageAlertService and componentVisibilityAlertService are migrated\r\n */\r\nexport interface AlertContent {\r\n    /**\r\n     *  Function defining Angular controller consumed by the contextual alert.\r\n     */\r\n    controller: (...args: any[]) => void;\r\n    /**\r\n     * Description displayed within the contextual alert.\r\n     */\r\n    description: string;\r\n    /**\r\n     * Label for the hyperlink displayed within the contextual alert.\r\n     */\r\n    hyperLinkLabel: string;\r\n    /**\r\n     * The timeout duration of the cms alert item, in milliseconds. If not provided, the default is used.\r\n     */\r\n    timeoutDuration?: number;\r\n}\r\n/**\r\n * The actionableAlertService is used by external modules to render an\r\n * Alert structured around a description, an hyperlink label and a custom\r\n * controller.\r\n **/\r\nexport declare class ActionableAlertService {\r\n    private alertService;\r\n    constructor(alertService: IAlertService);\r\n    /**\r\n     * @param alertContent A JSON object containing the specific configuration to be applied on the actionableAlert.\r\n     * @param alertType A string representing the type of alert to display. The string must match one of the types\r\n     * If the alert type is null, or it doesn't match any of the valid types this method will default to INFO.\r\n     */\r\n    displayActionableAlert(alertContent: IAlertConfig, alertType?: IAlertServiceType): void;\r\n    private getMethodNameByAlertType;\r\n}\r\n"}}
