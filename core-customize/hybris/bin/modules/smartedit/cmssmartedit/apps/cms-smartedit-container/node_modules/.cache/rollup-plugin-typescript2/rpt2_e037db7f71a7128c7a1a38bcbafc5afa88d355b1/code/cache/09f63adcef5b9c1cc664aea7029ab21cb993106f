{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { isEmpty } from 'lodash';\r\nimport { ICatalogService, SeDowngradeComponent, VALIDATION_MESSAGE_TYPES, IPageService } from 'smarteditcommons';\r\nimport { CatalogVersionRestService } from '../../../../../dao';\r\nimport { PageFacade } from '../../../../../facades';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SelectTargetCatalogVersionComponent\", {\r\n    selector: 'se-select-target-catalog-version',\r\n    template: `<div class=\"target-catalog-version-selector-wrapper form-group\"><label for=\"se-catalog-version-selector-dropdown\" class=\"se-control-label\" translate=\"se.cms.clonepagewizard.options.targetcatalogversion.label\"></label><se-select *ngIf=\"!!catalogVersions.length\" id=\"se-catalog-version-selector-dropdown\" [(model)]=\"selectedCatalogVersion\" [fetchStrategy]=\"catalogVersionSelectorFetchStrategy\" [onChange]=\"onSelectionChange\" [searchEnabled]=\"false\" (getApi)=\"setSelectApi($event)\"></se-select><div *ngIf=\"catalogVersionContainsPageWithSameLabel\"><span class=\"help-block\" translate=\"se.cms.clonepagewizard.options.targetcatalogversion.label.exists.message\"></span></div></div>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet /* @ngInject */ SelectTargetCatalogVersionComponent = class /* @ngInject */ SelectTargetCatalogVersionComponent {\r\n    constructor(pageFacade, catalogVersionRestService, catalogService, pageService, cdr) {\r\n        this.pageFacade = pageFacade;\r\n        this.catalogVersionRestService = catalogVersionRestService;\r\n        this.catalogService = catalogService;\r\n        this.pageService = pageService;\r\n        this.cdr = cdr;\r\n        this.catalogVersions = [];\r\n        this.selectedCatalogVersion = null;\r\n        this.catalogVersionContainsPageWithSameLabel = false;\r\n        this.onTargetCatalogVersionSelected = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.catalogVersionSelectorFetchStrategy = {\r\n                fetchAll: () => Promise.resolve((this.catalogVersions || []).map((catalogVersion) => ({\r\n                    id: catalogVersion.uuid,\r\n                    label: catalogVersion.name\r\n                })))\r\n            };\r\n            this.onSelectionChange = () => this.selectionChangeHandler();\r\n            yield this.setupCatalogVersions();\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    setSelectApi(api) {\r\n        this.selectApi = api;\r\n    }\r\n    setupCatalogVersions() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const targets = yield this.catalogVersionRestService.getCloneableTargets(this.uriContext);\r\n            const catalogVersions = targets.versions;\r\n            if (!isEmpty(catalogVersions)) {\r\n                const uuid = yield this.catalogService.getCatalogVersionUUid(this.uriContext);\r\n                const currentCatalogVersion = catalogVersions.find((catalogVersion) => catalogVersion.uuid === uuid);\r\n                if (currentCatalogVersion) {\r\n                    this.selectedCatalogVersion = currentCatalogVersion.uuid;\r\n                }\r\n                else {\r\n                    this.selectedCatalogVersion = catalogVersions[0].uuid;\r\n                }\r\n                this.catalogVersions = catalogVersions;\r\n            }\r\n        });\r\n    }\r\n    selectionChangeHandler() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.selectedCatalogVersion) {\r\n                return;\r\n            }\r\n            const catalogVersion = yield this.catalogService.getCatalogVersionByUuid(this.selectedCatalogVersion);\r\n            this.onTargetCatalogVersionSelected.emit(catalogVersion);\r\n            if (this.pageTypeCode === 'ContentPage') {\r\n                this.catalogVersionContainsPageWithSameLabel = yield this.determineContentPageWithLabelExists(catalogVersion);\r\n            }\r\n            if (!this.cdr.destroyed) {\r\n                this.cdr.detectChanges();\r\n            }\r\n            this.updateSelectValidationState();\r\n        });\r\n    }\r\n    determineContentPageWithLabelExists(catalogVersion) {\r\n        return this.pageFacade.contentPageWithLabelExists(this.pageLabel, catalogVersion.catalogId, catalogVersion.version);\r\n    }\r\n    updateSelectValidationState() {\r\n        if (!this.selectApi) {\r\n            return;\r\n        }\r\n        if (this.catalogVersionContainsPageWithSameLabel) {\r\n            this.selectApi.setValidationState(VALIDATION_MESSAGE_TYPES.WARNING);\r\n        }\r\n        else {\r\n            this.selectApi.resetValidationState();\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ SelectTargetCatalogVersionComponent.prototype, \"uriContext\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ SelectTargetCatalogVersionComponent.prototype, \"pageTypeCode\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ SelectTargetCatalogVersionComponent.prototype, \"pageLabel\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ SelectTargetCatalogVersionComponent.prototype, \"onTargetCatalogVersionSelected\", void 0);\r\n/* @ngInject */ SelectTargetCatalogVersionComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-select-target-catalog-version',\r\n        template: `<div class=\"target-catalog-version-selector-wrapper form-group\"><label for=\"se-catalog-version-selector-dropdown\" class=\"se-control-label\" translate=\"se.cms.clonepagewizard.options.targetcatalogversion.label\"></label><se-select *ngIf=\"!!catalogVersions.length\" id=\"se-catalog-version-selector-dropdown\" [(model)]=\"selectedCatalogVersion\" [fetchStrategy]=\"catalogVersionSelectorFetchStrategy\" [onChange]=\"onSelectionChange\" [searchEnabled]=\"false\" (getApi)=\"setSelectApi($event)\"></se-select><div *ngIf=\"catalogVersionContainsPageWithSameLabel\"><span class=\"help-block\" translate=\"se.cms.clonepagewizard.options.targetcatalogversion.label.exists.message\"></span></div></div>`,\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    }),\r\n    __metadata(\"design:paramtypes\", [PageFacade,\r\n        CatalogVersionRestService,\r\n        ICatalogService,\r\n        IPageService,\r\n        ChangeDetectorRef])\r\n], /* @ngInject */ SelectTargetCatalogVersionComponent);\r\nexport { /* @ngInject */ SelectTargetCatalogVersionComponent };\r\n//# sourceMappingURL=SelectTargetCatalogVersionComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types+lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/index.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/facades/index.ts"],"map":"{\"version\":3,\"file\":\"SelectTargetCatalogVersionComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/pages/addPageWizard/components/selectTargetCatalogVersion/SelectTargetCatalogVersionComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/pages/addPageWizard/components/selectTargetCatalogVersion/SelectTargetCatalogVersionComponent.d.ts","writeByteOrderMark":false,"text":"import { OnInit, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { FetchStrategy, ICatalogService, ICatalogVersion, IUriContext, SelectApi, IPageService } from 'smarteditcommons';\r\nimport { CatalogVersionRestService } from '../../../../../dao';\r\nimport { PageFacade } from '../../../../../facades';\r\nexport declare class SelectTargetCatalogVersionComponent implements OnInit {\r\n    private readonly pageFacade;\r\n    private readonly catalogVersionRestService;\r\n    private readonly catalogService;\r\n    private readonly pageService;\r\n    private readonly cdr;\r\n    uriContext: IUriContext;\r\n    pageTypeCode: string;\r\n    pageLabel: string;\r\n    onTargetCatalogVersionSelected: EventEmitter<any>;\r\n    catalogVersions: ICatalogVersion[];\r\n    selectedCatalogVersion: string;\r\n    catalogVersionContainsPageWithSameLabel: boolean;\r\n    catalogVersionSelectorFetchStrategy: FetchStrategy;\r\n    onSelectionChange: () => Promise<void>;\r\n    selectApi: SelectApi;\r\n    constructor(pageFacade: PageFacade, catalogVersionRestService: CatalogVersionRestService, catalogService: ICatalogService, pageService: IPageService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    setSelectApi(api: SelectApi): void;\r\n    private setupCatalogVersions;\r\n    private selectionChangeHandler;\r\n    private determineContentPageWithLabelExists;\r\n    private updateSelectValidationState;\r\n}\r\n"}}
