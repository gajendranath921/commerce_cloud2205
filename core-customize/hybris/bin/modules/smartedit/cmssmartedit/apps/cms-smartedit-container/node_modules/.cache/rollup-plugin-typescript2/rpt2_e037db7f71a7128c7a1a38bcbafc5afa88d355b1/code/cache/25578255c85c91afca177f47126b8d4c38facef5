{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ComponentCloneOptionFormComponent\", {\r\n    selector: 'se-component-clone-option-form',\r\n    template: `<label for=\"components-cloned-selector-id\" class=\"se-control-label\"><span translate=\"se.cms.clonepagewizard.options.title\"></span><se-help><span translate=\"se.cms.clonepagewizard.options.tooltip\"></span></se-help></label><div id=\"components-cloned-selector-id\"><div class=\"se-form-control-row\"><input class=\"components-cloned-option-id fd-form__control\" type=\"radio\" name=\"componentsclone\" id=\"reference-cloning\" [(ngModel)]=\"componentInSlotOption\" (click)=\"updateComponentInSlotOption(CLONE_COMPONENTS_IN_CONTENT_SLOTS_OPTION.REFERENCE_EXISTING)\" [value]=\"CLONE_COMPONENTS_IN_CONTENT_SLOTS_OPTION.REFERENCE_EXISTING\"/> <label for=\"reference-cloning\" translate=\"se.cms.clonepagewizard.options.existing\"></label></div><div class=\"se-form-control-row\"><input class=\"components-cloned-option-id fd-form__control\" type=\"radio\" id=\"deep-cloning\" name=\"componentsclone\" [(ngModel)]=\"componentInSlotOption\" (click)=\"updateComponentInSlotOption(CLONE_COMPONENTS_IN_CONTENT_SLOTS_OPTION.CLONE)\" [value]=\"CLONE_COMPONENTS_IN_CONTENT_SLOTS_OPTION.CLONE\"/> <label for=\"deep-cloning\" translate=\"se.cms.clonepagewizard.options.copies\"></label></div></div>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet /* @ngInject */ ComponentCloneOptionFormComponent = class /* @ngInject */ ComponentCloneOptionFormComponent {\r\n    constructor() {\r\n        this.CLONE_COMPONENTS_IN_CONTENT_SLOTS_OPTION = {\r\n            REFERENCE_EXISTING: 'reference',\r\n            CLONE: 'clone'\r\n        };\r\n        this.onSelectionChange = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this.componentInSlotOption = this.CLONE_COMPONENTS_IN_CONTENT_SLOTS_OPTION.REFERENCE_EXISTING;\r\n        this.onSelectionChange.emit(this.componentInSlotOption);\r\n    }\r\n    updateComponentInSlotOption(option) {\r\n        this.onSelectionChange.emit(option);\r\n    }\r\n};\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ ComponentCloneOptionFormComponent.prototype, \"onSelectionChange\", void 0);\r\n/* @ngInject */ ComponentCloneOptionFormComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-component-clone-option-form',\r\n        template: `<label for=\"components-cloned-selector-id\" class=\"se-control-label\"><span translate=\"se.cms.clonepagewizard.options.title\"></span><se-help><span translate=\"se.cms.clonepagewizard.options.tooltip\"></span></se-help></label><div id=\"components-cloned-selector-id\"><div class=\"se-form-control-row\"><input class=\"components-cloned-option-id fd-form__control\" type=\"radio\" name=\"componentsclone\" id=\"reference-cloning\" [(ngModel)]=\"componentInSlotOption\" (click)=\"updateComponentInSlotOption(CLONE_COMPONENTS_IN_CONTENT_SLOTS_OPTION.REFERENCE_EXISTING)\" [value]=\"CLONE_COMPONENTS_IN_CONTENT_SLOTS_OPTION.REFERENCE_EXISTING\"/> <label for=\"reference-cloning\" translate=\"se.cms.clonepagewizard.options.existing\"></label></div><div class=\"se-form-control-row\"><input class=\"components-cloned-option-id fd-form__control\" type=\"radio\" id=\"deep-cloning\" name=\"componentsclone\" [(ngModel)]=\"componentInSlotOption\" (click)=\"updateComponentInSlotOption(CLONE_COMPONENTS_IN_CONTENT_SLOTS_OPTION.CLONE)\" [value]=\"CLONE_COMPONENTS_IN_CONTENT_SLOTS_OPTION.CLONE\"/> <label for=\"deep-cloning\" translate=\"se.cms.clonepagewizard.options.copies\"></label></div></div>`,\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], /* @ngInject */ ComponentCloneOptionFormComponent);\r\nexport { /* @ngInject */ ComponentCloneOptionFormComponent };\r\n//# sourceMappingURL=ComponentCloneOptionFormComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"ComponentCloneOptionFormComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/pages/clonePageWizard/components/clonePageOptions/ComponentCloneOptionFormComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,YAAY,EAAU,MAAM,EAAE,MAAM,eAAe,CAAC;AACjG,OAAO,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;2FAG7C;IACP,QAAQ,EAAE,gCAAgC;IAC1C,QAAQ,EAAE,unCAAunC;IACjoC,eAAe,EAAE,uBAAuB,CAAC,MAAM;CAClD;AACD,wDAAA;IASI;QALgB,6CAAwC,GAAG;YACvD,kBAAkB,EAAE,WAAW;YAC/B,KAAK,EAAE,OAAO;SACjB,CAAC;QAGE,IAAI,CAAC,iBAAiB,GAAG,IAAI,YAAY,EAAE,CAAC;IAChD,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,wCAAwC,CAAC,kBAAkB,CAAC;QAC9F,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC5D,CAAC;IAED,2BAA2B,CAAC,MAAc;QACtC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;CACJ,CAAA;AApBa;IAAT,MAAM,EAAE;8BAAoB,YAAY;4FAAS;AADtD;IANC,oBAAoB,EAAE;IACtB,SAAS,CAAC;QACP,QAAQ,EAAE,gCAAgC;QAC1C,QAAQ,EAAE,unCAAunC;QACjoC,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAClD,CAAC;;qDAsBD\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/pages/clonePageWizard/components/clonePageOptions/ComponentCloneOptionFormComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, OnInit } from '@angular/core';\r\nexport declare class ComponentCloneOptionFormComponent implements OnInit {\r\n    onSelectionChange: EventEmitter<string>;\r\n    componentInSlotOption: string;\r\n    readonly CLONE_COMPONENTS_IN_CONTENT_SLOTS_OPTION: {\r\n        REFERENCE_EXISTING: string;\r\n        CLONE: string;\r\n    };\r\n    constructor();\r\n    ngOnInit(): void;\r\n    updateComponentInSlotOption(option: string): void;\r\n}\r\n"}}
