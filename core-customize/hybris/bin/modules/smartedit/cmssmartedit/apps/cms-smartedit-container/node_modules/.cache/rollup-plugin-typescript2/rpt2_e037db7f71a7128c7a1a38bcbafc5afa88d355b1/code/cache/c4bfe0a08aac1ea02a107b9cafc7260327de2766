{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output, Type } from '@angular/core';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ItemSelectorPanelComponent\", {\r\n    selector: 'se-item-selector-panel',\r\n    template: `<se-slider-panel [sliderPanelConfiguration]=\"panelConfig\" [(sliderPanelHide)]=\"hidePanel\" [(sliderPanelShow)]=\"showPanel\" class=\"se-item-selector-panel\"><div *ngIf=\"catalogs.length > 0\"><div *ngIf=\"catalogs.length > 1\" class=\"se-item-selector-panel__selector\"><label class=\"se-control-label\" translate=\"se.cms.catalogaware.panel.catalogs.label\"></label><se-select id=\"se-catalog-selector-dropdown\" [(model)]=\"catalogInfo.catalogId\" [fetchStrategy]=\"catalogSelectorFetchStrategy\" [onChange]=\"onCatalogSelectorChange\"></se-select><label>{{ catalogInfo.name | seL10n | async }}</label></div><div class=\"se-item-selector-panel__selector\"><label class=\"se-control-label\" translate=\"se.cms.catalogaware.panel.catalogsversion.label\"></label><se-select id=\"se-catalog-version-selector-dropdown\" [(model)]=\"catalogInfo.catalogVersion\" [fetchStrategy]=\"catalogVersionSelectorFetchStrategy\" [onChange]=\"onCatalogVersionSelectorChange\" [searchEnabled]=\"false\" [(reset)]=\"resetCatalogVersionSelector\"></se-select></div><div class=\"se-item-selector-panel__selector\" *ngIf=\"catalogInfo.catalogVersion\"><label class=\"se-control-label\" [translate]=\"catalogItemTypeI18nKey\"></label><se-select id=\"se-items-selector-dropdown\" [multiSelect]=\"true\" [controls]=\"true\" [(model)]=\"internalItemsSelected\" [onChange]=\"onItemsSelectorChange\" [fetchStrategy]=\"itemsSelectorFetchStrategy\" [(reset)]=\"resetItemsListSelector\" [itemComponent]=\"itemComponent\" [isReadOnly]=\"!isItemSelectorEnabled()\"></se-select></div></div></se-slider-panel>`,\r\n    styles: [`.se-item-selector-panel__selector{margin-bottom:25px}`]\r\n});\r\nlet /* @ngInject */ ItemSelectorPanelComponent = class /* @ngInject */ ItemSelectorPanelComponent {\r\n    constructor() {\r\n        this.onSaveChanges = new EventEmitter();\r\n        this.catalogs = [];\r\n        this.catalogInfo = {};\r\n        this.saveButtonDisabled = true;\r\n        this.internalItemsSelected = [];\r\n        this.initOnCatalogSelectorChange();\r\n        this.initOnCatalogVersionSelectorChange();\r\n        this.initOnItemsSelectorChange();\r\n    }\r\n    ngOnInit() {\r\n        this.panelConfig = {\r\n            cssSelector: '#y-modal-dialog',\r\n            noGreyedOutOverlay: true,\r\n            modal: {\r\n                title: this.catalogItemTypeI18nKey,\r\n                showDismissButton: false,\r\n                cancel: {\r\n                    onClick: () => this.cancel(),\r\n                    label: 'se.cms.catalogaware.panel.button.cancel',\r\n                    isDisabledFn: () => false\r\n                },\r\n                save: {\r\n                    onClick: () => this.saveChanges(),\r\n                    label: 'se.cms.catalogaware.panel.button.add',\r\n                    isDisabledFn: () => this.isSaveButtonDisabled()\r\n                }\r\n            }\r\n        };\r\n        return this.initCatalogs();\r\n    }\r\n    initAndShowPanel(selectedItems) {\r\n        this.catalogInfo = {};\r\n        this.initCatalogs();\r\n        this.internalItemsSelected = selectedItems || [];\r\n        this.showPanel();\r\n    }\r\n    isItemSelectorEnabled() {\r\n        return (this.catalogInfo && !!this.catalogInfo.catalogId && !!this.catalogInfo.catalogVersion);\r\n    }\r\n    initOnCatalogSelectorChange() {\r\n        this.onCatalogSelectorChange = () => {\r\n            if (this.resetCatalogVersionSelector) {\r\n                this.resetCatalogVersionSelector();\r\n            }\r\n        };\r\n    }\r\n    initOnCatalogVersionSelectorChange() {\r\n        this.onCatalogVersionSelectorChange = () => {\r\n            if (this.catalogInfo.catalogId && this.catalogInfo.catalogVersion) {\r\n                if (this.resetItemsListSelector) {\r\n                    this.resetItemsListSelector();\r\n                }\r\n            }\r\n        };\r\n    }\r\n    initOnItemsSelectorChange() {\r\n        this.onItemsSelectorChange = () => {\r\n            if (this.isItemSelectorEnabled()) {\r\n                this.saveButtonDisabled = false;\r\n            }\r\n        };\r\n    }\r\n    initCatalogs() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.catalogs = yield this.getCatalogs();\r\n            if (this.catalogs.length === 1) {\r\n                this.catalogInfo.catalogId = this.catalogs[0].id;\r\n            }\r\n            this.initCatalogSelector();\r\n            this.initCatalogVersionSelector();\r\n            this.initItemsSelector();\r\n        });\r\n    }\r\n    initCatalogSelector() {\r\n        this.catalogSelectorFetchStrategy = {\r\n            fetchAll: () => Promise.resolve(this.catalogs)\r\n        };\r\n    }\r\n    initCatalogVersionSelector() {\r\n        this.catalogVersionSelectorFetchStrategy = {\r\n            fetchAll: () => {\r\n                let versions = [];\r\n                if (this.catalogInfo.catalogId) {\r\n                    const catalog = this.catalogs.find(({ id }) => id === this.catalogInfo.catalogId);\r\n                    versions = catalog.versions.slice(0);\r\n                }\r\n                return Promise.resolve(versions);\r\n            }\r\n        };\r\n    }\r\n    initItemsSelector() {\r\n        this.itemsSelectorFetchStrategy = {\r\n            fetchPage: (mask, pageSize, currentPage) => this.itemsFetchPageAndFilter(mask, pageSize, currentPage),\r\n            fetchEntity: (uid) => this.itemsFetchStrategy.fetchEntity(uid)\r\n        };\r\n    }\r\n    itemsFetchPageAndFilter(mask, pageSize, currentPage) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const page = yield this.itemsFetchStrategy.fetchPage(this.catalogInfo, mask, pageSize, currentPage);\r\n            return this.limitToNonSelectedItems(page);\r\n        });\r\n    }\r\n    limitToNonSelectedItems(page) {\r\n        let itemIndex = page.results.length;\r\n        while (itemIndex--) {\r\n            const item = page.results[itemIndex];\r\n            if (this.internalItemsSelected.includes(item.uid)) {\r\n                page.results.splice(itemIndex, 1);\r\n                page.pagination.count--;\r\n            }\r\n        }\r\n        return page;\r\n    }\r\n    isSaveButtonDisabled() {\r\n        return this.saveButtonDisabled;\r\n    }\r\n    cancel() {\r\n        this.catalogInfo = {};\r\n        this.hidePanel();\r\n    }\r\n    saveChanges() {\r\n        this.onSaveChanges.emit([...this.internalItemsSelected]);\r\n        this.hidePanel();\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Type)\r\n], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"itemComponent\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"getCatalogs\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"itemsFetchStrategy\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"catalogItemTypeI18nKey\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"onSaveChanges\", void 0);\r\n/* @ngInject */ ItemSelectorPanelComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-item-selector-panel',\r\n        template: `<se-slider-panel [sliderPanelConfiguration]=\"panelConfig\" [(sliderPanelHide)]=\"hidePanel\" [(sliderPanelShow)]=\"showPanel\" class=\"se-item-selector-panel\"><div *ngIf=\"catalogs.length > 0\"><div *ngIf=\"catalogs.length > 1\" class=\"se-item-selector-panel__selector\"><label class=\"se-control-label\" translate=\"se.cms.catalogaware.panel.catalogs.label\"></label><se-select id=\"se-catalog-selector-dropdown\" [(model)]=\"catalogInfo.catalogId\" [fetchStrategy]=\"catalogSelectorFetchStrategy\" [onChange]=\"onCatalogSelectorChange\"></se-select><label>{{ catalogInfo.name | seL10n | async }}</label></div><div class=\"se-item-selector-panel__selector\"><label class=\"se-control-label\" translate=\"se.cms.catalogaware.panel.catalogsversion.label\"></label><se-select id=\"se-catalog-version-selector-dropdown\" [(model)]=\"catalogInfo.catalogVersion\" [fetchStrategy]=\"catalogVersionSelectorFetchStrategy\" [onChange]=\"onCatalogVersionSelectorChange\" [searchEnabled]=\"false\" [(reset)]=\"resetCatalogVersionSelector\"></se-select></div><div class=\"se-item-selector-panel__selector\" *ngIf=\"catalogInfo.catalogVersion\"><label class=\"se-control-label\" [translate]=\"catalogItemTypeI18nKey\"></label><se-select id=\"se-items-selector-dropdown\" [multiSelect]=\"true\" [controls]=\"true\" [(model)]=\"internalItemsSelected\" [onChange]=\"onItemsSelectorChange\" [fetchStrategy]=\"itemsSelectorFetchStrategy\" [(reset)]=\"resetItemsListSelector\" [itemComponent]=\"itemComponent\" [isReadOnly]=\"!isItemSelectorEnabled()\"></se-select></div></div></se-slider-panel>`,\r\n        styles: [`.se-item-selector-panel__selector{margin-bottom:25px}`]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], /* @ngInject */ ItemSelectorPanelComponent);\r\nexport { /* @ngInject */ ItemSelectorPanelComponent };\r\n//# sourceMappingURL=ItemSelectorPanelComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/genericEditor/dropdownPopulators/types.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/genericEditor/catalog/services/index.ts"],"map":"{\"version\":3,\"file\":\"ItemSelectorPanelComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/genericEditor/catalog/components/itemSelectorPanel/ItemSelectorPanelComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/genericEditor/catalog/components/itemSelectorPanel/ItemSelectorPanelComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, OnInit, Type } from '@angular/core';\r\nimport { FetchStrategy, SelectReset, SliderPanelConfiguration } from 'smarteditcommons';\r\nimport { PopulatorItem } from '../../../dropdownPopulators/types';\r\nimport { CatalogFetchStrategy, ProductCatalog } from '../../services';\r\ninterface CatalogInfo {\r\n    catalogId: string;\r\n    catalogVersion: string;\r\n}\r\nexport declare class ItemSelectorPanelComponent implements OnInit {\r\n    itemComponent: Type<any>;\r\n    getCatalogs: () => Promise<ProductCatalog[]>;\r\n    itemsFetchStrategy: CatalogFetchStrategy<PopulatorItem>;\r\n    catalogItemTypeI18nKey: string;\r\n    onSaveChanges: EventEmitter<string[]>;\r\n    catalogs: ProductCatalog[];\r\n    catalogInfo: CatalogInfo;\r\n    panelConfig: SliderPanelConfiguration;\r\n    saveButtonDisabled: boolean;\r\n    internalItemsSelected: string[];\r\n    resetCatalogVersionSelector: SelectReset;\r\n    resetItemsListSelector: SelectReset;\r\n    catalogSelectorFetchStrategy: FetchStrategy;\r\n    catalogVersionSelectorFetchStrategy: FetchStrategy;\r\n    itemsSelectorFetchStrategy: FetchStrategy;\r\n    onCatalogSelectorChange: () => void;\r\n    onCatalogVersionSelectorChange: () => void;\r\n    onItemsSelectorChange: () => void;\r\n    hidePanel: () => Promise<void>;\r\n    showPanel: () => Promise<void>;\r\n    constructor();\r\n    ngOnInit(): Promise<void>;\r\n    initAndShowPanel(selectedItems: string[]): void;\r\n    isItemSelectorEnabled(): boolean;\r\n    private initOnCatalogSelectorChange;\r\n    private initOnCatalogVersionSelectorChange;\r\n    private initOnItemsSelectorChange;\r\n    private initCatalogs;\r\n    private initCatalogSelector;\r\n    private initCatalogVersionSelector;\r\n    private initItemsSelector;\r\n    private itemsFetchPageAndFilter;\r\n    private limitToNonSelectedItems;\r\n    private isSaveButtonDisabled;\r\n    private cancel;\r\n    private saveChanges;\r\n}\r\nexport {};\r\n"}}
