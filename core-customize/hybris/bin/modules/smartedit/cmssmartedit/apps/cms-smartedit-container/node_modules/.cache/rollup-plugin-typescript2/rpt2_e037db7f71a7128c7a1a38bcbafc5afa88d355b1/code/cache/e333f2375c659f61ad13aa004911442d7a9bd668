{"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2022 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { AttributePermissionsRestService, TypePermissionsRestService } from 'cmscommons';\r\nimport { ICatalogService, ICatalogVersionPermissionService, IExperienceService, IPermissionService, ISharedDataService, SeDowngradeService, windowUtils, EXPERIENCE_STORAGE_KEY, CMSModesService, IPageService, WorkflowService } from 'smarteditcommons';\r\nimport { RULE_PERMISSION_CATALOG_NON_ACTIVE, RULE_PERMISSION_NOT_VERSIONING_PERSPECTIVE, RULE_PERMISSION_VERSION_PAGE_SELECTED, RULE_PERMISSION_CURRENT_PAGE_HAS_ACTIVE_WORKFLOW, RULE_PERMISSION_HAS_CHANGE_TYPE_PERMISSION_ON_CURRENT_PAGE, RULE_PERMISSION_HAS_READ_TYPE_PERMISSION_ON_CURRENT_PAGE, RULE_PERMISSION_HAS_READ_PERMISSION_ON_VERSION_TYPE, RULE_PERMISSION_HAS_CREATE_PERMISSION_ON_VERSION_TYPE, RULE_PERMISSION_HAS_CHANGE_PERMISSION_ON_WORKFLOW_TYPE, RULE_PERMISSION_WRITE_PAGE, RULE_PERMISSION_WRITE_SLOT, RULE_PERMISSION_WRITE_COMPONENT, RULE_PERMISSION_WRITE_TO_CURRENT_CATALOG_VERSION, RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW, RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_WORKFLOW_CURRENT_ACTION, RULE_PERMISSION_SYNC_CATALOG, RULE_PERMISSION_READ_PAGE, RULE_PERMISSION_READ_SLOT, RULE_PERMISSION_READ_COMPONENT, RULE_PERMISSION_READ_CURRENT_CATALOG_VERSION, RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE } from '../constants';\r\nimport { CatalogVersionRestService } from '../dao';\r\nlet /* @ngInject */ RulesAndPermissionsRegistrationService = class /* @ngInject */ RulesAndPermissionsRegistrationService {\r\n    constructor(attributePermissionsRestService, catalogService, catalogVersionPermissionService, catalogVersionRestService, cMSModesService, experienceService, pageService, permissionService, sharedDataService, typePermissionsRestService, workflowService) {\r\n        this.attributePermissionsRestService = attributePermissionsRestService;\r\n        this.catalogService = catalogService;\r\n        this.catalogVersionPermissionService = catalogVersionPermissionService;\r\n        this.catalogVersionRestService = catalogVersionRestService;\r\n        this.cMSModesService = cMSModesService;\r\n        this.experienceService = experienceService;\r\n        this.pageService = pageService;\r\n        this.permissionService = permissionService;\r\n        this.sharedDataService = sharedDataService;\r\n        this.typePermissionsRestService = typePermissionsRestService;\r\n        this.workflowService = workflowService;\r\n    }\r\n    register() {\r\n        this.registerRules();\r\n        this.registerRulesForTypeCodeFromContext();\r\n        this.registerRulesForCurrentPage();\r\n        this.registerRulesForTypeCode();\r\n        this.registerRulesForTypeAndQualifier();\r\n        this.registerPermissions();\r\n    }\r\n    onSuccess(results) {\r\n        return results.every((isValid) => isValid);\r\n    }\r\n    onError() {\r\n        return false;\r\n    }\r\n    getCurrentPageActiveWorkflow() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!windowUtils.getGatewayTargetFrame()) {\r\n                return null;\r\n            }\r\n            const { uuid } = yield this.pageService.getCurrentPageInfo();\r\n            return this.workflowService.getActiveWorkflowForPageUuid(uuid);\r\n        });\r\n    }\r\n    registerRules() {\r\n        this.permissionService.registerRule({\r\n            names: [\r\n                RULE_PERMISSION_WRITE_PAGE,\r\n                RULE_PERMISSION_WRITE_SLOT,\r\n                RULE_PERMISSION_WRITE_COMPONENT,\r\n                RULE_PERMISSION_WRITE_TO_CURRENT_CATALOG_VERSION\r\n            ],\r\n            verify: (permissionNameObjs) => {\r\n                const promises = permissionNameObjs.map((permissionNameObject) => {\r\n                    if (permissionNameObject.context) {\r\n                        return this.catalogVersionPermissionService.hasWritePermission(permissionNameObject.context.catalogId, permissionNameObject.context.catalogVersion);\r\n                    }\r\n                    else {\r\n                        return this.catalogVersionPermissionService.hasWritePermissionOnCurrent();\r\n                    }\r\n                });\r\n                return Promise.all(promises).then(this.onSuccess, this.onError);\r\n            }\r\n        });\r\n        /**\r\n         * This rule returns true if the page is in a workflow and current user is participant of this workflow\r\n         * or there is no workflow.\r\n         * Otherwise, it returns false;\r\n         */\r\n        this.permissionService.registerRule({\r\n            names: [RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW],\r\n            verify: (permissionNameObjs) => {\r\n                const isAvailableForCurrentPrincipal = (workflow) => workflow === null ? true : workflow.isAvailableForCurrentPrincipal;\r\n                const promises = permissionNameObjs.map((permissionNameObject) => {\r\n                    if (permissionNameObject.context) {\r\n                        return this.workflowService\r\n                            .getActiveWorkflowForPageUuid(permissionNameObject.context.pageInfo.uuid)\r\n                            .then((workflow) => isAvailableForCurrentPrincipal(workflow));\r\n                    }\r\n                    else {\r\n                        return this.getCurrentPageActiveWorkflow().then((workflow) => isAvailableForCurrentPrincipal(workflow), () => true);\r\n                    }\r\n                });\r\n                return Promise.all(promises).then(this.onSuccess, this.onError);\r\n            }\r\n        });\r\n        /**\r\n         * This rule returns true if the current user is a participant of currently active step of a workflow\r\n         * or there is no workflow.\r\n         * Otherwise, it returns false;\r\n         */\r\n        this.permissionService.registerRule({\r\n            names: [RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_WORKFLOW_CURRENT_ACTION],\r\n            verify: (permissionNameObjs) => {\r\n                const isUserParticipant = (workflow) => __awaiter(this, void 0, void 0, function* () {\r\n                    return workflow === null\r\n                        ? true\r\n                        : this.workflowService.isUserParticipanInActiveAction(workflow.workflowCode);\r\n                });\r\n                const promises = permissionNameObjs.map((permissionNameObject) => {\r\n                    if (permissionNameObject.context) {\r\n                        return this.workflowService\r\n                            .getActiveWorkflowForPageUuid(permissionNameObject.context.pageInfo.uuid)\r\n                            .then((workflow) => isUserParticipant(workflow));\r\n                    }\r\n                    else {\r\n                        return this.getCurrentPageActiveWorkflow().then((workflow) => isUserParticipant(workflow), () => true);\r\n                    }\r\n                });\r\n                return Promise.all(promises).then(this.onSuccess, this.onError);\r\n            }\r\n        });\r\n        this.permissionService.registerRule({\r\n            names: [RULE_PERMISSION_SYNC_CATALOG],\r\n            verify: (permissionNameObjs) => {\r\n                const promises = permissionNameObjs.map((permissionNameObject) => {\r\n                    if (permissionNameObject.context) {\r\n                        return this.catalogVersionPermissionService.hasSyncPermission(permissionNameObject.context.catalogId, permissionNameObject.context.catalogVersion, permissionNameObject.context.targetCatalogVersion);\r\n                    }\r\n                    else {\r\n                        return this.catalogVersionPermissionService.hasSyncPermissionFromCurrentToActiveCatalogVersion();\r\n                    }\r\n                });\r\n                return Promise.all(promises).then(this.onSuccess, this.onError);\r\n            }\r\n        });\r\n        this.permissionService.registerRule({\r\n            names: ['se.approval.status.page'],\r\n            verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                const { approvalStatus } = yield this.pageService.getCurrentPageInfo();\r\n                return approvalStatus === 'APPROVED';\r\n            })\r\n        });\r\n        this.permissionService.registerRule({\r\n            names: [\r\n                RULE_PERMISSION_READ_PAGE,\r\n                RULE_PERMISSION_READ_SLOT,\r\n                RULE_PERMISSION_READ_COMPONENT,\r\n                RULE_PERMISSION_READ_CURRENT_CATALOG_VERSION\r\n            ],\r\n            verify: () => this.catalogVersionPermissionService.hasReadPermissionOnCurrent()\r\n        });\r\n        this.permissionService.registerRule({\r\n            names: [RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE],\r\n            verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                const experience = (yield this.sharedDataService.get(EXPERIENCE_STORAGE_KEY));\r\n                return (experience.pageContext &&\r\n                    experience.pageContext.catalogVersionUuid ===\r\n                        experience.catalogDescriptor.catalogVersionUuid);\r\n            })\r\n        });\r\n        /**\r\n         * Show the clone icon:\r\n         * - If a page belonging to an active catalog version, whose copyToCatalogsDisabled flag is set to false and has at-least one clonable target.\r\n         * - If a page belonging to a non active catalog version has at-least one clonable target.\r\n         *\r\n         * !NOTE: Logic here is very similar to logic used in ManagePageService#isPageCloneable, so if any changes are done here it should be considered to add those changes in mentioned service as well\r\n         */\r\n        this.permissionService.registerRule({\r\n            names: ['se.cloneable.page'],\r\n            verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                const experience = (yield this.sharedDataService.get(EXPERIENCE_STORAGE_KEY));\r\n                if (!experience.pageContext) {\r\n                    return false;\r\n                }\r\n                const pageUriContext = {\r\n                    CURRENT_CONTEXT_SITE_ID: experience.pageContext.siteId,\r\n                    CURRENT_CONTEXT_CATALOG: experience.pageContext.catalogId,\r\n                    CURRENT_CONTEXT_CATALOG_VERSION: experience.pageContext.catalogVersion\r\n                };\r\n                const pageInfo = yield this.pageService.getCurrentPageInfo();\r\n                const targets = yield this.catalogVersionRestService.getCloneableTargets(pageUriContext);\r\n                if (experience.pageContext.active) {\r\n                    return targets.versions.length > 0 && !pageInfo.copyToCatalogsDisabled;\r\n                }\r\n                return targets.versions.length > 0;\r\n            })\r\n        });\r\n        this.permissionService.registerRule({\r\n            names: [RULE_PERMISSION_CATALOG_NON_ACTIVE],\r\n            verify: () => this.catalogService.isContentCatalogVersionNonActive()\r\n        });\r\n        this.permissionService.registerRule({\r\n            names: [RULE_PERMISSION_NOT_VERSIONING_PERSPECTIVE],\r\n            verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                const isActive = yield this.cMSModesService.isVersioningPerspectiveActive();\r\n                return !isActive;\r\n            })\r\n        });\r\n        this.permissionService.registerRule({\r\n            names: [RULE_PERMISSION_VERSION_PAGE_SELECTED],\r\n            verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                const experience = yield this.experienceService.getCurrentExperience();\r\n                return !!experience.versionId;\r\n            })\r\n        });\r\n        this.permissionService.registerRule({\r\n            names: ['se.version.page.not.selected'],\r\n            verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                const experience = yield this.experienceService.getCurrentExperience();\r\n                return !experience.versionId;\r\n            })\r\n        });\r\n        this.permissionService.registerRule({\r\n            names: ['se.catalogversion.has.workflows.enabled'],\r\n            verify: () => this.workflowService.areWorkflowsEnabledOnCurrentCatalogVersion()\r\n        });\r\n        this.permissionService.registerRule({\r\n            names: [RULE_PERMISSION_CURRENT_PAGE_HAS_ACTIVE_WORKFLOW],\r\n            verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                const workflow = yield this.getCurrentPageActiveWorkflow();\r\n                return workflow !== null;\r\n            })\r\n        });\r\n        this.permissionService.registerRule({\r\n            names: ['se.current.page.has.no.active.workflow'],\r\n            verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                const workflow = yield this.getCurrentPageActiveWorkflow();\r\n                return workflow === null;\r\n            })\r\n        });\r\n        // Attribute Permissions\r\n        this.permissionService.registerRule({\r\n            names: ['se.has.change.permission.on.page.approval.status'],\r\n            verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                const attributeName = 'approvalStatus';\r\n                const pageInfo = yield this.pageService.getCurrentPageInfo();\r\n                const result = yield this.attributePermissionsRestService.hasChangePermissionOnAttributesInType(pageInfo.typeCode, [attributeName]);\r\n                return result[attributeName];\r\n            })\r\n        });\r\n    }\r\n    registerRulesForTypeCodeFromContext() {\r\n        const registerTypePermissionRuleForTypeCodeFromContext = (ruleName, verifyRule) => {\r\n            this.permissionService.registerRule({\r\n                names: [ruleName],\r\n                verify: (permissionNameObjs) => {\r\n                    const promises = permissionNameObjs.map((permissionNameObject) => verifyRule([permissionNameObject.context.typeCode]).then((updatePermission) => updatePermission[permissionNameObject.context.typeCode]));\r\n                    return Promise.all(promises).then(this.onSuccess, this.onError);\r\n                }\r\n            });\r\n        };\r\n        // check if the current user has change permission on the type provided part of the permission object\r\n        registerTypePermissionRuleForTypeCodeFromContext('se.has.change.permissions.on.type', (types) => this.typePermissionsRestService.hasUpdatePermissionForTypes(types));\r\n        // check if the current user has create permission on the type provided part of the permission object\r\n        registerTypePermissionRuleForTypeCodeFromContext('se.has.create.permissions.on.type', (types) => this.typePermissionsRestService.hasCreatePermissionForTypes(types));\r\n        // check if the current user has remove permission on the type provided part of the permission object\r\n        registerTypePermissionRuleForTypeCodeFromContext('se.has.remove.permissions.on.type', (types) => this.typePermissionsRestService.hasDeletePermissionForTypes(types));\r\n    }\r\n    registerRulesForCurrentPage() {\r\n        const registerTypePermissionRuleOnCurrentPage = (ruleName, verifyRule) => {\r\n            this.permissionService.registerRule({\r\n                names: [ruleName],\r\n                verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                    const pageInfo = yield this.pageService.getCurrentPageInfo();\r\n                    const permissionObject = yield verifyRule([pageInfo.typeCode]);\r\n                    return permissionObject[pageInfo.typeCode];\r\n                })\r\n            });\r\n        };\r\n        // check if the current user has change permission on the page currently loaded\r\n        registerTypePermissionRuleOnCurrentPage(RULE_PERMISSION_HAS_CHANGE_TYPE_PERMISSION_ON_CURRENT_PAGE, (types) => this.typePermissionsRestService.hasUpdatePermissionForTypes(types));\r\n        // check if the current user has create permission on the page currently loaded\r\n        registerTypePermissionRuleOnCurrentPage('se.has.create.type.permissions.on.current.page', (types) => this.typePermissionsRestService.hasCreatePermissionForTypes(types));\r\n        // check if the current user has read permission on the page currently loaded\r\n        registerTypePermissionRuleOnCurrentPage(RULE_PERMISSION_HAS_READ_TYPE_PERMISSION_ON_CURRENT_PAGE, (types) => this.typePermissionsRestService.hasReadPermissionForTypes(types));\r\n    }\r\n    registerRulesForTypeCode() {\r\n        const registerTypePermissionRuleForTypeCode = (ruleName, itemType, verifyRule) => {\r\n            this.permissionService.registerRule({\r\n                names: [ruleName],\r\n                verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                    const UpdatePermission = yield verifyRule([itemType]);\r\n                    return UpdatePermission[itemType];\r\n                })\r\n            });\r\n        };\r\n        // check if the current user has read/create/remove/change permission on the CMSVersion type\r\n        registerTypePermissionRuleForTypeCode(RULE_PERMISSION_HAS_READ_PERMISSION_ON_VERSION_TYPE, 'CMSVersion', (types) => this.typePermissionsRestService.hasReadPermissionForTypes(types));\r\n        registerTypePermissionRuleForTypeCode(RULE_PERMISSION_HAS_CREATE_PERMISSION_ON_VERSION_TYPE, 'CMSVersion', (types) => this.typePermissionsRestService.hasCreatePermissionForTypes(types));\r\n        registerTypePermissionRuleForTypeCode('se.has.remove.permission.on.version.type', 'CMSVersion', (types) => this.typePermissionsRestService.hasDeletePermissionForTypes(types));\r\n        registerTypePermissionRuleForTypeCode('se.has.change.permission.on.version.type', 'CMSVersion', (types) => this.typePermissionsRestService.hasUpdatePermissionForTypes(types));\r\n        registerTypePermissionRuleForTypeCode('se.has.create.permission.on.abstractcomponent.type', 'AbstractCMSComponent', (types) => this.typePermissionsRestService.hasCreatePermissionForTypes(types));\r\n        registerTypePermissionRuleForTypeCode('se.has.change.permission.on.contentslotforpage.type', 'ContentSlotForPage', (types) => this.typePermissionsRestService.hasUpdatePermissionForTypes(types));\r\n        // check if current user has create/change permission on the Workflow type\r\n        registerTypePermissionRuleForTypeCode('se.has.create.permission.on.workflow.type', 'Workflow', (types) => this.typePermissionsRestService.hasCreatePermissionForTypes(types));\r\n        registerTypePermissionRuleForTypeCode(RULE_PERMISSION_HAS_CHANGE_PERMISSION_ON_WORKFLOW_TYPE, 'Workflow', (types) => this.typePermissionsRestService.hasUpdatePermissionForTypes(types));\r\n        registerTypePermissionRuleForTypeCode('se.has.read.permission.on.workflow.type', 'Workflow', (types) => this.typePermissionsRestService.hasReadPermissionForTypes(types));\r\n        registerTypePermissionRuleForTypeCode('se.has.create.permission.on.contentslot.type', 'ContentSlot', (types) => this.typePermissionsRestService.hasCreatePermissionForTypes(types));\r\n        registerTypePermissionRuleForTypeCode('se.has.delete.permission.on.contentslot.type', 'ContentSlot', (types) => this.typePermissionsRestService.hasDeletePermissionForTypes(types));\r\n    }\r\n    registerRulesForTypeAndQualifier() {\r\n        const registerAttributePermissionRuleForTypeAndQualifier = (ruleName, itemType, qualifier, verifyRule) => {\r\n            this.permissionService.registerRule({\r\n                names: [ruleName],\r\n                verify: () => __awaiter(this, void 0, void 0, function* () {\r\n                    const data = yield verifyRule(itemType, [qualifier]);\r\n                    return data[qualifier];\r\n                })\r\n            });\r\n        };\r\n        registerAttributePermissionRuleForTypeAndQualifier('se.has.change.permission.on.workflow.status', 'Workflow', 'status', (type, attributeNames) => this.attributePermissionsRestService.hasChangePermissionOnAttributesInType(type, attributeNames));\r\n        registerAttributePermissionRuleForTypeAndQualifier('se.has.change.permission.on.workflow.description', 'Workflow', 'description', (type, attributeNames) => this.attributePermissionsRestService.hasChangePermissionOnAttributesInType(type, attributeNames));\r\n    }\r\n    registerPermissions() {\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.add.component'],\r\n            rules: [\r\n                RULE_PERMISSION_WRITE_SLOT,\r\n                RULE_PERMISSION_WRITE_COMPONENT,\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_HAS_CHANGE_TYPE_PERMISSION_ON_CURRENT_PAGE,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_WORKFLOW_CURRENT_ACTION,\r\n                'se.has.create.permission.on.abstractcomponent.type'\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: [RULE_PERMISSION_READ_PAGE],\r\n            rules: [RULE_PERMISSION_READ_PAGE]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.edit.page'],\r\n            rules: [\r\n                RULE_PERMISSION_WRITE_PAGE,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: [RULE_PERMISSION_SYNC_CATALOG],\r\n            rules: [RULE_PERMISSION_SYNC_CATALOG]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.sync.slot.context.menu', 'se.sync.slot.indicator'],\r\n            rules: [\r\n                RULE_PERMISSION_SYNC_CATALOG,\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.sync.page'],\r\n            rules: [\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.edit.navigation'],\r\n            rules: [RULE_PERMISSION_WRITE_COMPONENT]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.context.menu.remove.component'],\r\n            rules: [\r\n                RULE_PERMISSION_WRITE_SLOT,\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_WORKFLOW_CURRENT_ACTION\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.slot.context.menu.shared.icon', 'se.slot.context.menu.unshared.icon'],\r\n            rules: [\r\n                'se.read.slot',\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_WORKFLOW_CURRENT_ACTION\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.slot.context.menu.visibility'],\r\n            rules: [RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.clone.page'],\r\n            rules: ['se.cloneable.page', 'se.has.create.type.permissions.on.current.page']\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.context.menu.edit.component'],\r\n            rules: [\r\n                RULE_PERMISSION_WRITE_COMPONENT,\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.context.menu.drag.and.drop.component'],\r\n            rules: [\r\n                RULE_PERMISSION_WRITE_SLOT,\r\n                RULE_PERMISSION_WRITE_COMPONENT,\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_WORKFLOW_CURRENT_ACTION,\r\n                'se.has.change.permission.on.contentslotforpage.type'\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.edit.page.link', 'se.delete.page.menu'],\r\n            rules: [\r\n                RULE_PERMISSION_WRITE_PAGE,\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_NOT_VERSIONING_PERSPECTIVE,\r\n                RULE_PERMISSION_HAS_CHANGE_TYPE_PERMISSION_ON_CURRENT_PAGE,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.shared.slot.override.options'],\r\n            rules: [\r\n                RULE_PERMISSION_WRITE_PAGE,\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_NOT_VERSIONING_PERSPECTIVE,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW,\r\n                'se.has.create.permission.on.contentslot.type'\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.revert.to.global.or.shared.slot.link'],\r\n            rules: [\r\n                RULE_PERMISSION_WRITE_PAGE,\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_NOT_VERSIONING_PERSPECTIVE,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW,\r\n                'se.has.delete.permission.on.contentslot.type'\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.clone.component'],\r\n            rules: [\r\n                RULE_PERMISSION_WRITE_COMPONENT,\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW,\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_WORKFLOW_CURRENT_ACTION\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.edit.page.type', 'se.delete.page.type', 'se.restore.page.type'],\r\n            rules: ['se.has.change.permissions.on.type']\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.clone.page.type'],\r\n            rules: ['se.has.create.permissions.on.type']\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.permanently.delete.page.type'],\r\n            rules: ['se.has.remove.permissions.on.type']\r\n        });\r\n        // Version\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.version.page'],\r\n            rules: [\r\n                RULE_PERMISSION_WRITE_PAGE,\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_CATALOG_NON_ACTIVE,\r\n                RULE_PERMISSION_HAS_READ_PERMISSION_ON_VERSION_TYPE,\r\n                RULE_PERMISSION_HAS_READ_TYPE_PERMISSION_ON_CURRENT_PAGE\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.edit.version.page'],\r\n            rules: [\r\n                'se.write.to.current.catalog.version',\r\n                'se.has.change.permission.on.version.type',\r\n                RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.create.version.page'],\r\n            rules: [\r\n                'se.version.page.not.selected',\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n                RULE_PERMISSION_HAS_CREATE_PERMISSION_ON_VERSION_TYPE,\r\n                RULE_PERMISSION_HAS_READ_TYPE_PERMISSION_ON_CURRENT_PAGE\r\n            ]\r\n        });\r\n        const rulesForVersionRollback = [\r\n            RULE_PERMISSION_VERSION_PAGE_SELECTED,\r\n            RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE,\r\n            RULE_PERMISSION_HAS_READ_PERMISSION_ON_VERSION_TYPE,\r\n            RULE_PERMISSION_HAS_CREATE_PERMISSION_ON_VERSION_TYPE,\r\n            RULE_PERMISSION_HAS_CHANGE_TYPE_PERMISSION_ON_CURRENT_PAGE\r\n        ];\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.rollback.version.page'],\r\n            rules: rulesForVersionRollback\r\n        });\r\n        this.permissionService.registerPermission({\r\n            // the page versions menu button should be visible even if a version is not selected\r\n            aliases: ['se.rollback.version.page.versions.menu'],\r\n            rules: rulesForVersionRollback.filter((rule) => rule !== RULE_PERMISSION_VERSION_PAGE_SELECTED)\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.delete.version.page'],\r\n            rules: ['se.has.remove.permission.on.version.type']\r\n        });\r\n        // Workflow\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.start.page.workflow'],\r\n            rules: [\r\n                'se.has.create.permission.on.workflow.type',\r\n                'se.catalogversion.has.workflows.enabled',\r\n                'se.current.page.has.no.active.workflow'\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.view.page.workflowMenu'],\r\n            rules: [\r\n                'se.has.read.permission.on.workflow.type',\r\n                RULE_PERMISSION_CURRENT_PAGE_HAS_ACTIVE_WORKFLOW\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.cancel.page.workflowMenu'],\r\n            rules: [\r\n                RULE_PERMISSION_HAS_CHANGE_PERMISSION_ON_WORKFLOW_TYPE,\r\n                RULE_PERMISSION_CURRENT_PAGE_HAS_ACTIVE_WORKFLOW,\r\n                'se.has.change.permission.on.workflow.status'\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.edit.workflow.workflowMenu'],\r\n            rules: [\r\n                RULE_PERMISSION_HAS_CHANGE_PERMISSION_ON_WORKFLOW_TYPE,\r\n                RULE_PERMISSION_CURRENT_PAGE_HAS_ACTIVE_WORKFLOW,\r\n                'se.has.change.permission.on.workflow.description'\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.force.page.approval'],\r\n            rules: [\r\n                RULE_PERMISSION_SYNC_CATALOG,\r\n                'se.has.change.permission.on.page.approval.status',\r\n                RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE\r\n            ]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.show.page.status'],\r\n            rules: [RULE_PERMISSION_CATALOG_NON_ACTIVE, RULE_PERMISSION_PAGE_BELONGS_TO_EXPERIENCE]\r\n        });\r\n        this.permissionService.registerPermission({\r\n            aliases: ['se.act.on.page.in.workflow'],\r\n            rules: [RULE_PERMISSION_CURRENT_USER_CAN_ACT_ON_PAGE_IN_WORKFLOW]\r\n        });\r\n    }\r\n};\r\n/* @ngInject */ RulesAndPermissionsRegistrationService = __decorate([\r\n    SeDowngradeService(),\r\n    __metadata(\"design:paramtypes\", [AttributePermissionsRestService,\r\n        ICatalogService,\r\n        ICatalogVersionPermissionService,\r\n        CatalogVersionRestService,\r\n        CMSModesService,\r\n        IExperienceService,\r\n        IPageService,\r\n        IPermissionService,\r\n        ISharedDataService,\r\n        TypePermissionsRestService,\r\n        WorkflowService])\r\n], /* @ngInject */ RulesAndPermissionsRegistrationService);\r\nexport { /* @ngInject */ RulesAndPermissionsRegistrationService };\r\n//# sourceMappingURL=RulesAndPermissionsRegistrationService.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/constants.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/index.ts"],"map":"{\"version\":3,\"file\":\"RulesAndPermissionsRegistrationService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/RulesAndPermissionsRegistrationService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/RulesAndPermissionsRegistrationService.d.ts","writeByteOrderMark":false,"text":"import { AttributePermissionsRestService, TypePermissionsRestService } from 'cmscommons';\r\nimport { ICatalogService, ICatalogVersionPermissionService, IExperienceService, IPermissionService, ISharedDataService, CMSModesService, IPageService, WorkflowService } from 'smarteditcommons';\r\nimport { CatalogVersionRestService } from '../dao';\r\nexport declare class RulesAndPermissionsRegistrationService {\r\n    private readonly attributePermissionsRestService;\r\n    private readonly catalogService;\r\n    private readonly catalogVersionPermissionService;\r\n    private readonly catalogVersionRestService;\r\n    private readonly cMSModesService;\r\n    private readonly experienceService;\r\n    private readonly pageService;\r\n    private readonly permissionService;\r\n    private readonly sharedDataService;\r\n    private readonly typePermissionsRestService;\r\n    private readonly workflowService;\r\n    constructor(attributePermissionsRestService: AttributePermissionsRestService, catalogService: ICatalogService, catalogVersionPermissionService: ICatalogVersionPermissionService, catalogVersionRestService: CatalogVersionRestService, cMSModesService: CMSModesService, experienceService: IExperienceService, pageService: IPageService, permissionService: IPermissionService, sharedDataService: ISharedDataService, typePermissionsRestService: TypePermissionsRestService, workflowService: WorkflowService);\r\n    register(): void;\r\n    private onSuccess;\r\n    private onError;\r\n    private getCurrentPageActiveWorkflow;\r\n    private registerRules;\r\n    private registerRulesForTypeCodeFromContext;\r\n    private registerRulesForCurrentPage;\r\n    private registerRulesForTypeCode;\r\n    private registerRulesForTypeAndQualifier;\r\n    private registerPermissions;\r\n}\r\n"}}
