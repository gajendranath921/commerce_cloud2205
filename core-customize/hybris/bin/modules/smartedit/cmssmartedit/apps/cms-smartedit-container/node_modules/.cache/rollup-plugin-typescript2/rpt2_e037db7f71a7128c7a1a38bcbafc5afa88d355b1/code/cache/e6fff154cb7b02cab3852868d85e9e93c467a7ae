{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { SeDowngradeComponent, WorkflowService } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"WorkflowInboxBadgeComponent\", {\r\n    selector: 'se-workflow-inbox-badge',\r\n    template: `<ng-container *ngIf=\"inboxCount$ | async as count\"><div *ngIf=\"count > 0\" aria-label=\"Notifications\"><div class=\"fd-counter fd-counter--notification se-inbox-badge\" aria-label=\"Unread count\">{{ stringifyCount(count) }}</div></div></ng-container>`,\r\n    styles: [`.se-inbox-badge{transform:none;top:-2px;left:22px;font-size:10px;border-radius:8px;padding:2px 4px}`],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nlet /* @ngInject */ WorkflowInboxBadgeComponent = class /* @ngInject */ WorkflowInboxBadgeComponent {\r\n    constructor(workflowService) {\r\n        this.workflowService = workflowService;\r\n    }\r\n    ngOnInit() {\r\n        this.inboxCount$ = this.workflowService.getTotalNumberOfActiveWorkflowTasks();\r\n    }\r\n    stringifyCount(count) {\r\n        return count <= 99 ? String(count) : '99+';\r\n    }\r\n};\r\n/* @ngInject */ WorkflowInboxBadgeComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-workflow-inbox-badge',\r\n        template: `<ng-container *ngIf=\"inboxCount$ | async as count\"><div *ngIf=\"count > 0\" aria-label=\"Notifications\"><div class=\"fd-counter fd-counter--notification se-inbox-badge\" aria-label=\"Unread count\">{{ stringifyCount(count) }}</div></div></ng-container>`,\r\n        styles: [`.se-inbox-badge{transform:none;top:-2px;left:22px;font-size:10px;border-radius:8px;padding:2px 4px}`],\r\n        changeDetection: ChangeDetectionStrategy.OnPush\r\n    }),\r\n    __metadata(\"design:paramtypes\", [WorkflowService])\r\n], /* @ngInject */ WorkflowInboxBadgeComponent);\r\nexport { /* @ngInject */ WorkflowInboxBadgeComponent };\r\n//# sourceMappingURL=WorkflowInboxBadgeComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"WorkflowInboxBadgeComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/workflow/components/workflowInboxBadge/WorkflowInboxBadgeComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAEnE,OAAO,EAAE,oBAAoB,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;qFAG9D;IACP,QAAQ,EAAE,yBAAyB;IACnC,QAAQ,EAAE,uPAAuP;IACjQ,MAAM,EAAE,CAAC,qGAAqG,CAAC;IAC/G,eAAe,EAAE,uBAAuB,CAAC,MAAM;CAClD;AACD,kDAAA;IAGI,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAExD,QAAQ;QACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,mCAAmC,EAAE,CAAC;IAClF,CAAC;IAEM,cAAc,CAAC,KAAa;QAC/B,OAAO,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/C,CAAC;CACJ,CAAA;AAZD;IAPC,oBAAoB,EAAE;IACtB,SAAS,CAAC;QACP,QAAQ,EAAE,yBAAyB;QACnC,QAAQ,EAAE,uPAAuP;QACjQ,MAAM,EAAE,CAAC,qGAAqG,CAAC;QAC/G,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAClD,CAAC;qCAIuC,eAAe;+CASvD\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/workflow/components/workflowInboxBadge/WorkflowInboxBadgeComponent.d.ts","writeByteOrderMark":false,"text":"import { Observable } from 'rxjs';\r\nimport { WorkflowService } from 'smarteditcommons';\r\nexport declare class WorkflowInboxBadgeComponent {\r\n    private workflowService;\r\n    inboxCount$: Observable<number>;\r\n    constructor(workflowService: WorkflowService);\r\n    ngOnInit(): void;\r\n    stringifyCount(count: number): string;\r\n}\r\n"}}
