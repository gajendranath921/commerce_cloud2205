{"code":"import { __awaiter, __decorate, __metadata, __param } from \"tslib\";\r\nimport { Component, ViewEncapsulation, Inject } from '@angular/core';\r\nimport { ComponentService } from 'cmscommons';\r\nimport { SeDowngradeComponent, LogService, ICatalogService, TAB_DATA, CrossFrameEventService, SWITCH_LANGUAGE_EVENT, LanguageService, IPageService } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ComponentTypesTabComponent\", {\r\n    selector: 'se-component-types-tab',\r\n    template: `<div class=\"se-component-menu__types-header\"><se-component-search (onChange)=\"onSearchTermChanged($event)\" [placeholderI18nKey]=\"'se.cms.componentmenu.search.type.placeholder'\" class=\"se-component-menu__type-search\"></se-component-search></div><div class=\"se-component-menu__result-container\"><se-infinite-scrolling class=\"se-component-menu__infinite-scroll\" *ngIf=\"isMenuOpen() || isTabActive()\" [pageSize]=\"10\" [mask]=\"searchTerm\" [fetchPage]=\"loadComponentTypes\" [context]=\"componentsContext\"><div class=\"se-component-menu__result se-component-menu__result--types\"><div class=\"se-component-menu__item-wrap\" *ngFor=\"let componentType of componentsContext.items\"><se-component-type [typeInfo]=\"componentType\"></se-component-type></div></div></se-infinite-scrolling></div>`,\r\n    styles: [`se-component-types-tab .se-component-menu__type-search{width:100%}se-component-types-tab .se-component-menu__result{display:grid;grid-template-columns:repeat(2,1fr)}se-component-types-tab .se-component-menu__infinite-scroll .se-infinite-scrolling__container{max-height:300px}se-component-types-tab .se-component-menu__types-header{padding:0 20px 16px;border-bottom:1px solid #d9d9d9}se-component-types-tab .se-component-menu__types-header .fd-form__set{margin:0!important}`],\r\n    encapsulation: ViewEncapsulation.None\r\n});\r\nlet /* @ngInject */ ComponentTypesTabComponent = class /* @ngInject */ ComponentTypesTabComponent {\r\n    constructor(tabData, logService, componentService, pageService, catalogService, crossFrameEventService, languageService) {\r\n        this.tabData = tabData;\r\n        this.logService = logService;\r\n        this.componentService = componentService;\r\n        this.pageService = pageService;\r\n        this.catalogService = catalogService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.languageService = languageService;\r\n        this.loadComponentTypes = (mask, pageSize, currentPage) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const [locale] = yield Promise.all([\r\n                    this.languageService.getResolveLocale(),\r\n                    this.loadPageContext()\r\n                ]);\r\n                const payload = {\r\n                    pageId: this.pageInfo.uid,\r\n                    catalogId: this.uriContext.CURRENT_CONTEXT_CATALOG,\r\n                    catalogVersion: this.uriContext.CURRENT_CONTEXT_CATALOG_VERSION,\r\n                    langIsoCode: locale,\r\n                    mask,\r\n                    pageSize,\r\n                    currentPage\r\n                };\r\n                const components = yield this.componentService.getSupportedComponentTypesForCurrentPage(payload);\r\n                return components;\r\n            }\r\n            catch (error) {\r\n                this.logService.error('ComponentTypesTab - loadComponentTypes - error loading types.', error);\r\n            }\r\n        });\r\n        this.componentsContext = { items: [] };\r\n        this.pageInfo = null;\r\n        this.searchTerm = '';\r\n        this.uriContext = null;\r\n    }\r\n    ngOnInit() {\r\n        this.unRegisterSwitchLanguageEvent = this.crossFrameEventService.subscribe(SWITCH_LANGUAGE_EVENT, () => {\r\n            console.log('switch language called before', this.searchTerm);\r\n            this.searchTerm = this.searchTerm !== undefined ? undefined : '';\r\n            console.log('switch language called after', this.searchTerm);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        var _a;\r\n        (_a = this.unRegisterSwitchLanguageEvent) === null || _a === void 0 ? void 0 : _a.call(this);\r\n    }\r\n    onSearchTermChanged(newSearchTerm) {\r\n        this.searchTerm = newSearchTerm;\r\n    }\r\n    isTabActive() {\r\n        return this.tabData.tab.active;\r\n    }\r\n    isMenuOpen() {\r\n        return this.tabData.model.isOpen;\r\n    }\r\n    loadPageContext() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.pageInfo) {\r\n                return;\r\n            }\r\n            const [pageInfo, uriContext] = yield Promise.all([\r\n                this.pageService.getCurrentPageInfo(),\r\n                this.catalogService.retrieveUriContext()\r\n            ]);\r\n            this.pageInfo = pageInfo;\r\n            this.uriContext = uriContext;\r\n        });\r\n    }\r\n};\r\n/* @ngInject */ ComponentTypesTabComponent = __decorate([\r\n    SeDowngradeComponent(),\r\n    Component({\r\n        selector: 'se-component-types-tab',\r\n        template: `<div class=\"se-component-menu__types-header\"><se-component-search (onChange)=\"onSearchTermChanged($event)\" [placeholderI18nKey]=\"'se.cms.componentmenu.search.type.placeholder'\" class=\"se-component-menu__type-search\"></se-component-search></div><div class=\"se-component-menu__result-container\"><se-infinite-scrolling class=\"se-component-menu__infinite-scroll\" *ngIf=\"isMenuOpen() || isTabActive()\" [pageSize]=\"10\" [mask]=\"searchTerm\" [fetchPage]=\"loadComponentTypes\" [context]=\"componentsContext\"><div class=\"se-component-menu__result se-component-menu__result--types\"><div class=\"se-component-menu__item-wrap\" *ngFor=\"let componentType of componentsContext.items\"><se-component-type [typeInfo]=\"componentType\"></se-component-type></div></div></se-infinite-scrolling></div>`,\r\n        styles: [`se-component-types-tab .se-component-menu__type-search{width:100%}se-component-types-tab .se-component-menu__result{display:grid;grid-template-columns:repeat(2,1fr)}se-component-types-tab .se-component-menu__infinite-scroll .se-infinite-scrolling__container{max-height:300px}se-component-types-tab .se-component-menu__types-header{padding:0 20px 16px;border-bottom:1px solid #d9d9d9}se-component-types-tab .se-component-menu__types-header .fd-form__set{margin:0!important}`],\r\n        encapsulation: ViewEncapsulation.None\r\n    }),\r\n    __param(0, Inject(TAB_DATA)),\r\n    __metadata(\"design:paramtypes\", [Object, LogService,\r\n        ComponentService,\r\n        IPageService,\r\n        ICatalogService,\r\n        CrossFrameEventService,\r\n        LanguageService])\r\n], /* @ngInject */ ComponentTypesTabComponent);\r\nexport { /* @ngInject */ ComponentTypesTabComponent };\r\n//# sourceMappingURL=ComponentTypesTabComponent.js.map","references":["/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular+core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/cmsComponents/componentMenu/types.ts"],"map":"{\"version\":3,\"file\":\"ComponentTypesTabComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/cmsComponents/componentMenu/tabs/ComponentTypesTabComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/wadmin/Documents/cloud-commerce-sample-setup-update-2211/core-customize/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/cmsComponents/componentMenu/tabs/ComponentTypesTabComponent.d.ts","writeByteOrderMark":false,"text":"import { OnInit, OnDestroy } from '@angular/core';\r\nimport { ComponentService, CMSItemStructure } from 'cmscommons';\r\nimport { LogService, ICatalogService, TabData, CrossFrameEventService, LanguageService, IPageService, IPage } from 'smarteditcommons';\r\nimport { ComponentMenuTabModel } from '../types';\r\nexport declare class ComponentTypesTabComponent implements OnInit, OnDestroy {\r\n    private tabData;\r\n    private logService;\r\n    private componentService;\r\n    private pageService;\r\n    private catalogService;\r\n    private crossFrameEventService;\r\n    private languageService;\r\n    searchTerm: string;\r\n    componentsContext: {\r\n        items: CMSItemStructure[];\r\n    };\r\n    private pageInfo;\r\n    private uriContext;\r\n    private unRegisterSwitchLanguageEvent;\r\n    constructor(tabData: TabData<ComponentMenuTabModel>, logService: LogService, componentService: ComponentService, pageService: IPageService, catalogService: ICatalogService, crossFrameEventService: CrossFrameEventService, languageService: LanguageService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    onSearchTermChanged(newSearchTerm: string): void;\r\n    isTabActive(): boolean;\r\n    isMenuOpen(): boolean;\r\n    loadComponentTypes: (mask: string, pageSize: number, currentPage: number) => Promise<IPage<CMSItemStructure>>;\r\n    private loadPageContext;\r\n}\r\n"}}
