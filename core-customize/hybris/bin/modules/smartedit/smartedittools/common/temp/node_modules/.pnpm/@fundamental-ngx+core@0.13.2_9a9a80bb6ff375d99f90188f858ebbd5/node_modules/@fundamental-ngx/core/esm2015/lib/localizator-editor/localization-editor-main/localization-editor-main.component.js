/**
 * @fileoverview added by tsickle
 * Generated from: lib/localizator-editor/localization-editor-main/localization-editor-main.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Input, Component, ViewEncapsulation } from '@angular/core';
import { LocalizationEditorItemComponent } from '../localization-editor-item/localization-editor-item.component';
/**
 *  Component that represents the field which is always visible and is rendered outside the popover.
 *  ```html
 *  <fd-localization-editor-main [label]="'EN'">
 *       <input fd-localization-editor-input type="text" placeholder="EN">
 *  </fd-localization-editor-main>
 *  ```
 */
export class LocalizationEditorMainComponent extends LocalizationEditorItemComponent {
    constructor() {
        super(...arguments);
        /**
         * Whether AddOn Button should be focusable, set to true by default
         */
        this.buttonFocusable = true;
    }
}
LocalizationEditorMainComponent.decorators = [
    { type: Component, args: [{
                selector: 'fd-localization-editor-main',
                template: "<fd-input-group [compact]=\"compact\"\n                [state]=\"state\"\n                [inputTemplate]=\"input\">\n    <span fd-input-group-addon\n          [button]=\"true\"\n          [compact]=\"compact\"\n          [state]=\"state\"\n          [type]=\"type\">\n        <button class=\"fd-localization-editor__button\"\n                fd-button aria-haspopup=\"true\"\n                [attr.tabindex]=\"buttonFocusable ? 0 : -1\"\n                [options]=\"'light'\"\n                [compact]=\"compact\"\n                [attr.aria-expanded]=\"expanded\">\n            <ng-container *ngIf=\"labelTemplate\">\n                <ng-container [fd-localization-editor-load-label]=\"labelTemplate\"></ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"!labelTemplate\">\n                {{label}}\n            </ng-container>\n        </button>\n    </span>\n</fd-input-group>\n<ng-template #input>\n    <ng-content select=\"[fd-localization-editor-input]\"></ng-content>\n    <ng-content select=\"[fd-localization-editor-textarea]\"></ng-content>\n</ng-template>\n<ng-content></ng-content>\n",
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
LocalizationEditorMainComponent.propDecorators = {
    state: [{ type: Input }],
    buttonFocusable: [{ type: Input }]
};
if (false) {
    /**
     * @hidden
     * This variable is controlled by parent component
     *
     * @type {?}
     */
    LocalizationEditorMainComponent.prototype.expanded;
    /**
     *  The state of the form control - applies css classes.
     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.
     * @type {?}
     */
    LocalizationEditorMainComponent.prototype.state;
    /**
     * Whether AddOn Button should be focusable, set to true by default
     * @type {?}
     */
    LocalizationEditorMainComponent.prototype.buttonFocusable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxpemF0aW9uLWVkaXRvci1tYWluLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9sb2NhbGl6YXRvci1lZGl0b3IvbG9jYWxpemF0aW9uLWVkaXRvci1tYWluL2xvY2FsaXphdGlvbi1lZGl0b3ItbWFpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxnRUFBZ0UsQ0FBQzs7Ozs7Ozs7O0FBaUJqSCxNQUFNLE9BQU8sK0JBQWdDLFNBQVEsK0JBQStCO0lBTnBGOzs7OztRQXlCSSxvQkFBZSxHQUFZLElBQUksQ0FBQztJQUNwQyxDQUFDOzs7WUExQkEsU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSw2QkFBNkI7Z0JBQ3ZDLGluQ0FBd0Q7Z0JBQ3hELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2dCQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTthQUNsRDs7O29CQWFJLEtBQUs7OEJBTUwsS0FBSzs7Ozs7Ozs7O0lBWk4sbURBQWtCOzs7Ozs7SUFNbEIsZ0RBQ2tCOzs7OztJQUtsQiwwREFDZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgSW5wdXQsIENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExvY2FsaXphdGlvbkVkaXRvckl0ZW1Db21wb25lbnQgfSBmcm9tICcuLi9sb2NhbGl6YXRpb24tZWRpdG9yLWl0ZW0vbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3JtU3RhdGVzIH0gZnJvbSAnLi4vLi4vZm9ybS9mb3JtLWNvbnRyb2wvZm9ybS1zdGF0ZXMnO1xuXG4vKipcbiAqICBDb21wb25lbnQgdGhhdCByZXByZXNlbnRzIHRoZSBmaWVsZCB3aGljaCBpcyBhbHdheXMgdmlzaWJsZSBhbmQgaXMgcmVuZGVyZWQgb3V0c2lkZSB0aGUgcG9wb3Zlci5cbiAqICBgYGBodG1sXG4gKiAgPGZkLWxvY2FsaXphdGlvbi1lZGl0b3ItbWFpbiBbbGFiZWxdPVwiJ0VOJ1wiPlxuICogICAgICAgPGlucHV0IGZkLWxvY2FsaXphdGlvbi1lZGl0b3ItaW5wdXQgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkVOXCI+XG4gKiAgPC9mZC1sb2NhbGl6YXRpb24tZWRpdG9yLW1haW4+XG4gKiAgYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZmQtbG9jYWxpemF0aW9uLWVkaXRvci1tYWluJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbG9jYWxpemF0aW9uLWVkaXRvci1tYWluLmNvbXBvbmVudC5odG1sJyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIExvY2FsaXphdGlvbkVkaXRvck1haW5Db21wb25lbnQgZXh0ZW5kcyBMb2NhbGl6YXRpb25FZGl0b3JJdGVtQ29tcG9uZW50IHtcblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBUaGlzIHZhcmlhYmxlIGlzIGNvbnRyb2xsZWQgYnkgcGFyZW50IGNvbXBvbmVudFxuICAgICAqICovXG4gICAgZXhwYW5kZWQ6IGJvb2xlYW47XG5cbiAgICAvKipcbiAgICAgKiAgVGhlIHN0YXRlIG9mIHRoZSBmb3JtIGNvbnRyb2wgLSBhcHBsaWVzIGNzcyBjbGFzc2VzLlxuICAgICAqICBDYW4gYmUgYHZhbGlkYCwgYGludmFsaWRgLCBgd2FybmluZ2AsIGBpbmZvcm1hdGlvbmAgb3IgYmxhbmsgZm9yIGRlZmF1bHQuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBzdGF0ZTogRm9ybVN0YXRlcztcblxuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgQWRkT24gQnV0dG9uIHNob3VsZCBiZSBmb2N1c2FibGUsIHNldCB0byB0cnVlIGJ5IGRlZmF1bHRcbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIGJ1dHRvbkZvY3VzYWJsZTogYm9vbGVhbiA9IHRydWU7XG59XG4iXX0=