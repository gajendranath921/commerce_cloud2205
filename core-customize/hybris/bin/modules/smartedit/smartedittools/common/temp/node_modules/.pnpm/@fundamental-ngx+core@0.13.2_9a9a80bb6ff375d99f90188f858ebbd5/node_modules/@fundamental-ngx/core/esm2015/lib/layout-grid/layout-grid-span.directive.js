/**
 * @fileoverview added by tsickle
 * Generated from: lib/layout-grid/layout-grid-span.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Input } from '@angular/core';
import { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';
export class LayoutGridSpanDirective extends AbstractFdNgxClass {
    /**
     * @hidden
     * @param {?} elementRef
     */
    constructor(elementRef) {
        super(elementRef);
        this.elementRef = elementRef;
    }
    /**
     * @hidden
     * @return {?}
     */
    _setProperties() {
        if (this.columnSpan) {
            this._addClassToElement('fd-layout-grid__span-column-' + this.columnSpan);
        }
    }
}
LayoutGridSpanDirective.decorators = [
    { type: Directive, args: [{
                selector: '[fdLayoutGridSpan], [fd-layout-grid-span]'
            },] }
];
/** @nocollapse */
LayoutGridSpanDirective.ctorParameters = () => [
    { type: ElementRef }
];
LayoutGridSpanDirective.propDecorators = {
    columnSpan: [{ type: Input }]
};
if (false) {
    /**
     * \@Input Column span for the grid system
     * @type {?}
     */
    LayoutGridSpanDirective.prototype.columnSpan;
    /**
     * @type {?}
     * @private
     */
    LayoutGridSpanDirective.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LWdyaWQtc3Bhbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvbGF5b3V0LWdyaWQvbGF5b3V0LWdyaWQtc3Bhbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFLcEUsTUFBTSxPQUFPLHVCQUF3QixTQUFRLGtCQUFrQjs7Ozs7SUFjM0QsWUFBb0IsVUFBc0I7UUFDdEMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBREYsZUFBVSxHQUFWLFVBQVUsQ0FBWTtJQUUxQyxDQUFDOzs7OztJQVRELGNBQWM7UUFDVixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDakIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLDhCQUE4QixHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUM3RTtJQUNMLENBQUM7OztZQWRKLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsMkNBQTJDO2FBQ3REOzs7O1lBTG1CLFVBQVU7Ozt5QkFTekIsS0FBSzs7Ozs7OztJQUFOLDZDQUNtQjs7Ozs7SUFVUCw2Q0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBYnN0cmFjdEZkTmd4Q2xhc3MgfSBmcm9tICcuLi91dGlscy9hYnN0cmFjdC1mZC1uZ3gtY2xhc3MnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbZmRMYXlvdXRHcmlkU3Bhbl0sIFtmZC1sYXlvdXQtZ3JpZC1zcGFuXSdcbn0pXG5leHBvcnQgY2xhc3MgTGF5b3V0R3JpZFNwYW5EaXJlY3RpdmUgZXh0ZW5kcyBBYnN0cmFjdEZkTmd4Q2xhc3Mge1xuXG4gICAgLyoqIEBJbnB1dCBDb2x1bW4gc3BhbiBmb3IgdGhlIGdyaWQgc3lzdGVtICovXG4gICAgQElucHV0KClcbiAgICBjb2x1bW5TcGFuOiBudW1iZXI7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIF9zZXRQcm9wZXJ0aWVzKCkge1xuICAgICAgICBpZiAodGhpcy5jb2x1bW5TcGFuKSB7XG4gICAgICAgICAgICB0aGlzLl9hZGRDbGFzc1RvRWxlbWVudCgnZmQtbGF5b3V0LWdyaWRfX3NwYW4tY29sdW1uLScgKyB0aGlzLmNvbHVtblNwYW4pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICAgICAgc3VwZXIoZWxlbWVudFJlZik7XG4gICAgfVxufVxuIl19