/**
 * @fileoverview added by tsickle
 * Generated from: lib/infinite-scroll/infinite-scroll.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import { fromEvent } from 'rxjs';
/**
 * Tool directive used to achieve the infinite scroll mechanism.
 */
var InfiniteScrollDirective = /** @class */ (function () {
    /** @hidden */
    function InfiniteScrollDirective(element) {
        this.element = element;
        /**
         * Scroll percentage at which the onScrollAction event is fired.
         */
        this.scrollPercent = 75;
        /**
         * Event emitted when the scrollPercent threshold is met.
         */
        this.onScrollAction = new EventEmitter();
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    InfiniteScrollDirective.prototype.ngOnInit = /**
     * @hidden
     * @return {?}
     */
    function () {
        var _this = this;
        this.scrollEvent = fromEvent(this.element.nativeElement, 'scroll');
        this.subscription = this.scrollEvent.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if ((e.target.scrollTop + e.target.offsetHeight) / e.target.scrollHeight > _this.scrollPercent / 100) {
                _this.onScrollAction.emit(null);
            }
        }));
    };
    /**
     * @return {?}
     */
    InfiniteScrollDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    };
    InfiniteScrollDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fdInfiniteScroll]'
                },] }
    ];
    /** @nocollapse */
    InfiniteScrollDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    InfiniteScrollDirective.propDecorators = {
        scrollPercent: [{ type: Input }],
        onScrollAction: [{ type: Output }]
    };
    return InfiniteScrollDirective;
}());
export { InfiniteScrollDirective };
if (false) {
    /**
     * Scroll percentage at which the onScrollAction event is fired.
     * @type {?}
     */
    InfiniteScrollDirective.prototype.scrollPercent;
    /**
     * Event emitted when the scrollPercent threshold is met.
     * @type {?}
     */
    InfiniteScrollDirective.prototype.onScrollAction;
    /**
     * @type {?}
     * @private
     */
    InfiniteScrollDirective.prototype.scrollEvent;
    /**
     * @type {?}
     * @private
     */
    InfiniteScrollDirective.prototype.subscription;
    /**
     * @type {?}
     * @private
     */
    InfiniteScrollDirective.prototype.element;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5maW5pdGUtc2Nyb2xsLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9pbmZpbml0ZS1zY3JvbGwvaW5maW5pdGUtc2Nyb2xsLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQXFCLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0RyxPQUFPLEVBQUUsU0FBUyxFQUE0QixNQUFNLE1BQU0sQ0FBQzs7OztBQUszRDtJQWdCSSxjQUFjO0lBQ2QsaUNBQW9CLE9BQW1CO1FBQW5CLFlBQU8sR0FBUCxPQUFPLENBQVk7Ozs7UUFWdkMsa0JBQWEsR0FBVyxFQUFFLENBQUM7Ozs7UUFJM0IsbUJBQWMsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0lBTUMsQ0FBQztJQUUzQyxjQUFjOzs7OztJQUNkLDBDQUFROzs7O0lBQVI7UUFBQSxpQkFRQztRQVBHLElBQUksQ0FBQyxXQUFXLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRW5FLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQyxDQUFNO1lBQ2xELElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxHQUFHLEtBQUksQ0FBQyxhQUFhLEdBQUcsR0FBRyxFQUFFO2dCQUNqRyxLQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUNsQztRQUNMLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7OztJQUVELDZDQUFXOzs7SUFBWDtRQUNJLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNuQixJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQ25DO0lBQ0wsQ0FBQzs7Z0JBbENKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsb0JBQW9CO2lCQUNqQzs7OztnQkFSbUIsVUFBVTs7O2dDQVl6QixLQUFLO2lDQUlMLE1BQU07O0lBMEJYLDhCQUFDO0NBQUEsQUFwQ0QsSUFvQ0M7U0FqQ1ksdUJBQXVCOzs7Ozs7SUFHaEMsZ0RBQzJCOzs7OztJQUczQixpREFDeUM7Ozs7O0lBRXpDLDhDQUFxQzs7Ozs7SUFDckMsK0NBQW1DOzs7OztJQUd2QiwwQ0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGZyb21FdmVudCwgT2JzZXJ2YWJsZSwgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbi8qKlxuICogVG9vbCBkaXJlY3RpdmUgdXNlZCB0byBhY2hpZXZlIHRoZSBpbmZpbml0ZSBzY3JvbGwgbWVjaGFuaXNtLlxuICovXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tmZEluZmluaXRlU2Nyb2xsXSdcbn0pXG5leHBvcnQgY2xhc3MgSW5maW5pdGVTY3JvbGxEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG5cbiAgICAvKiogU2Nyb2xsIHBlcmNlbnRhZ2UgYXQgd2hpY2ggdGhlIG9uU2Nyb2xsQWN0aW9uIGV2ZW50IGlzIGZpcmVkLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgc2Nyb2xsUGVyY2VudDogbnVtYmVyID0gNzU7XG5cbiAgICAvKiogRXZlbnQgZW1pdHRlZCB3aGVuIHRoZSBzY3JvbGxQZXJjZW50IHRocmVzaG9sZCBpcyBtZXQuICovXG4gICAgQE91dHB1dCgpXG4gICAgb25TY3JvbGxBY3Rpb24gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICAgIHByaXZhdGUgc2Nyb2xsRXZlbnQ6IE9ic2VydmFibGU8YW55PjtcbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYpIHt9XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIG5nT25Jbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLnNjcm9sbEV2ZW50ID0gZnJvbUV2ZW50KHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LCAnc2Nyb2xsJyk7XG5cbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24gPSB0aGlzLnNjcm9sbEV2ZW50LnN1YnNjcmliZSgoZTogYW55KSA9PiB7XG4gICAgICAgICAgICBpZiAoKGUudGFyZ2V0LnNjcm9sbFRvcCArIGUudGFyZ2V0Lm9mZnNldEhlaWdodCkgLyBlLnRhcmdldC5zY3JvbGxIZWlnaHQgPiB0aGlzLnNjcm9sbFBlcmNlbnQgLyAxMDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLm9uU2Nyb2xsQWN0aW9uLmVtaXQobnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5zdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==