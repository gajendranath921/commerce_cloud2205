/**
 * @fileoverview added by tsickle
 * Generated from: lib/time/time.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Input, Output, ViewEncapsulation } from '@angular/core';
import { TimeObject } from './time-object';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { TimeI18nLabels } from './i18n/time-i18n-labels';
import { TimeI18n } from './i18n/time-i18n';
export class TimeComponent {
    /**
     * @param {?} timeI18nLabels
     * @param {?} timeI18n
     * @param {?} changeDetRef
     */
    constructor(timeI18nLabels, timeI18n, changeDetRef) {
        this.timeI18nLabels = timeI18nLabels;
        this.timeI18n = timeI18n;
        this.changeDetRef = changeDetRef;
        /**
         * \@Input When set to false, uses the 24 hour clock (hours ranging from 0 to 23)
         * and does not display a period control.
         */
        this.meridian = false;
        /**
         * \@Input When set to false, does not set the input field to invalid state on invalid entry.
         */
        this.validate = true;
        /**
         * \@Input when set to true, time inputs won't allow to have 1 digit
         * for example 9 will become 09
         * but 12 will be kept as 12.
         */
        this.keepTwoDigits = false;
        /**
         * \@Input When set to false, hides the buttons that increment and decrement the corresponding input.
         */
        this.spinners = true;
        /**
         * \@Input When set to false, hides the input for seconds.
         */
        this.displaySeconds = true;
        /**
         * \@Input When set to false, hides the input for minutes.
         */
        this.displayMinutes = true;
        /**
         * When set to false, hides the input for hours
         */
        this.displayHours = true;
        /**
         * \@Input An object that contains three integer properties: 'hour' (ranging from 0 to 23),
         * 'minute' (ranging from 0 to 59), and 'second' (ranging from 0 to 59). This is the model the component consumes. Example:
         *
         * ```json
         * { hour: 12, minute: 0, second: 0 }
         * ```
         */
        this.time = { hour: 0, minute: 0, second: 0 };
        /**
         * @hidden
         */
        this.focusArrowLeft = new EventEmitter();
        /**
         * @hidden
         * Variable that is displayed as an hour.
         * For meridian mode ranging from 0 to 12,
         * For non-meridian mode ranging from 0 to 23, and reflects the hour value
         */
        this.displayedHour = 0;
        /**
         * @hidden
         */
        this.onChange = (/**
         * @param {?} time
         * @return {?}
         */
        (time) => {
        });
        /**
         * @hidden
         */
        this.onTouched = (/**
         * @return {?}
         */
        () => {
        });
    }
    /**
     * @hidden
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @hidden
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    /**
     * @hidden
     * @param {?} isDisabled
     * @return {?}
     */
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
        this.changeDetRef.detectChanges();
    }
    /**
     * @hidden
     * @param {?} time
     * @return {?}
     */
    writeValue(time) {
        if (!time) {
            return;
        }
        this.time = Object.assign({}, time);
        this.setDisplayedHour();
        this.changeDetRef.detectChanges();
    }
    /**
     * @hidden
     * Reacts only when there is meridian or time input change
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.meridian || changes.time) {
            this.setDisplayedHour();
        }
    }
    /**
     * @hidden
     * Changes displayed hour value, used mostly when the model hour is changed
     * @return {?}
     */
    setDisplayedHour() {
        if (!this.meridian) {
            this.displayedHour = this.time.hour;
        }
        else if (this.time.hour === 0) {
            this.displayedHour = 12;
            this.period = this.timeI18n.meridianAm;
        }
        else if (this.time.hour > 12) {
            this.displayedHour = this.time.hour - 12;
            this.period = this.timeI18n.meridianPm;
        }
        else if (this.time.hour === 12) {
            this.displayedHour = 12;
            this.period = this.timeI18n.meridianPm;
        }
        else {
            this.displayedHour = this.time.hour;
            this.period = this.timeI18n.meridianAm;
        }
    }
    /**
     * @hidden
     * Handles changes of displayed hour value from template.
     * @param {?} changedHour
     * @return {?}
     */
    displayedHourChanged(changedHour) {
        this.displayedHour = changedHour;
        if (!this.meridian) {
            this.time.hour = this.displayedHour;
        }
        else {
            if (this.period === this.timeI18n.meridianAm) {
                if (this.displayedHour === 12) {
                    this.time.hour = 0;
                }
                else {
                    this.time.hour = this.displayedHour;
                }
            }
            else if (this.period === this.timeI18n.meridianPm) {
                if (this.displayedHour === 12) {
                    this.time.hour = this.displayedHour;
                }
                else {
                    this.time.hour = this.displayedHour + 12;
                }
            }
        }
        this.onChange(this.time);
    }
    /**
     * @hidden
     * Handles the blur events from inputs. Also rewrite values if they are incorrect, prevents from negative or too big
     * values. Also changes period if it's on meridian type and hour is bigger than 12.
     * @param {?} inputType
     * @return {?}
     */
    inputBlur(inputType) {
        switch (inputType) {
            case 'hour': {
                this.displayedHour = Math.round(Math.abs(this.displayedHour)) % 24;
                this.time.hour = this.displayedHour;
                if (this.meridian) {
                    if (this.displayedHour > 12) {
                        this.period = this.timeI18n.meridianPm;
                        this.displayedHour = this.displayedHour !== 12 ? this.displayedHour % 12 : this.displayedHour;
                    }
                    else if (this.displayedHour === 0) {
                        this.displayedHour = 12;
                        this.period = this.timeI18n.meridianAm;
                    }
                    else if (this.isAm(this.period) && this.displayedHour === 12) {
                        this.time.hour = 0;
                    }
                }
                break;
            }
            case 'minute': {
                this.time.minute = Math.abs(Math.round(this.time.minute) % 60);
                break;
            }
            case 'second': {
                this.time.second = Math.abs(Math.round(this.time.second) % 60);
                break;
            }
            case 'period': {
                /**
                 * When there is invalid period, function changes period to valid basing on actual hour
                 */
                if (!this.period ||
                    (!this.isPm(this.period) && !this.isAm(this.period))) {
                    this.setDisplayedHour();
                }
            }
        }
        this.onChange(this.time);
    }
    /**
     * Increases the hour value by one.
     * @return {?}
     */
    increaseHour() {
        if (this.time.hour === null) {
            this.time.hour = 0;
        }
        else if (this.time.hour === 23) {
            this.time.hour = 0;
        }
        else {
            this.time.hour = this.time.hour + 1;
        }
        this.setDisplayedHour();
        this.onChange(this.time);
    }
    /**
     * Decreases the hour value by one.
     * @return {?}
     */
    decreaseHour() {
        if (this.time.hour === null) {
            this.time.hour = 0;
        }
        else if (this.time.hour === 0) {
            this.time.hour = 23;
        }
        else {
            this.time.hour = this.time.hour - 1;
        }
        this.setDisplayedHour();
        this.onChange(this.time);
    }
    /**
     * Increases the minute value by one.
     * @return {?}
     */
    increaseMinute() {
        if (this.time.minute === null) {
            this.time.minute = 0;
        }
        else if (this.time.minute === 59) {
            this.time.minute = 0;
            this.increaseHour();
        }
        else {
            this.time.minute = this.time.minute + 1;
        }
        this.onChange(this.time);
    }
    /**
     * Decreases the minute value by one.
     * @return {?}
     */
    decreaseMinute() {
        if (this.time.minute === null) {
            this.time.minute = 0;
        }
        else if (this.time.minute === 0) {
            this.time.minute = 59;
            this.decreaseHour();
        }
        else {
            this.time.minute = this.time.minute - 1;
        }
        this.onChange(this.time);
    }
    /**
     * Increases the second value by one.
     * @return {?}
     */
    increaseSecond() {
        if (this.displaySeconds) {
            if (this.time.second === null) {
                this.time.second = 0;
            }
            else if (this.time.second === 59) {
                this.time.second = 0;
                this.increaseMinute();
            }
            else {
                this.time.second = this.time.second + 1;
            }
        }
        this.onChange(this.time);
    }
    /**
     * Decreases the second value by one.
     * @return {?}
     */
    decreaseSecond() {
        if (this.displaySeconds) {
            if (this.time.second === null) {
                this.time.second = 0;
            }
            else if (this.time.second === 0) {
                this.time.second = 59;
                this.decreaseMinute();
            }
            else {
                this.time.second = this.time.second - 1;
            }
        }
        this.onChange(this.time);
    }
    /**
     * Toggles the period (am/pm).
     * @return {?}
     */
    togglePeriod() {
        if (this.time.hour < 24 && this.time.hour >= 0) {
            if (this.isAm(this.period)) {
                this.period = this.timeI18n.meridianPm;
                this.periodModelChange();
            }
            else if (this.isPm(this.period)) {
                this.period = this.timeI18n.meridianAm;
                this.periodModelChange();
            }
        }
    }
    /**
     * @hidden
     * Handles minutes model change from template
     *
     * @param {?} minuteChange
     * @return {?}
     */
    minuteModelChange(minuteChange) {
        this.time.minute = minuteChange;
        if (!(this.time.minute > 59 || this.time.minute < 0) || !this.validate) {
            this.onChange(this.time);
        }
    }
    /**
     * @hidden
     * Handles seconds model change from template
     *
     * @param {?} secondChange
     * @return {?}
     */
    secondModelChange(secondChange) {
        this.time.second = secondChange;
        if (!(this.time.second > 59 || this.time.second < 0) || !this.validate) {
            this.onChange(this.time);
        }
    }
    /**
     * @hidden
     * Handles period model change. depending on current hour and new period changes hours by +/- 12
     * @return {?}
     */
    periodModelChange() {
        if (this.time && !this.time.hour) {
            this.time.hour = 0;
        }
        if (this.time.hour < 24 && this.time.hour >= 0) {
            if (this.isPm(this.period) && this.time.hour < 12) {
                this.time.hour = this.time.hour + 12;
            }
            else if (this.time.hour >= 12 && this.isAm(this.period)) {
                this.time.hour = this.time.hour - 12;
            }
            this.onChange(this.time);
        }
    }
    /**
     * @hidden
     * Handles last button keyboard events
     * @param {?} event
     * @return {?}
     */
    lastButtonKeydown(event) {
        if (event.key === 'Tab' && !event.shiftKey) {
            event.preventDefault();
            this.focusArrowLeft.emit();
        }
    }
    /**
     * @hidden
     * Defines if period is PM, Considers the fact that period should be case sensitive
     * @private
     * @param {?} period
     * @return {?}
     */
    isPm(period) {
        /** @type {?} */
        const pmMeridian = this.timeI18n.meridianCaseSensitive ? this.timeI18n.meridianPm : this.timeI18n.meridianPm.toLocaleUpperCase();
        period = this.timeI18n.meridianCaseSensitive ? period : period.toLocaleUpperCase();
        return period === pmMeridian;
    }
    /**
     * @hidden
     * Defines if period is AM, Considers the fact that period should be case sensitive
     * @private
     * @param {?} period
     * @return {?}
     */
    isAm(period) {
        /** @type {?} */
        const amMeridian = this.timeI18n.meridianCaseSensitive ? this.timeI18n.meridianAm : this.timeI18n.meridianAm.toLocaleUpperCase();
        period = this.timeI18n.meridianCaseSensitive ? period : period.toLocaleUpperCase();
        return period === amMeridian;
    }
}
TimeComponent.decorators = [
    { type: Component, args: [{
                selector: 'fd-time',
                template: "<div *ngIf=\"displayHours\"\n    class=\"fd-time__item\">\n    <div class=\"fd-time__control\">\n        <button *ngIf=\"spinners\"\n                (click)=\"increaseHour()\"\n                type=\"button\"\n                fd-button\n                [disabled]=\"disabled\"\n                [glyph]=\"'navigation-up-arrow'\"\n                [options]=\"'light'\"\n                [size]=\"'xs'\"\n                [attr.aria-label]=\"timeI18nLabels?.increaseHoursLabel\"></button>\n    </div>\n    <input [ngModel]=\"displayedHour | twoDigits : keepTwoDigits \"\n            fd-only-digits\n            [ngClass]=\"{\n            'is-disabled': disabled,\n            'is-invalid': ((displayedHour > 24 || displayedHour < 0) && validate)\n            }\"\n            (ngModelChange)=\"displayedHourChanged($event)\"\n            (blur)=\"inputBlur('hour')\"\n            class=\"fd-input fd-time__input fd-input--no-number-spinner\"\n            type=\"number\"\n            placeholder=\"{{timeI18n?.hoursPlaceholder}}\"\n            [attr.aria-label]=\"timeI18nLabels?.hoursLabel\"/>\n    <div class=\"fd-time__control\">\n        <button *ngIf=\"spinners\"\n                (click)=\"decreaseHour()\"\n                type=\"button\"\n                fd-button\n                [disabled]=\"disabled\"\n                [glyph]=\"'navigation-down-arrow'\"\n                [options]=\"'light'\"\n                [size]=\"'xs'\"\n                [attr.aria-label]=\"timeI18nLabels?.decreaseHoursLabel\"></button>\n    </div>\n</div>\n\n<div *ngIf=\"displayMinutes\"\n    class=\"fd-time__item\">\n    <div class=\"fd-time__control\">\n        <button *ngIf=\"spinners\"\n                [disabled]=\"disabled\"\n                (click)=\"increaseMinute()\"\n                fd-button\n                [size]=\"'xs'\"\n                [glyph]=\"'navigation-up-arrow'\"\n                [options]=\"'light'\"\n                type=\"button\"\n                [attr.aria-label]=\"timeI18nLabels?.increaseMinutesLabel\"></button>\n    </div>\n    <input [ngModel]=\"time.minute | twoDigits : keepTwoDigits\"\n            fd-only-digits\n            (ngModelChange)=\"minuteModelChange($event)\"\n            (blur)=\"inputBlur('minute')\"\n            [ngClass]=\"{'is-disabled': disabled, 'is-invalid': ((time.minute > 59 || time.minute < 0) && validate)}\"\n            class=\"fd-input fd-time__input fd-input--no-number-spinner\"\n            type=\"number\"\n            placeholder=\"{{timeI18n?.minutesPlaceholder}}\"\n            [attr.aria-label]=\"timeI18nLabels?.minutesLabel\"/>\n    <div class=\"fd-time__control\">\n        <button *ngIf=\"spinners\"\n                [disabled]=\"disabled\"\n                (click)=\"decreaseMinute()\"\n                fd-button\n                [size]=\"'xs'\"\n                [glyph]=\"'navigation-down-arrow'\"\n                [options]=\"'light'\"\n                type=\"button\"\n                [attr.aria-label]=\"timeI18nLabels?.decreaseMinutesLabel\"></button>\n    </div>\n</div>\n<div *ngIf=\"displaySeconds\"\n     class=\"fd-time__item\">\n    <div class=\"fd-time__control\">\n        <button *ngIf=\"spinners\"\n                [disabled]=\"disabled\"\n                (click)=\"increaseSecond()\"\n                fd-button\n                [size]=\"'xs'\"\n                [glyph]=\"'navigation-up-arrow'\"\n                [options]=\"'light'\"\n                type=\"button\"\n                [attr.aria-label]=\"timeI18nLabels?.increaseSecondsLabel\"></button>\n    </div>\n    <input [ngModel]=\"time.second | twoDigits : keepTwoDigits\"\n            fd-only-digits\n            (ngModelChange)=\"secondModelChange($event)\"\n            (blur)=\"inputBlur('second')\"\n            [ngClass]=\"{'is-disabled': disabled, 'is-invalid': ((time.second > 59 || time.second < 0) && validate)}\"\n            class=\"fd-input fd-time__input fd-input--no-number-spinner\"\n            type=\"number\"\n            placeholder=\"{{timeI18n?.secondsPlaceholder}}\"\n            (keydown)=\"!meridian && !spinners ? lastButtonKeydown($event) : ''\"\n            [attr.aria-label]=\"timeI18nLabels?.secondsLabel\"/>\n    <div class=\"fd-time__control\">\n        <button *ngIf=\"spinners\"\n                [disabled]=\"disabled\"\n                (click)=\"decreaseSecond()\"\n                fd-button\n                [size]=\"'xs'\"\n                [glyph]=\"'navigation-down-arrow'\"\n                [options]=\"'light'\"\n                type=\"button\"\n                [attr.aria-label]=\"timeI18nLabels?.decreaseSecondsLabel\"\n                (keydown)=\"!meridian ? lastButtonKeydown($event) : ''\"></button>\n    </div>\n</div>\n<div *ngIf=\"meridian\"\n     class=\"fd-time__item\">\n    <div class=\"fd-time__control\">\n        <button *ngIf=\"spinners\"\n                [disabled]=\"disabled\"\n                (click)=\"togglePeriod()\"\n                fd-button\n                [size]=\"'xs'\"\n                [glyph]=\"'navigation-up-arrow'\"\n                [options]=\"'light'\"\n                type=\"button\"\n                [attr.aria-label]=\"timeI18nLabels?.increasePeriodLabel\"></button>\n    </div>\n    <input [(ngModel)]=\"period\"\n            [ngClass]=\"{'is-disabled': disabled}\"\n            class=\"fd-input fd-time__input\"\n            (blur)=\"inputBlur('period')\"\n            (ngModelChange)=\"periodModelChange()\"\n            type=\"text\"\n            placeholder=\"{{timeI18n?.meridianPlaceholder}}\"\n            [attr.aria-label]=\"timeI18nLabels?.periodLabel\"/>\n    <div class=\"fd-time__control\">\n        <button *ngIf=\"spinners\"\n                [disabled]=\"disabled\"\n                (click)=\"togglePeriod()\"\n                fd-button\n                [size]=\"'xs'\"\n                [glyph]=\"'navigation-down-arrow'\"\n                [options]=\"'light'\"\n                type=\"button\"\n                [attr.aria-label]=\"timeI18nLabels?.decreasePeriodLabel\"\n                (keydown)=\"lastButtonKeydown($event)\"></button>\n    </div>\n</div>\n",
                host: {
                    '(blur)': 'onTouched()',
                    class: 'fd-time fd-has-display-block'
                },
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => TimeComponent)),
                        multi: true
                    }
                ],
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: ["/*!\n * Fundamental Library Styles v0.4.1\n * Copyright (c) 2020 SAP SE or an SAP affiliate company.\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/master/LICENSE)\n *//*!\n.fd-input\n*/.fd-input{line-height:1.42857;color:var(--sapTextColor,#32363a);-webkit-font-smoothing:antialiased;-webkit-box-sizing:border-box;padding:0 .625rem;margin:.25rem 0;border:.0625rem solid #89919a;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-size:.875rem;font-size:var(--sapFontSize,.875rem);font-weight:400;color:#32363a;color:var(--sapField_TextColor,#32363a);background-color:#fff;background-color:var(--sapField_Background,#fff);box-sizing:border-box;border-width:var(--sapField_BorderWidth,.0625rem);border-color:var(--sapField_BorderColor,#89919a);border-radius:.125rem;border-radius:var(--sapField_BorderCornerRadius,.125rem);outline:0;appearance:none;-webkit-appearance:none;-moz-appearance:none;min-width:2.75rem;width:100%;height:2.25rem;z-index:1;cursor:text}.fd-input:after,.fd-input:before{box-sizing:inherit;font-size:inherit}.fd-input::-webkit-input-placeholder{font-style:italic;color:#74777a;color:var(--sapField_PlaceholderTextColor,#74777a)}.fd-input::-moz-placeholder{font-style:italic;color:#74777a;color:var(--sapField_PlaceholderTextColor,#74777a)}.fd-input:-ms-input-placeholder{font-style:italic;color:#74777a;color:var(--sapField_PlaceholderTextColor,#74777a)}.fd-input::-ms-input-placeholder{font-style:italic;color:#74777a;color:var(--sapField_PlaceholderTextColor,#74777a)}.fd-input::placeholder{font-style:italic;color:#74777a;color:var(--sapField_PlaceholderTextColor,#74777a)}.fd-input::-moz-selection{color:#fff;color:var(--sapContent_ContrastTextColor,#fff);background-color:#0854a0;background-color:var(--sapSelectedColor,#0854a0)}.fd-input::selection{color:#fff;color:var(--sapContent_ContrastTextColor,#fff);background-color:#0854a0;background-color:var(--sapSelectedColor,#0854a0)}.fd-input .is-hover,.fd-input:hover{background-color:#fff;background-color:var(--sapField_Hover_Background,#fff);border-color:#0854a0;border-color:var(--sapField_Hover_BorderColor,#0854a0)}.fd-input.is-valid{background-color:#fff;background-color:var(--sapField_SuccessBackground,#fff);border-color:#107e3e;border-color:var(--sapField_SuccessColor,#107e3e);border-width:.0625rem}.fd-input.is-valid .is-hover,.fd-input.is-valid:hover{background-color:#fff;background-color:var(--sapField_SuccessBackground,#fff);border-color:#107e3e;border-color:var(--sapField_SuccessColor,#107e3e)}.fd-input.is-invalid,.fd-input.is-invalid .is-hover,.fd-input.is-invalid:hover{background-color:#fff;background-color:var(--sapField_InvalidBackground,#fff);border-color:#b00;border-color:var(--sapField_InvalidColor,#b00)}.fd-input.is-alert,.fd-input.is-alert .is-hover,.fd-input.is-alert:hover,.fd-input.is-warning,.fd-input.is-warning .is-hover,.fd-input.is-warning:hover{background-color:#fff;background-color:var(--sapField_WarningBackground,#fff);border-color:#e9730c;border-color:var(--sapField_WarningColor,#e9730c)}.fd-input.is-information,.fd-input.is-information .is-hover,.fd-input.is-information:hover{background-color:#fff;background-color:var(--sapField_InformationBackground,#fff);border-color:#0a6ed1;border-color:var(--sapField_InformationColor,#0a6ed1)}.fd-input.is-focus,.fd-input:focus{box-shadow:0 0 0 1px #085caf;box-shadow:0 0 0 1px var(--fd-color-action-focus,#085caf);z-index:5;box-shadow:none;outline-offset:-.1875rem;outline-width:var(--sapContent_FocusWidth,.0625rem);outline-color:var(--sapContent_FocusColor,#000);outline-style:var(--sapContent_FocusStyle,dotted);outline:#000 dotted .0625rem}.fd-input.is-alert,.fd-input.is-information,.fd-input.is-invalid,.fd-input.is-warning{border-width:.125rem}.fd-input.is-alert.is-focus,.fd-input.is-alert:focus,.fd-input.is-information.is-focus,.fd-input.is-information:focus,.fd-input.is-invalid.is-focus,.fd-input.is-invalid:focus,.fd-input.is-warning.is-focus,.fd-input.is-warning:focus{box-shadow:0 0 0 1px #085caf;box-shadow:0 0 0 1px var(--fd-color-action-focus,#085caf);z-index:5;box-shadow:none;outline-offset:-.25rem}.fd-input.is-disabled,.fd-input:disabled,.fd-input[aria-disabled=true]{pointer-events:none;opacity:.4}.fd-input.is-disabled::-webkit-input-placeholder,.fd-input:disabled::-webkit-input-placeholder,.fd-input[aria-disabled=true]::-webkit-input-placeholder{color:transparent}.fd-input.is-disabled::-moz-placeholder,.fd-input:disabled::-moz-placeholder,.fd-input[aria-disabled=true]::-moz-placeholder{color:transparent}.fd-input.is-disabled:-ms-input-placeholder,.fd-input:disabled:-ms-input-placeholder,.fd-input[aria-disabled=true]:-ms-input-placeholder{color:transparent}.fd-input.is-disabled::-ms-input-placeholder,.fd-input:disabled::-ms-input-placeholder,.fd-input[aria-disabled=true]::-ms-input-placeholder{color:transparent}.fd-input.is-disabled::placeholder,.fd-input:disabled::placeholder,.fd-input[aria-disabled=true]::placeholder{color:transparent}.fd-input.is-readonly,.fd-input[readonly]{background-color:hsla(0,0%,94.9%,.5);background-color:var(--sapField_ReadOnly_Background,hsla(0,0%,94.9%,.5));border-color:#89919a;border-color:var(--sapField_ReadOnly_BorderColor,#89919a)}.fd-input.is-readonly::-webkit-input-placeholder,.fd-input[readonly]::-webkit-input-placeholder{color:transparent}.fd-input.is-readonly::-moz-placeholder,.fd-input[readonly]::-moz-placeholder{color:transparent}.fd-input.is-readonly:-ms-input-placeholder,.fd-input[readonly]:-ms-input-placeholder{color:transparent}.fd-input.is-readonly::-ms-input-placeholder,.fd-input[readonly]::-ms-input-placeholder{color:transparent}.fd-input.is-readonly::placeholder,.fd-input[readonly]::placeholder{color:transparent}.fd-input[aria-expanded=false]{z-index:0}.fd-input[aria-expanded=true]{z-index:4}.fd-input:last-child{margin-bottom:.25rem}.fd-input--compact{min-width:2rem;height:1.625rem;margin-top:.1875rem;margin-bottom:.1875rem;padding:0 .5rem;box-sizing:border-box}.fd-input--no-number-spinner{-moz-appearance:textfield}.fd-input--no-number-spinner::-webkit-inner-spin-button,.fd-input--no-number-spinner::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.fd-input.right-align{text-align:right}/*!\n * Fundamental Library Styles v0.4.1\n * Copyright (c) 2020 SAP SE or an SAP affiliate company.\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/master/LICENSE)\n */.fd-time{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0;border:0;width:184px}.fd-time:after,.fd-time:before{box-sizing:inherit;font-size:inherit}.fd-time__item{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0 4px 0 0;border:0;display:inline-block;max-width:40px;text-align:center}.fd-time__item:after,.fd-time__item:before{box-sizing:inherit;font-size:inherit}.fd-time__item:last-child{margin-right:0}.fd-time__item .fd-time__input{margin:8px 0;padding-left:8px;padding-right:8px;text-align:center;width:100%;min-width:auto}.fd-time__control{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0;border:0}.fd-time__control:after,.fd-time__control:before{box-sizing:inherit;font-size:inherit}"]
            }] }
];
/** @nocollapse */
TimeComponent.ctorParameters = () => [
    { type: TimeI18nLabels },
    { type: TimeI18n },
    { type: ChangeDetectorRef }
];
TimeComponent.propDecorators = {
    meridian: [{ type: Input }],
    validate: [{ type: Input }],
    keepTwoDigits: [{ type: Input }],
    disabled: [{ type: Input }],
    spinners: [{ type: Input }],
    displaySeconds: [{ type: Input }],
    displayMinutes: [{ type: Input }],
    displayHours: [{ type: Input }],
    time: [{ type: Input }],
    focusArrowLeft: [{ type: Output }]
};
if (false) {
    /**
     * \@Input When set to false, uses the 24 hour clock (hours ranging from 0 to 23)
     * and does not display a period control.
     * @type {?}
     */
    TimeComponent.prototype.meridian;
    /**
     * \@Input When set to false, does not set the input field to invalid state on invalid entry.
     * @type {?}
     */
    TimeComponent.prototype.validate;
    /**
     * \@Input when set to true, time inputs won't allow to have 1 digit
     * for example 9 will become 09
     * but 12 will be kept as 12.
     * @type {?}
     */
    TimeComponent.prototype.keepTwoDigits;
    /**
     * \@Input Disables the component.
     * @type {?}
     */
    TimeComponent.prototype.disabled;
    /**
     * \@Input When set to false, hides the buttons that increment and decrement the corresponding input.
     * @type {?}
     */
    TimeComponent.prototype.spinners;
    /**
     * \@Input When set to false, hides the input for seconds.
     * @type {?}
     */
    TimeComponent.prototype.displaySeconds;
    /**
     * \@Input When set to false, hides the input for minutes.
     * @type {?}
     */
    TimeComponent.prototype.displayMinutes;
    /**
     * When set to false, hides the input for hours
     * @type {?}
     */
    TimeComponent.prototype.displayHours;
    /**
     * \@Input An object that contains three integer properties: 'hour' (ranging from 0 to 23),
     * 'minute' (ranging from 0 to 59), and 'second' (ranging from 0 to 59). This is the model the component consumes. Example:
     *
     * ```json
     * { hour: 12, minute: 0, second: 0 }
     * ```
     * @type {?}
     */
    TimeComponent.prototype.time;
    /**
     * @hidden
     * @type {?}
     */
    TimeComponent.prototype.focusArrowLeft;
    /**
     * @hidden
     * Used only in meridian mode. Stores information the current am/pm state.
     * @type {?}
     */
    TimeComponent.prototype.period;
    /**
     * @hidden
     * Variable that is displayed as an hour.
     * For meridian mode ranging from 0 to 12,
     * For non-meridian mode ranging from 0 to 23, and reflects the hour value
     * @type {?}
     */
    TimeComponent.prototype.displayedHour;
    /**
     * @hidden
     * @type {?}
     */
    TimeComponent.prototype.onChange;
    /**
     * @hidden
     * @type {?}
     */
    TimeComponent.prototype.onTouched;
    /** @type {?} */
    TimeComponent.prototype.timeI18nLabels;
    /** @type {?} */
    TimeComponent.prototype.timeI18n;
    /**
     * @type {?}
     * @private
     */
    TimeComponent.prototype.changeDetRef;
}
//# sourceMappingURL=data:application/json;base64,