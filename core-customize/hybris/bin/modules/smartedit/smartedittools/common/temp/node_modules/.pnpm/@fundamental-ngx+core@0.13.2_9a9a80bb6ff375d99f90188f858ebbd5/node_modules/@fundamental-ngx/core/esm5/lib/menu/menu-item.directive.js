/**
 * @fileoverview added by tsickle
 * Generated from: lib/menu/menu-item.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, HostBinding } from '@angular/core';
/**
 * The directive that represents a menu item.
 */
var MenuItemDirective = /** @class */ (function () {
    /** @hidden */
    function MenuItemDirective(itemEl) {
        this.itemEl = itemEl;
        /**
         * @hidden
         */
        this.fdMenuItemClass = true;
    }
    /**
     * @return {?}
     */
    MenuItemDirective.prototype.focus = /**
     * @return {?}
     */
    function () {
        this.itemEl.nativeElement.focus();
    };
    /**
     * @return {?}
     */
    MenuItemDirective.prototype.click = /**
     * @return {?}
     */
    function () {
        this.itemEl.nativeElement.click();
    };
    MenuItemDirective.decorators = [
        { type: Directive, args: [{
                    // TODO to be discussed
                    // tslint:disable-next-line:directive-selector
                    selector: '[fd-menu-item]',
                },] }
    ];
    /** @nocollapse */
    MenuItemDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    MenuItemDirective.propDecorators = {
        fdMenuItemClass: [{ type: HostBinding, args: ['class.fd-menu__item',] }]
    };
    return MenuItemDirective;
}());
export { MenuItemDirective };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    MenuItemDirective.prototype.fdMenuItemClass;
    /** @type {?} */
    MenuItemDirective.prototype.itemEl;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1pdGVtLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9tZW51L21lbnUtaXRlbS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFNbkU7SUFXSSxjQUFjO0lBQ2QsMkJBQW9CLE1BQWtCO1FBQWxCLFdBQU0sR0FBTixNQUFNLENBQVk7Ozs7UUFIdEMsb0JBQWUsR0FBWSxJQUFJLENBQUM7SUFHUyxDQUFDOzs7O0lBRW5DLGlDQUFLOzs7SUFBWjtRQUNJLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3RDLENBQUM7Ozs7SUFFTSxpQ0FBSzs7O0lBQVo7UUFDSSxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN0QyxDQUFDOztnQkFwQkosU0FBUyxTQUFDOzs7b0JBR1AsUUFBUSxFQUFFLGdCQUFnQjtpQkFDN0I7Ozs7Z0JBVm1CLFVBQVU7OztrQ0FjekIsV0FBVyxTQUFDLHFCQUFxQjs7SUFhdEMsd0JBQUM7Q0FBQSxBQXJCRCxJQXFCQztTQWhCWSxpQkFBaUI7Ozs7OztJQUcxQiw0Q0FDZ0M7O0lBR25CLG1DQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERlZmF1bHRNZW51SXRlbSB9IGZyb20gJy4vZGVmYXVsdC1tZW51LWl0ZW0nO1xuXG4vKipcbiAqIFRoZSBkaXJlY3RpdmUgdGhhdCByZXByZXNlbnRzIGEgbWVudSBpdGVtLlxuICovXG5ARGlyZWN0aXZlKHtcbiAgICAvLyBUT0RPIHRvIGJlIGRpc2N1c3NlZFxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3JcbiAgICBzZWxlY3RvcjogJ1tmZC1tZW51LWl0ZW1dJyxcbn0pXG5leHBvcnQgY2xhc3MgTWVudUl0ZW1EaXJlY3RpdmUgaW1wbGVtZW50cyBEZWZhdWx0TWVudUl0ZW0ge1xuXG4gICAgLyoqIEBoaWRkZW4qL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuZmQtbWVudV9faXRlbScpXG4gICAgZmRNZW51SXRlbUNsYXNzOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgY29uc3RydWN0b3IgKHB1YmxpYyBpdGVtRWw6IEVsZW1lbnRSZWYpIHt9XG5cbiAgICBwdWJsaWMgZm9jdXMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaXRlbUVsLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2xpY2soKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaXRlbUVsLm5hdGl2ZUVsZW1lbnQuY2xpY2soKTtcbiAgICB9XG59XG4iXX0=