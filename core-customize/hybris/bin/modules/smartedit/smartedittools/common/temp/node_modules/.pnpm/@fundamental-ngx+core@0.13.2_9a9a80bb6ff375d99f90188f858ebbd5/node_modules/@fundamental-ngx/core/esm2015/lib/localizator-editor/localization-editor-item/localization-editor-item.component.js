/**
 * @fileoverview added by tsickle
 * Generated from: lib/localizator-editor/localization-editor-item/localization-editor-item.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, ContentChild, Input, TemplateRef, ViewEncapsulation } from '@angular/core';
import { LocalizationEditorLabel } from '../localization-editor.directives';
/**
 *  Component that represents field with add-on.
 *  ```html
 *  <fd-localization-editor-item [label]="'EN'">
 *      <input fd-localization-editor-input type="text" placeholder="EN">
 *  </fd-localization-editor-item>
 *  ```
 */
export class LocalizationEditorItemComponent {
}
LocalizationEditorItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'fd-localization-editor-item',
                template: "<fd-input-group [compact]=\"compact\" [inputTemplate]=\"input\" [placement]=\"'after'\">\n    <span fd-input-group-addon [type]=\"type\" [compact]=\"compact\">\n        <ng-container *ngIf=\"labelTemplate\">\n            <ng-container [fd-localization-editor-load-label]=\"labelTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!labelTemplate\">\n            {{label}}\n        </ng-container>\n    </span>\n</fd-input-group>\n<ng-template #input>\n    <ng-content select=\"[fd-localization-editor-input]\"></ng-content>\n    <ng-content select=\"[fd-localization-editor-textarea]\"></ng-content>\n</ng-template>\n<ng-content></ng-content>\n",
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
LocalizationEditorItemComponent.propDecorators = {
    label: [{ type: Input }],
    compact: [{ type: Input }],
    labelTemplate: [{ type: ContentChild, args: [LocalizationEditorLabel, { read: TemplateRef, static: false },] }]
};
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.type;
    /**
     * The text for the add-on on the right side.
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.label;
    /**
     * Whether to apply compact mode to to field.
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.compact;
    /**
     * @hidden
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.labelTemplate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxpemF0aW9uLWVkaXRvci1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9sb2NhbGl6YXRvci1lZGl0b3IvbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtL2xvY2FsaXphdGlvbi1lZGl0b3ItaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQ2UsdUJBQXVCLEVBQ3pDLFNBQVMsRUFDVCxZQUFZLEVBQ1osS0FBSyxFQUdMLFdBQVcsRUFDWCxpQkFBaUIsRUFDcEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUNILHVCQUF1QixFQUMxQixNQUFNLG1DQUFtQyxDQUFDOzs7Ozs7Ozs7QUFnQjNDLE1BQU0sT0FBTywrQkFBK0I7OztZQU4zQyxTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLDZCQUE2QjtnQkFDdkMsOHFCQUF3RDtnQkFDeEQsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2xEOzs7b0JBT0ksS0FBSztzQkFJTCxLQUFLOzRCQUlMLFlBQVksU0FBQyx1QkFBdUIsRUFBRSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTs7Ozs7OztJQVgzRSwrQ0FBYTs7Ozs7SUFHYixnREFDYzs7Ozs7SUFHZCxrREFDaUI7Ozs7O0lBR2pCLHdEQUNnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQWZ0ZXJDb250ZW50SW5pdCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIENvbnRlbnRDaGlsZCxcbiAgICBJbnB1dCxcbiAgICBPbkNoYW5nZXMsXG4gICAgT25Jbml0LFxuICAgIFRlbXBsYXRlUmVmLFxuICAgIFZpZXdFbmNhcHN1bGF0aW9uXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBMb2NhbGl6YXRpb25FZGl0b3JMYWJlbFxufSBmcm9tICcuLi9sb2NhbGl6YXRpb24tZWRpdG9yLmRpcmVjdGl2ZXMnO1xuXG4vKipcbiAqICBDb21wb25lbnQgdGhhdCByZXByZXNlbnRzIGZpZWxkIHdpdGggYWRkLW9uLlxuICogIGBgYGh0bWxcbiAqICA8ZmQtbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtIFtsYWJlbF09XCInRU4nXCI+XG4gKiAgICAgIDxpbnB1dCBmZC1sb2NhbGl6YXRpb24tZWRpdG9yLWlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJFTlwiPlxuICogIDwvZmQtbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtPlxuICogIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLWxvY2FsaXphdGlvbi1lZGl0b3ItaXRlbScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xvY2FsaXphdGlvbi1lZGl0b3ItaXRlbS5jb21wb25lbnQuaHRtbCcsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBMb2NhbGl6YXRpb25FZGl0b3JJdGVtQ29tcG9uZW50IHtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgdHlwZTogc3RyaW5nO1xuXG4gICAgLyoqIFRoZSB0ZXh0IGZvciB0aGUgYWRkLW9uIG9uIHRoZSByaWdodCBzaWRlLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgbGFiZWw6IHN0cmluZztcblxuICAgIC8qKiBXaGV0aGVyIHRvIGFwcGx5IGNvbXBhY3QgbW9kZSB0byB0byBmaWVsZC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGNvbXBhY3Q6IGJvb2xlYW47XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBDb250ZW50Q2hpbGQoTG9jYWxpemF0aW9uRWRpdG9yTGFiZWwsIHsgcmVhZDogVGVtcGxhdGVSZWYsIHN0YXRpYzogZmFsc2UgfSlcbiAgICBsYWJlbFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xufVxuIl19