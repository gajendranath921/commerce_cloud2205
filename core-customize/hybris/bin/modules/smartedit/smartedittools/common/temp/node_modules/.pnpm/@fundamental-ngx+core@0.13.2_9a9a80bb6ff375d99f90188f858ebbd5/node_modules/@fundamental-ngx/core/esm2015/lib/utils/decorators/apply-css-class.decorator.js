/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/decorators/apply-css-class.decorator.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ELEMENT_REF_EXCEPTION } from '../public_api';
/**
 * Method decorator to apply css class to a component through native element
 * decorator will store original method in variable and wrap it with custom one
 * component has to implement CssClassBuilder interface
 * more info abour method decorator: https://www.typescriptlang.org/docs/handbook/decorators.html#method-decorators
 * @param {?} target a component
 * @param {?} propertyKey name of the method
 * @param {?} descriptor method
 * @return {?}
 */
export function applyCssClass(target, propertyKey, descriptor) {
    /** @type {?} */
    const originalMethod = descriptor.value;
    descriptor.value = (/**
     * @return {?}
     */
    function () {
        if (!this.elementRef) {
            throw ELEMENT_REF_EXCEPTION;
        }
        /** @type {?} */
        const _class = originalMethod.apply(this);
        /** @type {?} */
        const elementRef = this.elementRef.apply(this);
        if (elementRef) {
            ((/** @type {?} */ (elementRef.nativeElement))).className = `${_class} ${this.class ? this.class : ''}`;
        }
        return _class;
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbHktY3NzLWNsYXNzLmRlY29yYXRvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9kZWNvcmF0b3JzL2FwcGx5LWNzcy1jbGFzcy5kZWNvcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7O0FBV3RELE1BQU0sVUFBVSxhQUFhLENBQUMsTUFBVyxFQUFFLFdBQW1CLEVBQUUsVUFBOEI7O1VBQ3BGLGNBQWMsR0FBRyxVQUFVLENBQUMsS0FBSztJQUN2QyxVQUFVLENBQUMsS0FBSzs7O0lBQUc7UUFDZixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNsQixNQUFNLHFCQUFxQixDQUFDO1NBQy9COztjQUVLLE1BQU0sR0FBRyxjQUFjLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQzs7Y0FDbkMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUU5QyxJQUFJLFVBQVUsRUFBRTtZQUNaLENBQUMsbUJBQUEsVUFBVSxDQUFDLGFBQWEsRUFBZSxDQUFDLENBQUMsU0FBUyxHQUFHLEdBQUcsTUFBTSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDO1NBQ3JHO1FBRUQsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQyxDQUFBLENBQUM7QUFDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRUxFTUVOVF9SRUZfRVhDRVBUSU9OIH0gZnJvbSAnLi4vcHVibGljX2FwaSc7XG5cbi8qKlxuICogTWV0aG9kIGRlY29yYXRvciB0byBhcHBseSBjc3MgY2xhc3MgdG8gYSBjb21wb25lbnQgdGhyb3VnaCBuYXRpdmUgZWxlbWVudFxuICogZGVjb3JhdG9yIHdpbGwgc3RvcmUgb3JpZ2luYWwgbWV0aG9kIGluIHZhcmlhYmxlIGFuZCB3cmFwIGl0IHdpdGggY3VzdG9tIG9uZVxuICogY29tcG9uZW50IGhhcyB0byBpbXBsZW1lbnQgQ3NzQ2xhc3NCdWlsZGVyIGludGVyZmFjZVxuICogbW9yZSBpbmZvIGFib3VyIG1ldGhvZCBkZWNvcmF0b3I6IGh0dHBzOi8vd3d3LnR5cGVzY3JpcHRsYW5nLm9yZy9kb2NzL2hhbmRib29rL2RlY29yYXRvcnMuaHRtbCNtZXRob2QtZGVjb3JhdG9yc1xuICogQHBhcmFtIHRhcmdldCBhIGNvbXBvbmVudFxuICogQHBhcmFtIHByb3BlcnR5S2V5IG5hbWUgb2YgdGhlIG1ldGhvZFxuICogQHBhcmFtIGRlc2NyaXB0b3IgbWV0aG9kXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHBseUNzc0NsYXNzKHRhcmdldDogYW55LCBwcm9wZXJ0eUtleTogc3RyaW5nLCBkZXNjcmlwdG9yOiBQcm9wZXJ0eURlc2NyaXB0b3IpOiB2b2lkIHtcbiAgICBjb25zdCBvcmlnaW5hbE1ldGhvZCA9IGRlc2NyaXB0b3IudmFsdWU7XG4gICAgZGVzY3JpcHRvci52YWx1ZSA9IGZ1bmN0aW9uKCk6IHN0cmluZyB7XG4gICAgICAgIGlmICghdGhpcy5lbGVtZW50UmVmKSB7XG4gICAgICAgICAgICB0aHJvdyBFTEVNRU5UX1JFRl9FWENFUFRJT047XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBfY2xhc3MgPSBvcmlnaW5hbE1ldGhvZC5hcHBseSh0aGlzKTtcbiAgICAgICAgY29uc3QgZWxlbWVudFJlZiA9IHRoaXMuZWxlbWVudFJlZi5hcHBseSh0aGlzKTtcblxuICAgICAgICBpZiAoZWxlbWVudFJlZikge1xuICAgICAgICAgICAgKGVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCBhcyBIVE1MRWxlbWVudCkuY2xhc3NOYW1lID0gYCR7X2NsYXNzfSAke3RoaXMuY2xhc3MgPyB0aGlzLmNsYXNzIDogJyd9YDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBfY2xhc3M7XG4gICAgfTtcbn1cbiJdfQ==