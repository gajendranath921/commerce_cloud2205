/**
 * @fileoverview added by tsickle
 * Generated from: lib/tile/tile.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TileComponent } from './tile.component';
import { TileContentDirective } from './tile-content/tile-content.directive';
import { TileTextDirective } from './tile-text/tile-text.directive';
import { TileTitleDirective } from './tile-title/tile-title.directive';
import { TileMediaDirective } from './tile-media/tile-media.directive';
import { TileActionsDirective } from './tile-actions/tile-actions.directive';
import { ProductTileComponent } from './product-tile.component';
import { ProductTileMediaDirective } from './product-tile-media/product-tile-media.directive';
import { ProductTileContentDirective } from './product-tile-content/product-tile-content.directive';
import { ProductTileTextDirective } from './product-tile-text/product-tile-text.directive';
import { ProductTileTitleDirective } from './product-tile-title/product-tile-title.directive';
var TileModule = /** @class */ (function () {
    function TileModule() {
    }
    TileModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule],
                    exports: [
                        TileComponent,
                        TileContentDirective,
                        TileTextDirective,
                        TileTitleDirective,
                        TileMediaDirective,
                        TileActionsDirective,
                        ProductTileComponent,
                        ProductTileMediaDirective,
                        ProductTileContentDirective,
                        ProductTileTextDirective,
                        ProductTileTitleDirective
                    ],
                    declarations: [
                        TileComponent,
                        TileContentDirective,
                        TileTextDirective,
                        TileTitleDirective,
                        TileMediaDirective,
                        TileActionsDirective,
                        ProductTileComponent,
                        ProductTileMediaDirective,
                        ProductTileContentDirective,
                        ProductTileTextDirective,
                        ProductTileTitleDirective
                    ]
                },] }
    ];
    return TileModule;
}());
export { TileModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvdGlsZS90aWxlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUM5RixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNwRyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUMzRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUU5RjtJQUFBO0lBNkIwQixDQUFDOztnQkE3QjFCLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7b0JBQ3ZCLE9BQU8sRUFBRTt3QkFDTCxhQUFhO3dCQUNiLG9CQUFvQjt3QkFDcEIsaUJBQWlCO3dCQUNqQixrQkFBa0I7d0JBQ2xCLGtCQUFrQjt3QkFDbEIsb0JBQW9CO3dCQUNwQixvQkFBb0I7d0JBQ3BCLHlCQUF5Qjt3QkFDekIsMkJBQTJCO3dCQUMzQix3QkFBd0I7d0JBQ3hCLHlCQUF5QjtxQkFDNUI7b0JBQ0QsWUFBWSxFQUFFO3dCQUNWLGFBQWE7d0JBQ2Isb0JBQW9CO3dCQUNwQixpQkFBaUI7d0JBQ2pCLGtCQUFrQjt3QkFDbEIsa0JBQWtCO3dCQUNsQixvQkFBb0I7d0JBQ3BCLG9CQUFvQjt3QkFDcEIseUJBQXlCO3dCQUN6QiwyQkFBMkI7d0JBQzNCLHdCQUF3Qjt3QkFDeEIseUJBQXlCO3FCQUM1QjtpQkFDSjs7SUFDeUIsaUJBQUM7Q0FBQSxBQTdCM0IsSUE2QjJCO1NBQWQsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi90aWxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaWxlQ29udGVudERpcmVjdGl2ZSB9IGZyb20gJy4vdGlsZS1jb250ZW50L3RpbGUtY29udGVudC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGlsZVRleHREaXJlY3RpdmUgfSBmcm9tICcuL3RpbGUtdGV4dC90aWxlLXRleHQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFRpbGVUaXRsZURpcmVjdGl2ZSB9IGZyb20gJy4vdGlsZS10aXRsZS90aWxlLXRpdGxlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUaWxlTWVkaWFEaXJlY3RpdmUgfSBmcm9tICcuL3RpbGUtbWVkaWEvdGlsZS1tZWRpYS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGlsZUFjdGlvbnNEaXJlY3RpdmUgfSBmcm9tICcuL3RpbGUtYWN0aW9ucy90aWxlLWFjdGlvbnMuZGlyZWN0aXZlJztcbmltcG9ydCB7IFByb2R1Y3RUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi9wcm9kdWN0LXRpbGUuY29tcG9uZW50JztcbmltcG9ydCB7IFByb2R1Y3RUaWxlTWVkaWFEaXJlY3RpdmUgfSBmcm9tICcuL3Byb2R1Y3QtdGlsZS1tZWRpYS9wcm9kdWN0LXRpbGUtbWVkaWEuZGlyZWN0aXZlJztcbmltcG9ydCB7IFByb2R1Y3RUaWxlQ29udGVudERpcmVjdGl2ZSB9IGZyb20gJy4vcHJvZHVjdC10aWxlLWNvbnRlbnQvcHJvZHVjdC10aWxlLWNvbnRlbnQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFByb2R1Y3RUaWxlVGV4dERpcmVjdGl2ZSB9IGZyb20gJy4vcHJvZHVjdC10aWxlLXRleHQvcHJvZHVjdC10aWxlLXRleHQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFByb2R1Y3RUaWxlVGl0bGVEaXJlY3RpdmUgfSBmcm9tICcuL3Byb2R1Y3QtdGlsZS10aXRsZS9wcm9kdWN0LXRpbGUtdGl0bGUuZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIFRpbGVDb21wb25lbnQsXG4gICAgICAgIFRpbGVDb250ZW50RGlyZWN0aXZlLFxuICAgICAgICBUaWxlVGV4dERpcmVjdGl2ZSxcbiAgICAgICAgVGlsZVRpdGxlRGlyZWN0aXZlLFxuICAgICAgICBUaWxlTWVkaWFEaXJlY3RpdmUsXG4gICAgICAgIFRpbGVBY3Rpb25zRGlyZWN0aXZlLFxuICAgICAgICBQcm9kdWN0VGlsZUNvbXBvbmVudCxcbiAgICAgICAgUHJvZHVjdFRpbGVNZWRpYURpcmVjdGl2ZSxcbiAgICAgICAgUHJvZHVjdFRpbGVDb250ZW50RGlyZWN0aXZlLFxuICAgICAgICBQcm9kdWN0VGlsZVRleHREaXJlY3RpdmUsXG4gICAgICAgIFByb2R1Y3RUaWxlVGl0bGVEaXJlY3RpdmVcbiAgICBdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBUaWxlQ29tcG9uZW50LFxuICAgICAgICBUaWxlQ29udGVudERpcmVjdGl2ZSxcbiAgICAgICAgVGlsZVRleHREaXJlY3RpdmUsXG4gICAgICAgIFRpbGVUaXRsZURpcmVjdGl2ZSxcbiAgICAgICAgVGlsZU1lZGlhRGlyZWN0aXZlLFxuICAgICAgICBUaWxlQWN0aW9uc0RpcmVjdGl2ZSxcbiAgICAgICAgUHJvZHVjdFRpbGVDb21wb25lbnQsXG4gICAgICAgIFByb2R1Y3RUaWxlTWVkaWFEaXJlY3RpdmUsXG4gICAgICAgIFByb2R1Y3RUaWxlQ29udGVudERpcmVjdGl2ZSxcbiAgICAgICAgUHJvZHVjdFRpbGVUZXh0RGlyZWN0aXZlLFxuICAgICAgICBQcm9kdWN0VGlsZVRpdGxlRGlyZWN0aXZlXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBUaWxlTW9kdWxlIHsgfVxuIl19