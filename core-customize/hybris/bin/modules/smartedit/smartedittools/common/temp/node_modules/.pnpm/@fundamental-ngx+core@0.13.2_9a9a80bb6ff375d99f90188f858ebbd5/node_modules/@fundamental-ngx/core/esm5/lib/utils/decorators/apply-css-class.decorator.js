/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/decorators/apply-css-class.decorator.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ELEMENT_REF_EXCEPTION } from '../public_api';
/**
 * Method decorator to apply css class to a component through native element
 * decorator will store original method in variable and wrap it with custom one
 * component has to implement CssClassBuilder interface
 * more info abour method decorator: https://www.typescriptlang.org/docs/handbook/decorators.html#method-decorators
 * @param {?} target a component
 * @param {?} propertyKey name of the method
 * @param {?} descriptor method
 * @return {?}
 */
export function applyCssClass(target, propertyKey, descriptor) {
    /** @type {?} */
    var originalMethod = descriptor.value;
    descriptor.value = (/**
     * @return {?}
     */
    function () {
        if (!this.elementRef) {
            throw ELEMENT_REF_EXCEPTION;
        }
        /** @type {?} */
        var _class = originalMethod.apply(this);
        /** @type {?} */
        var elementRef = this.elementRef.apply(this);
        if (elementRef) {
            ((/** @type {?} */ (elementRef.nativeElement))).className = _class + " " + (this.class ? this.class : '');
        }
        return _class;
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbHktY3NzLWNsYXNzLmRlY29yYXRvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9kZWNvcmF0b3JzL2FwcGx5LWNzcy1jbGFzcy5kZWNvcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7O0FBV3RELE1BQU0sVUFBVSxhQUFhLENBQUMsTUFBVyxFQUFFLFdBQW1CLEVBQUUsVUFBOEI7O1FBQ3BGLGNBQWMsR0FBRyxVQUFVLENBQUMsS0FBSztJQUN2QyxVQUFVLENBQUMsS0FBSzs7O0lBQUc7UUFDZixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNsQixNQUFNLHFCQUFxQixDQUFDO1NBQy9COztZQUVLLE1BQU0sR0FBRyxjQUFjLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQzs7WUFDbkMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUU5QyxJQUFJLFVBQVUsRUFBRTtZQUNaLENBQUMsbUJBQUEsVUFBVSxDQUFDLGFBQWEsRUFBZSxDQUFDLENBQUMsU0FBUyxHQUFNLE1BQU0sVUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUUsQ0FBQztTQUNyRztRQUVELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUMsQ0FBQSxDQUFDO0FBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVMRU1FTlRfUkVGX0VYQ0VQVElPTiB9IGZyb20gJy4uL3B1YmxpY19hcGknO1xuXG4vKipcbiAqIE1ldGhvZCBkZWNvcmF0b3IgdG8gYXBwbHkgY3NzIGNsYXNzIHRvIGEgY29tcG9uZW50IHRocm91Z2ggbmF0aXZlIGVsZW1lbnRcbiAqIGRlY29yYXRvciB3aWxsIHN0b3JlIG9yaWdpbmFsIG1ldGhvZCBpbiB2YXJpYWJsZSBhbmQgd3JhcCBpdCB3aXRoIGN1c3RvbSBvbmVcbiAqIGNvbXBvbmVudCBoYXMgdG8gaW1wbGVtZW50IENzc0NsYXNzQnVpbGRlciBpbnRlcmZhY2VcbiAqIG1vcmUgaW5mbyBhYm91ciBtZXRob2QgZGVjb3JhdG9yOiBodHRwczovL3d3dy50eXBlc2NyaXB0bGFuZy5vcmcvZG9jcy9oYW5kYm9vay9kZWNvcmF0b3JzLmh0bWwjbWV0aG9kLWRlY29yYXRvcnNcbiAqIEBwYXJhbSB0YXJnZXQgYSBjb21wb25lbnRcbiAqIEBwYXJhbSBwcm9wZXJ0eUtleSBuYW1lIG9mIHRoZSBtZXRob2RcbiAqIEBwYXJhbSBkZXNjcmlwdG9yIG1ldGhvZFxuICovXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlDc3NDbGFzcyh0YXJnZXQ6IGFueSwgcHJvcGVydHlLZXk6IHN0cmluZywgZGVzY3JpcHRvcjogUHJvcGVydHlEZXNjcmlwdG9yKTogdm9pZCB7XG4gICAgY29uc3Qgb3JpZ2luYWxNZXRob2QgPSBkZXNjcmlwdG9yLnZhbHVlO1xuICAgIGRlc2NyaXB0b3IudmFsdWUgPSBmdW5jdGlvbigpOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXRoaXMuZWxlbWVudFJlZikge1xuICAgICAgICAgICAgdGhyb3cgRUxFTUVOVF9SRUZfRVhDRVBUSU9OO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgX2NsYXNzID0gb3JpZ2luYWxNZXRob2QuYXBwbHkodGhpcyk7XG4gICAgICAgIGNvbnN0IGVsZW1lbnRSZWYgPSB0aGlzLmVsZW1lbnRSZWYuYXBwbHkodGhpcyk7XG5cbiAgICAgICAgaWYgKGVsZW1lbnRSZWYpIHtcbiAgICAgICAgICAgIChlbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQgYXMgSFRNTEVsZW1lbnQpLmNsYXNzTmFtZSA9IGAke19jbGFzc30gJHt0aGlzLmNsYXNzID8gdGhpcy5jbGFzcyA6ICcnfWA7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gX2NsYXNzO1xuICAgIH07XG59XG4iXX0=