/**
 * @fileoverview added by tsickle
 * Generated from: lib/form/form.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FieldsetComponent } from './fieldset/fieldset.component';
import { FormControlDirective } from './form-control/form-control.directive';
import { FormItemComponent } from './form-item/form-item.component';
import { FormLabelComponent } from './form-label/form-label.component';
import { FormLegendDirective } from './form-legend/form-legend.directive';
import { FormMessageComponent } from './form-message/form-message.component';
import { FormGroupComponent } from './form-group/form-group.component';
import { FormInputMessageGroupComponent } from './form-input-message-group/form-input-message-group.component';
import { PopoverModule } from '../popover/popover.module';
var FormModule = /** @class */ (function () {
    function FormModule() {
    }
    FormModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule, PopoverModule],
                    exports: [
                        FieldsetComponent,
                        FormControlDirective,
                        FormItemComponent,
                        FormLabelComponent,
                        FormLegendDirective,
                        FormMessageComponent,
                        FormInputMessageGroupComponent,
                        FormGroupComponent
                    ],
                    declarations: [
                        FieldsetComponent,
                        FormControlDirective,
                        FormItemComponent,
                        FormLabelComponent,
                        FormLegendDirective,
                        FormMessageComponent,
                        FormInputMessageGroupComponent,
                        FormGroupComponent,
                    ]
                },] }
    ];
    return FormModule;
}());
export { FormModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvZm9ybS9mb3JtLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLCtEQUErRCxDQUFDO0FBQy9HLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUUxRDtJQUFBO0lBdUIwQixDQUFDOztnQkF2QjFCLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsYUFBYSxDQUFDO29CQUN0QyxPQUFPLEVBQUU7d0JBQ0wsaUJBQWlCO3dCQUNqQixvQkFBb0I7d0JBQ3BCLGlCQUFpQjt3QkFDakIsa0JBQWtCO3dCQUNsQixtQkFBbUI7d0JBQ25CLG9CQUFvQjt3QkFDcEIsOEJBQThCO3dCQUM5QixrQkFBa0I7cUJBQ3JCO29CQUNELFlBQVksRUFBRTt3QkFDVixpQkFBaUI7d0JBQ2pCLG9CQUFvQjt3QkFDcEIsaUJBQWlCO3dCQUNqQixrQkFBa0I7d0JBQ2xCLG1CQUFtQjt3QkFDbkIsb0JBQW9CO3dCQUNwQiw4QkFBOEI7d0JBQzlCLGtCQUFrQjtxQkFDckI7aUJBQ0o7O0lBQ3lCLGlCQUFDO0NBQUEsQUF2QjNCLElBdUIyQjtTQUFkLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgRmllbGRzZXRDb21wb25lbnQgfSBmcm9tICcuL2ZpZWxkc2V0L2ZpZWxkc2V0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3JtQ29udHJvbERpcmVjdGl2ZSB9IGZyb20gJy4vZm9ybS1jb250cm9sL2Zvcm0tY29udHJvbC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRm9ybUl0ZW1Db21wb25lbnQgfSBmcm9tICcuL2Zvcm0taXRlbS9mb3JtLWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IEZvcm1MYWJlbENvbXBvbmVudCB9IGZyb20gJy4vZm9ybS1sYWJlbC9mb3JtLWxhYmVsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3JtTGVnZW5kRGlyZWN0aXZlIH0gZnJvbSAnLi9mb3JtLWxlZ2VuZC9mb3JtLWxlZ2VuZC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRm9ybU1lc3NhZ2VDb21wb25lbnQgfSBmcm9tICcuL2Zvcm0tbWVzc2FnZS9mb3JtLW1lc3NhZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IEZvcm1Hcm91cENvbXBvbmVudCB9IGZyb20gJy4vZm9ybS1ncm91cC9mb3JtLWdyb3VwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3JtSW5wdXRNZXNzYWdlR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2Zvcm0taW5wdXQtbWVzc2FnZS1ncm91cC9mb3JtLWlucHV0LW1lc3NhZ2UtZ3JvdXAuY29tcG9uZW50JztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICcuLi9wb3BvdmVyL3BvcG92ZXIubW9kdWxlJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBQb3BvdmVyTW9kdWxlXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIEZpZWxkc2V0Q29tcG9uZW50LFxuICAgICAgICBGb3JtQ29udHJvbERpcmVjdGl2ZSxcbiAgICAgICAgRm9ybUl0ZW1Db21wb25lbnQsXG4gICAgICAgIEZvcm1MYWJlbENvbXBvbmVudCxcbiAgICAgICAgRm9ybUxlZ2VuZERpcmVjdGl2ZSxcbiAgICAgICAgRm9ybU1lc3NhZ2VDb21wb25lbnQsXG4gICAgICAgIEZvcm1JbnB1dE1lc3NhZ2VHcm91cENvbXBvbmVudCxcbiAgICAgICAgRm9ybUdyb3VwQ29tcG9uZW50XG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgRmllbGRzZXRDb21wb25lbnQsXG4gICAgICAgIEZvcm1Db250cm9sRGlyZWN0aXZlLFxuICAgICAgICBGb3JtSXRlbUNvbXBvbmVudCxcbiAgICAgICAgRm9ybUxhYmVsQ29tcG9uZW50LFxuICAgICAgICBGb3JtTGVnZW5kRGlyZWN0aXZlLFxuICAgICAgICBGb3JtTWVzc2FnZUNvbXBvbmVudCxcbiAgICAgICAgRm9ybUlucHV0TWVzc2FnZUdyb3VwQ29tcG9uZW50LFxuICAgICAgICBGb3JtR3JvdXBDb21wb25lbnQsXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBGb3JtTW9kdWxlIHsgfVxuIl19