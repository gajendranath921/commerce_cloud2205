/**
 * @fileoverview added by tsickle
 * Generated from: lib/checkbox/checkbox/checkbox.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, forwardRef, HostBinding, Input, ViewEncapsulation } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { compareObjects } from '../../utils/functions';
/** @type {?} */
var checkboxUniqueId = 0;
var CheckboxComponent = /** @class */ (function () {
    function CheckboxComponent(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        /**
         * Sets [id] property of input, binds input with input label using [for] property.
         */
        this.inputId = "fd-checkbox-" + checkboxUniqueId++;
        /**
         * Allows to prevent user from manually selecting controls third state.
         */
        this.tristateSelectable = true;
        /**
         * @hidden
         */
        this.position = 'relative';
        /**
         * Values returned by control.
         */
        this.values = { trueValue: true, falseValue: false, thirdStateValue: null };
        /**
         * @hidden Reference to callback provided by FormControl.
         */
        this.onTouched = (/**
         * @return {?}
         */
        function () { });
        /**
         * @hidden Reference to callback provided by FormControl.
         */
        this.onValueChange = (/**
         * @param {?} newValue
         * @return {?}
         */
        function (newValue) { });
    }
    Object.defineProperty(CheckboxComponent.prototype, "_values", {
        /** Sets values returned by control. */
        set: /**
         * Sets values returned by control.
         * @param {?} checkboxValues
         * @return {?}
         */
        function (checkboxValues) {
            this.values = tslib_1.__assign({}, this.values, checkboxValues);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CheckboxComponent.prototype, "isChecked", {
        /** @hidden Used to define if control is in 'checked' / 'unchecked' state.*/
        get: /**
         * @hidden Used to define if control is in 'checked' / 'unchecked' state.
         * @return {?}
         */
        function () {
            return this.checkboxState === 'checked';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CheckboxComponent.prototype, "isIndeterminate", {
        /** @hidden Used to define if control is in 'indeterminate' state.*/
        get: /**
         * @hidden Used to define if control is in 'indeterminate' state.
         * @return {?}
         */
        function () {
            return this.checkboxState === 'indeterminate';
        },
        enumerable: true,
        configurable: true
    });
    /** @hidden ControlValueAccessor interface
     * - sets new control value
     * - updates control state
     * */
    /**
     * @hidden ControlValueAccessor interface
     * - sets new control value
     * - updates control state
     *
     * @param {?} value
     * @return {?}
     */
    CheckboxComponent.prototype.writeValue = /**
     * @hidden ControlValueAccessor interface
     * - sets new control value
     * - updates control state
     *
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.checkboxValue = value;
        this._setState();
        this._changeDetectorRef.detectChanges();
    };
    /** @hidden ControlValueAccessor interface method - sets onValueChange callback.*/
    /**
     * @hidden ControlValueAccessor interface method - sets onValueChange callback.
     * @param {?} fn
     * @return {?}
     */
    CheckboxComponent.prototype.registerOnChange = /**
     * @hidden ControlValueAccessor interface method - sets onValueChange callback.
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onValueChange = fn;
    };
    /** @hidden ControlValueAccessor interface method - sets onTouched callback.*/
    /**
     * @hidden ControlValueAccessor interface method - sets onTouched callback.
     * @param {?} fn
     * @return {?}
     */
    CheckboxComponent.prototype.registerOnTouched = /**
     * @hidden ControlValueAccessor interface method - sets onTouched callback.
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouched = fn;
    };
    /** @hidden Called by FormControl - used to disable / enable control.*/
    /**
     * @hidden Called by FormControl - used to disable / enable control.
     * @param {?} disabled
     * @return {?}
     */
    CheckboxComponent.prototype.setDisabledState = /**
     * @hidden Called by FormControl - used to disable / enable control.
     * @param {?} disabled
     * @return {?}
     */
    function (disabled) {
        this.disabled = disabled;
        this._changeDetectorRef.detectChanges();
    };
    /** @hidden Based on current control state:
     * - sets next control value
     * - emits new control value
     * - updates control state based on new control value
     * */
    /**
     * @hidden Based on current control state:
     * - sets next control value
     * - emits new control value
     * - updates control state based on new control value
     *
     * @return {?}
     */
    CheckboxComponent.prototype.nextValue = /**
     * @hidden Based on current control state:
     * - sets next control value
     * - emits new control value
     * - updates control state based on new control value
     *
     * @return {?}
     */
    function () {
        switch (this.checkboxState) {
            case 'checked':
                this.checkboxValue = this.values.falseValue;
                break;
            case 'unchecked':
                this.checkboxValue = this.tristate && this.tristateSelectable
                    ? this.values.thirdStateValue
                    : this.values.trueValue;
                break;
            case 'indeterminate':
                this.checkboxValue = this.values.trueValue;
                break;
        }
        this._setState();
        this.onValueChange(this.checkboxValue);
        this._changeDetectorRef.detectChanges();
    };
    /** @hidden Updates checkbox state on mouse click
     * and prevents from double check update from label-input binding */
    /**
     * @hidden Updates checkbox state on mouse click
     * and prevents from double check update from label-input binding
     * @param {?} event
     * @return {?}
     */
    CheckboxComponent.prototype.checkByClick = /**
     * @hidden Updates checkbox state on mouse click
     * and prevents from double check update from label-input binding
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.nextValue();
        event.preventDefault();
    };
    /** @hidden Updates checkbox state on spacebar key
     * and prevents from double check update from label-input binding */
    /**
     * @hidden Updates checkbox state on spacebar key
     * and prevents from double check update from label-input binding
     * @param {?} event
     * @return {?}
     */
    CheckboxComponent.prototype.checkByKey = /**
     * @hidden Updates checkbox state on spacebar key
     * and prevents from double check update from label-input binding
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this._isSpaceBarEvent(event)) {
            this.nextValue();
            event.preventDefault();
        }
    };
    /** @hidden Prevents from checkbox update based on label-input binding */
    /**
     * @hidden Prevents from checkbox update based on label-input binding
     * @param {?} event
     * @return {?}
     */
    CheckboxComponent.prototype.muteKey = /**
     * @hidden Prevents from checkbox update based on label-input binding
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this._isSpaceBarEvent(event)) {
            event.preventDefault();
        }
    };
    /** @hidden Determines event source based on key code */
    /**
     * @hidden Determines event source based on key code
     * @private
     * @param {?} event
     * @return {?}
     */
    CheckboxComponent.prototype._isSpaceBarEvent = /**
     * @hidden Determines event source based on key code
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        return event.keyCode === 32;
    };
    /** @hidden Based on current control value sets new control state. */
    /**
     * @hidden Based on current control value sets new control state.
     * @private
     * @return {?}
     */
    CheckboxComponent.prototype._setState = /**
     * @hidden Based on current control value sets new control state.
     * @private
     * @return {?}
     */
    function () {
        if (this._compare(this.checkboxValue, this.values.trueValue)) {
            this.checkboxState = 'checked';
        }
        else if (this._compare(this.checkboxValue, this.values.falseValue)) {
            this.checkboxState = 'unchecked';
        }
        else if (this.tristate && this._compare(this.checkboxValue, this.values.thirdStateValue)) {
            this.checkboxState = 'indeterminate';
        }
    };
    /** @hidden Compares values */
    /**
     * @hidden Compares values
     * @private
     * @param {?} val1
     * @param {?} val2
     * @return {?}
     */
    CheckboxComponent.prototype._compare = /**
     * @hidden Compares values
     * @private
     * @param {?} val1
     * @param {?} val2
     * @return {?}
     */
    function (val1, val2) {
        return typeof val1 === 'object'
            ? compareObjects(val1, val2)
            : val1 === val2;
    };
    CheckboxComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-checkbox',
                    template: "<input\n    type=\"checkbox\"\n    class=\"fd-checkbox\"\n    [id]=\"inputId\"\n    [name]=\"name\"\n    [disabled]=\"disabled\"\n    [checked]=\"isChecked\"\n    [value]=\"checkboxValue\"\n    [indeterminate]=\"isIndeterminate\"\n    [class.fd-checkbox--compact]=\"compact\"\n    [ngClass]=\"(state ? 'is-' + state : '')\"\n    (keydown)=\"muteKey($event)\"\n    (keyup)=\"checkByKey($event)\"\n>\n<label class=\"fd-checkbox__label\"\n       (click)=\"checkByClick($event)\"\n       [class.fd-checkbox__label--compact]=\"compact\"\n       [for]=\"inputId\">\n    {{label}}\n    <ng-container *ngIf=\"!label\">\n        <ng-content></ng-content>\n    </ng-container>\n</label>\n",
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return CheckboxComponent; })),
                            multi: true
                        }
                    ],
                    styles: ["@charset \"UTF-8\";/*!\n * Fundamental Library Styles v0.4.1\n * Copyright (c) 2020 SAP SE or an SAP affiliate company.\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/master/LICENSE)\n *//*!\n.fd-checkbox\n*/.fd-checkbox{position:absolute;opacity:.0001;line-height:1.42857;color:var(--sapTextColor,#32363a);-webkit-font-smoothing:antialiased;-webkit-box-sizing:border-box;padding:0;margin:0;border:.0625rem solid #89919a;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-size:.875rem;font-size:var(--sapFontSize,.875rem);font-weight:400;color:#32363a;color:var(--sapField_TextColor,#32363a);background-color:#fff;background-color:var(--sapField_Background,#fff);box-sizing:border-box;border-width:var(--sapField_BorderWidth,.0625rem);border-color:var(--sapField_BorderColor,#89919a);border-radius:.125rem;border-radius:var(--sapField_BorderCornerRadius,.125rem);outline:0;appearance:none;-webkit-appearance:none;-moz-appearance:none}.fd-checkbox:after,.fd-checkbox:before{box-sizing:inherit;font-size:inherit}.fd-checkbox::-webkit-input-placeholder{font-style:italic;color:#74777a;color:var(--sapField_PlaceholderTextColor,#74777a)}.fd-checkbox::-moz-placeholder{font-style:italic;color:#74777a;color:var(--sapField_PlaceholderTextColor,#74777a)}.fd-checkbox:-ms-input-placeholder{font-style:italic;color:#74777a;color:var(--sapField_PlaceholderTextColor,#74777a)}.fd-checkbox::-ms-input-placeholder{font-style:italic;color:#74777a;color:var(--sapField_PlaceholderTextColor,#74777a)}.fd-checkbox::placeholder{font-style:italic;color:#74777a;color:var(--sapField_PlaceholderTextColor,#74777a)}.fd-checkbox::-moz-selection{color:#fff;color:var(--sapContent_ContrastTextColor,#fff);background-color:#0854a0;background-color:var(--sapSelectedColor,#0854a0)}.fd-checkbox::selection{color:#fff;color:var(--sapContent_ContrastTextColor,#fff);background-color:#0854a0;background-color:var(--sapSelectedColor,#0854a0)}.fd-checkbox .is-hover,.fd-checkbox:hover{background-color:#fff;background-color:var(--sapField_Hover_Background,#fff);border-color:#0854a0;border-color:var(--sapField_Hover_BorderColor,#0854a0)}.fd-checkbox.is-valid{background-color:#fff;background-color:var(--sapField_SuccessBackground,#fff);border-color:#107e3e;border-color:var(--sapField_SuccessColor,#107e3e);border-width:.0625rem}.fd-checkbox.is-valid .is-hover,.fd-checkbox.is-valid:hover{background-color:#fff;background-color:var(--sapField_SuccessBackground,#fff);border-color:#107e3e;border-color:var(--sapField_SuccessColor,#107e3e)}.fd-checkbox.is-invalid,.fd-checkbox.is-invalid .is-hover,.fd-checkbox.is-invalid:hover{background-color:#fff;background-color:var(--sapField_InvalidBackground,#fff);border-color:#b00;border-color:var(--sapField_InvalidColor,#b00)}.fd-checkbox.is-alert,.fd-checkbox.is-alert .is-hover,.fd-checkbox.is-alert:hover,.fd-checkbox.is-warning,.fd-checkbox.is-warning .is-hover,.fd-checkbox.is-warning:hover{background-color:#fff;background-color:var(--sapField_WarningBackground,#fff);border-color:#e9730c;border-color:var(--sapField_WarningColor,#e9730c)}.fd-checkbox.is-information,.fd-checkbox.is-information .is-hover,.fd-checkbox.is-information:hover{background-color:#fff;background-color:var(--sapField_InformationBackground,#fff);border-color:#0a6ed1;border-color:var(--sapField_InformationColor,#0a6ed1)}.fd-checkbox.is-focus,.fd-checkbox:focus{box-shadow:none;outline-offset:-.1875rem;outline-width:var(--sapContent_FocusWidth,.0625rem);outline-color:var(--sapContent_FocusColor,#000);outline-style:var(--sapContent_FocusStyle,dotted);outline:#000 dotted .0625rem;box-shadow:0 0 0 1px #085caf;box-shadow:0 0 0 1px var(--fd-color-action-focus,#085caf);z-index:5}.fd-checkbox.is-alert,.fd-checkbox.is-information,.fd-checkbox.is-invalid,.fd-checkbox.is-warning{border-width:.125rem}.fd-checkbox.is-alert.is-focus,.fd-checkbox.is-alert:focus,.fd-checkbox.is-information.is-focus,.fd-checkbox.is-information:focus,.fd-checkbox.is-invalid.is-focus,.fd-checkbox.is-invalid:focus,.fd-checkbox.is-warning.is-focus,.fd-checkbox.is-warning:focus{box-shadow:0 0 0 1px #085caf;box-shadow:0 0 0 1px var(--fd-color-action-focus,#085caf);z-index:5;box-shadow:none;outline-offset:-.25rem}.fd-checkbox.is-disabled,.fd-checkbox:disabled,.fd-checkbox[aria-disabled=true]{pointer-events:none;opacity:.4;opacity:.0001}.fd-checkbox.is-disabled::-webkit-input-placeholder,.fd-checkbox:disabled::-webkit-input-placeholder,.fd-checkbox[aria-disabled=true]::-webkit-input-placeholder{color:transparent}.fd-checkbox.is-disabled::-moz-placeholder,.fd-checkbox:disabled::-moz-placeholder,.fd-checkbox[aria-disabled=true]::-moz-placeholder{color:transparent}.fd-checkbox.is-disabled:-ms-input-placeholder,.fd-checkbox:disabled:-ms-input-placeholder,.fd-checkbox[aria-disabled=true]:-ms-input-placeholder{color:transparent}.fd-checkbox.is-disabled::-ms-input-placeholder,.fd-checkbox:disabled::-ms-input-placeholder,.fd-checkbox[aria-disabled=true]::-ms-input-placeholder{color:transparent}.fd-checkbox.is-disabled::placeholder,.fd-checkbox:disabled::placeholder,.fd-checkbox[aria-disabled=true]::placeholder{color:transparent}.fd-checkbox.is-readonly,.fd-checkbox[readonly]{background-color:hsla(0,0%,94.9%,.5);background-color:var(--sapField_ReadOnly_Background,hsla(0,0%,94.9%,.5));border-color:#89919a;border-color:var(--sapField_ReadOnly_BorderColor,#89919a)}.fd-checkbox.is-readonly::-webkit-input-placeholder,.fd-checkbox[readonly]::-webkit-input-placeholder{color:transparent}.fd-checkbox.is-readonly::-moz-placeholder,.fd-checkbox[readonly]::-moz-placeholder{color:transparent}.fd-checkbox.is-readonly:-ms-input-placeholder,.fd-checkbox[readonly]:-ms-input-placeholder{color:transparent}.fd-checkbox.is-readonly::-ms-input-placeholder,.fd-checkbox[readonly]::-ms-input-placeholder{color:transparent}.fd-checkbox.is-readonly::placeholder,.fd-checkbox[readonly]::placeholder{color:transparent}.fd-checkbox__label{line-height:1.42857;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0 8px 0 0;border:0;white-space:nowrap;text-overflow:ellipsis;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;position:relative;max-width:100%;font-size:.875rem;font-size:var(--sapFontSize,.875rem);color:#6a6d70;color:var(--sapContent_LabelColor,#6a6d70);cursor:pointer;overflow:visible;display:flex;align-items:center}.fd-checkbox__label:after,.fd-checkbox__label:before{box-sizing:inherit;font-size:inherit}.fd-checkbox__label[dir=rtl],[dir=rtl] .fd-checkbox__label{padding-left:6px;padding-right:0;margin-left:8px;margin-right:0}.fd-checkbox__label:before{content:\"\";height:1.375rem;width:1.375rem;font-size:1rem;font-size:var(--sapFontLargeSize,1rem);display:inline-flex;justify-content:center;align-items:center;font-family:SAP-icons;background-color:#fff;background-color:var(--sapField_Background,#fff);margin:.6875rem;color:#0854a0;color:var(--sapSelectedColor,#0854a0);border:.0625rem solid #89919a;border:var(--sapField_BorderWidth,.0625rem) solid var(--sapField_BorderColor,#89919a);border-radius:.125rem;border-radius:var(--sapField_BorderCornerRadius,.125rem)}.fd-checkbox__label .is-hover:before,.fd-checkbox__label:hover:before{background-color:#fff;background-color:var(--sapField_Hover_Background,#fff);border-color:#0854a0;border-color:var(--sapField_Hover_BorderColor,#0854a0)}.fd-checkbox:checked+.fd-checkbox__label:before{content:\"\uE05B\"}.fd-checkbox:indeterminate+.fd-checkbox__label:before{content:\"\uE17B\";font-size:.8125rem}.fd-checkbox:indeterminate+.fd-checkbox__label--compact:before{content:\"\uE17B\";font-size:.5625rem}.fd-checkbox.is-alert+.fd-checkbox__label:before,.fd-checkbox.is-warning+.fd-checkbox__label:before{background-color:#fff;background-color:var(--sapField_WarningBackground,#fff);border:.125rem solid #e9730c;border:.125rem solid var(--sapField_WarningColor,#e9730c);color:#32363a;color:var(--sapField_TextColor,#32363a)}.fd-checkbox.is-alert+.fd-checkbox__label .is-hover.is-disabled,.fd-checkbox.is-alert+.fd-checkbox__label .is-hover:disabled,.fd-checkbox.is-alert+.fd-checkbox__label .is-hover[aria-disabled=true],.fd-checkbox.is-alert+.fd-checkbox__label:hover.is-disabled,.fd-checkbox.is-alert+.fd-checkbox__label:hover:disabled,.fd-checkbox.is-alert+.fd-checkbox__label:hover[aria-disabled=true],.fd-checkbox.is-warning+.fd-checkbox__label .is-hover.is-disabled,.fd-checkbox.is-warning+.fd-checkbox__label .is-hover:disabled,.fd-checkbox.is-warning+.fd-checkbox__label .is-hover[aria-disabled=true],.fd-checkbox.is-warning+.fd-checkbox__label:hover.is-disabled,.fd-checkbox.is-warning+.fd-checkbox__label:hover:disabled,.fd-checkbox.is-warning+.fd-checkbox__label:hover[aria-disabled=true]{border-color:#e9730c;border-color:var(--sapField_WarningColor,#e9730c)}.fd-checkbox.is-invalid+.fd-checkbox__label:before{background-color:#fff;background-color:var(--sapField_InvalidBackground,#fff);border:.125rem solid #b00;border:.125rem solid var(--sapField_InvalidColor,#b00);color:#b00;color:var(--sapField_InvalidColor,#b00)}.fd-checkbox.is-invalid+.fd-checkbox__label .is-hover.is-disabled,.fd-checkbox.is-invalid+.fd-checkbox__label .is-hover:disabled,.fd-checkbox.is-invalid+.fd-checkbox__label .is-hover[aria-disabled=true],.fd-checkbox.is-invalid+.fd-checkbox__label:hover.is-disabled,.fd-checkbox.is-invalid+.fd-checkbox__label:hover:disabled,.fd-checkbox.is-invalid+.fd-checkbox__label:hover[aria-disabled=true]{border-color:#b00;border-color:var(--sapField_InvalidColor,#b00)}.fd-checkbox.is-valid+.fd-checkbox__label:before{background-color:#fff;background-color:var(--sapField_SuccessBackground,#fff);border:.0625rem solid #107e3e;border:var(--sapField_BorderWidth,.0625rem) solid var(--sapField_SuccessColor,#107e3e);color:#107e3e;color:var(--sapField_SuccessColor,#107e3e)}.fd-checkbox.is-valid+.fd-checkbox__label .is-hover.is-disabled,.fd-checkbox.is-valid+.fd-checkbox__label .is-hover:disabled,.fd-checkbox.is-valid+.fd-checkbox__label .is-hover[aria-disabled=true],.fd-checkbox.is-valid+.fd-checkbox__label:hover.is-disabled,.fd-checkbox.is-valid+.fd-checkbox__label:hover:disabled,.fd-checkbox.is-valid+.fd-checkbox__label:hover[aria-disabled=true]{border-color:#107e3e;border-color:var(--sapField_SuccessColor,#107e3e)}.fd-checkbox.is-information+.fd-checkbox__label:before{background-color:#fff;background-color:var(--sapField_InformationBackground,#fff);border:.125rem solid #0a6ed1;border:.125rem solid var(--sapField_InformationColor,#0a6ed1);color:#0a6ed1;color:var(--sapField_InformationColor,#0a6ed1)}.fd-checkbox.is-information+.fd-checkbox__label .is-hover.is-disabled,.fd-checkbox.is-information+.fd-checkbox__label .is-hover:disabled,.fd-checkbox.is-information+.fd-checkbox__label .is-hover[aria-disabled=true],.fd-checkbox.is-information+.fd-checkbox__label:hover.is-disabled,.fd-checkbox.is-information+.fd-checkbox__label:hover:disabled,.fd-checkbox.is-information+.fd-checkbox__label:hover[aria-disabled=true]{border-color:#0a6ed1;border-color:var(--sapField_InformationColor,#0a6ed1)}.fd-checkbox.is-readonly+.fd-checkbox__label:before,.fd-checkbox[readonly]+.fd-checkbox__label:before{background-color:var(--sapField_ReadOnly_Background,hsla(0,0%,94.9%,.5));border:.0625rem solid #89919a;border:var(--sapField_BorderWidth,.0625rem) solid var(--sapField_ReadOnly_BorderColor,#89919a);color:#6a6d70;color:var(--sapContent_NonInteractiveIconColor,#6a6d70)}.fd-checkbox.is-readonly+.fd-checkbox__label .is-hover.is-disabled,.fd-checkbox.is-readonly+.fd-checkbox__label .is-hover:disabled,.fd-checkbox.is-readonly+.fd-checkbox__label .is-hover[aria-disabled=true],.fd-checkbox.is-readonly+.fd-checkbox__label:hover.is-disabled,.fd-checkbox.is-readonly+.fd-checkbox__label:hover:disabled,.fd-checkbox.is-readonly+.fd-checkbox__label:hover[aria-disabled=true],.fd-checkbox[readonly]+.fd-checkbox__label .is-hover.is-disabled,.fd-checkbox[readonly]+.fd-checkbox__label .is-hover:disabled,.fd-checkbox[readonly]+.fd-checkbox__label .is-hover[aria-disabled=true],.fd-checkbox[readonly]+.fd-checkbox__label:hover.is-disabled,.fd-checkbox[readonly]+.fd-checkbox__label:hover:disabled,.fd-checkbox[readonly]+.fd-checkbox__label:hover[aria-disabled=true]{border-color:#89919a;border-color:var(--sapField_ReadOnly_BorderColor,#89919a)}.fd-checkbox.is-focus+.fd-checkbox__label:after,.fd-checkbox:focus+.fd-checkbox__label:after{content:\"\";position:absolute;border:.0625rem dotted #000;border:var(--sapContent_FocusWidth,.0625rem) var(--sapContent_FocusStyle,dotted) var(--sapContent_FocusColor,#000);top:.5625rem;left:.5625rem;bottom:.5625rem;right:-.125rem}.fd-checkbox.is-focus+.fd-checkbox__label[dir=rtl]:after,.fd-checkbox:focus+.fd-checkbox__label[dir=rtl]:after,[dir=rtl] .fd-checkbox.is-focus+.fd-checkbox__label:after,[dir=rtl] .fd-checkbox:focus+.fd-checkbox__label:after{left:-.125rem;right:.5625rem}.fd-checkbox.is-disabled+.fd-checkbox__label,.fd-checkbox:disabled+.fd-checkbox__label,.fd-checkbox[aria-disabled=true]+.fd-checkbox__label{pointer-events:none;opacity:.4}.fd-checkbox--compact+.fd-checkbox__label:before{font-size:.625rem;height:1rem;width:1rem;margin:.5rem}.fd-checkbox--compact.is-focus,.fd-checkbox--compact:focus{box-shadow:0 0 0 1px #085caf;box-shadow:0 0 0 1px var(--fd-color-action-focus,#085caf);z-index:5}.fd-checkbox--compact.is-focus+.fd-checkbox__label:after,.fd-checkbox--compact:focus+.fd-checkbox__label:after{content:\"\";position:absolute;border:.0625rem dotted #000;border:var(--sapContent_FocusWidth,.0625rem) var(--sapContent_FocusStyle,dotted) var(--sapContent_FocusColor,#000);top:.375rem;left:.375rem;bottom:.375rem;right:-.125rem}.fd-checkbox--compact.is-focus+.fd-checkbox__label[dir=rtl]:after,.fd-checkbox--compact:focus+.fd-checkbox__label[dir=rtl]:after,[dir=rtl] .fd-checkbox--compact.is-focus+.fd-checkbox__label:after,[dir=rtl] .fd-checkbox--compact:focus+.fd-checkbox__label:after{left:-.125rem;right:.375rem}"]
                }] }
    ];
    /** @nocollapse */
    CheckboxComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    CheckboxComponent.propDecorators = {
        inputId: [{ type: Input }],
        state: [{ type: Input }],
        name: [{ type: Input }],
        label: [{ type: Input }],
        disabled: [{ type: Input }],
        compact: [{ type: Input }],
        tristate: [{ type: Input }],
        tristateSelectable: [{ type: Input }],
        _values: [{ type: Input, args: ['values',] }],
        position: [{ type: HostBinding, args: ['style.position',] }]
    };
    return CheckboxComponent;
}());
export { CheckboxComponent };
if (false) {
    /**
     * Sets [id] property of input, binds input with input label using [for] property.
     * @type {?}
     */
    CheckboxComponent.prototype.inputId;
    /**
     * State of control, changes visual appearance of control.
     * @type {?}
     */
    CheckboxComponent.prototype.state;
    /**
     * Sets [name] property of input.
     * @type {?}
     */
    CheckboxComponent.prototype.name;
    /**
     * Sets text of control label.
     * @type {?}
     */
    CheckboxComponent.prototype.label;
    /**
     * Allows to disable/enable control.
     * @type {?}
     */
    CheckboxComponent.prototype.disabled;
    /**
     * Allows to minimize control to compact mode.
     * @type {?}
     */
    CheckboxComponent.prototype.compact;
    /**
     * Enables controls third state.
     * @type {?}
     */
    CheckboxComponent.prototype.tristate;
    /**
     * Allows to prevent user from manually selecting controls third state.
     * @type {?}
     */
    CheckboxComponent.prototype.tristateSelectable;
    /**
     * @hidden
     * @type {?}
     */
    CheckboxComponent.prototype.position;
    /**
     * Values returned by control.
     * @type {?}
     */
    CheckboxComponent.prototype.values;
    /**
     * Stores current checkbox value.
     * @type {?}
     */
    CheckboxComponent.prototype.checkboxValue;
    /**
     * Stores current checkbox state.
     * @type {?}
     */
    CheckboxComponent.prototype.checkboxState;
    /**
     * @hidden Reference to callback provided by FormControl.
     * @type {?}
     */
    CheckboxComponent.prototype.onTouched;
    /**
     * @hidden Reference to callback provided by FormControl.
     * @type {?}
     */
    CheckboxComponent.prototype.onValueChange;
    /**
     * @type {?}
     * @private
     */
    CheckboxComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,