/**
 * @fileoverview added by tsickle
 * Generated from: lib/nested-list/nested-list-directives.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, ElementRef, HostBinding, Input } from '@angular/core';
import { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';
var NestedListHeaderDirective = /** @class */ (function () {
    function NestedListHeaderDirective() {
        /**
         * @hidden
         */
        this.fdNestedListHeaderClass = true;
    }
    NestedListHeaderDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fdNestedDirectivesHeader], [fd-nested-list-header]'
                },] }
    ];
    NestedListHeaderDirective.propDecorators = {
        fdNestedListHeaderClass: [{ type: HostBinding, args: ['class.fd-nested-list__group-header',] }]
    };
    return NestedListHeaderDirective;
}());
export { NestedListHeaderDirective };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    NestedListHeaderDirective.prototype.fdNestedListHeaderClass;
}
var NestedListIconDirective = /** @class */ (function (_super) {
    tslib_1.__extends(NestedListIconDirective, _super);
    /** @hidden */
    function NestedListIconDirective(elementRef) {
        var _this = _super.call(this, elementRef) || this;
        _this.elementRef = elementRef;
        /**
         * @hidden
         */
        _this.fdNestedListIconClass = true;
        return _this;
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    NestedListIconDirective.prototype._setProperties = /**
     * @hidden
     * @return {?}
     */
    function () {
        if (this.glyph) {
            this._addClassToElement('sap-icon--' + this.glyph);
        }
        this._addClassToElement('fd-nested-list__icon');
    };
    NestedListIconDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fdNestedDirectivesIcon], [fd-nested-list-icon]'
                },] }
    ];
    /** @nocollapse */
    NestedListIconDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    NestedListIconDirective.propDecorators = {
        fdNestedListIconClass: [{ type: HostBinding, args: ['class.fd-nested-list__icon',] }],
        glyph: [{ type: Input }]
    };
    return NestedListIconDirective;
}(AbstractFdNgxClass));
export { NestedListIconDirective };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    NestedListIconDirective.prototype.fdNestedListIconClass;
    /**
     * The icon name to display. See the icon page for the list of icons
     * here: https://sap.github.io/fundamental-ngx/icon
     * @type {?}
     */
    NestedListIconDirective.prototype.glyph;
    /**
     * @type {?}
     * @private
     */
    NestedListIconDirective.prototype.elementRef;
}
var NestedListTitleDirective = /** @class */ (function () {
    /** @hidden */
    function NestedListTitleDirective(elementRef) {
        this.elementRef = elementRef;
        /**
         * @hidden
         */
        this.fdNestedListTitleClass = true;
    }
    /** Returns element's InnerText */
    /**
     * Returns element's InnerText
     * @return {?}
     */
    NestedListTitleDirective.prototype.getInnerText = /**
     * Returns element's InnerText
     * @return {?}
     */
    function () {
        return this.elementRef && this.elementRef.nativeElement.innerText;
    };
    NestedListTitleDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fdNestedDirectivesTitle], [fd-nested-list-title]'
                },] }
    ];
    /** @nocollapse */
    NestedListTitleDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    NestedListTitleDirective.propDecorators = {
        fdNestedListTitleClass: [{ type: HostBinding, args: ['class.fd-nested-list__title',] }]
    };
    return NestedListTitleDirective;
}());
export { NestedListTitleDirective };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    NestedListTitleDirective.prototype.fdNestedListTitleClass;
    /**
     * @type {?}
     * @private
     */
    NestedListTitleDirective.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmVzdGVkLWxpc3QtZGlyZWN0aXZlcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9uZXN0ZWQtbGlzdC9uZXN0ZWQtbGlzdC1kaXJlY3RpdmVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFcEU7SUFBQTs7OztRQU9JLDRCQUF1QixHQUFZLElBQUksQ0FBQztJQUU1QyxDQUFDOztnQkFUQSxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFEQUFxRDtpQkFDaEU7OzswQ0FJSSxXQUFXLFNBQUMsb0NBQW9DOztJQUdyRCxnQ0FBQztDQUFBLEFBVEQsSUFTQztTQU5ZLHlCQUF5Qjs7Ozs7O0lBR2xDLDREQUN3Qzs7QUFJNUM7SUFHNkMsbURBQWtCO0lBb0IzRCxjQUFjO0lBQ2QsaUNBQW9CLFVBQXNCO1FBQTFDLFlBQ0ksa0JBQU0sVUFBVSxDQUFDLFNBQ3BCO1FBRm1CLGdCQUFVLEdBQVYsVUFBVSxDQUFZOzs7O1FBakIxQywyQkFBcUIsR0FBWSxJQUFJLENBQUM7O0lBbUJ0QyxDQUFDO0lBWEQsY0FBYzs7Ozs7SUFDZCxnREFBYzs7OztJQUFkO1FBQ0ksSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1osSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDdEQ7UUFDRCxJQUFJLENBQUMsa0JBQWtCLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUNwRCxDQUFDOztnQkFyQkosU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpREFBaUQ7aUJBQzVEOzs7O2dCQWhCbUIsVUFBVTs7O3dDQW9CekIsV0FBVyxTQUFDLDRCQUE0Qjt3QkFPeEMsS0FBSzs7SUFlViw4QkFBQztDQUFBLEFBNUJELENBRzZDLGtCQUFrQixHQXlCOUQ7U0F6QlksdUJBQXVCOzs7Ozs7SUFHaEMsd0RBQ3NDOzs7Ozs7SUFNdEMsd0NBQXVCOzs7OztJQVdYLDZDQUE4Qjs7QUFNOUM7SUFTSSxjQUFjO0lBQ2Qsa0NBQ1ksVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTs7OztRQUpsQywyQkFBc0IsR0FBWSxJQUFJLENBQUM7SUFLcEMsQ0FBQztJQUVKLGtDQUFrQzs7Ozs7SUFDM0IsK0NBQVk7Ozs7SUFBbkI7UUFDSSxPQUFPLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO0lBQ3RFLENBQUM7O2dCQWpCSixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG1EQUFtRDtpQkFDOUQ7Ozs7Z0JBOUNtQixVQUFVOzs7eUNBa0R6QixXQUFXLFNBQUMsNkJBQTZCOztJQWE5QywrQkFBQztDQUFBLEFBbkJELElBbUJDO1NBaEJZLHdCQUF3Qjs7Ozs7O0lBR2pDLDBEQUN1Qzs7Ozs7SUFJbkMsOENBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFic3RyYWN0RmROZ3hDbGFzcyB9IGZyb20gJy4uL3V0aWxzL2Fic3RyYWN0LWZkLW5neC1jbGFzcyc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tmZE5lc3RlZERpcmVjdGl2ZXNIZWFkZXJdLCBbZmQtbmVzdGVkLWxpc3QtaGVhZGVyXSdcbn0pXG5leHBvcnQgY2xhc3MgTmVzdGVkTGlzdEhlYWRlckRpcmVjdGl2ZSB7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuZmQtbmVzdGVkLWxpc3RfX2dyb3VwLWhlYWRlcicpXG4gICAgZmROZXN0ZWRMaXN0SGVhZGVyQ2xhc3M6IGJvb2xlYW4gPSB0cnVlO1xuXG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tmZE5lc3RlZERpcmVjdGl2ZXNJY29uXSwgW2ZkLW5lc3RlZC1saXN0LWljb25dJ1xufSlcbmV4cG9ydCBjbGFzcyBOZXN0ZWRMaXN0SWNvbkRpcmVjdGl2ZSBleHRlbmRzIEFic3RyYWN0RmROZ3hDbGFzcyB7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuZmQtbmVzdGVkLWxpc3RfX2ljb24nKVxuICAgIGZkTmVzdGVkTGlzdEljb25DbGFzczogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgaWNvbiBuYW1lIHRvIGRpc3BsYXkuIFNlZSB0aGUgaWNvbiBwYWdlIGZvciB0aGUgbGlzdCBvZiBpY29uc1xuICAgICAqIGhlcmU6IGh0dHBzOi8vc2FwLmdpdGh1Yi5pby9mdW5kYW1lbnRhbC1uZ3gvaWNvblxuICAgICAqL1xuICAgIEBJbnB1dCgpIGdseXBoOiBzdHJpbmc7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIF9zZXRQcm9wZXJ0aWVzKCkge1xuICAgICAgICBpZiAodGhpcy5nbHlwaCkge1xuICAgICAgICAgICAgdGhpcy5fYWRkQ2xhc3NUb0VsZW1lbnQoJ3NhcC1pY29uLS0nICsgdGhpcy5nbHlwaCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fYWRkQ2xhc3NUb0VsZW1lbnQoJ2ZkLW5lc3RlZC1saXN0X19pY29uJyk7XG4gICAgfVxuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICAgICAgc3VwZXIoZWxlbWVudFJlZik7XG4gICAgfVxuXG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tmZE5lc3RlZERpcmVjdGl2ZXNUaXRsZV0sIFtmZC1uZXN0ZWQtbGlzdC10aXRsZV0nXG59KVxuZXhwb3J0IGNsYXNzIE5lc3RlZExpc3RUaXRsZURpcmVjdGl2ZSB7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuZmQtbmVzdGVkLWxpc3RfX3RpdGxlJylcbiAgICBmZE5lc3RlZExpc3RUaXRsZUNsYXNzOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgY29uc3RydWN0b3IgKFxuICAgICAgICBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWZcbiAgICApIHt9XG5cbiAgICAvKiogUmV0dXJucyBlbGVtZW50J3MgSW5uZXJUZXh0ICovXG4gICAgcHVibGljIGdldElubmVyVGV4dCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50UmVmICYmIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmlubmVyVGV4dDtcbiAgICB9XG5cbn1cbiJdfQ==