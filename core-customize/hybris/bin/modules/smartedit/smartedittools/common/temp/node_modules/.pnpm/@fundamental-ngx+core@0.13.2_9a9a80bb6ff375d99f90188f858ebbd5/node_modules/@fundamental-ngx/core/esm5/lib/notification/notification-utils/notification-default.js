/**
 * @fileoverview added by tsickle
 * Generated from: lib/notification/notification-utils/notification-default.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Object to generate default notification component, without creating any template.
 */
var /**
 * Object to generate default notification component, without creating any template.
 */
NotificationDefault = /** @class */ (function () {
    function NotificationDefault() {
    }
    return NotificationDefault;
}());
/**
 * Object to generate default notification component, without creating any template.
 */
export { NotificationDefault };
if (false) {
    /**
     * Notification Title
     * @type {?}
     */
    NotificationDefault.prototype.title;
    /**
     * Notification Description
     * @type {?}
     */
    NotificationDefault.prototype.description;
    /**
     * Notification Meta Data
     * @type {?}
     */
    NotificationDefault.prototype.metadata;
    /**
     * More Info button label
     * @type {?}
     */
    NotificationDefault.prototype.moreInfo;
    /**
     * More Info button Click Callback
     * @type {?}
     */
    NotificationDefault.prototype.moreInfoCallback;
    /**
     * Approve Button Label
     * @type {?}
     */
    NotificationDefault.prototype.approve;
    /**
     * Approve Button Click Callback
     * @type {?}
     */
    NotificationDefault.prototype.approveCallback;
    /**
     * Cancel Button Label
     * @type {?}
     */
    NotificationDefault.prototype.cancel;
    /**
     * Cancel Button Click Callback
     * @type {?}
     */
    NotificationDefault.prototype.cancelCallback;
    /**
     * Close Button Callback. If not set empty, the close button won't show
     * @type {?}
     */
    NotificationDefault.prototype.closeButtonCallback;
    /**
     * Avatar Template
     * @type {?}
     */
    NotificationDefault.prototype.avatar;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLWRlZmF1bHQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi11dGlscy9ub3RpZmljYXRpb24tZGVmYXVsdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUtBOzs7O0lBQUE7SUFrQ0EsQ0FBQztJQUFELDBCQUFDO0FBQUQsQ0FBQyxBQWxDRCxJQWtDQzs7Ozs7Ozs7OztJQS9CRyxvQ0FBZTs7Ozs7SUFHZiwwQ0FBcUI7Ozs7O0lBR3JCLHVDQUFrQjs7Ozs7SUFHbEIsdUNBQWtCOzs7OztJQUdsQiwrQ0FBNEI7Ozs7O0lBRzVCLHNDQUFpQjs7Ozs7SUFHakIsOENBQTJCOzs7OztJQUczQixxQ0FBZ0I7Ozs7O0lBR2hCLDZDQUEwQjs7Ozs7SUFHMUIsa0RBQStCOzs7OztJQUcvQixxQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIE9iamVjdCB0byBnZW5lcmF0ZSBkZWZhdWx0IG5vdGlmaWNhdGlvbiBjb21wb25lbnQsIHdpdGhvdXQgY3JlYXRpbmcgYW55IHRlbXBsYXRlLlxuICovXG5leHBvcnQgY2xhc3MgTm90aWZpY2F0aW9uRGVmYXVsdCB7XG5cbiAgICAvKiogTm90aWZpY2F0aW9uIFRpdGxlICovXG4gICAgdGl0bGU/OiBzdHJpbmc7XG5cbiAgICAvKiogTm90aWZpY2F0aW9uIERlc2NyaXB0aW9uICovXG4gICAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG5cbiAgICAvKiogTm90aWZpY2F0aW9uIE1ldGEgRGF0YSAqL1xuICAgIG1ldGFkYXRhPzogc3RyaW5nO1xuXG4gICAgLyoqIE1vcmUgSW5mbyBidXR0b24gbGFiZWwgKi9cbiAgICBtb3JlSW5mbz86IHN0cmluZztcblxuICAgIC8qKiBNb3JlIEluZm8gYnV0dG9uIENsaWNrIENhbGxiYWNrICovXG4gICAgbW9yZUluZm9DYWxsYmFjaz86IEZ1bmN0aW9uO1xuXG4gICAgLyoqIEFwcHJvdmUgQnV0dG9uIExhYmVsICovXG4gICAgYXBwcm92ZT86IHN0cmluZztcblxuICAgIC8qKiBBcHByb3ZlIEJ1dHRvbiBDbGljayBDYWxsYmFjayAqL1xuICAgIGFwcHJvdmVDYWxsYmFjaz86IEZ1bmN0aW9uO1xuXG4gICAgLyoqIENhbmNlbCBCdXR0b24gTGFiZWwgKi9cbiAgICBjYW5jZWw/OiBzdHJpbmc7XG5cbiAgICAvKiogQ2FuY2VsIEJ1dHRvbiBDbGljayBDYWxsYmFjayAqL1xuICAgIGNhbmNlbENhbGxiYWNrPzogRnVuY3Rpb247XG5cbiAgICAvKiogQ2xvc2UgQnV0dG9uIENhbGxiYWNrLiBJZiBub3Qgc2V0IGVtcHR5LCB0aGUgY2xvc2UgYnV0dG9uIHdvbid0IHNob3cgKi9cbiAgICBjbG9zZUJ1dHRvbkNhbGxiYWNrPzogRnVuY3Rpb247XG5cbiAgICAvKiogQXZhdGFyIFRlbXBsYXRlICovXG4gICAgYXZhdGFyPzogVGVtcGxhdGVSZWY8YW55PlxufVxuIl19