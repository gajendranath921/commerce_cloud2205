/**
 * @fileoverview added by tsickle
 * Generated from: lib/panel/panel-body/panel-body.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';
/**
 * Main content of the panel can that hold lists, table, tree, text, form or any other information.
 *
 * ```html
 * <fd-panel>
 *     <fd-panel-body>
 *         Some text can go here!
 *     </fd-panel-body>
 * </fd-panel>
 * ```
 */
export class PanelBodyComponent {
    constructor() {
        /**
         * @hidden
         */
        this.fdPanelBodyClass = true;
        /**
         * Whether the edges of the panel should have bleeding padding.
         */
        this.bleed = false;
    }
}
PanelBodyComponent.decorators = [
    { type: Component, args: [{
                selector: 'fd-panel-body',
                template: "<ng-content></ng-content>\n",
                host: {
                    '[class.fd-has-display-block]': 'true'
                },
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
PanelBodyComponent.propDecorators = {
    fdPanelBodyClass: [{ type: HostBinding, args: ['class.fd-panel__body',] }],
    bleed: [{ type: Input }, { type: HostBinding, args: ['class.fd-panel__body--bleed',] }]
};
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    PanelBodyComponent.prototype.fdPanelBodyClass;
    /**
     * Whether the edges of the panel should have bleeding padding.
     * @type {?}
     */
    PanelBodyComponent.prototype.bleed;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFuZWwtYm9keS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvcGFuZWwvcGFuZWwtYm9keS9wYW5lbC1ib2R5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7Ozs7O0FBc0IxRyxNQUFNLE9BQU8sa0JBQWtCO0lBVC9COzs7O1FBYUkscUJBQWdCLEdBQVksSUFBSSxDQUFDOzs7O1FBS2pDLFVBQUssR0FBWSxLQUFLLENBQUM7SUFFM0IsQ0FBQzs7O1lBcEJBLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsZUFBZTtnQkFDekIsdUNBQTBDO2dCQUMxQyxJQUFJLEVBQUU7b0JBQ0YsOEJBQThCLEVBQUUsTUFBTTtpQkFDekM7Z0JBQ0QsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2xEOzs7K0JBSUksV0FBVyxTQUFDLHNCQUFzQjtvQkFJbEMsS0FBSyxZQUNMLFdBQVcsU0FBQyw2QkFBNkI7Ozs7Ozs7SUFMMUMsOENBQ2lDOzs7OztJQUdqQyxtQ0FFdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogTWFpbiBjb250ZW50IG9mIHRoZSBwYW5lbCBjYW4gdGhhdCBob2xkIGxpc3RzLCB0YWJsZSwgdHJlZSwgdGV4dCwgZm9ybSBvciBhbnkgb3RoZXIgaW5mb3JtYXRpb24uXG4gKlxuICogYGBgaHRtbFxuICogPGZkLXBhbmVsPlxuICogICAgIDxmZC1wYW5lbC1ib2R5PlxuICogICAgICAgICBTb21lIHRleHQgY2FuIGdvIGhlcmUhXG4gKiAgICAgPC9mZC1wYW5lbC1ib2R5PlxuICogPC9mZC1wYW5lbD5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLXBhbmVsLWJvZHknLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9wYW5lbC1ib2R5LmNvbXBvbmVudC5odG1sJyxcbiAgICBob3N0OiB7XG4gICAgICAgICdbY2xhc3MuZmQtaGFzLWRpc3BsYXktYmxvY2tdJzogJ3RydWUnXG4gICAgfSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBhbmVsQm9keUNvbXBvbmVudCB7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuZmQtcGFuZWxfX2JvZHknKVxuICAgIGZkUGFuZWxCb2R5Q2xhc3M6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLyoqIFdoZXRoZXIgdGhlIGVkZ2VzIG9mIHRoZSBwYW5lbCBzaG91bGQgaGF2ZSBibGVlZGluZyBwYWRkaW5nLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5mZC1wYW5lbF9fYm9keS0tYmxlZWQnKVxuICAgIGJsZWVkOiBib29sZWFuID0gZmFsc2U7XG5cbn1cbiJdfQ==