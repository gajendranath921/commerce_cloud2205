/**
 * @fileoverview added by tsickle
 * Generated from: lib/alert/alert-utils/alert-config.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AlertConfig = /** @class */ (function () {
    function AlertConfig() {
        /**
         * Whether the alert is dismissible.
         */
        this.dismissible = true;
        /**
         * Width of the alert.
         */
        this.width = '33vw';
        /**
         * Minimum width of the alert.
         */
        this.minWidth = '300px';
        /**
         * Duration of time *in milliseconds* that the alert will be visible. Set to -1 for indefinite.
         */
        this.duration = 10000;
        /**
         * Whether the alert should stay open if the mouse is hovering over it.
         */
        this.mousePersist = false;
        /**
         * Id of the element that labels the alert.
         */
        this.ariaLabelledBy = null;
        /**
         * Aria label for the alert component element.
         */
        this.ariaLabel = null;
        /**
         * The container that the Alert is appended to. By default, it is appended to the body.
         */
        this.container = 'body';
    }
    return AlertConfig;
}());
export { AlertConfig };
if (false) {
    /**
     * Whether the alert is dismissible.
     * @type {?}
     */
    AlertConfig.prototype.dismissible;
    /**
     * The type of the alert. Can be one of *warning*, *success*, *information*, *error* or null.
     * @type {?}
     */
    AlertConfig.prototype.type;
    /**
     * Id for the alert component. If omitted, a unique one is generated.
     * @type {?}
     */
    AlertConfig.prototype.id;
    /**
     * Width of the alert.
     * @type {?}
     */
    AlertConfig.prototype.width;
    /**
     * Minimum width of the alert.
     * @type {?}
     */
    AlertConfig.prototype.minWidth;
    /**
     * Data being injected into the child component or template.
     * @type {?}
     */
    AlertConfig.prototype.data;
    /**
     * Duration of time *in milliseconds* that the alert will be visible. Set to -1 for indefinite.
     * @type {?}
     */
    AlertConfig.prototype.duration;
    /**
     * Whether the alert should stay open if the mouse is hovering over it.
     * @type {?}
     */
    AlertConfig.prototype.mousePersist;
    /**
     * Id of the element that labels the alert.
     * @type {?}
     */
    AlertConfig.prototype.ariaLabelledBy;
    /**
     * Aria label for the alert component element.
     * @type {?}
     */
    AlertConfig.prototype.ariaLabel;
    /**
     * The container that the Alert is appended to. By default, it is appended to the body.
     * @type {?}
     */
    AlertConfig.prototype.container;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQtY29uZmlnLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ1bmRhbWVudGFsLW5neC9jb3JlLyIsInNvdXJjZXMiOlsibGliL2FsZXJ0L2FsZXJ0LXV0aWxzL2FsZXJ0LWNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUtBO0lBQUE7Ozs7UUFHSSxnQkFBVyxHQUFhLElBQUksQ0FBQzs7OztRQVM3QixVQUFLLEdBQVksTUFBTSxDQUFDOzs7O1FBR3hCLGFBQVEsR0FBWSxPQUFPLENBQUM7Ozs7UUFNNUIsYUFBUSxHQUFZLEtBQUssQ0FBQzs7OztRQUcxQixpQkFBWSxHQUFhLEtBQUssQ0FBQzs7OztRQUcvQixtQkFBYyxHQUFZLElBQUksQ0FBQzs7OztRQUcvQixjQUFTLEdBQVksSUFBSSxDQUFDOzs7O1FBRzFCLGNBQVMsR0FBMEIsTUFBTSxDQUFDO0lBQzlDLENBQUM7SUFBRCxrQkFBQztBQUFELENBQUMsQUFsQ0QsSUFrQ0M7Ozs7Ozs7SUEvQkcsa0NBQTZCOzs7OztJQUc3QiwyQkFBYzs7Ozs7SUFHZCx5QkFBWTs7Ozs7SUFHWiw0QkFBd0I7Ozs7O0lBR3hCLCtCQUE0Qjs7Ozs7SUFHNUIsMkJBQVc7Ozs7O0lBR1gsK0JBQTBCOzs7OztJQUcxQixtQ0FBK0I7Ozs7O0lBRy9CLHFDQUErQjs7Ozs7SUFHL0IsZ0NBQTBCOzs7OztJQUcxQixnQ0FBMEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbmZpZ3VyYXRpb24gZm9yIG9wZW5pbmcgYW4gYWxlcnQgd2l0aCB0aGUgQWxlcnRTZXJ2aWNlLlxuICovXG5pbXBvcnQgeyBEeW5hbWljQ29tcG9uZW50Q29uZmlnIH0gZnJvbSAnLi4vLi4vdXRpbHMvZHluYW1pYy1jb21wb25lbnQvZHluYW1pYy1jb21wb25lbnQtY29uZmlnJztcblxuZXhwb3J0IGNsYXNzIEFsZXJ0Q29uZmlnIGltcGxlbWVudHMgRHluYW1pY0NvbXBvbmVudENvbmZpZyB7XG5cbiAgICAvKiogV2hldGhlciB0aGUgYWxlcnQgaXMgZGlzbWlzc2libGUuICovXG4gICAgZGlzbWlzc2libGU/OiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBUaGUgdHlwZSBvZiB0aGUgYWxlcnQuIENhbiBiZSBvbmUgb2YgKndhcm5pbmcqLCAqc3VjY2VzcyosICppbmZvcm1hdGlvbiosICplcnJvciogb3IgbnVsbC4gKi9cbiAgICB0eXBlPzogc3RyaW5nO1xuXG4gICAgLyoqIElkIGZvciB0aGUgYWxlcnQgY29tcG9uZW50LiBJZiBvbWl0dGVkLCBhIHVuaXF1ZSBvbmUgaXMgZ2VuZXJhdGVkLiAqL1xuICAgIGlkPzogc3RyaW5nO1xuXG4gICAgLyoqIFdpZHRoIG9mIHRoZSBhbGVydC4gKi9cbiAgICB3aWR0aD86IHN0cmluZyA9ICczM3Z3JztcblxuICAgIC8qKiBNaW5pbXVtIHdpZHRoIG9mIHRoZSBhbGVydC4gKi9cbiAgICBtaW5XaWR0aD86IHN0cmluZyA9ICczMDBweCc7XG5cbiAgICAvKiogRGF0YSBiZWluZyBpbmplY3RlZCBpbnRvIHRoZSBjaGlsZCBjb21wb25lbnQgb3IgdGVtcGxhdGUuICovXG4gICAgZGF0YT86IGFueTtcblxuICAgIC8qKiBEdXJhdGlvbiBvZiB0aW1lICppbiBtaWxsaXNlY29uZHMqIHRoYXQgdGhlIGFsZXJ0IHdpbGwgYmUgdmlzaWJsZS4gU2V0IHRvIC0xIGZvciBpbmRlZmluaXRlLiAqL1xuICAgIGR1cmF0aW9uPzogbnVtYmVyID0gMTAwMDA7XG5cbiAgICAvKiogV2hldGhlciB0aGUgYWxlcnQgc2hvdWxkIHN0YXkgb3BlbiBpZiB0aGUgbW91c2UgaXMgaG92ZXJpbmcgb3ZlciBpdC4gKi9cbiAgICBtb3VzZVBlcnNpc3Q/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKiogSWQgb2YgdGhlIGVsZW1lbnQgdGhhdCBsYWJlbHMgdGhlIGFsZXJ0LiAqL1xuICAgIGFyaWFMYWJlbGxlZEJ5Pzogc3RyaW5nID0gbnVsbDtcblxuICAgIC8qKiBBcmlhIGxhYmVsIGZvciB0aGUgYWxlcnQgY29tcG9uZW50IGVsZW1lbnQuICovXG4gICAgYXJpYUxhYmVsPzogc3RyaW5nID0gbnVsbDtcblxuICAgIC8qKiBUaGUgY29udGFpbmVyIHRoYXQgdGhlIEFsZXJ0IGlzIGFwcGVuZGVkIHRvLiBCeSBkZWZhdWx0LCBpdCBpcyBhcHBlbmRlZCB0byB0aGUgYm9keS4gKi9cbiAgICBjb250YWluZXI/OiBIVE1MRWxlbWVudCB8ICdib2R5JyA9ICdib2R5Jztcbn1cbiJdfQ==