/**
 * @fileoverview added by tsickle
 * Generated from: lib/nested-list/prepared-nested-list/prepared-nested-list.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, forwardRef, Input, QueryList, ViewChild, ViewChildren } from '@angular/core';
import { NestedListDirective } from '../nested-list/nested-list.directive';
import { NestedListStateService } from '../nested-list-state.service';
import { NestedItemDirective } from '../nested-item/nested-item.directive';
/**
 * Component for internal usage, allows to generate the nested list from defined object.
 */
export class PreparedNestedListComponent {
    /**
     * @hidden
     * @param {?} changeDetRef
     * @param {?} stateService
     */
    constructor(changeDetRef, stateService) {
        this.changeDetRef = changeDetRef;
        this.stateService = stateService;
        /**
         * @hidden
         * For internal usage.
         * Defines if the component is first
         */
        this.first = true;
        /**
         * Defines if list should be displayed in condensed mode
         */
        this.condensed = false;
    }
    /**
     * In prepared nested list, nested items should be taken as reference of View, not Content.
     * There is direct reference to these directives here.
     * @return {?}
     */
    get nestedListDirective() {
        return Object.assign(this._nestedListDirective, { nestedItems: this.nestedListItems });
    }
    /**
     * @hidden
     * @return {?}
     */
    ngAfterViewInit() {
        this.stateService.propagateSelected(this.nestedListDirective);
        this.changeDetRef.markForCheck();
        this.changeDetRef.detectChanges();
    }
}
PreparedNestedListComponent.decorators = [
    { type: Component, args: [{
                selector: 'fd-prepared-nested-list',
                template: "<ul fd-nested-list [textOnly]=\"list?.textOnly\">\n    <ng-container *ngFor=\"let item of list?.items\">\n        <li *ngIf=\"item.headerTitle\" fd-nested-list-header>\n            {{item.headerTitle}}\n        </li>\n        <li *ngIf=\"!item.headerTitle\"\n            fd-nested-list-item\n            [(expanded)]=\"item.expanded\">\n\n            <fd-nested-list-popover *ngIf=\"condensed && first && item.list\">\n                <a fd-nested-list-link *ngIf=\"item.link\"\n                   [onClickCallback]=\"item.link.callback\"\n                   [selected]=\"item.link.selected\"\n                   [attr.href]=\"item.link.href ? item.link.href : null\"\n                   [routerLink]=\"item.link.routerLink ? item.link.routerLink : []\">\n                    <span fd-nested-list-icon *ngIf=\"item.link.icon\" [glyph]=\"item.link.icon\"></span>\n                    <span fd-nested-list-title>{{item.link.title}}</span>\n                </a>\n                <fd-prepared-nested-list [first]=\"false\" *ngIf=\"item.list\" [list]=\"item.list\"></fd-prepared-nested-list>\n            </fd-nested-list-popover>\n\n            <ng-container *ngIf=\"!condensed || !first || !item.list\">\n                <a fd-nested-list-link *ngIf=\"item.link\"\n                   [onClickCallback]=\"item.link.callback\"\n                   [selected]=\"item.link.selected\"\n                   [attr.href]=\"item.link.href ? item.link.href : null\"\n                   [routerLink]=\"item.link.routerLink ? item.link.routerLink : []\">\n                    <span fd-nested-list-icon *ngIf=\"item.link.icon\" [glyph]=\"item.link.icon\"></span>\n                    <span fd-nested-list-title>{{item.link.title}}</span>\n                </a>\n                <fd-prepared-nested-list [first]=\"false\" *ngIf=\"item.list\" [list]=\"item.list\"></fd-prepared-nested-list>\n            </ng-container>\n\n        </li>\n    </ng-container>\n</ul>\n",
                styles: [""]
            }] }
];
/** @nocollapse */
PreparedNestedListComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: NestedListStateService }
];
PreparedNestedListComponent.propDecorators = {
    first: [{ type: Input }],
    condensed: [{ type: Input }],
    list: [{ type: Input }],
    _nestedListDirective: [{ type: ViewChild, args: [forwardRef((/**
                 * @return {?}
                 */
                () => NestedListDirective)), { static: false },] }],
    nestedListItems: [{ type: ViewChildren, args: [forwardRef((/**
                 * @return {?}
                 */
                () => NestedItemDirective)),] }]
};
if (false) {
    /**
     * @hidden
     * For internal usage.
     * Defines if the component is first
     * @type {?}
     */
    PreparedNestedListComponent.prototype.first;
    /**
     * Defines if list should be displayed in condensed mode
     * @type {?}
     */
    PreparedNestedListComponent.prototype.condensed;
    /**
     * List configuration
     * @type {?}
     */
    PreparedNestedListComponent.prototype.list;
    /**
     * @hidden
     * @type {?}
     */
    PreparedNestedListComponent.prototype._nestedListDirective;
    /**
     * @hidden
     * @type {?}
     */
    PreparedNestedListComponent.prototype.nestedListItems;
    /**
     * @type {?}
     * @private
     */
    PreparedNestedListComponent.prototype.changeDetRef;
    /**
     * @type {?}
     * @private
     */
    PreparedNestedListComponent.prototype.stateService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlcGFyZWQtbmVzdGVkLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ1bmRhbWVudGFsLW5neC9jb3JlLyIsInNvdXJjZXMiOlsibGliL25lc3RlZC1saXN0L3ByZXBhcmVkLW5lc3RlZC1saXN0L3ByZXBhcmVkLW5lc3RlZC1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBaUIsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkksT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFFM0UsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7Ozs7QUFVM0UsTUFBTSxPQUFPLDJCQUEyQjs7Ozs7O0lBMkNwQyxZQUNZLFlBQStCLEVBQy9CLFlBQW9DO1FBRHBDLGlCQUFZLEdBQVosWUFBWSxDQUFtQjtRQUMvQixpQkFBWSxHQUFaLFlBQVksQ0FBd0I7Ozs7OztRQXJDaEQsVUFBSyxHQUFZLElBQUksQ0FBQzs7OztRQU10QixjQUFTLEdBQVksS0FBSyxDQUFDO0lBZ0N4QixDQUFDOzs7Ozs7SUFSSixJQUFJLG1CQUFtQjtRQUNuQixPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDO0lBQzNGLENBQUM7Ozs7O0lBU0QsZUFBZTtRQUNYLElBQUksQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDOUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUNqQyxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3RDLENBQUM7OztZQTFESixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMscTZEQUFvRDs7YUFFckQ7Ozs7WUFidUIsaUJBQWlCO1lBR2hDLHNCQUFzQjs7O29CQWtCMUIsS0FBSzt3QkFNTCxLQUFLO21CQU1MLEtBQUs7bUNBTUwsU0FBUyxTQUFDLFVBQVU7OztnQkFBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBbUIsRUFBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTs4QkFNbEUsWUFBWSxTQUFDLFVBQVU7OztnQkFBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBbUIsRUFBQzs7Ozs7Ozs7O0lBeEJuRCw0Q0FDc0I7Ozs7O0lBS3RCLGdEQUMyQjs7Ozs7SUFLM0IsMkNBQ3NCOzs7OztJQUt0QiwyREFDMEM7Ozs7O0lBSzFDLHNEQUNnRDs7Ozs7SUFZNUMsbURBQXVDOzs7OztJQUN2QyxtREFBNEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dCwgUXVlcnlMaXN0LCBWaWV3Q2hpbGQsIFZpZXdDaGlsZHJlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmVzdGVkTGlzdERpcmVjdGl2ZSB9IGZyb20gJy4uL25lc3RlZC1saXN0L25lc3RlZC1saXN0LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOZXN0ZWRMaXN0TW9kZWwgfSBmcm9tICcuLi9uZXN0ZWQtbGlzdC1tb2RlbCc7XG5pbXBvcnQgeyBOZXN0ZWRMaXN0U3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vbmVzdGVkLWxpc3Qtc3RhdGUuc2VydmljZSc7XG5pbXBvcnQgeyBOZXN0ZWRJdGVtRGlyZWN0aXZlIH0gZnJvbSAnLi4vbmVzdGVkLWl0ZW0vbmVzdGVkLWl0ZW0uZGlyZWN0aXZlJztcblxuLyoqXG4gKiBDb21wb25lbnQgZm9yIGludGVybmFsIHVzYWdlLCBhbGxvd3MgdG8gZ2VuZXJhdGUgdGhlIG5lc3RlZCBsaXN0IGZyb20gZGVmaW5lZCBvYmplY3QuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZkLXByZXBhcmVkLW5lc3RlZC1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3ByZXBhcmVkLW5lc3RlZC1saXN0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcHJlcGFyZWQtbmVzdGVkLWxpc3QuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBQcmVwYXJlZE5lc3RlZExpc3RDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBGb3IgaW50ZXJuYWwgdXNhZ2UuXG4gICAgICogRGVmaW5lcyBpZiB0aGUgY29tcG9uZW50IGlzIGZpcnN0XG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBmaXJzdDogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGlmIGxpc3Qgc2hvdWxkIGJlIGRpc3BsYXllZCBpbiBjb25kZW5zZWQgbW9kZVxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgY29uZGVuc2VkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKipcbiAgICAgKiBMaXN0IGNvbmZpZ3VyYXRpb25cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIGxpc3Q6IE5lc3RlZExpc3RNb2RlbDtcblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBAVmlld0NoaWxkKGZvcndhcmRSZWYoKCkgPT4gTmVzdGVkTGlzdERpcmVjdGl2ZSksIHsgc3RhdGljOiBmYWxzZSB9KVxuICAgIF9uZXN0ZWRMaXN0RGlyZWN0aXZlOiBOZXN0ZWRMaXN0RGlyZWN0aXZlO1xuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIEBWaWV3Q2hpbGRyZW4oZm9yd2FyZFJlZigoKSA9PiBOZXN0ZWRJdGVtRGlyZWN0aXZlKSlcbiAgICBuZXN0ZWRMaXN0SXRlbXM6IFF1ZXJ5TGlzdDxOZXN0ZWRJdGVtRGlyZWN0aXZlPjtcblxuICAgIC8qKlxuICAgICAqIEluIHByZXBhcmVkIG5lc3RlZCBsaXN0LCBuZXN0ZWQgaXRlbXMgc2hvdWxkIGJlIHRha2VuIGFzIHJlZmVyZW5jZSBvZiBWaWV3LCBub3QgQ29udGVudC5cbiAgICAgKiBUaGVyZSBpcyBkaXJlY3QgcmVmZXJlbmNlIHRvIHRoZXNlIGRpcmVjdGl2ZXMgaGVyZS5cbiAgICAgKi9cbiAgICBnZXQgbmVzdGVkTGlzdERpcmVjdGl2ZSgpOiBOZXN0ZWRMaXN0RGlyZWN0aXZlIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24odGhpcy5fbmVzdGVkTGlzdERpcmVjdGl2ZSwgeyBuZXN0ZWRJdGVtczogdGhpcy5uZXN0ZWRMaXN0SXRlbXMgfSk7XG4gICAgfVxuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBjb25zdHJ1Y3RvciAoXG4gICAgICAgIHByaXZhdGUgY2hhbmdlRGV0UmVmOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgcHJpdmF0ZSBzdGF0ZVNlcnZpY2U6IE5lc3RlZExpc3RTdGF0ZVNlcnZpY2VcbiAgICApIHt9XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zdGF0ZVNlcnZpY2UucHJvcGFnYXRlU2VsZWN0ZWQodGhpcy5uZXN0ZWRMaXN0RGlyZWN0aXZlKTtcbiAgICAgICAgdGhpcy5jaGFuZ2VEZXRSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgICAgIHRoaXMuY2hhbmdlRGV0UmVmLmRldGVjdENoYW5nZXMoKTtcbiAgICB9XG59XG4iXX0=