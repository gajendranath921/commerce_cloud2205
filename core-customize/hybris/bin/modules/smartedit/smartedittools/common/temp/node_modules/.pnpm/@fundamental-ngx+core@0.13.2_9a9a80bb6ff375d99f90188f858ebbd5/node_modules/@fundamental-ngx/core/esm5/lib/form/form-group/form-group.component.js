/**
 * @fileoverview added by tsickle
 * Generated from: lib/form/form-group/form-group.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation, ElementRef, Input } from '@angular/core';
import { applyCssClass } from '../../utils/public_api';
/**
 * Represents a form group element.
 *
 * ```html
 * <fd-form-group>
 *     <div fd-form-item [isCheck]="true">
 *         <input fd-form-control type="radio" checked>
 *         <fd-form-label>Option One</fd-form-label>
 *     </div>
 * </fd-form-group>
 * ```
 */
var FormGroupComponent = /** @class */ (function () {
    /** @hidden */
    function FormGroupComponent(_elementRef) {
        this._elementRef = _elementRef;
        /**
         * @hidden
         */
        this.fdFormGroupClass = true;
        this._isInline = false;
    }
    Object.defineProperty(FormGroupComponent.prototype, "isInline", {
        /** Determines if form items should be displayed inline or not
         * Default value is set to false;
         */
        set: /**
         * Determines if form items should be displayed inline or not
         * Default value is set to false;
         * @param {?} inline
         * @return {?}
         */
        function (inline) {
            this._isInline = inline;
            this.buildComponentCssClass();
        },
        enumerable: true,
        configurable: true
    });
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    FormGroupComponent.prototype.ngAfterViewInit = /**
     * @hidden
     * @return {?}
     */
    function () {
        this.buildComponentCssClass();
    };
    /** This method is responsible for building a css class based on current state
     *  It is implementation of CssClassBuilder interface and
     *  should be used with @applyCssClass decorator
     */
    /**
     * This method is responsible for building a css class based on current state
     *  It is implementation of CssClassBuilder interface and
     *  should be used with \@applyCssClass decorator
     * @return {?}
     */
    FormGroupComponent.prototype.buildComponentCssClass = /**
     * This method is responsible for building a css class based on current state
     *  It is implementation of CssClassBuilder interface and
     *  should be used with \@applyCssClass decorator
     * @return {?}
     */
    function () {
        return this._isInline ? 'fd-form-group--inline' : '';
    };
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    FormGroupComponent.prototype.elementRef = /**
     * @hidden
     * @return {?}
     */
    function () {
        return this._elementRef;
    };
    FormGroupComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-form-group',
                    template: "<ng-content></ng-content>\n",
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: ["/*!\n * Fundamental Library Styles v0.4.1\n * Copyright (c) 2020 SAP SE or an SAP affiliate company.\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/master/LICENSE)\n *//*!\n.fd-form-group\n*/.fd-form-group{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0 0 16px;border:0}.fd-form-group:after,.fd-form-group:before{box-sizing:inherit;font-size:inherit}.fd-form-group:last-child{margin-bottom:0}.fd-form-group--inline{display:flex;justify-content:flex-start}.fd-form-group--inline :not(:last-child){margin-right:16px}.fd-form-group__item{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0;border:0}.fd-form-group__item:after,.fd-form-group__item:before{box-sizing:inherit;font-size:inherit}"]
                }] }
    ];
    /** @nocollapse */
    FormGroupComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    FormGroupComponent.propDecorators = {
        fdFormGroupClass: [{ type: HostBinding, args: ['class.fd-form-group',] }],
        isInline: [{ type: Input }]
    };
    tslib_1.__decorate([
        applyCssClass,
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", String)
    ], FormGroupComponent.prototype, "buildComponentCssClass", null);
    return FormGroupComponent;
}());
export { FormGroupComponent };
if (false) {
    /** @type {?} */
    FormGroupComponent.prototype.class;
    /**
     * @hidden
     * @type {?}
     */
    FormGroupComponent.prototype.fdFormGroupClass;
    /**
     * @type {?}
     * @private
     */
    FormGroupComponent.prototype._isInline;
    /**
     * @type {?}
     * @private
     */
    FormGroupComponent.prototype._elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1ncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvZm9ybS9mb3JtLWdyb3VwL2Zvcm0tZ3JvdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLGlCQUFpQixFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3JJLE9BQU8sRUFBbUIsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7Ozs7Ozs7Ozs7Ozs7QUFjeEU7SUFzQkksY0FBYztJQUNkLDRCQUFvQixXQUF1QjtRQUF2QixnQkFBVyxHQUFYLFdBQVcsQ0FBWTs7OztRQVozQyxxQkFBZ0IsR0FBWSxJQUFJLENBQUM7UUFFekIsY0FBUyxHQUFZLEtBQUssQ0FBQztJQVluQyxDQUFDO0lBUkQsc0JBQWEsd0NBQVE7UUFIckI7O1dBRUc7Ozs7Ozs7UUFDSCxVQUFzQixNQUFlO1lBQ2pDLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO1FBQ2xDLENBQUM7OztPQUFBO0lBT0QsY0FBYzs7Ozs7SUFDZCw0Q0FBZTs7OztJQUFmO1FBQ0ksSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7SUFDbEMsQ0FBQztJQUVEOzs7T0FHRzs7Ozs7OztJQUVILG1EQUFzQjs7Ozs7O0lBQXRCO1FBQ0ksT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ3pELENBQUM7SUFFRCxjQUFjOzs7OztJQUNkLHVDQUFVOzs7O0lBQVY7UUFDSSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDNUIsQ0FBQzs7Z0JBNUNKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsdUNBQTBDO29CQUMxQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFFckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2lCQUNsRDs7OztnQkFyQjRFLFVBQVU7OzttQ0F5QmxGLFdBQVcsU0FBQyxxQkFBcUI7MkJBT2pDLEtBQUs7O0lBb0JOO1FBREMsYUFBYTs7OztvRUFHYjtJQU1MLHlCQUFDO0NBQUEsQUE3Q0QsSUE2Q0M7U0F0Q1ksa0JBQWtCOzs7SUFDM0IsbUNBQWM7Ozs7O0lBRWQsOENBQ2lDOzs7OztJQUVqQyx1Q0FBbUM7Ozs7O0lBVXZCLHlDQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBWaWV3RW5jYXBzdWxhdGlvbiwgRWxlbWVudFJlZiwgSW5wdXQsIEFmdGVyVmlld0luaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENzc0NsYXNzQnVpbGRlciwgYXBwbHlDc3NDbGFzcyB9IGZyb20gJy4uLy4uL3V0aWxzL3B1YmxpY19hcGknO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBmb3JtIGdyb3VwIGVsZW1lbnQuXG4gKlxuICogYGBgaHRtbFxuICogPGZkLWZvcm0tZ3JvdXA+XG4gKiAgICAgPGRpdiBmZC1mb3JtLWl0ZW0gW2lzQ2hlY2tdPVwidHJ1ZVwiPlxuICogICAgICAgICA8aW5wdXQgZmQtZm9ybS1jb250cm9sIHR5cGU9XCJyYWRpb1wiIGNoZWNrZWQ+XG4gKiAgICAgICAgIDxmZC1mb3JtLWxhYmVsPk9wdGlvbiBPbmU8L2ZkLWZvcm0tbGFiZWw+XG4gKiAgICAgPC9kaXY+XG4gKiA8L2ZkLWZvcm0tZ3JvdXA+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdmZC1mb3JtLWdyb3VwJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZm9ybS1ncm91cC5jb21wb25lbnQuaHRtbCcsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBzdHlsZVVybHM6IFsnLi9mb3JtLWdyb3VwLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgRm9ybUdyb3VwQ29tcG9uZW50IGltcGxlbWVudHMgQ3NzQ2xhc3NCdWlsZGVyLCBBZnRlclZpZXdJbml0IHtcbiAgICBjbGFzczogc3RyaW5nO1xuICAgIC8qKiBAaGlkZGVuICovXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5mZC1mb3JtLWdyb3VwJylcbiAgICBmZEZvcm1Hcm91cENsYXNzOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIHByaXZhdGUgX2lzSW5saW5lOiBib29sZWFuID0gZmFsc2U7XG4gICAgLyoqIERldGVybWluZXMgaWYgZm9ybSBpdGVtcyBzaG91bGQgYmUgZGlzcGxheWVkIGlubGluZSBvciBub3RcbiAgICAgKiBEZWZhdWx0IHZhbHVlIGlzIHNldCB0byBmYWxzZTtcbiAgICAgKi9cbiAgICBASW5wdXQoKSBzZXQgaXNJbmxpbmUoaW5saW5lOiBib29sZWFuKSB7XG4gICAgICAgIHRoaXMuX2lzSW5saW5lID0gaW5saW5lO1xuICAgICAgICB0aGlzLmJ1aWxkQ29tcG9uZW50Q3NzQ2xhc3MoKTtcbiAgICB9XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2VsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcblxuICAgIH1cblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgICAgICB0aGlzLmJ1aWxkQ29tcG9uZW50Q3NzQ2xhc3MoKTtcbiAgICB9XG5cbiAgICAvKiogVGhpcyBtZXRob2QgaXMgcmVzcG9uc2libGUgZm9yIGJ1aWxkaW5nIGEgY3NzIGNsYXNzIGJhc2VkIG9uIGN1cnJlbnQgc3RhdGVcbiAgICAgKiAgSXQgaXMgaW1wbGVtZW50YXRpb24gb2YgQ3NzQ2xhc3NCdWlsZGVyIGludGVyZmFjZSBhbmRcbiAgICAgKiAgc2hvdWxkIGJlIHVzZWQgd2l0aCBAYXBwbHlDc3NDbGFzcyBkZWNvcmF0b3JcbiAgICAgKi9cbiAgICBAYXBwbHlDc3NDbGFzc1xuICAgIGJ1aWxkQ29tcG9uZW50Q3NzQ2xhc3MoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzSW5saW5lID8gJ2ZkLWZvcm0tZ3JvdXAtLWlubGluZScgOiAnJztcbiAgICB9XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIGVsZW1lbnRSZWYoKTogRWxlbWVudFJlZjxhbnk+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZW1lbnRSZWY7XG4gICAgfVxufVxuIl19