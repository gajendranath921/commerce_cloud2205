/**
 * @fileoverview added by tsickle
 * Generated from: lib/localizator-editor/localization-editor.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, ContentChild, EventEmitter, HostBinding, Input, Output, ViewEncapsulation } from '@angular/core';
import { LocalizationEditorMainComponent } from './localization-editor-main/localization-editor-main.component';
/**
 *  The component that represents a list of fields with add-ons inside popover
 *  ```html
 * <fd-localization-editor>
 *    <fd-localization-editor-main [label]="'EN'">
 *       <input fd-localization-editor-input type="text" placeholder="EN">
 *    </fd-localization-editor-main>
 *    <fd-localization-editor-item [label]="'DE'">
 *       <input fd-localization-editor-input type="text" placeholder="DE">
 *    </fd-localization-editor-item>
 * </fd-localization-editor>
 *  ```
 */
var LocalizationEditorComponent = /** @class */ (function () {
    function LocalizationEditorComponent() {
        /**
         * @hidden
         */
        this.fdLocalizationEditorClass = true;
        /**
         * The trigger events that will open/close the popover.
         *  Accepts any [HTML DOM Events](https://www.w3schools.com/jsref/dom_obj_event.asp).
         */
        this.triggers = ['click'];
        /**
         * Whether the popover is open. Can be used through two-way binding.
         */
        this.isOpen = false;
        /**
         * Whether the popover should close when a click is made outside its boundaries.
         */
        this.closeOnOutsideClick = true;
        /**
         * Whether the popover should close when the escape key is pressed.
         */
        this.closeOnEscapeKey = true;
        /**
         * Event emitted when the state of the isOpen property changes.
         */
        this.isOpenChange = new EventEmitter();
        /**
         * Whether the inputs are in compact mode.
         */
        this.compact = false;
    }
    /**
     * Toggles the popover open state.
     */
    /**
     * Toggles the popover open state.
     * @return {?}
     */
    LocalizationEditorComponent.prototype.toggle = /**
     * Toggles the popover open state.
     * @return {?}
     */
    function () {
        if (this.isOpen) {
            this.close();
        }
        else {
            this.open();
        }
    };
    /**
     * Closes the popover.
     */
    /**
     * Closes the popover.
     * @return {?}
     */
    LocalizationEditorComponent.prototype.close = /**
     * Closes the popover.
     * @return {?}
     */
    function () {
        if (this.isOpen) {
            this.isOpen = false;
            this.isOpenChange.emit(this.isOpen);
        }
    };
    /**
     * Opens the popover.
     */
    /**
     * Opens the popover.
     * @return {?}
     */
    LocalizationEditorComponent.prototype.open = /**
     * Opens the popover.
     * @return {?}
     */
    function () {
        if (!this.isOpen) {
            this.isOpen = true;
            this.isOpenChange.emit(this.isOpen);
        }
    };
    /**
     * @hidden
     * Event handled always, when the popup is opened or closed.
     */
    /**
     * @hidden
     * Event handled always, when the popup is opened or closed.
     * @param {?} opened
     * @return {?}
     */
    LocalizationEditorComponent.prototype.handleOpenChange = /**
     * @hidden
     * Event handled always, when the popup is opened or closed.
     * @param {?} opened
     * @return {?}
     */
    function (opened) {
        if (this.mainElement) {
            this.mainElement.expanded = opened;
        }
    };
    LocalizationEditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-localization-editor',
                    template: "<fd-popover\n    [isOpen]=\"isOpen\" [fillControlMode]=\"'equal'\" (isOpenChange)=\"handleOpenChange($event)\"\n    [closeOnEscapeKey]=\"closeOnEscapeKey\" [closeOnOutsideClick]=\"closeOnOutsideClick\"\n    [disabled]=\"disabled\" [triggers]=\"triggers\" [placement]=\"placement\">\n    <fd-popover-control>\n        <ng-content select=\"fd-localization-editor-main\"></ng-content>\n    </fd-popover-control>\n    <fd-popover-body>\n        <fd-menu>\n            <ul fd-menu-list class=\"fd-localization-editor__list\">\n                <ng-content select=\"[fd-localization-editor-element]\"></ng-content>\n                <ng-content></ng-content>\n            </ul>\n        </fd-menu>\n    </fd-popover-body>\n</fd-popover>\n",
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: ["/*!\n * Fundamental Library Styles v0.4.1\n * Copyright (c) 2020 SAP SE or an SAP affiliate company.\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/master/LICENSE)\n */.fd-localization-editor__language{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:8px;margin:0;border:0}.fd-localization-editor__language:after,.fd-localization-editor__language:before{box-sizing:inherit;font-size:inherit}.fd-localization-editor-textarea{min-height:calc(var(--fd-button-line-height) + 4px)}"]
                }] }
    ];
    LocalizationEditorComponent.propDecorators = {
        fdLocalizationEditorClass: [{ type: HostBinding, args: ['class.fd-localization-editor',] }],
        mainElement: [{ type: ContentChild, args: [LocalizationEditorMainComponent, { static: false },] }],
        triggers: [{ type: Input }],
        placement: [{ type: Input }],
        isOpen: [{ type: Input }],
        closeOnOutsideClick: [{ type: Input }],
        closeOnEscapeKey: [{ type: Input }],
        isOpenChange: [{ type: Output }],
        disabled: [{ type: Input }],
        compact: [{ type: Input }]
    };
    return LocalizationEditorComponent;
}());
export { LocalizationEditorComponent };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    LocalizationEditorComponent.prototype.fdLocalizationEditorClass;
    /**
     * @hidden
     * @type {?}
     */
    LocalizationEditorComponent.prototype.mainElement;
    /**
     * The trigger events that will open/close the popover.
     *  Accepts any [HTML DOM Events](https://www.w3schools.com/jsref/dom_obj_event.asp).
     * @type {?}
     */
    LocalizationEditorComponent.prototype.triggers;
    /**
     * The placement of the popover. It can be one of: top, top-start, top-end, bottom,
     *  bottom-start, bottom-end, right, right-start, right-end, left, left-start, left-end.
     * @type {?}
     */
    LocalizationEditorComponent.prototype.placement;
    /**
     * Whether the popover is open. Can be used through two-way binding.
     * @type {?}
     */
    LocalizationEditorComponent.prototype.isOpen;
    /**
     * Whether the popover should close when a click is made outside its boundaries.
     * @type {?}
     */
    LocalizationEditorComponent.prototype.closeOnOutsideClick;
    /**
     * Whether the popover should close when the escape key is pressed.
     * @type {?}
     */
    LocalizationEditorComponent.prototype.closeOnEscapeKey;
    /**
     * Event emitted when the state of the isOpen property changes.
     * @type {?}
     */
    LocalizationEditorComponent.prototype.isOpenChange;
    /**
     * Whether to disable opening.
     * @type {?}
     */
    LocalizationEditorComponent.prototype.disabled;
    /**
     * Whether the inputs are in compact mode.
     * @type {?}
     */
    LocalizationEditorComponent.prototype.compact;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxpemF0aW9uLWVkaXRvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvbG9jYWxpemF0b3ItZWRpdG9yL2xvY2FsaXphdGlvbi1lZGl0b3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLFlBQVksRUFDWixXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sRUFDTixpQkFBaUIsRUFDcEIsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sK0RBQStELENBQUM7Ozs7Ozs7Ozs7Ozs7O0FBZWhIO0lBQUE7Ozs7UUFXSSw4QkFBeUIsR0FBWSxJQUFJLENBQUM7Ozs7O1FBUzFDLGFBQVEsR0FBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDOzs7O1FBUy9CLFdBQU0sR0FBWSxLQUFLLENBQUM7Ozs7UUFJeEIsd0JBQW1CLEdBQVksSUFBSSxDQUFDOzs7O1FBSXBDLHFCQUFnQixHQUFZLElBQUksQ0FBQzs7OztRQUl4QixpQkFBWSxHQUEwQixJQUFJLFlBQVksRUFBVyxDQUFDOzs7O1FBUTNFLFlBQU8sR0FBWSxLQUFLLENBQUM7SUEwQzdCLENBQUM7SUF4Q0c7O09BRUc7Ozs7O0lBQ0ksNENBQU07Ozs7SUFBYjtRQUNJLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNiLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUNoQjthQUFNO1lBQ0gsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ2Y7SUFDTCxDQUFDO0lBRUQ7O09BRUc7Ozs7O0lBQ0ksMkNBQUs7Ozs7SUFBWjtRQUNJLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNiLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQ3BCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUN2QztJQUNMLENBQUM7SUFFRDs7T0FFRzs7Ozs7SUFDSSwwQ0FBSTs7OztJQUFYO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztZQUNuQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdkM7SUFDTCxDQUFDO0lBRUQ7OztPQUdHOzs7Ozs7O0lBQ0ksc0RBQWdCOzs7Ozs7SUFBdkIsVUFBd0IsTUFBZTtRQUNuQyxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO1NBQ3RDO0lBQ0wsQ0FBQzs7Z0JBMUZKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxzdUJBQW1EO29CQUVuRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2lCQUNsRDs7OzRDQUlJLFdBQVcsU0FBQyw4QkFBOEI7OEJBSTFDLFlBQVksU0FBQywrQkFBK0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7MkJBSy9ELEtBQUs7NEJBS0wsS0FBSzt5QkFJTCxLQUFLO3NDQUlMLEtBQUs7bUNBSUwsS0FBSzsrQkFJTCxNQUFNOzJCQUlOLEtBQUs7MEJBSUwsS0FBSzs7SUEyQ1Ysa0NBQUM7Q0FBQSxBQTNGRCxJQTJGQztTQXBGWSwyQkFBMkI7Ozs7OztJQUdwQyxnRUFDMEM7Ozs7O0lBRzFDLGtEQUM2Qzs7Ozs7O0lBSTdDLCtDQUMrQjs7Ozs7O0lBSS9CLGdEQUNxQjs7Ozs7SUFHckIsNkNBQ3dCOzs7OztJQUd4QiwwREFDb0M7Ozs7O0lBR3BDLHVEQUNpQzs7Ozs7SUFHakMsbURBQzJFOzs7OztJQUczRSwrQ0FDa0I7Ozs7O0lBR2xCLDhDQUN5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIENvbnRlbnRDaGlsZCxcbiAgICBFdmVudEVtaXR0ZXIsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSW5wdXQsXG4gICAgT3V0cHV0LFxuICAgIFZpZXdFbmNhcHN1bGF0aW9uXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGxhY2VtZW50IH0gZnJvbSAncG9wcGVyLmpzJztcbmltcG9ydCB7IExvY2FsaXphdGlvbkVkaXRvck1haW5Db21wb25lbnQgfSBmcm9tICcuL2xvY2FsaXphdGlvbi1lZGl0b3ItbWFpbi9sb2NhbGl6YXRpb24tZWRpdG9yLW1haW4uY29tcG9uZW50JztcblxuLyoqXG4gKiAgVGhlIGNvbXBvbmVudCB0aGF0IHJlcHJlc2VudHMgYSBsaXN0IG9mIGZpZWxkcyB3aXRoIGFkZC1vbnMgaW5zaWRlIHBvcG92ZXJcbiAqICBgYGBodG1sXG4gKiA8ZmQtbG9jYWxpemF0aW9uLWVkaXRvcj5cbiAqICAgIDxmZC1sb2NhbGl6YXRpb24tZWRpdG9yLW1haW4gW2xhYmVsXT1cIidFTidcIj5cbiAqICAgICAgIDxpbnB1dCBmZC1sb2NhbGl6YXRpb24tZWRpdG9yLWlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJFTlwiPlxuICogICAgPC9mZC1sb2NhbGl6YXRpb24tZWRpdG9yLW1haW4+XG4gKiAgICA8ZmQtbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtIFtsYWJlbF09XCInREUnXCI+XG4gKiAgICAgICA8aW5wdXQgZmQtbG9jYWxpemF0aW9uLWVkaXRvci1pbnB1dCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiREVcIj5cbiAqICAgIDwvZmQtbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtPlxuICogPC9mZC1sb2NhbGl6YXRpb24tZWRpdG9yPlxuICogIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLWxvY2FsaXphdGlvbi1lZGl0b3InLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9sb2NhbGl6YXRpb24tZWRpdG9yLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnbG9jYWxpemF0aW9uLWVkaXRvci5jb21wb25lbnQuc2NzcyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgTG9jYWxpemF0aW9uRWRpdG9yQ29tcG9uZW50IHtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5mZC1sb2NhbGl6YXRpb24tZWRpdG9yJylcbiAgICBmZExvY2FsaXphdGlvbkVkaXRvckNsYXNzOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgQENvbnRlbnRDaGlsZChMb2NhbGl6YXRpb25FZGl0b3JNYWluQ29tcG9uZW50LCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgICBtYWluRWxlbWVudDogTG9jYWxpemF0aW9uRWRpdG9yTWFpbkNvbXBvbmVudDtcblxuICAgIC8qKiBUaGUgdHJpZ2dlciBldmVudHMgdGhhdCB3aWxsIG9wZW4vY2xvc2UgdGhlIHBvcG92ZXIuXG4gICAgICogIEFjY2VwdHMgYW55IFtIVE1MIERPTSBFdmVudHNdKGh0dHBzOi8vd3d3Lnczc2Nob29scy5jb20vanNyZWYvZG9tX29ial9ldmVudC5hc3ApLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgdHJpZ2dlcnM6IHN0cmluZ1tdID0gWydjbGljayddO1xuXG4gICAgLyoqIFRoZSBwbGFjZW1lbnQgb2YgdGhlIHBvcG92ZXIuIEl0IGNhbiBiZSBvbmUgb2Y6IHRvcCwgdG9wLXN0YXJ0LCB0b3AtZW5kLCBib3R0b20sXG4gICAgICogIGJvdHRvbS1zdGFydCwgYm90dG9tLWVuZCwgcmlnaHQsIHJpZ2h0LXN0YXJ0LCByaWdodC1lbmQsIGxlZnQsIGxlZnQtc3RhcnQsIGxlZnQtZW5kLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgcGxhY2VtZW50OiBQbGFjZW1lbnQ7XG5cbiAgICAvKiogV2hldGhlciB0aGUgcG9wb3ZlciBpcyBvcGVuLiBDYW4gYmUgdXNlZCB0aHJvdWdoIHR3by13YXkgYmluZGluZy4gKi9cbiAgICBASW5wdXQoKVxuICAgIGlzT3BlbjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgLyoqIFdoZXRoZXIgdGhlIHBvcG92ZXIgc2hvdWxkIGNsb3NlIHdoZW4gYSBjbGljayBpcyBtYWRlIG91dHNpZGUgaXRzIGJvdW5kYXJpZXMuICovXG4gICAgQElucHV0KClcbiAgICBjbG9zZU9uT3V0c2lkZUNsaWNrOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBXaGV0aGVyIHRoZSBwb3BvdmVyIHNob3VsZCBjbG9zZSB3aGVuIHRoZSBlc2NhcGUga2V5IGlzIHByZXNzZWQuICovXG4gICAgQElucHV0KClcbiAgICBjbG9zZU9uRXNjYXBlS2V5OiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBFdmVudCBlbWl0dGVkIHdoZW4gdGhlIHN0YXRlIG9mIHRoZSBpc09wZW4gcHJvcGVydHkgY2hhbmdlcy4gKi9cbiAgICBAT3V0cHV0KClcbiAgICByZWFkb25seSBpc09wZW5DaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcblxuICAgIC8qKiBXaGV0aGVyIHRvIGRpc2FibGUgb3BlbmluZy4gKi9cbiAgICBASW5wdXQoKVxuICAgIGRpc2FibGVkOiBib29sZWFuO1xuXG4gICAgLyoqIFdoZXRoZXIgdGhlIGlucHV0cyBhcmUgaW4gY29tcGFjdCBtb2RlLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgY29tcGFjdDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgLyoqXG4gICAgICogVG9nZ2xlcyB0aGUgcG9wb3ZlciBvcGVuIHN0YXRlLlxuICAgICAqL1xuICAgIHB1YmxpYyB0b2dnbGUoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmlzT3Blbikge1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5vcGVuKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDbG9zZXMgdGhlIHBvcG92ZXIuXG4gICAgICovXG4gICAgcHVibGljIGNsb3NlKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5pc09wZW4pIHtcbiAgICAgICAgICAgIHRoaXMuaXNPcGVuID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmlzT3BlbkNoYW5nZS5lbWl0KHRoaXMuaXNPcGVuKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE9wZW5zIHRoZSBwb3BvdmVyLlxuICAgICAqL1xuICAgIHB1YmxpYyBvcGVuKCk6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMuaXNPcGVuKSB7XG4gICAgICAgICAgICB0aGlzLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLmlzT3BlbkNoYW5nZS5lbWl0KHRoaXMuaXNPcGVuKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBFdmVudCBoYW5kbGVkIGFsd2F5cywgd2hlbiB0aGUgcG9wdXAgaXMgb3BlbmVkIG9yIGNsb3NlZC5cbiAgICAgKi9cbiAgICBwdWJsaWMgaGFuZGxlT3BlbkNoYW5nZShvcGVuZWQ6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMubWFpbkVsZW1lbnQpIHtcbiAgICAgICAgICAgIHRoaXMubWFpbkVsZW1lbnQuZXhwYW5kZWQgPSBvcGVuZWQ7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=