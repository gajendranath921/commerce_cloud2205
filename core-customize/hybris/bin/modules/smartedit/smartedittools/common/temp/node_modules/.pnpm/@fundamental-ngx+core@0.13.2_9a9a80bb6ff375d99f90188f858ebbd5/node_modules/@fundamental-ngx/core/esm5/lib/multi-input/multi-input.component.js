/**
 * @fileoverview added by tsickle
 * Generated from: lib/multi-input/multi-input.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, HostBinding, Input, Output, QueryList, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { PopoverComponent } from '../popover/popover.component';
import { MenuItemDirective } from '../menu/menu-item.directive';
import { MenuKeyboardService } from '../menu/menu-keyboard.service';
import focusTrap from 'focus-trap';
/**
 * Input field with multiple selection enabled. Should be used when a user can select between a
 * limited number of pre-defined options with a filter-enabled context.
 *
 * Supports Angular Forms.
 */
var MultiInputComponent = /** @class */ (function () {
    /** @hidden */
    function MultiInputComponent(elRef, changeDetRef, menuKeyboardService) {
        this.elRef = elRef;
        this.changeDetRef = changeDetRef;
        this.menuKeyboardService = menuKeyboardService;
        /**
         * @hidden
         */
        this.multiInputClass = true;
        /**
         * Placeholder for the input field.
         */
        this.placeholder = '';
        /**
         * Whether the input is disabled.
         */
        this.disabled = false;
        /**
         * Whether the input is in compact mode.
         */
        this.compact = false;
        /**
         * Max height of the popover. Any overflowing elements will be accessible through scrolling.
         */
        this.maxHeight = '300px';
        /**
         * Icon of the button on the right of the input field.
         */
        this.glyph = 'navigation-down-arrow';
        /**
         * Values to be displayed in the unfiltered dropdown.
         */
        this.dropdownValues = [];
        /**
         * Whether the search term should be highlighted in results.
         */
        this.highlight = true;
        /**
         * Selected dropdown items.
         */
        this.selected = [];
        /**
         * Filter function. Accepts an array and a string as arguments, and outputs an array.
         * An arrow function can be used to access the *this* keyword in the calling component.
         * See multi input examples for details.
         */
        this.filterFn = this.defaultFilter;
        /**
         * Display function. Accepts an object of the same type as the
         * items passed to dropdownValues as argument, and outputs a string.
         * An arrow function can be used to access the *this* keyword in the calling component.
         * See multi input examples for details.
         */
        this.displayFn = this.defaultDisplay;
        /**
         * Aria label for the multi input body.
         */
        this.multiInputBodyLabel = 'Multi input body';
        /**
         * Preset options for the popover body width.
         * * `at-least` will apply a minimum width to the body equivalent to the width of the control.
         * * `equal` will apply a width to the body equivalent to the width of the control.
         * * Leave blank for no effect.
         */
        this.fillControlMode = 'at-least';
        /**
         * Whether AddOn Button should be focusable, set to false by default
         */
        this.buttonFocusable = false;
        /**
         * Event emitted when the search term changes. Use *$event* to access the new term.
         */
        this.searchTermChange = new EventEmitter();
        /**
         * Event emitted when the selected items change. Use *$event* to access the new selected array.
         */
        this.selectedChange = new EventEmitter();
        /**
         * Whether multi input popover body should be opened
         */
        this.open = false;
        /**
         * Event emitted, when the multi input's popover body is opened or closed
         */
        this.openChange = new EventEmitter();
        /**
         * @hidden
         */
        this.displayedValues = [];
        /**
         * @hidden
         */
        this.onChange = (/**
         * @return {?}
         */
        function () { });
        /**
         * @hidden
         */
        this.onTouched = (/**
         * @return {?}
         */
        function () { });
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    MultiInputComponent.prototype.ngOnInit = /**
     * @hidden
     * @return {?}
     */
    function () {
        if (this.dropdownValues) {
            this.displayedValues = this.dropdownValues;
        }
        this.setupFocusTrap();
    };
    /** @hidden */
    /**
     * @hidden
     * @param {?} changes
     * @return {?}
     */
    MultiInputComponent.prototype.ngOnChanges = /**
     * @hidden
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (this.dropdownValues && (changes.dropdownValues || changes.searchTerm)) {
            if (this.searchTerm) {
                this.displayedValues = this.filterFn(this.dropdownValues, this.searchTerm);
            }
            else {
                this.displayedValues = this.dropdownValues;
            }
        }
        this.changeDetRef.markForCheck();
    };
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    MultiInputComponent.prototype.ngAfterViewInit = /**
     * @hidden
     * @return {?}
     */
    function () {
        var _this = this;
        this.menuKeyboardService.focusEscapeBeforeList = (/**
         * @return {?}
         */
        function () { return _this.searchInputElement.nativeElement.focus(); });
        this.menuKeyboardService.focusEscapeAfterList = (/**
         * @return {?}
         */
        function () { });
    };
    /** @hidden */
    /**
     * @hidden
     * @param {?} fn
     * @return {?}
     */
    MultiInputComponent.prototype.registerOnChange = /**
     * @hidden
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChange = fn;
    };
    /** @hidden */
    /**
     * @hidden
     * @param {?} fn
     * @return {?}
     */
    MultiInputComponent.prototype.registerOnTouched = /**
     * @hidden
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouched = fn;
    };
    /** @hidden */
    /**
     * @hidden
     * @param {?} isDisabled
     * @return {?}
     */
    MultiInputComponent.prototype.setDisabledState = /**
     * @hidden
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        this.disabled = isDisabled;
        if (isDisabled) {
            this.elRef.nativeElement.style.pointerEvents = 'none';
        }
        else {
            this.elRef.nativeElement.style.pointerEvents = 'auto';
        }
        this.changeDetRef.detectChanges();
    };
    /** @hidden */
    /**
     * @hidden
     * @param {?} selected
     * @return {?}
     */
    MultiInputComponent.prototype.writeValue = /**
     * @hidden
     * @param {?} selected
     * @return {?}
     */
    function (selected) {
        if (selected) {
            this.selected = selected;
        }
        this.changeDetRef.markForCheck();
    };
    /** @hidden */
    /**
     * @hidden
     * @param {?} open
     * @return {?}
     */
    MultiInputComponent.prototype.openChangeHandle = /**
     * @hidden
     * @param {?} open
     * @return {?}
     */
    function (open) {
        this.open = open;
        this.openChange.emit(this.open);
        this.onTouched();
        if (this.open) {
            this.focusTrap.activate();
        }
        else {
            this.focusTrap.deactivate();
        }
    };
    /** @hidden */
    /**
     * @hidden
     * @param {?} checked
     * @param {?} value
     * @return {?}
     */
    MultiInputComponent.prototype.handleSelect = /**
     * @hidden
     * @param {?} checked
     * @param {?} value
     * @return {?}
     */
    function (checked, value) {
        /** @type {?} */
        var previousLength = this.selected.length;
        if (checked) {
            this.selected.push(value);
        }
        else {
            this.selected.splice(this.selected.indexOf(value), 1);
        }
        // Handle popover placement update
        if ((previousLength === 0 && this.selected.length === 1) ||
            (previousLength === 1 && this.selected.length === 0)) {
            this.popoverRef.updatePopover();
        }
        this.onChange(this.selected);
        this.selectedChange.emit(this.selected);
    };
    /** @hidden */
    /**
     * @hidden
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    MultiInputComponent.prototype.handleKeyDown = /**
     * @hidden
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    function (event, index) {
        this.menuKeyboardService.keyDownHandler(event, index, this.menuItems.toArray());
    };
    /** @hidden */
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    MultiInputComponent.prototype.handleInputKeydown = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.key === 'ArrowDown') {
            if (event.altKey) {
                this.openChangeHandle(true);
            }
            if (this.menuItems.first) {
                this.menuItems.first.focus();
                event.preventDefault();
            }
        }
    };
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    MultiInputComponent.prototype.handleSearchTermChange = /**
     * @hidden
     * @return {?}
     */
    function () {
        if (!this.open && this.searchTerm && this.searchTerm.length) {
            this.openChangeHandle(true);
        }
        this.searchTermChange.emit(this.searchTerm);
        this.displayedValues = this.filterFn(this.dropdownValues, this.searchTerm);
        this.popoverRef.updatePopover();
    };
    /**
     * @private
     * @param {?} contentArray
     * @param {?} searchTerm
     * @return {?}
     */
    MultiInputComponent.prototype.defaultFilter = /**
     * @private
     * @param {?} contentArray
     * @param {?} searchTerm
     * @return {?}
     */
    function (contentArray, searchTerm) {
        var _this = this;
        /** @type {?} */
        var searchLower = searchTerm.toLocaleLowerCase();
        return contentArray.filter((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (item) {
                return _this.displayFn(item).toLocaleLowerCase().includes(searchLower);
            }
        }));
    };
    /**
     * @private
     * @param {?} str
     * @return {?}
     */
    MultiInputComponent.prototype.defaultDisplay = /**
     * @private
     * @param {?} str
     * @return {?}
     */
    function (str) {
        return str;
    };
    /**
     * @private
     * @return {?}
     */
    MultiInputComponent.prototype.setupFocusTrap = /**
     * @private
     * @return {?}
     */
    function () {
        try {
            this.focusTrap = focusTrap(this.elRef.nativeElement, {
                clickOutsideDeactivates: true,
                returnFocusOnDeactivate: true,
                escapeDeactivates: false
            });
        }
        catch (e) {
            console.warn('Unsuccessful attempting to focus trap the Multi Input.');
        }
    };
    MultiInputComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-multi-input',
                    template: "<div class=\"fd-multi-input-field\">\n    <fd-popover [isOpen]=\"open && displayedValues && displayedValues.length\"\n                (isOpenChange)=\"openChangeHandle($event)\"\n                [triggers]=\"[]\"\n                [disabled]=\"disabled\"\n                [closeOnOutsideClick]=\"true\"\n                [fillControlMode]=\"fillControlMode\"\n                class=\"fd-multi-input-popover-custom\">\n        <fd-popover-control>\n            <div class=\"fd-combobox-control\"\n                 [attr.aria-label]=\"multiInputBodyLabel\"\n                 [attr.aria-expanded]=\"open\">\n                <fd-input-group\n                    [state]=\"state\"\n                    [buttonFocusable]=\"buttonFocusable\"\n                    [disabled]=\"disabled\"\n                    [compact]=\"compact\"\n                    [button]=\"true\"\n                    [glyph]=\"glyph\"\n                    (addOnButtonClicked)=\"openChangeHandle(!open)\">\n                    <input type=\"text\" class=\"fd-input\" fd-input-group-input\n                           #searchInputElement\n                           [compact]=\"compact\"\n                           [placeholder]=\"placeholder\"\n                           [disabled]=\"disabled\"\n                           [(ngModel)]=\"searchTerm\"\n                           (ngModelChange)=\"handleSearchTermChange()\"\n                           (keydown)=\"handleInputKeydown($event)\"\n                           (click)=\"openChangeHandle(!open)\">\n                </fd-input-group>\n            </div>\n        </fd-popover-control>\n        <fd-popover-body [attr.aria-hidden]=\"!open\">\n            <fd-menu class=\"fd-multi-input-menu-overflow\"\n                     *ngIf=\"displayedValues && displayedValues.length\"\n                     [style.maxHeight]=\"maxHeight\">\n                <ul fd-menu-list>\n                    <li *ngFor=\"let value of displayedValues; let ind  = index\">\n                        <label fd-menu-item (keydown)=\"handleKeyDown($event, ind)\">\n                            <fd-checkbox [ngModel]=\"selected ? selected.indexOf(value) !== -1 : false\"\n                                         (ngModelChange)=\"handleSelect($event, value)\">\n                                <span [innerHtml]=\"value | displayFnPipe:displayFn | highlight:searchTerm:highlight\"></span>\n                            </fd-checkbox>\n                        </label>\n                    </li>\n                </ul>\n            </fd-menu>\n            <ng-content></ng-content>\n        </fd-popover-body>\n    </fd-popover>\n</div>\n<div class=\"fd-multi-input-tags\">\n    <fd-token\n            *ngFor=\"let token of selected\"\n            [disabled]=this.disabled\n            (onCloseClick)=\"handleSelect(false, token)\"\n            class=\"fd-multi-input-token-spacing\">\n        <span [innerHtml]=\"token | displayFnPipe:displayFn\"></span>\n    </fd-token>\n</div>\n\n",
                    host: {
                        '(blur)': 'onTouched()',
                        '[class.fd-multi-input-custom]': 'true'
                    },
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return MultiInputComponent; })),
                            multi: true
                        },
                        MenuKeyboardService
                    ],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: ["/*!\n * Fundamental Library Styles v0.4.1\n * Copyright (c) 2020 SAP SE or an SAP affiliate company.\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/master/LICENSE)\n *//*!\n.fd-multi-input\n*/.fd-multi-input{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0;border:0}.fd-multi-input:after,.fd-multi-input:before{box-sizing:inherit;font-size:inherit}.fd-multi-input-field{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0 0 10px;border:0}.fd-multi-input-field:after,.fd-multi-input-field:before{box-sizing:inherit;font-size:inherit}.fd-multi-input-tokens{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0;border:0}.fd-multi-input-tokens:after,.fd-multi-input-tokens:before{box-sizing:inherit;font-size:inherit}.fd-multi-input-custom{display:block}.fd-multi-input-custom .fd-multi-input-popover-size{overflow:auto;display:block}.fd-multi-input-custom .fd-multi-input-popover-custom{display:block}.fd-multi-input-custom .fd-multi-input-menu-overflow{overflow:auto}.fd-multi-input-custom .fd-multi-input-token-spacing{margin:0 4px 4px 0}.fd-multi-input-custom .fd-multi-input-token-spacing:last-child{margin-right:0}"]
                }] }
    ];
    /** @nocollapse */
    MultiInputComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: ChangeDetectorRef },
        { type: MenuKeyboardService }
    ]; };
    MultiInputComponent.propDecorators = {
        popoverRef: [{ type: ViewChild, args: [PopoverComponent, { static: false },] }],
        menuItems: [{ type: ViewChildren, args: [MenuItemDirective,] }],
        searchInputElement: [{ type: ViewChild, args: ['searchInputElement', { static: false },] }],
        multiInputClass: [{ type: HostBinding, args: ['class.fd-multi-input',] }],
        placeholder: [{ type: Input }],
        disabled: [{ type: Input }],
        compact: [{ type: Input }],
        maxHeight: [{ type: Input }],
        glyph: [{ type: Input }],
        dropdownValues: [{ type: Input }],
        searchTerm: [{ type: Input }],
        highlight: [{ type: Input }],
        selected: [{ type: Input }],
        filterFn: [{ type: Input }],
        displayFn: [{ type: Input }],
        multiInputBodyLabel: [{ type: Input }],
        fillControlMode: [{ type: Input }],
        state: [{ type: Input }],
        buttonFocusable: [{ type: Input }],
        searchTermChange: [{ type: Output }],
        selectedChange: [{ type: Output }],
        open: [{ type: Input }],
        openChange: [{ type: Output }]
    };
    return MultiInputComponent;
}());
export { MultiInputComponent };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    MultiInputComponent.prototype.popoverRef;
    /**
     * @hidden
     * @type {?}
     */
    MultiInputComponent.prototype.menuItems;
    /**
     * @hidden
     * @type {?}
     */
    MultiInputComponent.prototype.searchInputElement;
    /**
     * @hidden
     * @type {?}
     */
    MultiInputComponent.prototype.multiInputClass;
    /**
     * Placeholder for the input field.
     * @type {?}
     */
    MultiInputComponent.prototype.placeholder;
    /**
     * Whether the input is disabled.
     * @type {?}
     */
    MultiInputComponent.prototype.disabled;
    /**
     * Whether the input is in compact mode.
     * @type {?}
     */
    MultiInputComponent.prototype.compact;
    /**
     * Max height of the popover. Any overflowing elements will be accessible through scrolling.
     * @type {?}
     */
    MultiInputComponent.prototype.maxHeight;
    /**
     * Icon of the button on the right of the input field.
     * @type {?}
     */
    MultiInputComponent.prototype.glyph;
    /**
     * Values to be displayed in the unfiltered dropdown.
     * @type {?}
     */
    MultiInputComponent.prototype.dropdownValues;
    /**
     * Search term, or more specifically the value of the inner input field.
     * @type {?}
     */
    MultiInputComponent.prototype.searchTerm;
    /**
     * Whether the search term should be highlighted in results.
     * @type {?}
     */
    MultiInputComponent.prototype.highlight;
    /**
     * Selected dropdown items.
     * @type {?}
     */
    MultiInputComponent.prototype.selected;
    /**
     * Filter function. Accepts an array and a string as arguments, and outputs an array.
     * An arrow function can be used to access the *this* keyword in the calling component.
     * See multi input examples for details.
     * @type {?}
     */
    MultiInputComponent.prototype.filterFn;
    /**
     * Display function. Accepts an object of the same type as the
     * items passed to dropdownValues as argument, and outputs a string.
     * An arrow function can be used to access the *this* keyword in the calling component.
     * See multi input examples for details.
     * @type {?}
     */
    MultiInputComponent.prototype.displayFn;
    /**
     * Aria label for the multi input body.
     * @type {?}
     */
    MultiInputComponent.prototype.multiInputBodyLabel;
    /**
     * Preset options for the popover body width.
     * * `at-least` will apply a minimum width to the body equivalent to the width of the control.
     * * `equal` will apply a width to the body equivalent to the width of the control.
     * * Leave blank for no effect.
     * @type {?}
     */
    MultiInputComponent.prototype.fillControlMode;
    /**
     *  The state of the form control - applies css classes.
     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.
     * @type {?}
     */
    MultiInputComponent.prototype.state;
    /**
     * Whether AddOn Button should be focusable, set to false by default
     * @type {?}
     */
    MultiInputComponent.prototype.buttonFocusable;
    /**
     * Event emitted when the search term changes. Use *$event* to access the new term.
     * @type {?}
     */
    MultiInputComponent.prototype.searchTermChange;
    /**
     * Event emitted when the selected items change. Use *$event* to access the new selected array.
     * @type {?}
     */
    MultiInputComponent.prototype.selectedChange;
    /**
     * Whether multi input popover body should be opened
     * @type {?}
     */
    MultiInputComponent.prototype.open;
    /**
     * Event emitted, when the multi input's popover body is opened or closed
     * @type {?}
     */
    MultiInputComponent.prototype.openChange;
    /**
     * @hidden
     * @type {?}
     */
    MultiInputComponent.prototype.displayedValues;
    /**
     * @hidden
     * @type {?}
     */
    MultiInputComponent.prototype.focusTrap;
    /**
     * @hidden
     * @type {?}
     */
    MultiInputComponent.prototype.onChange;
    /**
     * @hidden
     * @type {?}
     */
    MultiInputComponent.prototype.onTouched;
    /**
     * @type {?}
     * @private
     */
    MultiInputComponent.prototype.elRef;
    /**
     * @type {?}
     * @private
     */
    MultiInputComponent.prototype.changeDetRef;
    /**
     * @type {?}
     * @private
     */
    MultiInputComponent.prototype.menuKeyboardService;
}
//# sourceMappingURL=data:application/json;base64,