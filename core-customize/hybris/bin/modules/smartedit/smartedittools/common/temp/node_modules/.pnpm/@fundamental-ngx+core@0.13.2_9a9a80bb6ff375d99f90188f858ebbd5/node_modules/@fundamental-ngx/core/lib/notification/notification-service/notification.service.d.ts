import { ComponentRef, TemplateRef, Type } from '@angular/core';
import { NotificationComponent } from '../notification/notification.component';
import { NotificationContainer } from '../notification-utils/notification-container';
import { NotificationConfig } from '../notification-utils/notification-config';
import { NotificationRef } from '../notification-utils/notification-ref';
import { DynamicComponentService } from '../../utils/dynamic-component/dynamic-component.service';
import { NotificationGroupComponent } from '../notification-group/notification-group.component';
import { NotificationDefault } from '../notification-utils/notification-default';
export declare class NotificationService {
    private dynamicComponentService;
    notifications: {
        notificationComponent: ComponentRef<NotificationComponent>;
        notificationGroup?: ComponentRef<NotificationGroupComponent>;
    }[];
    containerRef: ComponentRef<NotificationContainer>;
    constructor(dynamicComponentService: DynamicComponentService);
    /**
     * Opens an alert component with a content of type TemplateRef, Component Type or Configuration Object
     * @param content Content of the alert component, or NotificationDefault object.
     * @param notificationConfig Configuration of the notification component.
     * @param notificationGroup Configuration of the notification component.
     */
    open(content: TemplateRef<any> | Type<any> | NotificationDefault, notificationConfig?: NotificationConfig, notificationGroup?: ComponentRef<NotificationGroupComponent>): NotificationRef;
    /** Method to remove all of notifications from this service instance */
    destroyAll(): void;
    /** Method that informs if there is any notification opened in this service instance */
    isAnyOpened(): boolean;
    /** Method to create Notification Group */
    createNotificationGroup(notificationConfig?: NotificationConfig): ComponentRef<NotificationGroupComponent>;
    private destroyWholeGroup;
    private destroyNotificationComponent;
}
