/**
 * @fileoverview added by tsickle
 * Generated from: lib/table/table.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TableComponent } from './table.component';
import { ColumnSortableDirective } from './column-sortable.directive';
import { TableResponsiveWrapperDirective } from './table-responsive-wrapper.directive';
import { TableHeaderDirective } from './directives/table-header.directive';
import { TableBodyDirective } from './directives/table-body.directive';
import { TableRowDirective } from './directives/table-row.directive';
import { TableCellDirective } from './directives/table-cell.directive';
import { TableWrapperComponent } from './table-wrapper.component';
var TableModule = /** @class */ (function () {
    function TableModule() {
    }
    TableModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule],
                    declarations: [
                        TableComponent,
                        TableResponsiveWrapperDirective,
                        ColumnSortableDirective,
                        TableWrapperComponent,
                        TableHeaderDirective,
                        TableBodyDirective,
                        TableRowDirective,
                        TableCellDirective
                    ],
                    exports: [
                        TableComponent,
                        TableResponsiveWrapperDirective,
                        ColumnSortableDirective,
                        TableWrapperComponent,
                        TableHeaderDirective,
                        TableBodyDirective,
                        TableRowDirective,
                        TableCellDirective
                    ]
                },] }
    ];
    return TableModule;
}());
export { TableModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ1bmRhbWVudGFsLW5neC9jb3JlLyIsInNvdXJjZXMiOlsibGliL3RhYmxlL3RhYmxlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN2RixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUVsRTtJQUFBO0lBdUIwQixDQUFDOztnQkF2QjFCLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7b0JBQ3ZCLFlBQVksRUFBRTt3QkFDVixjQUFjO3dCQUNkLCtCQUErQjt3QkFDL0IsdUJBQXVCO3dCQUN2QixxQkFBcUI7d0JBQ3JCLG9CQUFvQjt3QkFDcEIsa0JBQWtCO3dCQUNsQixpQkFBaUI7d0JBQ2pCLGtCQUFrQjtxQkFDckI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLGNBQWM7d0JBQ2QsK0JBQStCO3dCQUMvQix1QkFBdUI7d0JBQ3ZCLHFCQUFxQjt3QkFDckIsb0JBQW9CO3dCQUNwQixrQkFBa0I7d0JBQ2xCLGlCQUFpQjt3QkFDakIsa0JBQWtCO3FCQUNyQjtpQkFDSjs7SUFDeUIsa0JBQUM7Q0FBQSxBQXZCM0IsSUF1QjJCO1NBQWQsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBUYWJsZUNvbXBvbmVudCB9IGZyb20gJy4vdGFibGUuY29tcG9uZW50JztcbmltcG9ydCB7IENvbHVtblNvcnRhYmxlRGlyZWN0aXZlIH0gZnJvbSAnLi9jb2x1bW4tc29ydGFibGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IFRhYmxlUmVzcG9uc2l2ZVdyYXBwZXJEaXJlY3RpdmUgfSBmcm9tICcuL3RhYmxlLXJlc3BvbnNpdmUtd3JhcHBlci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGFibGVIZWFkZXJEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvdGFibGUtaGVhZGVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUYWJsZUJvZHlEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvdGFibGUtYm9keS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGFibGVSb3dEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvdGFibGUtcm93LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUYWJsZUNlbGxEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvdGFibGUtY2VsbC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGFibGVXcmFwcGVyQ29tcG9uZW50IH0gZnJvbSAnLi90YWJsZS13cmFwcGVyLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIFRhYmxlQ29tcG9uZW50LFxuICAgICAgICBUYWJsZVJlc3BvbnNpdmVXcmFwcGVyRGlyZWN0aXZlLFxuICAgICAgICBDb2x1bW5Tb3J0YWJsZURpcmVjdGl2ZSxcbiAgICAgICAgVGFibGVXcmFwcGVyQ29tcG9uZW50LFxuICAgICAgICBUYWJsZUhlYWRlckRpcmVjdGl2ZSxcbiAgICAgICAgVGFibGVCb2R5RGlyZWN0aXZlLFxuICAgICAgICBUYWJsZVJvd0RpcmVjdGl2ZSxcbiAgICAgICAgVGFibGVDZWxsRGlyZWN0aXZlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIFRhYmxlQ29tcG9uZW50LFxuICAgICAgICBUYWJsZVJlc3BvbnNpdmVXcmFwcGVyRGlyZWN0aXZlLFxuICAgICAgICBDb2x1bW5Tb3J0YWJsZURpcmVjdGl2ZSxcbiAgICAgICAgVGFibGVXcmFwcGVyQ29tcG9uZW50LFxuICAgICAgICBUYWJsZUhlYWRlckRpcmVjdGl2ZSxcbiAgICAgICAgVGFibGVCb2R5RGlyZWN0aXZlLFxuICAgICAgICBUYWJsZVJvd0RpcmVjdGl2ZSxcbiAgICAgICAgVGFibGVDZWxsRGlyZWN0aXZlXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBUYWJsZU1vZHVsZSB7fVxuIl19