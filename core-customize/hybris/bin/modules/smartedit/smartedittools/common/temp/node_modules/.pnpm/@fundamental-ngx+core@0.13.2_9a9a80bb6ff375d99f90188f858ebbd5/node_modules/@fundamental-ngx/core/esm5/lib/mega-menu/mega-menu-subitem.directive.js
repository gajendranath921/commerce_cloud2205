/**
 * @fileoverview added by tsickle
 * Generated from: lib/mega-menu/mega-menu-subitem.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ContentChild, Directive, EventEmitter, HostBinding, HostListener, Output } from '@angular/core';
import { MegaMenuSublinkDirective } from './mega-menu-sublink.directive';
/**
 *  Directive represents mega menu subitem, which can contain sublink.
 *  ```html
 * <li fd-mega-menu-subitem>
 *      <a fd-mega-menu-sublink>Sub Item 2</a>
 * </li>
 *  ```
 *
 */
var MegaMenuSubitemDirective = /** @class */ (function () {
    function MegaMenuSubitemDirective() {
        /**
         * @hidden
         */
        this.fdMegaMenuClass = true;
        /**
         *
         */
        this.keyDown = new EventEmitter();
    }
    /** @hidden */
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    MegaMenuSubitemDirective.prototype.handleKeyboardEvent = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.keyDown.emit(event);
    };
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    MegaMenuSubitemDirective.prototype.focus = /**
     * @hidden
     * @return {?}
     */
    function () {
        this.link.focus();
    };
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    MegaMenuSubitemDirective.prototype.click = /**
     * @hidden
     * @return {?}
     */
    function () {
        this.link.click();
    };
    MegaMenuSubitemDirective.decorators = [
        { type: Directive, args: [{
                    // tslint:disable-next-line:directive-selector
                    selector: '[fd-mega-menu-subitem]'
                },] }
    ];
    MegaMenuSubitemDirective.propDecorators = {
        fdMegaMenuClass: [{ type: HostBinding, args: ['class.fd-mega-menu__subitem',] }],
        link: [{ type: ContentChild, args: [MegaMenuSublinkDirective, { static: false },] }],
        keyDown: [{ type: Output }],
        handleKeyboardEvent: [{ type: HostListener, args: ['keydown', ['$event'],] }]
    };
    return MegaMenuSubitemDirective;
}());
export { MegaMenuSubitemDirective };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    MegaMenuSubitemDirective.prototype.fdMegaMenuClass;
    /**
     * @hidden
     * @type {?}
     */
    MegaMenuSubitemDirective.prototype.link;
    /**
     *
     * @type {?}
     */
    MegaMenuSubitemDirective.prototype.keyDown;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVnYS1tZW51LXN1Yml0ZW0uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ1bmRhbWVudGFsLW5neC9jb3JlLyIsInNvdXJjZXMiOlsibGliL21lZ2EtbWVudS9tZWdhLW1lbnUtc3ViaXRlbS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekcsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7Ozs7Ozs7Ozs7QUFVekU7SUFBQTs7OztRQU9JLG9CQUFlLEdBQVksSUFBSSxDQUFDOzs7O1FBUXZCLFlBQU8sR0FBZ0MsSUFBSSxZQUFZLEVBQWlCLENBQUM7SUFpQnRGLENBQUM7SUFmRyxjQUFjOzs7Ozs7SUFFZCxzREFBbUI7Ozs7O0lBRG5CLFVBQ29CLEtBQW9CO1FBQ3BDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFRCxjQUFjOzs7OztJQUNQLHdDQUFLOzs7O0lBQVo7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFFRCxjQUFjOzs7OztJQUNQLHdDQUFLOzs7O0lBQVo7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3RCLENBQUM7O2dCQS9CSixTQUFTLFNBQUM7O29CQUVQLFFBQVEsRUFBRSx3QkFBd0I7aUJBQ3JDOzs7a0NBR0ksV0FBVyxTQUFDLDZCQUE2Qjt1QkFJekMsWUFBWSxTQUFDLHdCQUF3QixFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTswQkFJeEQsTUFBTTtzQ0FJTixZQUFZLFNBQUMsU0FBUyxFQUFFLENBQUMsUUFBUSxDQUFDOztJQWN2QywrQkFBQztDQUFBLEFBaENELElBZ0NDO1NBNUJZLHdCQUF3Qjs7Ozs7O0lBRWpDLG1EQUNnQzs7Ozs7SUFHaEMsd0NBQytCOzs7OztJQUcvQiwyQ0FDa0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb250ZW50Q2hpbGQsIERpcmVjdGl2ZSwgRXZlbnRFbWl0dGVyLCBIb3N0QmluZGluZywgSG9zdExpc3RlbmVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERlZmF1bHRNZW51SXRlbSB9IGZyb20gJy4uL21lbnUvZGVmYXVsdC1tZW51LWl0ZW0nO1xuaW1wb3J0IHsgTWVnYU1lbnVTdWJsaW5rRGlyZWN0aXZlIH0gZnJvbSAnLi9tZWdhLW1lbnUtc3VibGluay5kaXJlY3RpdmUnO1xuXG4vKipcbiAqICBEaXJlY3RpdmUgcmVwcmVzZW50cyBtZWdhIG1lbnUgc3ViaXRlbSwgd2hpY2ggY2FuIGNvbnRhaW4gc3VibGluay5cbiAqICBgYGBodG1sXG4gKiA8bGkgZmQtbWVnYS1tZW51LXN1Yml0ZW0+XG4gKiAgICAgIDxhIGZkLW1lZ2EtbWVudS1zdWJsaW5rPlN1YiBJdGVtIDI8L2E+XG4gKiA8L2xpPlxuICogIGBgYFxuICogKi9cbkBEaXJlY3RpdmUoe1xuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3JcbiAgICBzZWxlY3RvcjogJ1tmZC1tZWdhLW1lbnUtc3ViaXRlbV0nXG59KVxuZXhwb3J0IGNsYXNzIE1lZ2FNZW51U3ViaXRlbURpcmVjdGl2ZSBpbXBsZW1lbnRzIERlZmF1bHRNZW51SXRlbSB7XG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmZkLW1lZ2EtbWVudV9fc3ViaXRlbScpXG4gICAgZmRNZWdhTWVudUNsYXNzOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgQENvbnRlbnRDaGlsZChNZWdhTWVudVN1YmxpbmtEaXJlY3RpdmUsIHsgc3RhdGljOiBmYWxzZSB9KVxuICAgIGxpbms6IE1lZ2FNZW51U3VibGlua0RpcmVjdGl2ZTtcblxuICAgIC8qKiAqL1xuICAgIEBPdXRwdXQoKVxuICAgIHJlYWRvbmx5IGtleURvd246IEV2ZW50RW1pdHRlcjxLZXlib2FyZEV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8S2V5Ym9hcmRFdmVudD4oKTtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgQEhvc3RMaXN0ZW5lcigna2V5ZG93bicsIFsnJGV2ZW50J10pXG4gICAgaGFuZGxlS2V5Ym9hcmRFdmVudChldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgICAgICB0aGlzLmtleURvd24uZW1pdChldmVudCk7XG4gICAgfVxuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBwdWJsaWMgZm9jdXMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMubGluay5mb2N1cygpO1xuICAgIH1cblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgcHVibGljIGNsaWNrKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmxpbmsuY2xpY2soKTtcbiAgICB9XG59XG4iXX0=