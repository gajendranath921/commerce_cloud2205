/**
 * @fileoverview added by tsickle
 * Generated from: lib/badge-label/label/label.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';
import { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';
/**
 * Label component, used to indicate status, without any background or border
 * Colors, generally in combination with text, are used to easily highlight the state of an object.
 */
var LabelComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LabelComponent, _super);
    /** @hidden */
    function LabelComponent(elementRef) {
        var _this = _super.call(this, elementRef) || this;
        _this.elementRef = elementRef;
        return _this;
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    LabelComponent.prototype._setProperties = /**
     * @hidden
     * @return {?}
     */
    function () {
        this._addClassToElement('fd-label');
        if (this.status) {
            this._addClassToElement('fd-label--' + this.status);
        }
    };
    LabelComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: '[fd-label]',
                    template: "<ng-content></ng-content>",
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: ["/*!\n * Fundamental Library Styles v0.4.1\n * Copyright (c) 2020 SAP SE or an SAP affiliate company.\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/master/LICENSE)\n *//*!\n.fd-label+(--success | --warning | --error)\n*/.fd-label{font-size:var(--sapFontSize,.875rem);color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0 8px;margin:0;border:0;font-size:14px;font-weight:400;color:#0a6ed1;color:var(--fd-color-action,#0a6ed1);line-height:24px;vertical-align:middle;display:inline-block}.fd-label:after,.fd-label:before{box-sizing:inherit;font-size:inherit}.fd-label--success{color:#0a7e3e;color:var(--fd-color-positive,#0a7e3e)}.fd-label--warning{color:#e9730c;color:var(--fd-color-alert,#e9730c)}.fd-label--error{color:#b00;color:var(--fd-color-negative,#b00)}"]
                }] }
    ];
    /** @nocollapse */
    LabelComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    LabelComponent.propDecorators = {
        status: [{ type: Input }]
    };
    return LabelComponent;
}(AbstractFdNgxClass));
export { LabelComponent };
if (false) {
    /**
     * Color coded status for the label. Options are 'success', 'warning', and 'error'. Leave empty for default label.
     * @type {?}
     */
    LabelComponent.prototype.status;
    /**
     * @type {?}
     * @private
     */
    LabelComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ1bmRhbWVudGFsLW5neC9jb3JlLyIsInNvdXJjZXMiOlsibGliL2JhZGdlLWxhYmVsL2xhYmVsL2xhYmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7Ozs7O0FBVXZFO0lBUW9DLDBDQUFrQjtJQVlsRCxjQUFjO0lBQ2Qsd0JBQW9CLFVBQXNCO1FBQTFDLFlBQ0ksa0JBQU0sVUFBVSxDQUFDLFNBQ3BCO1FBRm1CLGdCQUFVLEdBQVYsVUFBVSxDQUFZOztJQUUxQyxDQUFDO0lBWEQsY0FBYzs7Ozs7SUFDZCx1Q0FBYzs7OztJQUFkO1FBQ0ksSUFBSSxDQUFDLGtCQUFrQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3BDLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNiLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3ZEO0lBQ0wsQ0FBQzs7Z0JBbEJKLFNBQVMsU0FBQzs7b0JBRVAsUUFBUSxFQUFFLFlBQVk7b0JBQ3RCLFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUVyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7aUJBQ2xEOzs7O2dCQWxCNEMsVUFBVTs7O3lCQXFCbEQsS0FBSzs7SUFjVixxQkFBQztDQUFBLEFBeEJELENBUW9DLGtCQUFrQixHQWdCckQ7U0FoQlksY0FBYzs7Ozs7O0lBRXZCLGdDQUE2Qjs7Ozs7SUFXakIsb0NBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBYnN0cmFjdEZkTmd4Q2xhc3MgfSBmcm9tICcuLi8uLi91dGlscy9hYnN0cmFjdC1mZC1uZ3gtY2xhc3MnO1xuXG5leHBvcnQgdHlwZSBCYWRnZVN0YXR1cyA9ICdzdWNjZXNzJyB8ICd3YXJuaW5nJyB8ICdlcnJvcic7XG5leHBvcnQgdHlwZSBCYWRnZU1vZGlmaWVyID0gJ3BpbGwnIHwgJ2ZpbGxlZCc7XG5leHBvcnQgdHlwZSBCYWRnZUljb25TdGF0dXMgPSAnYXZhaWxhYmxlJyB8ICdhd2F5JyB8ICdidXN5JyB8ICdvZmZsaW5lJztcblxuLyoqXG4gKiBMYWJlbCBjb21wb25lbnQsIHVzZWQgdG8gaW5kaWNhdGUgc3RhdHVzLCB3aXRob3V0IGFueSBiYWNrZ3JvdW5kIG9yIGJvcmRlclxuICogQ29sb3JzLCBnZW5lcmFsbHkgaW4gY29tYmluYXRpb24gd2l0aCB0ZXh0LCBhcmUgdXNlZCB0byBlYXNpbHkgaGlnaGxpZ2h0IHRoZSBzdGF0ZSBvZiBhbiBvYmplY3QuXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgICBzZWxlY3RvcjogJ1tmZC1sYWJlbF0nLFxuICAgIHRlbXBsYXRlOiBgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PmAsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBzdHlsZVVybHM6IFsnLi9sYWJlbC5jb21wb25lbnQuc2NzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIExhYmVsQ29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3RGZE5neENsYXNzIHtcbiAgICAvKiogQ29sb3IgY29kZWQgc3RhdHVzIGZvciB0aGUgbGFiZWwuIE9wdGlvbnMgYXJlICdzdWNjZXNzJywgJ3dhcm5pbmcnLCBhbmQgJ2Vycm9yJy4gTGVhdmUgZW1wdHkgZm9yIGRlZmF1bHQgbGFiZWwuICovXG4gICAgQElucHV0KCkgc3RhdHVzOiBCYWRnZVN0YXR1cztcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgX3NldFByb3BlcnRpZXMoKSB7XG4gICAgICAgIHRoaXMuX2FkZENsYXNzVG9FbGVtZW50KCdmZC1sYWJlbCcpO1xuICAgICAgICBpZiAodGhpcy5zdGF0dXMpIHtcbiAgICAgICAgICAgIHRoaXMuX2FkZENsYXNzVG9FbGVtZW50KCdmZC1sYWJlbC0tJyArIHRoaXMuc3RhdHVzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XG4gICAgICAgIHN1cGVyKGVsZW1lbnRSZWYpO1xuICAgIH1cbn1cbiJdfQ==