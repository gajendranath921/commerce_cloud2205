/**
 * @fileoverview added by tsickle
 * Generated from: lib/localizator-editor/localization-editor-main/localization-editor-main.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Input, Component, ViewEncapsulation } from '@angular/core';
import { LocalizationEditorItemComponent } from '../localization-editor-item/localization-editor-item.component';
/**
 *  Component that represents the field which is always visible and is rendered outside the popover.
 *  ```html
 *  <fd-localization-editor-main [label]="'EN'">
 *       <input fd-localization-editor-input type="text" placeholder="EN">
 *  </fd-localization-editor-main>
 *  ```
 */
var LocalizationEditorMainComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LocalizationEditorMainComponent, _super);
    function LocalizationEditorMainComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Whether AddOn Button should be focusable, set to true by default
         */
        _this.buttonFocusable = true;
        return _this;
    }
    LocalizationEditorMainComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-localization-editor-main',
                    template: "<fd-input-group [compact]=\"compact\"\n                [state]=\"state\"\n                [inputTemplate]=\"input\">\n    <span fd-input-group-addon\n          [button]=\"true\"\n          [compact]=\"compact\"\n          [state]=\"state\"\n          [type]=\"type\">\n        <button class=\"fd-localization-editor__button\"\n                fd-button aria-haspopup=\"true\"\n                [attr.tabindex]=\"buttonFocusable ? 0 : -1\"\n                [options]=\"'light'\"\n                [compact]=\"compact\"\n                [attr.aria-expanded]=\"expanded\">\n            <ng-container *ngIf=\"labelTemplate\">\n                <ng-container [fd-localization-editor-load-label]=\"labelTemplate\"></ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"!labelTemplate\">\n                {{label}}\n            </ng-container>\n        </button>\n    </span>\n</fd-input-group>\n<ng-template #input>\n    <ng-content select=\"[fd-localization-editor-input]\"></ng-content>\n    <ng-content select=\"[fd-localization-editor-textarea]\"></ng-content>\n</ng-template>\n<ng-content></ng-content>\n",
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    LocalizationEditorMainComponent.propDecorators = {
        state: [{ type: Input }],
        buttonFocusable: [{ type: Input }]
    };
    return LocalizationEditorMainComponent;
}(LocalizationEditorItemComponent));
export { LocalizationEditorMainComponent };
if (false) {
    /**
     * @hidden
     * This variable is controlled by parent component
     *
     * @type {?}
     */
    LocalizationEditorMainComponent.prototype.expanded;
    /**
     *  The state of the form control - applies css classes.
     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.
     * @type {?}
     */
    LocalizationEditorMainComponent.prototype.state;
    /**
     * Whether AddOn Button should be focusable, set to true by default
     * @type {?}
     */
    LocalizationEditorMainComponent.prototype.buttonFocusable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxpemF0aW9uLWVkaXRvci1tYWluLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9sb2NhbGl6YXRvci1lZGl0b3IvbG9jYWxpemF0aW9uLWVkaXRvci1tYWluL2xvY2FsaXphdGlvbi1lZGl0b3ItbWFpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sZ0VBQWdFLENBQUM7Ozs7Ozs7OztBQVdqSDtJQU1xRCwyREFBK0I7SUFOcEY7UUFBQSxxRUEwQkM7Ozs7UUFERyxxQkFBZSxHQUFZLElBQUksQ0FBQzs7SUFDcEMsQ0FBQzs7Z0JBMUJBLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsNkJBQTZCO29CQUN2QyxpbkNBQXdEO29CQUN4RCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2xEOzs7d0JBYUksS0FBSztrQ0FNTCxLQUFLOztJQUVWLHNDQUFDO0NBQUEsQUExQkQsQ0FNcUQsK0JBQStCLEdBb0JuRjtTQXBCWSwrQkFBK0I7Ozs7Ozs7O0lBTXhDLG1EQUFrQjs7Ozs7O0lBTWxCLGdEQUNrQjs7Ozs7SUFLbEIsMERBQ2dDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0LCBDb21wb25lbnQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25FZGl0b3JJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi4vbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtL2xvY2FsaXphdGlvbi1lZGl0b3ItaXRlbS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRm9ybVN0YXRlcyB9IGZyb20gJy4uLy4uL2Zvcm0vZm9ybS1jb250cm9sL2Zvcm0tc3RhdGVzJztcblxuLyoqXG4gKiAgQ29tcG9uZW50IHRoYXQgcmVwcmVzZW50cyB0aGUgZmllbGQgd2hpY2ggaXMgYWx3YXlzIHZpc2libGUgYW5kIGlzIHJlbmRlcmVkIG91dHNpZGUgdGhlIHBvcG92ZXIuXG4gKiAgYGBgaHRtbFxuICogIDxmZC1sb2NhbGl6YXRpb24tZWRpdG9yLW1haW4gW2xhYmVsXT1cIidFTidcIj5cbiAqICAgICAgIDxpbnB1dCBmZC1sb2NhbGl6YXRpb24tZWRpdG9yLWlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJFTlwiPlxuICogIDwvZmQtbG9jYWxpemF0aW9uLWVkaXRvci1tYWluPlxuICogIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLWxvY2FsaXphdGlvbi1lZGl0b3ItbWFpbicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xvY2FsaXphdGlvbi1lZGl0b3ItbWFpbi5jb21wb25lbnQuaHRtbCcsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBMb2NhbGl6YXRpb25FZGl0b3JNYWluQ29tcG9uZW50IGV4dGVuZHMgTG9jYWxpemF0aW9uRWRpdG9ySXRlbUNvbXBvbmVudCB7XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogVGhpcyB2YXJpYWJsZSBpcyBjb250cm9sbGVkIGJ5IHBhcmVudCBjb21wb25lbnRcbiAgICAgKiAqL1xuICAgIGV4cGFuZGVkOiBib29sZWFuO1xuXG4gICAgLyoqXG4gICAgICogIFRoZSBzdGF0ZSBvZiB0aGUgZm9ybSBjb250cm9sIC0gYXBwbGllcyBjc3MgY2xhc3Nlcy5cbiAgICAgKiAgQ2FuIGJlIGB2YWxpZGAsIGBpbnZhbGlkYCwgYHdhcm5pbmdgLCBgaW5mb3JtYXRpb25gIG9yIGJsYW5rIGZvciBkZWZhdWx0LlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgc3RhdGU6IEZvcm1TdGF0ZXM7XG5cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIEFkZE9uIEJ1dHRvbiBzaG91bGQgYmUgZm9jdXNhYmxlLCBzZXQgdG8gdHJ1ZSBieSBkZWZhdWx0XG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBidXR0b25Gb2N1c2FibGU6IGJvb2xlYW4gPSB0cnVlO1xufVxuIl19