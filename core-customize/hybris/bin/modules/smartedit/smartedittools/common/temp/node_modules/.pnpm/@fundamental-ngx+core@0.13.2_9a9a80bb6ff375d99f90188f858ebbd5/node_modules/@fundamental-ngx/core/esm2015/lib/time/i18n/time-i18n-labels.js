/**
 * @fileoverview added by tsickle
 * Generated from: lib/time/i18n/time-i18n-labels.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Provides i18n support for labels inside the time component.
 */
export class TimeI18nLabels {
    constructor() {
        /**
         * Aria label for the 'increase hours' button
         */
        this.increaseHoursLabel = 'Increase hours';
        /**
         * Aria label for the 'hours' input
         */
        this.hoursLabel = 'Hours';
        /**
         * Aria label for the 'decrease hours' button
         */
        this.decreaseHoursLabel = 'Decrease hours';
        /**
         * Aria label for the 'increase minutes' button
         */
        this.increaseMinutesLabel = 'Increase minutes';
        /**
         * Aria label for the 'minutes' input
         */
        this.minutesLabel = 'Minutes';
        /**
         * Aria label for the 'decrease minutes' button
         */
        this.decreaseMinutesLabel = 'Decrease minutes';
        /**
         * Aria label for the 'increase seconds' button
         */
        this.increaseSecondsLabel = 'Increase seconds';
        /**
         * Aria label for the 'seconds' input
         */
        this.secondsLabel = 'Seconds';
        /**
         * Aria label for the 'decrease seconds' button
         */
        this.decreaseSecondsLabel = 'Decrease seconds';
        /**
         * Aria label for the 'increase period' button
         */
        this.increasePeriodLabel = 'Increase period';
        /**
         * Aria label for the 'period' input
         */
        this.periodLabel = 'Period';
        /**
         * Aria label for the 'decrease period' button
         */
        this.decreasePeriodLabel = 'Decrease period';
    }
}
TimeI18nLabels.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
/** @nocollapse */ TimeI18nLabels.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function TimeI18nLabels_Factory() { return new TimeI18nLabels(); }, token: TimeI18nLabels, providedIn: "root" });
if (false) {
    /**
     * Aria label for the 'increase hours' button
     * @type {?}
     */
    TimeI18nLabels.prototype.increaseHoursLabel;
    /**
     * Aria label for the 'hours' input
     * @type {?}
     */
    TimeI18nLabels.prototype.hoursLabel;
    /**
     * Aria label for the 'decrease hours' button
     * @type {?}
     */
    TimeI18nLabels.prototype.decreaseHoursLabel;
    /**
     * Aria label for the 'increase minutes' button
     * @type {?}
     */
    TimeI18nLabels.prototype.increaseMinutesLabel;
    /**
     * Aria label for the 'minutes' input
     * @type {?}
     */
    TimeI18nLabels.prototype.minutesLabel;
    /**
     * Aria label for the 'decrease minutes' button
     * @type {?}
     */
    TimeI18nLabels.prototype.decreaseMinutesLabel;
    /**
     * Aria label for the 'increase seconds' button
     * @type {?}
     */
    TimeI18nLabels.prototype.increaseSecondsLabel;
    /**
     * Aria label for the 'seconds' input
     * @type {?}
     */
    TimeI18nLabels.prototype.secondsLabel;
    /**
     * Aria label for the 'decrease seconds' button
     * @type {?}
     */
    TimeI18nLabels.prototype.decreaseSecondsLabel;
    /**
     * Aria label for the 'increase period' button
     * @type {?}
     */
    TimeI18nLabels.prototype.increasePeriodLabel;
    /**
     * Aria label for the 'period' input
     * @type {?}
     */
    TimeI18nLabels.prototype.periodLabel;
    /**
     * Aria label for the 'decrease period' button
     * @type {?}
     */
    TimeI18nLabels.prototype.decreasePeriodLabel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1pMThuLWxhYmVscy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi90aW1lL2kxOG4vdGltZS1pMThuLWxhYmVscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7O0FBTTNDLE1BQU0sT0FBTyxjQUFjO0lBRDNCOzs7O1FBSUksdUJBQWtCLEdBQVcsZ0JBQWdCLENBQUM7Ozs7UUFHOUMsZUFBVSxHQUFXLE9BQU8sQ0FBQzs7OztRQUc3Qix1QkFBa0IsR0FBVyxnQkFBZ0IsQ0FBQzs7OztRQUc5Qyx5QkFBb0IsR0FBVyxrQkFBa0IsQ0FBQzs7OztRQUdsRCxpQkFBWSxHQUFXLFNBQVMsQ0FBQzs7OztRQUdqQyx5QkFBb0IsR0FBVyxrQkFBa0IsQ0FBQzs7OztRQUdsRCx5QkFBb0IsR0FBVyxrQkFBa0IsQ0FBQzs7OztRQUdsRCxpQkFBWSxHQUFXLFNBQVMsQ0FBQzs7OztRQUdqQyx5QkFBb0IsR0FBVyxrQkFBa0IsQ0FBQzs7OztRQUdsRCx3QkFBbUIsR0FBVyxpQkFBaUIsQ0FBQzs7OztRQUdoRCxnQkFBVyxHQUFXLFFBQVEsQ0FBQzs7OztRQUcvQix3QkFBbUIsR0FBVyxpQkFBaUIsQ0FBQztLQUVuRDs7O1lBdkNBLFVBQVUsU0FBQyxFQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUM7Ozs7Ozs7O0lBSTVCLDRDQUE4Qzs7Ozs7SUFHOUMsb0NBQTZCOzs7OztJQUc3Qiw0Q0FBOEM7Ozs7O0lBRzlDLDhDQUFrRDs7Ozs7SUFHbEQsc0NBQWlDOzs7OztJQUdqQyw4Q0FBa0Q7Ozs7O0lBR2xELDhDQUFrRDs7Ozs7SUFHbEQsc0NBQWlDOzs7OztJQUdqQyw4Q0FBa0Q7Ozs7O0lBR2xELDZDQUFnRDs7Ozs7SUFHaEQscUNBQStCOzs7OztJQUcvQiw2Q0FBZ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogUHJvdmlkZXMgaTE4biBzdXBwb3J0IGZvciBsYWJlbHMgaW5zaWRlIHRoZSB0aW1lIGNvbXBvbmVudC5cbiAqL1xuQEluamVjdGFibGUoe3Byb3ZpZGVkSW46ICdyb290J30pXG5leHBvcnQgY2xhc3MgVGltZUkxOG5MYWJlbHMge1xuXG4gICAgLyoqIEFyaWEgbGFiZWwgZm9yIHRoZSAnaW5jcmVhc2UgaG91cnMnIGJ1dHRvbiAqL1xuICAgIGluY3JlYXNlSG91cnNMYWJlbDogc3RyaW5nID0gJ0luY3JlYXNlIGhvdXJzJztcblxuICAgIC8qKiBBcmlhIGxhYmVsIGZvciB0aGUgJ2hvdXJzJyBpbnB1dCAqL1xuICAgIGhvdXJzTGFiZWw6IHN0cmluZyA9ICdIb3Vycyc7XG5cbiAgICAvKiogQXJpYSBsYWJlbCBmb3IgdGhlICdkZWNyZWFzZSBob3VycycgYnV0dG9uICovXG4gICAgZGVjcmVhc2VIb3Vyc0xhYmVsOiBzdHJpbmcgPSAnRGVjcmVhc2UgaG91cnMnO1xuXG4gICAgLyoqIEFyaWEgbGFiZWwgZm9yIHRoZSAnaW5jcmVhc2UgbWludXRlcycgYnV0dG9uICovXG4gICAgaW5jcmVhc2VNaW51dGVzTGFiZWw6IHN0cmluZyA9ICdJbmNyZWFzZSBtaW51dGVzJztcblxuICAgIC8qKiBBcmlhIGxhYmVsIGZvciB0aGUgJ21pbnV0ZXMnIGlucHV0ICovXG4gICAgbWludXRlc0xhYmVsOiBzdHJpbmcgPSAnTWludXRlcyc7XG5cbiAgICAvKiogQXJpYSBsYWJlbCBmb3IgdGhlICdkZWNyZWFzZSBtaW51dGVzJyBidXR0b24gKi9cbiAgICBkZWNyZWFzZU1pbnV0ZXNMYWJlbDogc3RyaW5nID0gJ0RlY3JlYXNlIG1pbnV0ZXMnO1xuXG4gICAgLyoqIEFyaWEgbGFiZWwgZm9yIHRoZSAnaW5jcmVhc2Ugc2Vjb25kcycgYnV0dG9uICovXG4gICAgaW5jcmVhc2VTZWNvbmRzTGFiZWw6IHN0cmluZyA9ICdJbmNyZWFzZSBzZWNvbmRzJztcblxuICAgIC8qKiBBcmlhIGxhYmVsIGZvciB0aGUgJ3NlY29uZHMnIGlucHV0ICovXG4gICAgc2Vjb25kc0xhYmVsOiBzdHJpbmcgPSAnU2Vjb25kcyc7XG5cbiAgICAvKiogQXJpYSBsYWJlbCBmb3IgdGhlICdkZWNyZWFzZSBzZWNvbmRzJyBidXR0b24gKi9cbiAgICBkZWNyZWFzZVNlY29uZHNMYWJlbDogc3RyaW5nID0gJ0RlY3JlYXNlIHNlY29uZHMnO1xuXG4gICAgLyoqIEFyaWEgbGFiZWwgZm9yIHRoZSAnaW5jcmVhc2UgcGVyaW9kJyBidXR0b24gKi9cbiAgICBpbmNyZWFzZVBlcmlvZExhYmVsOiBzdHJpbmcgPSAnSW5jcmVhc2UgcGVyaW9kJztcblxuICAgIC8qKiBBcmlhIGxhYmVsIGZvciB0aGUgJ3BlcmlvZCcgaW5wdXQgKi9cbiAgICBwZXJpb2RMYWJlbDogc3RyaW5nID0gJ1BlcmlvZCc7XG5cbiAgICAvKiogQXJpYSBsYWJlbCBmb3IgdGhlICdkZWNyZWFzZSBwZXJpb2QnIGJ1dHRvbiAqL1xuICAgIGRlY3JlYXNlUGVyaW9kTGFiZWw6IHN0cmluZyA9ICdEZWNyZWFzZSBwZXJpb2QnO1xuXG59XG4iXX0=