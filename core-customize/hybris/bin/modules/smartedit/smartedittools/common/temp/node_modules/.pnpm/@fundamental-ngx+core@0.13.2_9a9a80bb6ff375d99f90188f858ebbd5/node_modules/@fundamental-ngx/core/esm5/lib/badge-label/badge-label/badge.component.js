/**
 * @fileoverview added by tsickle
 * Generated from: lib/badge-label/badge-label/badge.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, ViewEncapsulation } from '@angular/core';
import { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';
/**
 * Badge component, used to indicate status.
 * Colors, generally in combination with text, are used to easily highlight the state of an object.
 */
var BadgeComponent = /** @class */ (function (_super) {
    tslib_1.__extends(BadgeComponent, _super);
    /** @hidden */
    function BadgeComponent(elementRef) {
        var _this = _super.call(this, elementRef) || this;
        _this.elementRef = elementRef;
        /**
         * @hidden
         */
        _this.fdBadgeClass = true;
        return _this;
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    BadgeComponent.prototype._setProperties = /**
     * @hidden
     * @return {?}
     */
    function () {
        if (this.status) {
            this._addClassToElement('fd-badge--' + this.status);
        }
        if (this.modifier) {
            this._addClassToElement('fd-badge--' + this.modifier);
        }
    };
    BadgeComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: '[fd-badge]',
                    template: "<ng-content></ng-content>",
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: ["/*!\n * Fundamental Library Styles v0.4.1\n * Copyright (c) 2020 SAP SE or an SAP affiliate company.\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/master/LICENSE)\n *//*!\n.fd-badge+(( --success | --warning | --error ), (--pill | --filled))\n*/.fd-badge{font-size:var(--sapFontSize,.875rem);color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:1px 8px;margin:0;border:1px solid #0a6ed1;font-size:12px;font-weight:400;border-color:var(--fd-color-action,#0a6ed1);background-color:#f5faff;background-color:var(--fd-color-background-6,#f5faff);line-height:16px;vertical-align:middle;display:inline-block;border-radius:4px}.fd-badge:after,.fd-badge:before{box-sizing:inherit;font-size:inherit}.fd-badge--pill{border-radius:12px}.fd-badge--filled{font-weight:700;color:#fff;color:var(--fd-color-text-5,#fff);background-color:#0a6ed1;background-color:var(--fd-color-action,#0a6ed1);border:none}.fd-badge--filled.fd-badge--success{background-color:#0a7e3e;background-color:var(--fd-color-positive,#0a7e3e)}.fd-badge--filled.fd-badge--warning{background-color:#e9730c;background-color:var(--fd-color-alert,#e9730c)}.fd-badge--filled.fd-badge--error{background-color:#b00;background-color:var(--fd-color-negative,#b00)}.fd-badge--success{background-color:#f1fdf6;background-color:var(--fd-color-background-3,#f1fdf6);border-color:#0a7e3e;border-color:var(--fd-color-positive,#0a7e3e)}.fd-badge--warning{background-color:#fef7f1;background-color:var(--fd-color-background-4,#fef7f1);border-color:#e9730c;border-color:var(--fd-color-alert,#e9730c)}.fd-badge--error{background-color:#ffebeb;background-color:var(--fd-color-background-5,#ffebeb);border-color:#b00;border-color:var(--fd-color-negative,#b00)}"]
                }] }
    ];
    /** @nocollapse */
    BadgeComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    BadgeComponent.propDecorators = {
        status: [{ type: Input }],
        modifier: [{ type: Input }],
        fdBadgeClass: [{ type: HostBinding, args: ['class.fd-badge',] }]
    };
    return BadgeComponent;
}(AbstractFdNgxClass));
export { BadgeComponent };
if (false) {
    /**
     * Color coded status for the badge. Options are 'success', 'warning', and 'error'. Leave empty for default badge.
     * @type {?}
     */
    BadgeComponent.prototype.status;
    /**
     * Modifier for the badge. Options are 'pill' and 'filled'. Leave empty for normal.
     * @type {?}
     */
    BadgeComponent.prototype.modifier;
    /**
     * @hidden
     * @type {?}
     */
    BadgeComponent.prototype.fdBadgeClass;
    /**
     * @type {?}
     * @private
     */
    BadgeComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ1bmRhbWVudGFsLW5neC9jb3JlLyIsInNvdXJjZXMiOlsibGliL2JhZGdlLWxhYmVsL2JhZGdlLWxhYmVsL2JhZGdlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RILE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDOzs7OztBQU92RTtJQVFvQywwQ0FBa0I7SUFxQmxELGNBQWM7SUFDZCx3QkFBb0IsVUFBc0I7UUFBMUMsWUFDSSxrQkFBTSxVQUFVLENBQUMsU0FDcEI7UUFGbUIsZ0JBQVUsR0FBVixVQUFVLENBQVk7Ozs7UUFiMUMsa0JBQVksR0FBWSxJQUFJLENBQUM7O0lBZTdCLENBQUM7SUFiRCxjQUFjOzs7OztJQUNkLHVDQUFjOzs7O0lBQWQ7UUFDSSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDYixJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUN2RDtRQUNELElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3pEO0lBQ0wsQ0FBQzs7Z0JBM0JKLFNBQVMsU0FBQzs7b0JBRVAsUUFBUSxFQUFFLFlBQVk7b0JBQ3RCLFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUVyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7aUJBQ2xEOzs7O2dCQWY0QyxVQUFVOzs7eUJBa0JsRCxLQUFLOzJCQUdMLEtBQUs7K0JBR0wsV0FBVyxTQUFDLGdCQUFnQjs7SUFpQmpDLHFCQUFDO0NBQUEsQUFqQ0QsQ0FRb0Msa0JBQWtCLEdBeUJyRDtTQXpCWSxjQUFjOzs7Ozs7SUFFdkIsZ0NBQTZCOzs7OztJQUc3QixrQ0FBaUM7Ozs7O0lBR2pDLHNDQUM2Qjs7Ozs7SUFhakIsb0NBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSG9zdEJpbmRpbmcsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWJzdHJhY3RGZE5neENsYXNzIH0gZnJvbSAnLi4vLi4vdXRpbHMvYWJzdHJhY3QtZmQtbmd4LWNsYXNzJztcbmltcG9ydCB7IEJhZGdlU3RhdHVzLCBCYWRnZU1vZGlmaWVyIH0gZnJvbSAnLi4vbGFiZWwvbGFiZWwuY29tcG9uZW50JztcblxuLyoqXG4gKiBCYWRnZSBjb21wb25lbnQsIHVzZWQgdG8gaW5kaWNhdGUgc3RhdHVzLlxuICogQ29sb3JzLCBnZW5lcmFsbHkgaW4gY29tYmluYXRpb24gd2l0aCB0ZXh0LCBhcmUgdXNlZCB0byBlYXNpbHkgaGlnaGxpZ2h0IHRoZSBzdGF0ZSBvZiBhbiBvYmplY3QuXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgICBzZWxlY3RvcjogJ1tmZC1iYWRnZV0nLFxuICAgIHRlbXBsYXRlOiBgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PmAsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBzdHlsZVVybHM6IFsnLi9iYWRnZS1sYWJlbC5jb21wb25lbnQuc2NzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIEJhZGdlQ29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3RGZE5neENsYXNzIHtcbiAgICAvKiogQ29sb3IgY29kZWQgc3RhdHVzIGZvciB0aGUgYmFkZ2UuIE9wdGlvbnMgYXJlICdzdWNjZXNzJywgJ3dhcm5pbmcnLCBhbmQgJ2Vycm9yJy4gTGVhdmUgZW1wdHkgZm9yIGRlZmF1bHQgYmFkZ2UuICovXG4gICAgQElucHV0KCkgc3RhdHVzOiBCYWRnZVN0YXR1cztcblxuICAgIC8qKiBNb2RpZmllciBmb3IgdGhlIGJhZGdlLiBPcHRpb25zIGFyZSAncGlsbCcgYW5kICdmaWxsZWQnLiBMZWF2ZSBlbXB0eSBmb3Igbm9ybWFsLiAqL1xuICAgIEBJbnB1dCgpIG1vZGlmaWVyOiBCYWRnZU1vZGlmaWVyO1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmZkLWJhZGdlJylcbiAgICBmZEJhZGdlQ2xhc3M6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBfc2V0UHJvcGVydGllcygpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RhdHVzKSB7XG4gICAgICAgICAgICB0aGlzLl9hZGRDbGFzc1RvRWxlbWVudCgnZmQtYmFkZ2UtLScgKyB0aGlzLnN0YXR1cyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMubW9kaWZpZXIpIHtcbiAgICAgICAgICAgIHRoaXMuX2FkZENsYXNzVG9FbGVtZW50KCdmZC1iYWRnZS0tJyArIHRoaXMubW9kaWZpZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICAgICAgc3VwZXIoZWxlbWVudFJlZik7XG4gICAgfVxufVxuIl19