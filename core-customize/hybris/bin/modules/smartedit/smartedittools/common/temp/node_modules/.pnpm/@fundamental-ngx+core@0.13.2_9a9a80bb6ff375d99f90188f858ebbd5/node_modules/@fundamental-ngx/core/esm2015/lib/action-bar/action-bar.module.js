/**
 * @fileoverview added by tsickle
 * Generated from: lib/action-bar/action-bar.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ButtonModule } from '../button/button.module';
import { IconModule } from '../icon/icon.module';
import { ActionBarComponent } from './action-bar.component';
import { ActionBarTitleDirective } from './action-bar-title/action-bar-title.directive';
import { ActionBarDescriptionDirective } from './action-bar-description/action-bar-description.directive';
import { ActionBarHeaderDirective } from './action-bar-header/action-bar-header.directive';
import { ActionBarActionsDirective } from './action-bar-actions/action-bar-actions.directive';
import { ActionBarBackDirective } from './action-bar-back/action-bar-back.directive';
import { ActionBarMobileDirective } from './action-bar-mobile/action-bar-mobile.directive';
export class ActionBarModule {
}
ActionBarModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    ActionBarComponent,
                    ActionBarTitleDirective,
                    ActionBarDescriptionDirective,
                    ActionBarHeaderDirective,
                    ActionBarActionsDirective,
                    ActionBarBackDirective,
                    ActionBarMobileDirective
                ],
                imports: [CommonModule, ButtonModule, IconModule],
                exports: [
                    ActionBarComponent,
                    ActionBarTitleDirective,
                    ActionBarDescriptionDirective,
                    ActionBarHeaderDirective,
                    ActionBarActionsDirective,
                    ActionBarBackDirective,
                    ActionBarMobileDirective
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLWJhci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvYWN0aW9uLWJhci9hY3Rpb24tYmFyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFakQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDeEYsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sMkRBQTJELENBQUM7QUFDMUcsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDM0YsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFDOUYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDckYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0saURBQWlELENBQUM7QUF1QjNGLE1BQU0sT0FBTyxlQUFlOzs7WUFyQjNCLFFBQVEsU0FBQztnQkFDTixZQUFZLEVBQUU7b0JBQ1Ysa0JBQWtCO29CQUNsQix1QkFBdUI7b0JBQ3ZCLDZCQUE2QjtvQkFDN0Isd0JBQXdCO29CQUN4Qix5QkFBeUI7b0JBQ3pCLHNCQUFzQjtvQkFDdEIsd0JBQXdCO2lCQUMzQjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsWUFBWSxFQUFFLFVBQVUsQ0FBQztnQkFDakQsT0FBTyxFQUFFO29CQUNMLGtCQUFrQjtvQkFDbEIsdUJBQXVCO29CQUN2Qiw2QkFBNkI7b0JBQzdCLHdCQUF3QjtvQkFDeEIseUJBQXlCO29CQUN6QixzQkFBc0I7b0JBQ3RCLHdCQUF3QjtpQkFDM0I7YUFDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQnV0dG9uTW9kdWxlIH0gZnJvbSAnLi4vYnV0dG9uL2J1dHRvbi5tb2R1bGUnO1xuaW1wb3J0IHsgSWNvbk1vZHVsZSB9IGZyb20gJy4uL2ljb24vaWNvbi5tb2R1bGUnO1xuXG5pbXBvcnQgeyBBY3Rpb25CYXJDb21wb25lbnQgfSBmcm9tICcuL2FjdGlvbi1iYXIuY29tcG9uZW50JztcbmltcG9ydCB7IEFjdGlvbkJhclRpdGxlRGlyZWN0aXZlIH0gZnJvbSAnLi9hY3Rpb24tYmFyLXRpdGxlL2FjdGlvbi1iYXItdGl0bGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IEFjdGlvbkJhckRlc2NyaXB0aW9uRGlyZWN0aXZlIH0gZnJvbSAnLi9hY3Rpb24tYmFyLWRlc2NyaXB0aW9uL2FjdGlvbi1iYXItZGVzY3JpcHRpb24uZGlyZWN0aXZlJztcbmltcG9ydCB7IEFjdGlvbkJhckhlYWRlckRpcmVjdGl2ZSB9IGZyb20gJy4vYWN0aW9uLWJhci1oZWFkZXIvYWN0aW9uLWJhci1oZWFkZXIuZGlyZWN0aXZlJztcbmltcG9ydCB7IEFjdGlvbkJhckFjdGlvbnNEaXJlY3RpdmUgfSBmcm9tICcuL2FjdGlvbi1iYXItYWN0aW9ucy9hY3Rpb24tYmFyLWFjdGlvbnMuZGlyZWN0aXZlJztcbmltcG9ydCB7IEFjdGlvbkJhckJhY2tEaXJlY3RpdmUgfSBmcm9tICcuL2FjdGlvbi1iYXItYmFjay9hY3Rpb24tYmFyLWJhY2suZGlyZWN0aXZlJztcbmltcG9ydCB7IEFjdGlvbkJhck1vYmlsZURpcmVjdGl2ZSB9IGZyb20gJy4vYWN0aW9uLWJhci1tb2JpbGUvYWN0aW9uLWJhci1tb2JpbGUuZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgQWN0aW9uQmFyQ29tcG9uZW50LFxuICAgICAgICBBY3Rpb25CYXJUaXRsZURpcmVjdGl2ZSxcbiAgICAgICAgQWN0aW9uQmFyRGVzY3JpcHRpb25EaXJlY3RpdmUsXG4gICAgICAgIEFjdGlvbkJhckhlYWRlckRpcmVjdGl2ZSxcbiAgICAgICAgQWN0aW9uQmFyQWN0aW9uc0RpcmVjdGl2ZSxcbiAgICAgICAgQWN0aW9uQmFyQmFja0RpcmVjdGl2ZSxcbiAgICAgICAgQWN0aW9uQmFyTW9iaWxlRGlyZWN0aXZlXG4gICAgXSxcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBCdXR0b25Nb2R1bGUsIEljb25Nb2R1bGVdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgQWN0aW9uQmFyQ29tcG9uZW50LFxuICAgICAgICBBY3Rpb25CYXJUaXRsZURpcmVjdGl2ZSxcbiAgICAgICAgQWN0aW9uQmFyRGVzY3JpcHRpb25EaXJlY3RpdmUsXG4gICAgICAgIEFjdGlvbkJhckhlYWRlckRpcmVjdGl2ZSxcbiAgICAgICAgQWN0aW9uQmFyQWN0aW9uc0RpcmVjdGl2ZSxcbiAgICAgICAgQWN0aW9uQmFyQmFja0RpcmVjdGl2ZSxcbiAgICAgICAgQWN0aW9uQmFyTW9iaWxlRGlyZWN0aXZlXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBBY3Rpb25CYXJNb2R1bGUge31cbiJdfQ==