{"version":3,"file":"MinimalRushConfiguration.js","sourceRoot":"","sources":["../src/MinimalRushConfiguration.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAE7B,oEAAwD;AACxD,kDAAwD;AACxD,+EAA4E;AAC5E,2EAAwE;AAOxE;;;GAGG;AACH,MAAa,wBAAwB;IAInC,YAAoB,4BAA2D,EAAE,gBAAwB;QACvG,IAAI,CAAC,YAAY;YACf,4BAA4B,CAAC,WAAW,IAAI,4BAA4B,CAAC,kBAAkB,CAAC;QAC9F,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CACtC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAC9B,6BAAa,CAAC,gBAAgB,EAC9B,QAAQ,EACR,MAAM,CACP,CAAC;IACJ,CAAC;IAEM,MAAM,CAAC,uBAAuB;QACnC,MAAM,gBAAgB,GAAuB,4BAAiB,CAAC,uBAAuB,CAAC;YACrF,WAAW,EAAE,CAAC,qBAAS,CAAC,2BAA2B,EAAE;SACtD,CAAC,CAAC;QACH,IAAI,gBAAgB,EAAE;YACpB,OAAO,wBAAwB,CAAC,0BAA0B,CAAC,gBAAgB,CAAC,CAAC;SAC9E;aAAM;YACL,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;IAEO,MAAM,CAAC,0BAA0B,CAAC,gBAAwB;QAChE,IAAI;YACF,MAAM,4BAA4B,GAAkC,4BAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACpG,OAAO,IAAI,wBAAwB,CAAC,4BAA4B,EAAE,gBAAgB,CAAC,CAAC;SACrF;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;IAED;;;;OAIG;IACH,IAAW,WAAW;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED;;;;;;;OAOG;IACH,IAAW,sBAAsB;QAC/B,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACtC,CAAC;CACF;AAvDD,4DAuDC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\n\nimport { JsonFile } from '@rushstack/node-core-library';\nimport { RushConfiguration } from '@microsoft/rush-lib';\nimport { RushConstants } from '@microsoft/rush-lib/lib/logic/RushConstants';\nimport { Utilities } from '@microsoft/rush-lib/lib/utilities/Utilities';\n\ninterface IMinimalRushConfigurationJson {\n  rushMinimumVersion: string;\n  rushVersion?: string;\n}\n\n/**\n * Represents a minimal subset of the rush.json configuration file. It provides the information necessary to\n * decide which version of Rush should be installed/used.\n */\nexport class MinimalRushConfiguration {\n  private _rushVersion: string;\n  private _commonRushConfigFolder: string;\n\n  private constructor(minimalRushConfigurationJson: IMinimalRushConfigurationJson, rushJsonFilename: string) {\n    this._rushVersion =\n      minimalRushConfigurationJson.rushVersion || minimalRushConfigurationJson.rushMinimumVersion;\n    this._commonRushConfigFolder = path.join(\n      path.dirname(rushJsonFilename),\n      RushConstants.commonFolderName,\n      'config',\n      'rush'\n    );\n  }\n\n  public static loadFromDefaultLocation(): MinimalRushConfiguration | undefined {\n    const rushJsonLocation: string | undefined = RushConfiguration.tryFindRushJsonLocation({\n      showVerbose: !Utilities.shouldRestrictConsoleOutput()\n    });\n    if (rushJsonLocation) {\n      return MinimalRushConfiguration._loadFromConfigurationFile(rushJsonLocation);\n    } else {\n      return undefined;\n    }\n  }\n\n  private static _loadFromConfigurationFile(rushJsonFilename: string): MinimalRushConfiguration | undefined {\n    try {\n      const minimalRushConfigurationJson: IMinimalRushConfigurationJson = JsonFile.load(rushJsonFilename);\n      return new MinimalRushConfiguration(minimalRushConfigurationJson, rushJsonFilename);\n    } catch (e) {\n      return undefined;\n    }\n  }\n\n  /**\n   * The version of rush specified by the rushVersion property of the rush.json configuration file. If the\n   *  rushVersion property is not specified, this falls back to the rushMinimumVersion property. This should be\n   *  a semver style version number like \"4.0.0\"\n   */\n  public get rushVersion(): string {\n    return this._rushVersion;\n  }\n\n  /**\n   * The folder where Rush's additional config files are stored.  This folder is always a\n   * subfolder called \"config\\rush\" inside the common folder.  (The \"common\\config\" folder\n   * is reserved for configuration files used by other tools.)  To avoid confusion or mistakes,\n   * Rush will report an error if this this folder contains any unrecognized files.\n   *\n   * Example: \"C:\\MyRepo\\common\\config\\rush\"\n   */\n  public get commonRushConfigFolder(): string {\n    return this._commonRushConfigFolder;\n  }\n}\n"]}