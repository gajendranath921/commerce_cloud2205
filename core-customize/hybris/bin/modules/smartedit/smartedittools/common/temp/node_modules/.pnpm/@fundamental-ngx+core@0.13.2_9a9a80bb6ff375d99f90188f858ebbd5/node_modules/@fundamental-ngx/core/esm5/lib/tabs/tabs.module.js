/**
 * @fileoverview added by tsickle
 * Generated from: lib/tabs/tabs.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TabPanelComponent } from './tab/tab-panel.component';
import { TabListComponent } from './tab-list.component';
import { TabLoadTitleDirective, TabTitleDirective } from './tab-utils/tab-directives';
import { TabNavComponent } from './tab-nav/tab-nav.component';
import { TabLinkDirective } from './tab-link/tab-link.directive';
import { TabItemDirective } from './tab-item/tab-item.directive';
var TabsModule = /** @class */ (function () {
    function TabsModule() {
    }
    TabsModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        TabListComponent,
                        TabPanelComponent,
                        TabTitleDirective,
                        TabLoadTitleDirective,
                        TabNavComponent,
                        TabLinkDirective,
                        TabItemDirective
                    ],
                    imports: [
                        CommonModule
                    ],
                    exports: [
                        TabListComponent,
                        TabPanelComponent,
                        TabTitleDirective,
                        TabLoadTitleDirective,
                        TabNavComponent,
                        TabItemDirective,
                        TabLinkDirective
                    ]
                },] }
    ];
    return TabsModule;
}());
export { TabsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvdGFicy90YWJzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzlELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXhELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3RGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNqRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUVqRTtJQUFBO0lBdUJ5QixDQUFDOztnQkF2QnpCLFFBQVEsU0FBQztvQkFDTixZQUFZLEVBQUU7d0JBQ1YsZ0JBQWdCO3dCQUNoQixpQkFBaUI7d0JBQ2pCLGlCQUFpQjt3QkFDakIscUJBQXFCO3dCQUNyQixlQUFlO3dCQUNmLGdCQUFnQjt3QkFDaEIsZ0JBQWdCO3FCQUNuQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ0wsWUFBWTtxQkFDZjtvQkFDRCxPQUFPLEVBQUU7d0JBQ0wsZ0JBQWdCO3dCQUNoQixpQkFBaUI7d0JBQ2pCLGlCQUFpQjt3QkFDakIscUJBQXFCO3dCQUNyQixlQUFlO3dCQUNmLGdCQUFnQjt3QkFDaEIsZ0JBQWdCO3FCQUNuQjtpQkFDSjs7SUFDd0IsaUJBQUM7Q0FBQSxBQXZCMUIsSUF1QjBCO1NBQWIsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBUYWJQYW5lbENvbXBvbmVudCB9IGZyb20gJy4vdGFiL3RhYi1wYW5lbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGFiTGlzdENvbXBvbmVudCB9IGZyb20gJy4vdGFiLWxpc3QuY29tcG9uZW50JztcblxuaW1wb3J0IHsgVGFiTG9hZFRpdGxlRGlyZWN0aXZlLCBUYWJUaXRsZURpcmVjdGl2ZSB9IGZyb20gJy4vdGFiLXV0aWxzL3RhYi1kaXJlY3RpdmVzJztcbmltcG9ydCB7IFRhYk5hdkNvbXBvbmVudCB9IGZyb20gJy4vdGFiLW5hdi90YWItbmF2LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUYWJMaW5rRGlyZWN0aXZlIH0gZnJvbSAnLi90YWItbGluay90YWItbGluay5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGFiSXRlbURpcmVjdGl2ZSB9IGZyb20gJy4vdGFiLWl0ZW0vdGFiLWl0ZW0uZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgVGFiTGlzdENvbXBvbmVudCxcbiAgICAgICAgVGFiUGFuZWxDb21wb25lbnQsXG4gICAgICAgIFRhYlRpdGxlRGlyZWN0aXZlLFxuICAgICAgICBUYWJMb2FkVGl0bGVEaXJlY3RpdmUsXG4gICAgICAgIFRhYk5hdkNvbXBvbmVudCxcbiAgICAgICAgVGFiTGlua0RpcmVjdGl2ZSxcbiAgICAgICAgVGFiSXRlbURpcmVjdGl2ZVxuICAgIF0sXG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb21tb25Nb2R1bGVcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgVGFiTGlzdENvbXBvbmVudCxcbiAgICAgICAgVGFiUGFuZWxDb21wb25lbnQsXG4gICAgICAgIFRhYlRpdGxlRGlyZWN0aXZlLFxuICAgICAgICBUYWJMb2FkVGl0bGVEaXJlY3RpdmUsXG4gICAgICAgIFRhYk5hdkNvbXBvbmVudCxcbiAgICAgICAgVGFiSXRlbURpcmVjdGl2ZSxcbiAgICAgICAgVGFiTGlua0RpcmVjdGl2ZVxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgVGFic01vZHVsZSB7fVxuIl19