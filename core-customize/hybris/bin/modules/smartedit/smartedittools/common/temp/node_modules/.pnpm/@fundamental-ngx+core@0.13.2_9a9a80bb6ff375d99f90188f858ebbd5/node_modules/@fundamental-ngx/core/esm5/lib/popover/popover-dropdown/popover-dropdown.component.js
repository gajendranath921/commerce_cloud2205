/**
 * @fileoverview added by tsickle
 * Generated from: lib/popover/popover-dropdown/popover-dropdown.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Input, isDevMode, ViewEncapsulation } from '@angular/core';
/**
 * A component used to enforce a certain layout for the popover. With additional styling
 * ```html
 * <fd-popover>
 *     <fd-dropdown>Dropdown</fd-dropdown>
 *     <fd-popover-body>Popover Body</fd-popover-body>
 * </fd-popover>
 * ```
 */
var PopoverDropdownComponent = /** @class */ (function () {
    function PopoverDropdownComponent() {
        /**
         * Whether the popover should have an arrow.
         */
        this.noArrow = true;
        /**
         * Whether the popover is disabled.
         */
        this.disabled = false;
        /**
         * Whether the dropdown is in compact format.
         */
        this.compact = false;
        /**
         * Whether the dropdown is in a toolbar.
         */
        this.toolbar = false;
        /**
         * Whether the dropdown is opened.
         */
        this.isOpen = false;
        if (isDevMode()) {
            console.warn('Popover Dropdown has been deprecated, it will be removed soon. Replace it by popover with menu button');
        }
    }
    PopoverDropdownComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-dropdown-control',
                    host: {
                        class: 'fd-dropdown',
                    },
                    template: "<div class=\"fd-dropdown\">\n    <button\n        fd-button\n        class=\"fd-dropdown__control\"\n        [fdType]=\"btnType\"\n        [glyph]=\"glyph\"\n        [compact]=\"compact\"\n        [disabled]=\"disabled\"\n        [attr.aria-expanded]=\"this.disabled ? false : isOpen\"\n        [attr.aria-disabled]=\"this.disabled\"\n        aria-haspopup=\"true\"\n    >\n        <ng-content></ng-content>\n    </button>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    PopoverDropdownComponent.ctorParameters = function () { return []; };
    PopoverDropdownComponent.propDecorators = {
        noArrow: [{ type: Input }],
        disabled: [{ type: Input }],
        glyph: [{ type: Input }],
        btnType: [{ type: Input }],
        compact: [{ type: Input }],
        toolbar: [{ type: Input }],
        isOpen: [{ type: Input }]
    };
    return PopoverDropdownComponent;
}());
export { PopoverDropdownComponent };
if (false) {
    /**
     * Whether the popover should have an arrow.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.noArrow;
    /**
     * Whether the popover is disabled.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.disabled;
    /**
     * The glyph to display.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.glyph;
    /**
     * The btnType to display.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.btnType;
    /**
     * Whether the dropdown is in compact format.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.compact;
    /**
     * Whether the dropdown is in a toolbar.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.toolbar;
    /**
     * Whether the dropdown is opened.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.isOpen;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1kcm9wZG93bi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvcG9wb3Zlci9wb3BvdmVyLWRyb3Bkb3duL3BvcG92ZXItZHJvcGRvd24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBZ0IsS0FBSyxFQUFFLFNBQVMsRUFBYSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7OztBQWFqSTtJQXNDSTs7OztRQTFCQSxZQUFPLEdBQVksSUFBSSxDQUFDOzs7O1FBSXhCLGFBQVEsR0FBWSxLQUFLLENBQUM7Ozs7UUFZMUIsWUFBTyxHQUFZLEtBQUssQ0FBQzs7OztRQUl6QixZQUFPLEdBQVksS0FBSyxDQUFDOzs7O1FBSXpCLFdBQU0sR0FBWSxLQUFLLENBQUM7UUFHcEIsSUFBSSxTQUFTLEVBQUUsRUFBRTtZQUNiLE9BQU8sQ0FBQyxJQUFJLENBQUMsdUdBQXVHLENBQUMsQ0FBQztTQUN6SDtJQUNMLENBQUM7O2dCQTFDSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsSUFBSSxFQUFFO3dCQUNGLEtBQUssRUFBRSxhQUFhO3FCQUN2QjtvQkFDRCw0YkFBOEM7b0JBQzlDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDbEQ7Ozs7OzBCQUdJLEtBQUs7MkJBSUwsS0FBSzt3QkFJTCxLQUFLOzBCQUlMLEtBQUs7MEJBSUwsS0FBSzswQkFJTCxLQUFLO3lCQUlMLEtBQUs7O0lBU1YsK0JBQUM7Q0FBQSxBQTVDRCxJQTRDQztTQW5DWSx3QkFBd0I7Ozs7OztJQUVqQywyQ0FDd0I7Ozs7O0lBR3hCLDRDQUMwQjs7Ozs7SUFHMUIseUNBQ2M7Ozs7O0lBR2QsMkNBQ29COzs7OztJQUdwQiwyQ0FDeUI7Ozs7O0lBR3pCLDJDQUN5Qjs7Ozs7SUFHekIsMENBQ3dCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSG9zdCwgSW5qZWN0LCBJbnB1dCwgaXNEZXZNb2RlLCBPbkRlc3Ryb3ksIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFBvcG92ZXJDb21wb25lbnQgfSBmcm9tICcuLi9wb3BvdmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCdXR0b25UeXBlIH0gZnJvbSAnLi4vLi4vYnV0dG9uL2J1dHRvbi5jb21wb25lbnQnO1xuLyoqXG4gKiBBIGNvbXBvbmVudCB1c2VkIHRvIGVuZm9yY2UgYSBjZXJ0YWluIGxheW91dCBmb3IgdGhlIHBvcG92ZXIuIFdpdGggYWRkaXRpb25hbCBzdHlsaW5nXG4gKiBgYGBodG1sXG4gKiA8ZmQtcG9wb3Zlcj5cbiAqICAgICA8ZmQtZHJvcGRvd24+RHJvcGRvd248L2ZkLWRyb3Bkb3duPlxuICogICAgIDxmZC1wb3BvdmVyLWJvZHk+UG9wb3ZlciBCb2R5PC9mZC1wb3BvdmVyLWJvZHk+XG4gKiA8L2ZkLXBvcG92ZXI+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdmZC1kcm9wZG93bi1jb250cm9sJyxcbiAgICBob3N0OiB7XG4gICAgICAgIGNsYXNzOiAnZmQtZHJvcGRvd24nLFxuICAgIH0sXG4gICAgdGVtcGxhdGVVcmw6ICdwb3BvdmVyLWRyb3Bkb3duLmNvbXBvbmVudC5odG1sJyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvcG92ZXJEcm9wZG93bkNvbXBvbmVudCB7XG4gICAgLyoqIFdoZXRoZXIgdGhlIHBvcG92ZXIgc2hvdWxkIGhhdmUgYW4gYXJyb3cuICovXG4gICAgQElucHV0KClcbiAgICBub0Fycm93OiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBXaGV0aGVyIHRoZSBwb3BvdmVyIGlzIGRpc2FibGVkLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIC8qKiBUaGUgZ2x5cGggdG8gZGlzcGxheS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGdseXBoOiBzdHJpbmc7XG5cbiAgICAvKiogVGhlIGJ0blR5cGUgdG8gZGlzcGxheS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGJ0blR5cGU6IEJ1dHRvblR5cGU7XG5cbiAgICAvKiogV2hldGhlciB0aGUgZHJvcGRvd24gaXMgaW4gY29tcGFjdCBmb3JtYXQuICovXG4gICAgQElucHV0KClcbiAgICBjb21wYWN0OiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKiogV2hldGhlciB0aGUgZHJvcGRvd24gaXMgaW4gYSB0b29sYmFyLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgdG9vbGJhcjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgLyoqIFdoZXRoZXIgdGhlIGRyb3Bkb3duIGlzIG9wZW5lZC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGlzT3BlbjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGlmIChpc0Rldk1vZGUoKSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdQb3BvdmVyIERyb3Bkb3duIGhhcyBiZWVuIGRlcHJlY2F0ZWQsIGl0IHdpbGwgYmUgcmVtb3ZlZCBzb29uLiBSZXBsYWNlIGl0IGJ5IHBvcG92ZXIgd2l0aCBtZW51IGJ1dHRvbicpO1xuICAgICAgICB9XG4gICAgfVxuXG59XG4iXX0=