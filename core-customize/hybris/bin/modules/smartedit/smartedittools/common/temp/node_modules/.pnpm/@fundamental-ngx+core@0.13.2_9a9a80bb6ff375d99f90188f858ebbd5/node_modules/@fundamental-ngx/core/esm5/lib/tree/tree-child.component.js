/**
 * @fileoverview added by tsickle
 * Generated from: lib/tree/tree-child.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
var TreeChildComponent = /** @class */ (function () {
    function TreeChildComponent() {
        this.editClicked = new EventEmitter();
        this.deleteClicked = new EventEmitter();
    }
    /**
     * @return {?}
     */
    TreeChildComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.hideChildren = false;
    };
    /**
     * @param {?=} hideAll
     * @return {?}
     */
    TreeChildComponent.prototype.toggleDisplayChildren = /**
     * @param {?=} hideAll
     * @return {?}
     */
    function (hideAll) {
        if (hideAll !== undefined) {
            this.hideChildren = hideAll;
        }
        else {
            this.hideChildren = !this.hideChildren;
        }
    };
    /**
     * @param {?=} variable
     * @return {?}
     */
    TreeChildComponent.prototype.typeOf = /**
     * @param {?=} variable
     * @return {?}
     */
    function (variable) {
        /** @type {?} */
        var retVal;
        if (typeof variable === 'string') {
            retVal = 'string';
        }
        else if (typeof variable === 'object') {
            retVal = 'object';
        }
        return retVal;
    };
    /**
     * @param {?=} row
     * @return {?}
     */
    TreeChildComponent.prototype.editTreeItem = /**
     * @param {?=} row
     * @return {?}
     */
    function (row) {
        if (row) {
            this.editClicked.emit(row);
        }
    };
    /**
     * @param {?=} row
     * @return {?}
     */
    TreeChildComponent.prototype.deleteTreeItem = /**
     * @param {?=} row
     * @return {?}
     */
    function (row) {
        if (row) {
            this.deleteClicked.emit(row);
        }
    };
    TreeChildComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-tree-child',
                    template: "<li #treeChild\n    class=\"fd-tree__item\"\n    role=\"treeitem\">\n  <div class=\"fd-tree__row\">\n    <div *ngFor=\"let cell of row.rowData; let i = index\"\n         [attr.data-index]=\"i\"\n         class=\"fd-tree__col\"\n         [ngClass]=\"{'fd-tree__col--control': i === 0}\">\n      <button (click)=\"toggleDisplayChildren()\"\n              *ngIf=\"row.children && i === 0\"\n              class=\"fd-tree__control\"\n              aria-label=\"Expand\"\n              [ngClass]=\"{'is-pressed' : !hideChildren}\"\n              [attr.aria-pressed]=\"!hideChildren\"></button>\n      <ng-container *ngIf=\"typeOf(cell) === 'string'\">\n        {{cell}}\n      </ng-container>\n      <ng-container *ngIf=\"typeOf(cell) === 'object'\">\n        <ng-container *ngIf=\"cell.linkUrl\">\n          <ng-container *ngIf=\"cell.displayText\">\n            <!-- link with display text -->\n            <a [attr.href]=\"cell.linkUrl\"\n               class=\"fd-has-font-weight-semi\">{{cell.displayText}}</a>\n          </ng-container>\n          <ng-container *ngIf=\"!cell.displayText\">\n            <!-- link without display text -->\n            <a [attr.href]=\"cell.linkUrl\"\n               class=\"fd-has-font-weight-semi\">{{cell.linkUrl}}</a>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!cell.linkUrl\">\n          {{cell.displayText}}\n        </ng-container>\n      </ng-container>\n    </div>\n    <div class=\"fd-tree__col fd-tree__col--actions\">\n      <ng-container *ngIf=\"displayTreeActions\">\n        <fd-popover>\n          <fd-popover-control>\n            <button fd-button\n                    [options]=\"'light'\"\n                    [glyph]=\"'vertical-grip'\"></button>\n          </fd-popover-control>\n          <fd-popover-body>\n            <fd-menu>\n              <ul fd-menu-list>\n                <li fd-menu-item (click)=\"editTreeItem(row)\">Edit</li>\n                <li fd-menu-item (click)=\"deleteTreeItem(row)\">Delete</li>\n              </ul>\n            </fd-menu>\n          </fd-popover-body>\n        </fd-popover>\n      </ng-container>\n    </div>\n  </div>\n  <ul *ngIf=\"row.children && row.children.length > 0\"\n      [ngClass]=\"{'is-hidden': hideChildren}\"\n      class=\"fd-tree__group\"\n      role=\"group\">\n    <fd-tree-child *ngFor=\"let child of row.children\"\n                   [displayTreeActions]=\"displayTreeActions\"\n                   [row]=\"child\"\n                   [ngClass]=\"child.sublevelClass\">\n    </fd-tree-child>\n  </ul>\n</li>\n",
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    TreeChildComponent.propDecorators = {
        row: [{ type: Input }],
        hideChildren: [{ type: Input }],
        displayTreeActions: [{ type: Input }],
        editClicked: [{ type: Output }],
        deleteClicked: [{ type: Output }]
    };
    return TreeChildComponent;
}());
export { TreeChildComponent };
if (false) {
    /** @type {?} */
    TreeChildComponent.prototype.row;
    /** @type {?} */
    TreeChildComponent.prototype.hideChildren;
    /** @type {?} */
    TreeChildComponent.prototype.displayTreeActions;
    /** @type {?} */
    TreeChildComponent.prototype.editClicked;
    /** @type {?} */
    TreeChildComponent.prototype.deleteClicked;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1jaGlsZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvdHJlZS90cmVlLWNoaWxkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0g7SUFBQTtRQWFjLGdCQUFXLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFFekQsa0JBQWEsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQW9DekUsQ0FBQzs7OztJQWxDRyxxQ0FBUTs7O0lBQVI7UUFDSSxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztJQUM5QixDQUFDOzs7OztJQUVELGtEQUFxQjs7OztJQUFyQixVQUFzQixPQUFRO1FBQzFCLElBQUksT0FBTyxLQUFLLFNBQVMsRUFBRTtZQUN2QixJQUFJLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQztTQUMvQjthQUFNO1lBQ0gsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7U0FDMUM7SUFDTCxDQUFDOzs7OztJQUVELG1DQUFNOzs7O0lBQU4sVUFBTyxRQUFTOztZQUNSLE1BQU07UUFDVixJQUFJLE9BQU8sUUFBUSxLQUFLLFFBQVEsRUFBRTtZQUM5QixNQUFNLEdBQUcsUUFBUSxDQUFDO1NBQ3JCO2FBQU0sSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7WUFDckMsTUFBTSxHQUFHLFFBQVEsQ0FBQztTQUNyQjtRQUVELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7Ozs7O0lBRUQseUNBQVk7Ozs7SUFBWixVQUFhLEdBQUk7UUFDYixJQUFJLEdBQUcsRUFBRTtZQUNMLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQzlCO0lBQ0wsQ0FBQzs7Ozs7SUFFRCwyQ0FBYzs7OztJQUFkLFVBQWUsR0FBSTtRQUNmLElBQUksR0FBRyxFQUFFO1lBQ0wsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDaEM7SUFDTCxDQUFDOztnQkFsREosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxlQUFlO29CQUN6QixtaEZBQTBDO29CQUMxQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2xEOzs7c0JBRUksS0FBSzsrQkFFTCxLQUFLO3FDQUVMLEtBQUs7OEJBRUwsTUFBTTtnQ0FFTixNQUFNOztJQW9DWCx5QkFBQztDQUFBLEFBbkRELElBbURDO1NBN0NZLGtCQUFrQjs7O0lBQzNCLGlDQUE0Qjs7SUFFNUIsMENBQStCOztJQUUvQixnREFBcUM7O0lBRXJDLHlDQUFtRTs7SUFFbkUsMkNBQXFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUcmVlUm93T2JqZWN0IH0gZnJvbSAnLi90cmVlLXJvdy1vYmplY3QubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLXRyZWUtY2hpbGQnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi90cmVlLWNoaWxkLmNvbXBvbmVudC5odG1sJyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFRyZWVDaGlsZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgQElucHV0KCkgcm93OiBUcmVlUm93T2JqZWN0O1xuXG4gICAgQElucHV0KCkgaGlkZUNoaWxkcmVuOiBib29sZWFuO1xuXG4gICAgQElucHV0KCkgZGlzcGxheVRyZWVBY3Rpb25zOiBib29sZWFuO1xuXG4gICAgQE91dHB1dCgpIGVkaXRDbGlja2VkOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gICAgQE91dHB1dCgpIGRlbGV0ZUNsaWNrZWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5oaWRlQ2hpbGRyZW4gPSBmYWxzZTtcbiAgICB9XG5cbiAgICB0b2dnbGVEaXNwbGF5Q2hpbGRyZW4oaGlkZUFsbD8pIHtcbiAgICAgICAgaWYgKGhpZGVBbGwgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5oaWRlQ2hpbGRyZW4gPSBoaWRlQWxsO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5oaWRlQ2hpbGRyZW4gPSAhdGhpcy5oaWRlQ2hpbGRyZW47XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB0eXBlT2YodmFyaWFibGU/KSB7XG4gICAgICAgIGxldCByZXRWYWw7XG4gICAgICAgIGlmICh0eXBlb2YgdmFyaWFibGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXRWYWwgPSAnc3RyaW5nJztcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFyaWFibGUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICByZXRWYWwgPSAnb2JqZWN0JztcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXRWYWw7XG4gICAgfVxuXG4gICAgZWRpdFRyZWVJdGVtKHJvdz8pIHtcbiAgICAgICAgaWYgKHJvdykge1xuICAgICAgICAgICAgdGhpcy5lZGl0Q2xpY2tlZC5lbWl0KHJvdyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkZWxldGVUcmVlSXRlbShyb3c/KSB7XG4gICAgICAgIGlmIChyb3cpIHtcbiAgICAgICAgICAgIHRoaXMuZGVsZXRlQ2xpY2tlZC5lbWl0KHJvdyk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=