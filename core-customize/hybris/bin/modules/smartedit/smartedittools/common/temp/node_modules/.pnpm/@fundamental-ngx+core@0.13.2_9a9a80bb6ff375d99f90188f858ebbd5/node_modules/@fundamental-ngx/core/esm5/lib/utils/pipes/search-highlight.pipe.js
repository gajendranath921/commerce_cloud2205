/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/pipes/search-highlight.pipe.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
var SearchHighlightPipe = /** @class */ (function () {
    function SearchHighlightPipe() {
    }
    /**
     * @param {?} value
     * @param {?} args
     * @param {?=} active
     * @return {?}
     */
    SearchHighlightPipe.prototype.transform = /**
     * @param {?} value
     * @param {?} args
     * @param {?=} active
     * @return {?}
     */
    function (value, args, active) {
        if (active === void 0) { active = true; }
        if (args && value && active) {
            /** @type {?} */
            var startIndex = value.toLowerCase().indexOf(args.toLowerCase());
            if (startIndex !== -1) {
                /** @type {?} */
                var matchingString = value.substr(startIndex, args.length);
                return value.replace(matchingString, '<strong>' + matchingString + '</strong>');
            }
        }
        return value;
    };
    SearchHighlightPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'highlight'
                },] }
    ];
    return SearchHighlightPipe;
}());
export { SearchHighlightPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWhpZ2hsaWdodC5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ1bmRhbWVudGFsLW5neC9jb3JlLyIsInNvdXJjZXMiOlsibGliL3V0aWxzL3BpcGVzL3NlYXJjaC1oaWdobGlnaHQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXBEO0lBQUE7SUFpQkEsQ0FBQzs7Ozs7OztJQVhHLHVDQUFTOzs7Ozs7SUFBVCxVQUFVLEtBQWEsRUFBRSxJQUFZLEVBQUUsTUFBc0I7UUFBdEIsdUJBQUEsRUFBQSxhQUFzQjtRQUN6RCxJQUFJLElBQUksSUFBSSxLQUFLLElBQUksTUFBTSxFQUFFOztnQkFDbkIsVUFBVSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ2xFLElBQUksVUFBVSxLQUFLLENBQUMsQ0FBQyxFQUFFOztvQkFDYixjQUFjLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQztnQkFDNUQsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLGNBQWMsRUFBRSxVQUFVLEdBQUcsY0FBYyxHQUFHLFdBQVcsQ0FBQyxDQUFDO2FBQ25GO1NBRUo7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDOztnQkFoQkosSUFBSSxTQUFDO29CQUNGLElBQUksRUFBRSxXQUFXO2lCQUNwQjs7SUFlRCwwQkFBQztDQUFBLEFBakJELElBaUJDO1NBYlksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AUGlwZSh7XG4gICAgbmFtZTogJ2hpZ2hsaWdodCdcbn0pXG5cbmV4cG9ydCBjbGFzcyBTZWFyY2hIaWdobGlnaHRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgICB0cmFuc2Zvcm0odmFsdWU6IHN0cmluZywgYXJnczogc3RyaW5nLCBhY3RpdmU6IGJvb2xlYW4gPSB0cnVlKTogc3RyaW5nIHtcbiAgICAgICAgaWYgKGFyZ3MgJiYgdmFsdWUgJiYgYWN0aXZlKSB7XG4gICAgICAgICAgICBjb25zdCBzdGFydEluZGV4ID0gdmFsdWUudG9Mb3dlckNhc2UoKS5pbmRleE9mKGFyZ3MudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICAgICBpZiAoc3RhcnRJbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBtYXRjaGluZ1N0cmluZyA9IHZhbHVlLnN1YnN0cihzdGFydEluZGV4LCBhcmdzLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UobWF0Y2hpbmdTdHJpbmcsICc8c3Ryb25nPicgKyBtYXRjaGluZ1N0cmluZyArICc8L3N0cm9uZz4nKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG59XG4iXX0=