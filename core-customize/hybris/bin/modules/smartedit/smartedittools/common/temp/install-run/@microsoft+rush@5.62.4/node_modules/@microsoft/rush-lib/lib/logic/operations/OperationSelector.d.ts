import type { RushConfigurationProject } from '../../api/RushConfigurationProject';
import type { IPhase } from '../../api/CommandLineConfiguration';
import type { Operation } from './Operation';
export interface IOperationSelectorOptions {
    phasesToRun: ReadonlySet<IPhase>;
}
export interface ICreateOperationsOptions {
    projectSelection: ReadonlySet<RushConfigurationProject>;
    operationFactory: IOperationFactory;
}
export interface IOperationOptions {
    project: RushConfigurationProject;
    phase: IPhase;
}
export interface IOperationFactory {
    createTask(options: IOperationOptions): Operation;
}
/**
 * This class is responsible for transforming a set of selected phases and selected projects into an operation dependency graph.
 */
export declare class OperationSelector {
    private readonly _phasesToRun;
    constructor(options: IOperationSelectorOptions);
    createOperations(createTasksOptions: ICreateOperationsOptions): Set<Operation>;
}
//# sourceMappingURL=OperationSelector.d.ts.map