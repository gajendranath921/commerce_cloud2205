/**
 * @fileoverview added by tsickle
 * Generated from: lib/shellbar/user-menu/shellbar-user-menu.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { PopoverComponent } from '../../popover/popover.component';
/**
 * This Component extends popover component and passes all of the options and events from outside to popover component
 * and Vice Versa
 *
 */
var ShellbarUserMenuComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ShellbarUserMenuComponent, _super);
    function ShellbarUserMenuComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Event emitted on item click
         */
        _this.itemClicked = new EventEmitter();
        return _this;
    }
    /**
     * @hidden
     */
    /**
     * @hidden
     * @param {?} item
     * @param {?} event
     * @return {?}
     */
    ShellbarUserMenuComponent.prototype.itemClick = /**
     * @hidden
     * @param {?} item
     * @param {?} event
     * @return {?}
     */
    function (item, event) {
        this.itemClicked.emit();
        if (item.callback) {
            item.callback(event);
        }
    };
    ShellbarUserMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-shellbar-user-menu',
                    template: "<div class=\"fd-shellbar__action fd-shellbar__action--show-always\" *ngIf=\"user\">\n    <div class=\"fd-user-menu\">\n        <fd-popover [options]=\"options || {placement: 'bottom-end'}\"\n                    [closeOnEscapeKey]=\"closeOnEscapeKey\"\n                    [closeOnOutsideClick]=\"closeOnOutsideClick\"\n                    [(isOpen)]=\"isOpen\"\n                    [triggers]=\"triggers\"\n                    (isOpenChange)=\"openChanged($event)\"\n                    [disabled]=\"disabled\"\n                    [isDropdown]=\"isDropdown\"\n                    [focusTrapped]=\"false\">\n            <fd-popover-control>\n                <div class=\"fd-user-menu__control\">\n                    <span fd-identifier *ngIf=\"!user.image\" [colorAccent]=\"user.colorAccent\" [circle]=\"true\" [size]=\"'xs'\">\n                        {{user.initials}}\n                    </span>\n                    <span fd-identifier *ngIf=\"user.image\" [colorAccent]=\"user.colorAccent\" [circle]=\"true\" [size]=\"'xs'\"\n                          [ngStyle]=\"{'background-image': 'url(' + user.image + ')'}\">\n                    </span>\n                </div>\n            </fd-popover-control>\n            <fd-popover-body>\n                <fd-menu>\n                    <ul fd-menu-list>\n                        <li fd-menu-item\n                            *ngFor=\"let item of userMenu\"\n                            (click)=\"itemClick(item, $event)\">\n                            {{item.text}}\n                        </li>\n                    </ul>\n                </fd-menu>\n            </fd-popover-body>\n        </fd-popover>\n    </div>\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    ShellbarUserMenuComponent.propDecorators = {
        user: [{ type: Input }],
        userMenu: [{ type: Input }],
        itemClicked: [{ type: Output }]
    };
    return ShellbarUserMenuComponent;
}(PopoverComponent));
export { ShellbarUserMenuComponent };
if (false) {
    /**
     * The user data.
     * @type {?}
     */
    ShellbarUserMenuComponent.prototype.user;
    /**
     * The user menu data.
     * @type {?}
     */
    ShellbarUserMenuComponent.prototype.userMenu;
    /**
     * Event emitted on item click
     * @type {?}
     */
    ShellbarUserMenuComponent.prototype.itemClicked;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hlbGxiYXItdXNlci1tZW51LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9zaGVsbGJhci91c2VyLW1lbnUvc2hlbGxiYXItdXNlci1tZW51LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDOzs7Ozs7QUFRbkU7SUFLK0MscURBQWdCO0lBTC9EO1FBQUEscUVBNEJDOzs7O1FBWEcsaUJBQVcsR0FBdUIsSUFBSSxZQUFZLEVBQVEsQ0FBQzs7SUFXL0QsQ0FBQztJQVRHOztPQUVHOzs7Ozs7O0lBQ0gsNkNBQVM7Ozs7OztJQUFULFVBQVUsSUFBc0IsRUFBRSxLQUFVO1FBQ3hDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDeEIsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN4QjtJQUNMLENBQUM7O2dCQTNCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsNnBEQUFrRDtvQkFDbEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2xEOzs7dUJBSUksS0FBSzsyQkFJTCxLQUFLOzhCQUlMLE1BQU07O0lBWVgsZ0NBQUM7Q0FBQSxBQTVCRCxDQUsrQyxnQkFBZ0IsR0F1QjlEO1NBdkJZLHlCQUF5Qjs7Ozs7O0lBR2xDLHlDQUNtQjs7Ozs7SUFHbkIsNkNBQzZCOzs7OztJQUc3QixnREFDMkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvcG92ZXJDb21wb25lbnQgfSBmcm9tICcuLi8uLi9wb3BvdmVyL3BvcG92ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFNoZWxsYmFyVXNlciB9IGZyb20gJy4uL21vZGVsL3NoZWxsYmFyLXVzZXInO1xuaW1wb3J0IHsgU2hlbGxiYXJVc2VyTWVudSB9IGZyb20gJy4uL21vZGVsL3NoZWxsYmFyLXVzZXItbWVudSc7XG5cbi8qKlxuICogVGhpcyBDb21wb25lbnQgZXh0ZW5kcyBwb3BvdmVyIGNvbXBvbmVudCBhbmQgcGFzc2VzIGFsbCBvZiB0aGUgb3B0aW9ucyBhbmQgZXZlbnRzIGZyb20gb3V0c2lkZSB0byBwb3BvdmVyIGNvbXBvbmVudFxuICogYW5kIFZpY2UgVmVyc2FcbiAqICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLXNoZWxsYmFyLXVzZXItbWVudScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3NoZWxsYmFyLXVzZXItbWVudS5jb21wb25lbnQuaHRtbCcsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgU2hlbGxiYXJVc2VyTWVudUNvbXBvbmVudCBleHRlbmRzIFBvcG92ZXJDb21wb25lbnQge1xuXG4gICAgLyoqIFRoZSB1c2VyIGRhdGEuICovXG4gICAgQElucHV0KClcbiAgICB1c2VyOiBTaGVsbGJhclVzZXI7XG5cbiAgICAvKiogVGhlIHVzZXIgbWVudSBkYXRhLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgdXNlck1lbnU6IFNoZWxsYmFyVXNlck1lbnVbXTtcblxuICAgIC8qKiBFdmVudCBlbWl0dGVkIG9uIGl0ZW0gY2xpY2sgKi9cbiAgICBAT3V0cHV0KClcbiAgICBpdGVtQ2xpY2tlZDogRXZlbnRFbWl0dGVyPHZvaWQ+ID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGl0ZW1DbGljayhpdGVtOiBTaGVsbGJhclVzZXJNZW51LCBldmVudDogYW55KTogdm9pZCB7XG4gICAgICAgIHRoaXMuaXRlbUNsaWNrZWQuZW1pdCgpO1xuICAgICAgICBpZiAoaXRlbS5jYWxsYmFjaykge1xuICAgICAgICAgICAgaXRlbS5jYWxsYmFjayhldmVudCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=