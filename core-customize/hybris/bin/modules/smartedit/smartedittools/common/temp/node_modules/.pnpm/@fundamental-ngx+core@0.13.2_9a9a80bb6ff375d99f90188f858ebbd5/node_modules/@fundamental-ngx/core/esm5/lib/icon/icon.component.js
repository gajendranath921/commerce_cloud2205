/**
 * @fileoverview added by tsickle
 * Generated from: lib/icon/icon.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';
import { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';
/**
 * @hidden
 * The base class for the icon component
 * @type {?}
 */
var BASE_ICON_CLASS = 'sap-icon';
/**
 * @hidden
 * Prefix for icon prop classes
 * @type {?}
 */
var PREFIX_ICON_CLASS = BASE_ICON_CLASS + '--';
/**
 * The component that represents an icon.
 *
 * ```html
 * <fd-icon [glyph]="cart-approval" [size]="'l'"></fd-icon>
 * ```
 */
var IconComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IconComponent, _super);
    /** @hidden */
    function IconComponent(elementRef) {
        var _this = _super.call(this, elementRef) || this;
        _this.elementRef = elementRef;
        /**
         * The size of the icon
         * The predefined values for the input size are *xs*, *s*, *l*, and *xl*.
         * *size* can accept any other string, for example *xxs*, which will be translated into class *sap-icon--xxs*.
         */
        _this.size = '';
        return _this;
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    IconComponent.prototype._setProperties = /**
     * @hidden
     * @return {?}
     */
    function () {
        if (this.glyph) {
            this._addClassToElement(PREFIX_ICON_CLASS + this.glyph);
        }
        if (this.size) {
            this._addClassToElement(PREFIX_ICON_CLASS + this.size);
        }
    };
    IconComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-icon',
                    template: "",
                    host: {
                        role: 'presentation'
                    },
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    IconComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    IconComponent.propDecorators = {
        glyph: [{ type: Input }],
        size: [{ type: Input }]
    };
    return IconComponent;
}(AbstractFdNgxClass));
export { IconComponent };
if (false) {
    /**
     * The icon name to display. See the icon page for the list of icons
     * here: https://sap.github.io/fundamental-ngx/icon
     *
     * @type {?}
     */
    IconComponent.prototype.glyph;
    /**
     * The size of the icon
     * The predefined values for the input size are *xs*, *s*, *l*, and *xl*.
     * *size* can accept any other string, for example *xxs*, which will be translated into class *sap-icon--xxs*.
     * @type {?}
     */
    IconComponent.prototype.size;
    /**
     * @type {?}
     * @private
     */
    IconComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvaWNvbi9pY29uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7Ozs7OztJQU05RCxlQUFlLEdBQUcsVUFBVTs7Ozs7O0lBTTVCLGlCQUFpQixHQUFHLGVBQWUsR0FBRyxJQUFJOzs7Ozs7OztBQVNoRDtJQVVtQyx5Q0FBa0I7SUF5QmpELGNBQWM7SUFDZCx1QkFBb0IsVUFBc0I7UUFBMUMsWUFDSSxrQkFBTSxVQUFVLENBQUMsU0FDcEI7UUFGbUIsZ0JBQVUsR0FBVixVQUFVLENBQVk7Ozs7OztRQWRqQyxVQUFJLEdBQVcsRUFBRSxDQUFDOztJQWdCM0IsQ0FBQztJQWRELGNBQWM7Ozs7O0lBQ2Qsc0NBQWM7Ozs7SUFBZDtRQUNJLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNaLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0Q7UUFFRCxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDWCxJQUFJLENBQUMsa0JBQWtCLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzFEO0lBQ0wsQ0FBQzs7Z0JBakNKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsU0FBUztvQkFDbkIsUUFBUSxFQUFFLEVBQUU7b0JBRVosSUFBSSxFQUFFO3dCQUNGLElBQUksRUFBRSxjQUFjO3FCQUN2QjtvQkFDRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2lCQUNsRDs7OztnQkEvQjRDLFVBQVU7Ozt3QkFxQ2xELEtBQUs7dUJBT0wsS0FBSzs7SUFpQlYsb0JBQUM7Q0FBQSxBQXZDRCxDQVVtQyxrQkFBa0IsR0E2QnBEO1NBN0JZLGFBQWE7Ozs7Ozs7O0lBS3RCLDhCQUFlOzs7Ozs7O0lBT2YsNkJBQTJCOzs7OztJQWNmLG1DQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWJzdHJhY3RGZE5neENsYXNzIH0gZnJvbSAnLi4vdXRpbHMvYWJzdHJhY3QtZmQtbmd4LWNsYXNzJztcblxuLyoqXG4gKiBAaGlkZGVuXG4gKiBUaGUgYmFzZSBjbGFzcyBmb3IgdGhlIGljb24gY29tcG9uZW50XG4gKi9cbmNvbnN0IEJBU0VfSUNPTl9DTEFTUyA9ICdzYXAtaWNvbic7XG5cbi8qKlxuICogQGhpZGRlblxuICogUHJlZml4IGZvciBpY29uIHByb3AgY2xhc3Nlc1xuICovXG5jb25zdCBQUkVGSVhfSUNPTl9DTEFTUyA9IEJBU0VfSUNPTl9DTEFTUyArICctLSc7XG5cbi8qKlxuICogVGhlIGNvbXBvbmVudCB0aGF0IHJlcHJlc2VudHMgYW4gaWNvbi5cbiAqXG4gKiBgYGBodG1sXG4gKiA8ZmQtaWNvbiBbZ2x5cGhdPVwiY2FydC1hcHByb3ZhbFwiIFtzaXplXT1cIidsJ1wiPjwvZmQtaWNvbj5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLWljb24nLFxuICAgIHRlbXBsYXRlOiBgYCxcbiAgICBzdHlsZVVybHM6IFsnLi9pY29uLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgaG9zdDoge1xuICAgICAgICByb2xlOiAncHJlc2VudGF0aW9uJ1xuICAgIH0sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBJY29uQ29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3RGZE5neENsYXNzIHtcblxuICAgIC8qKiBUaGUgaWNvbiBuYW1lIHRvIGRpc3BsYXkuIFNlZSB0aGUgaWNvbiBwYWdlIGZvciB0aGUgbGlzdCBvZiBpY29uc1xuICAgICAqIGhlcmU6IGh0dHBzOi8vc2FwLmdpdGh1Yi5pby9mdW5kYW1lbnRhbC1uZ3gvaWNvblxuICAgICAqICovXG4gICAgQElucHV0KCkgZ2x5cGg7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2l6ZSBvZiB0aGUgaWNvblxuICAgICAqIFRoZSBwcmVkZWZpbmVkIHZhbHVlcyBmb3IgdGhlIGlucHV0IHNpemUgYXJlICp4cyosICpzKiwgKmwqLCBhbmQgKnhsKi5cbiAgICAgKiAqc2l6ZSogY2FuIGFjY2VwdCBhbnkgb3RoZXIgc3RyaW5nLCBmb3IgZXhhbXBsZSAqeHhzKiwgd2hpY2ggd2lsbCBiZSB0cmFuc2xhdGVkIGludG8gY2xhc3MgKnNhcC1pY29uLS14eHMqLlxuICAgICAqL1xuICAgIEBJbnB1dCgpIHNpemU6IHN0cmluZyA9ICcnO1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBfc2V0UHJvcGVydGllcygpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2x5cGgpIHtcbiAgICAgICAgICAgIHRoaXMuX2FkZENsYXNzVG9FbGVtZW50KFBSRUZJWF9JQ09OX0NMQVNTICsgdGhpcy5nbHlwaCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5zaXplKSB7XG4gICAgICAgICAgICB0aGlzLl9hZGRDbGFzc1RvRWxlbWVudChQUkVGSVhfSUNPTl9DTEFTUyArIHRoaXMuc2l6ZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgICAgICBzdXBlcihlbGVtZW50UmVmKTtcbiAgICB9XG59XG4iXX0=