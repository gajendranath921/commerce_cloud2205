/**
 * @fileoverview added by tsickle
 * Generated from: lib/localizator-editor/localization-editor-item/localization-editor-item.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, ContentChild, Input, TemplateRef, ViewEncapsulation } from '@angular/core';
import { LocalizationEditorLabel } from '../localization-editor.directives';
/**
 *  Component that represents field with add-on.
 *  ```html
 *  <fd-localization-editor-item [label]="'EN'">
 *      <input fd-localization-editor-input type="text" placeholder="EN">
 *  </fd-localization-editor-item>
 *  ```
 */
var LocalizationEditorItemComponent = /** @class */ (function () {
    function LocalizationEditorItemComponent() {
    }
    LocalizationEditorItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-localization-editor-item',
                    template: "<fd-input-group [compact]=\"compact\" [inputTemplate]=\"input\" [placement]=\"'after'\">\n    <span fd-input-group-addon [type]=\"type\" [compact]=\"compact\">\n        <ng-container *ngIf=\"labelTemplate\">\n            <ng-container [fd-localization-editor-load-label]=\"labelTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!labelTemplate\">\n            {{label}}\n        </ng-container>\n    </span>\n</fd-input-group>\n<ng-template #input>\n    <ng-content select=\"[fd-localization-editor-input]\"></ng-content>\n    <ng-content select=\"[fd-localization-editor-textarea]\"></ng-content>\n</ng-template>\n<ng-content></ng-content>\n",
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    LocalizationEditorItemComponent.propDecorators = {
        label: [{ type: Input }],
        compact: [{ type: Input }],
        labelTemplate: [{ type: ContentChild, args: [LocalizationEditorLabel, { read: TemplateRef, static: false },] }]
    };
    return LocalizationEditorItemComponent;
}());
export { LocalizationEditorItemComponent };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.type;
    /**
     * The text for the add-on on the right side.
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.label;
    /**
     * Whether to apply compact mode to to field.
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.compact;
    /**
     * @hidden
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.labelTemplate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxpemF0aW9uLWVkaXRvci1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9sb2NhbGl6YXRvci1lZGl0b3IvbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtL2xvY2FsaXphdGlvbi1lZGl0b3ItaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQ2UsdUJBQXVCLEVBQ3pDLFNBQVMsRUFDVCxZQUFZLEVBQ1osS0FBSyxFQUdMLFdBQVcsRUFDWCxpQkFBaUIsRUFDcEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUNILHVCQUF1QixFQUMxQixNQUFNLG1DQUFtQyxDQUFDOzs7Ozs7Ozs7QUFVM0M7SUFBQTtJQXNCQSxDQUFDOztnQkF0QkEsU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLDhxQkFBd0Q7b0JBQ3hELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDbEQ7Ozt3QkFPSSxLQUFLOzBCQUlMLEtBQUs7Z0NBSUwsWUFBWSxTQUFDLHVCQUF1QixFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFOztJQUUvRSxzQ0FBQztDQUFBLEFBdEJELElBc0JDO1NBaEJZLCtCQUErQjs7Ozs7O0lBR3hDLCtDQUFhOzs7OztJQUdiLGdEQUNjOzs7OztJQUdkLGtEQUNpQjs7Ozs7SUFHakIsd0RBQ2dDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBBZnRlckNvbnRlbnRJbml0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgQ29udGVudENoaWxkLFxuICAgIElucHV0LFxuICAgIE9uQ2hhbmdlcyxcbiAgICBPbkluaXQsXG4gICAgVGVtcGxhdGVSZWYsXG4gICAgVmlld0VuY2Fwc3VsYXRpb25cbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICAgIExvY2FsaXphdGlvbkVkaXRvckxhYmVsXG59IGZyb20gJy4uL2xvY2FsaXphdGlvbi1lZGl0b3IuZGlyZWN0aXZlcyc7XG5cbi8qKlxuICogIENvbXBvbmVudCB0aGF0IHJlcHJlc2VudHMgZmllbGQgd2l0aCBhZGQtb24uXG4gKiAgYGBgaHRtbFxuICogIDxmZC1sb2NhbGl6YXRpb24tZWRpdG9yLWl0ZW0gW2xhYmVsXT1cIidFTidcIj5cbiAqICAgICAgPGlucHV0IGZkLWxvY2FsaXphdGlvbi1lZGl0b3ItaW5wdXQgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkVOXCI+XG4gKiAgPC9mZC1sb2NhbGl6YXRpb24tZWRpdG9yLWl0ZW0+XG4gKiAgYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZmQtbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIExvY2FsaXphdGlvbkVkaXRvckl0ZW1Db21wb25lbnQge1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICB0eXBlOiBzdHJpbmc7XG5cbiAgICAvKiogVGhlIHRleHQgZm9yIHRoZSBhZGQtb24gb24gdGhlIHJpZ2h0IHNpZGUuICovXG4gICAgQElucHV0KClcbiAgICBsYWJlbDogc3RyaW5nO1xuXG4gICAgLyoqIFdoZXRoZXIgdG8gYXBwbHkgY29tcGFjdCBtb2RlIHRvIHRvIGZpZWxkLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgY29tcGFjdDogYm9vbGVhbjtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgQENvbnRlbnRDaGlsZChMb2NhbGl6YXRpb25FZGl0b3JMYWJlbCwgeyByZWFkOiBUZW1wbGF0ZVJlZiwgc3RhdGljOiBmYWxzZSB9KVxuICAgIGxhYmVsVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG59XG4iXX0=