import { AfterContentInit, EventEmitter, QueryList } from '@angular/core';
import { CdkDragMove } from '@angular/cdk/drag-drop';
import { DndContainerDirective } from '../dnd-container/dnd-container.directive';
export declare type LinkPosition = 'after' | 'before';
export interface ElementChord {
    x: number;
    y: number;
    position: LinkPosition;
    stickToPosition?: boolean;
}
export declare class DndListDirective implements AfterContentInit {
    /** @hidden */
    dndContainerItems: QueryList<DndContainerDirective>;
    /** Defines if the distance between elements should be counted only by vertical distance */
    listMode: boolean;
    /** Array of items, that will be sorted */
    items: Array<any>;
    /** Event that is thrown, when the item is dropped */
    readonly itemsChange: EventEmitter<Array<any>>;
    /** @hidden */
    private elementChords;
    /** @hidden */
    private draggedItemIndex;
    /** @hidden */
    private closestLinkIndex;
    /** @hidden */
    private closestLinkPosition;
    /** An RxJS Subject that will kill the current data stream (for unsubscribing)  */
    private readonly refresh$;
    /** @hidden */
    ngAfterContentInit(): void;
    /** Method called, when the item is being moved by 1 px */
    onMove(event: CdkDragMove): void;
    /** Method called, when element is started to be dragged */
    dragStart(ind: number): void;
    /** Method called, when element is released */
    dragEnd(): void;
    /** @hidden */
    private removeAllLines;
    /** @hidden */
    private generateLine;
    /** @hidden */
    private refreshQueryList;
    /**
     *  @hidden
     * Return information if element is placed before the dragged element
     */
    private isBefore;
}
