{"version":3,"file":"IOperationRunner.js","sourceRoot":"","sources":["../../../src/logic/operations/IOperationRunner.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { StdioSummarizer } from '@rushstack/terminal';\nimport type { CollatedWriter } from '@rushstack/stream-collator';\n\nimport type { OperationStatus } from './OperationStatus';\nimport type { CommandLineConfiguration } from '../../api/CommandLineConfiguration';\n\nexport interface IOperationRunnerContext {\n  repoCommandLineConfiguration: CommandLineConfiguration;\n  collatedWriter: CollatedWriter;\n  stdioSummarizer: StdioSummarizer;\n  quietMode: boolean;\n  debugMode: boolean;\n}\n\n/**\n * The `Operation` class is a node in the dependency graph of work that needs to be scheduled by the\n * `OperationExecutionManager`. Each `Operation` has a `runner` member of type `IOperationRunner`, whose\n * implementation manages the actual process for running a single operation.\n */\nexport interface IOperationRunner {\n  /**\n   * Name of the operation, for logging.\n   */\n  readonly name: string;\n\n  /**\n   * This flag determines if the operation is allowed to be skipped if up to date.\n   */\n  isSkipAllowed: boolean;\n\n  /**\n   * Assigned by execute().  True if the script was an empty string.  Operationally an empty string is\n   * like a shell command that succeeds instantly, but e.g. it would be odd to report time statistics for it.\n   */\n  hadEmptyScript: boolean;\n\n  /**\n   * If set to true, a warning result should not make Rush exit with a nonzero\n   * exit code\n   */\n  warningsAreAllowed: boolean;\n\n  /**\n   * Indicates if the output of this operation may be written to the cache\n   */\n  isCacheWriteAllowed: boolean;\n\n  /**\n   * Method to be executed for the operation.\n   */\n  executeAsync(context: IOperationRunnerContext): Promise<OperationStatus>;\n}\n"]}