/**
 * @fileoverview added by tsickle
 * Generated from: lib/panel/panel.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { PanelComponent } from './panel.component';
import { PanelHeaderComponent } from './panel-header/panel-header.component';
import { PanelHeadComponent } from './panel-head/panel-head.component';
import { PanelTitleDirective } from './panel-title/panel-title.directive';
import { PanelDescriptionComponent } from './panel-description/panel-description.component';
import { PanelActionsComponent } from './panel-actions/panel-actions.component';
import { PanelFiltersComponent } from './panel-filters/panel-filters.component';
import { PanelBodyComponent } from './panel-body/panel-body.component';
import { PanelFooterComponent } from './panel-footer/panel-footer.component';
export class PanelModule {
}
PanelModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    PanelComponent,
                    PanelHeaderComponent,
                    PanelHeadComponent,
                    PanelTitleDirective,
                    PanelDescriptionComponent,
                    PanelActionsComponent,
                    PanelFiltersComponent,
                    PanelBodyComponent,
                    PanelFooterComponent,
                ],
                imports: [CommonModule],
                exports: [
                    PanelComponent,
                    PanelHeaderComponent,
                    PanelHeadComponent,
                    PanelTitleDirective,
                    PanelDescriptionComponent,
                    PanelActionsComponent,
                    PanelFiltersComponent,
                    PanelBodyComponent,
                    PanelFooterComponent,
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFuZWwubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ1bmRhbWVudGFsLW5neC9jb3JlLyIsInNvdXJjZXMiOlsibGliL3BhbmVsL3BhbmVsLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMxRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUM1RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNoRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNoRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQTBCN0UsTUFBTSxPQUFPLFdBQVc7OztZQXpCdkIsUUFBUSxTQUFDO2dCQUNOLFlBQVksRUFBRTtvQkFDVixjQUFjO29CQUNkLG9CQUFvQjtvQkFDcEIsa0JBQWtCO29CQUNsQixtQkFBbUI7b0JBQ25CLHlCQUF5QjtvQkFDekIscUJBQXFCO29CQUNyQixxQkFBcUI7b0JBQ3JCLGtCQUFrQjtvQkFDbEIsb0JBQW9CO2lCQUN2QjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7Z0JBQ3ZCLE9BQU8sRUFBRTtvQkFDTCxjQUFjO29CQUNkLG9CQUFvQjtvQkFDcEIsa0JBQWtCO29CQUNsQixtQkFBbUI7b0JBQ25CLHlCQUF5QjtvQkFDekIscUJBQXFCO29CQUNyQixxQkFBcUI7b0JBQ3JCLGtCQUFrQjtvQkFDbEIsb0JBQW9CO2lCQUN2QjthQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IFBhbmVsQ29tcG9uZW50IH0gZnJvbSAnLi9wYW5lbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGFuZWxIZWFkZXJDb21wb25lbnQgfSBmcm9tICcuL3BhbmVsLWhlYWRlci9wYW5lbC1oZWFkZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFBhbmVsSGVhZENvbXBvbmVudCB9IGZyb20gJy4vcGFuZWwtaGVhZC9wYW5lbC1oZWFkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQYW5lbFRpdGxlRGlyZWN0aXZlIH0gZnJvbSAnLi9wYW5lbC10aXRsZS9wYW5lbC10aXRsZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUGFuZWxEZXNjcmlwdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vcGFuZWwtZGVzY3JpcHRpb24vcGFuZWwtZGVzY3JpcHRpb24uY29tcG9uZW50JztcbmltcG9ydCB7IFBhbmVsQWN0aW9uc0NvbXBvbmVudCB9IGZyb20gJy4vcGFuZWwtYWN0aW9ucy9wYW5lbC1hY3Rpb25zLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQYW5lbEZpbHRlcnNDb21wb25lbnQgfSBmcm9tICcuL3BhbmVsLWZpbHRlcnMvcGFuZWwtZmlsdGVycy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGFuZWxCb2R5Q29tcG9uZW50IH0gZnJvbSAnLi9wYW5lbC1ib2R5L3BhbmVsLWJvZHkuY29tcG9uZW50JztcbmltcG9ydCB7IFBhbmVsRm9vdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9wYW5lbC1mb290ZXIvcGFuZWwtZm9vdGVyLmNvbXBvbmVudCc7XG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBQYW5lbENvbXBvbmVudCxcbiAgICAgICAgUGFuZWxIZWFkZXJDb21wb25lbnQsXG4gICAgICAgIFBhbmVsSGVhZENvbXBvbmVudCxcbiAgICAgICAgUGFuZWxUaXRsZURpcmVjdGl2ZSxcbiAgICAgICAgUGFuZWxEZXNjcmlwdGlvbkNvbXBvbmVudCxcbiAgICAgICAgUGFuZWxBY3Rpb25zQ29tcG9uZW50LFxuICAgICAgICBQYW5lbEZpbHRlcnNDb21wb25lbnQsXG4gICAgICAgIFBhbmVsQm9keUNvbXBvbmVudCxcbiAgICAgICAgUGFuZWxGb290ZXJDb21wb25lbnQsXG4gICAgXSxcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIFBhbmVsQ29tcG9uZW50LFxuICAgICAgICBQYW5lbEhlYWRlckNvbXBvbmVudCxcbiAgICAgICAgUGFuZWxIZWFkQ29tcG9uZW50LFxuICAgICAgICBQYW5lbFRpdGxlRGlyZWN0aXZlLFxuICAgICAgICBQYW5lbERlc2NyaXB0aW9uQ29tcG9uZW50LFxuICAgICAgICBQYW5lbEFjdGlvbnNDb21wb25lbnQsXG4gICAgICAgIFBhbmVsRmlsdGVyc0NvbXBvbmVudCxcbiAgICAgICAgUGFuZWxCb2R5Q29tcG9uZW50LFxuICAgICAgICBQYW5lbEZvb3RlckNvbXBvbmVudCxcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIFBhbmVsTW9kdWxlIHt9XG4iXX0=