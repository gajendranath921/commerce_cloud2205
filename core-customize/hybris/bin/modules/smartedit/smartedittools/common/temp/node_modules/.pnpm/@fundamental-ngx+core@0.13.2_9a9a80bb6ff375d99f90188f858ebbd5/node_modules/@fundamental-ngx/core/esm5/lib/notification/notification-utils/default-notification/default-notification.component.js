/**
 * @fileoverview added by tsickle
 * Generated from: lib/notification/notification-utils/default-notification/default-notification.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
var DefaultNotificationComponent = /** @class */ (function () {
    function DefaultNotificationComponent() {
    }
    /**
     * @return {?}
     */
    DefaultNotificationComponent.prototype.handleCloseButtonClick = /**
     * @return {?}
     */
    function () {
        if (this.defaultConfigurationNotification.closeButtonCallback) {
            this.defaultConfigurationNotification.closeButtonCallback();
        }
    };
    /**
     * @return {?}
     */
    DefaultNotificationComponent.prototype.handleApproveButtonClick = /**
     * @return {?}
     */
    function () {
        if (this.defaultConfigurationNotification.approveCallback) {
            this.defaultConfigurationNotification.approveCallback();
        }
    };
    /**
     * @return {?}
     */
    DefaultNotificationComponent.prototype.handleCancelButtonClick = /**
     * @return {?}
     */
    function () {
        if (this.defaultConfigurationNotification.cancelCallback) {
            this.defaultConfigurationNotification.cancelCallback();
        }
    };
    DefaultNotificationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-default-notification',
                    template: "<fd-notification-header [closeButton]=\"!!defaultConfigurationNotification?.closeButtonCallback\"\n                        (closeButtonClick)=\"handleCloseButtonClick()\" [type]=\"type\">\n    <h3 fd-notification-title *ngIf=\"defaultConfigurationNotification?.title\">\n        {{defaultConfigurationNotification?.title}}\n    </h3>\n</fd-notification-header>\n<fd-notification-body>\n    <div fd-notification-content>\n        <div fd-notification-avatar *ngIf=\"defaultConfigurationNotification?.avatar\">\n            <ng-container *ngTemplateOutlet=\"defaultConfigurationNotification?.avatar\"></ng-container>\n        </div>\n        <div fd-notification-text>\n            <div fd-notification-description *ngIf=\"defaultConfigurationNotification?.description\">\n                {{defaultConfigurationNotification?.description}}\n            </div>\n            <div fd-notification-metadata *ngIf=\"defaultConfigurationNotification?.metadata\">\n                {{defaultConfigurationNotification?.metadata}}\n            </div>\n        </div>\n    </div>\n    <fd-notification-footer>\n        <button fd-button [options]=\"'light'\" *ngIf=\"defaultConfigurationNotification?.moreInfo\">\n            {{defaultConfigurationNotification?.moreInfo}}\n        </button>\n        <div fd-notification-actions>\n            <button fd-button [fdType]=\"'positive'\"\n                    *ngIf=\"defaultConfigurationNotification?.approve\"\n                    (click)=\"handleApproveButtonClick()\">\n                {{defaultConfigurationNotification?.approve}}\n            </button>\n            <button fd-button [fdType]=\"'negative'\"\n                    *ngIf=\"defaultConfigurationNotification?.cancel\"\n                    (click)=\"handleCancelButtonClick()\">\n                {{defaultConfigurationNotification?.cancel}}\n            </button>\n        </div>\n    </fd-notification-footer>\n</fd-notification-body>\n"
                }] }
    ];
    return DefaultNotificationComponent;
}());
export { DefaultNotificationComponent };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    DefaultNotificationComponent.prototype.defaultConfigurationNotification;
    /**
     *
     * @type {?}
     */
    DefaultNotificationComponent.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1ub3RpZmljYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ1bmRhbWVudGFsLW5neC9jb3JlLyIsInNvdXJjZXMiOlsibGliL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24tdXRpbHMvZGVmYXVsdC1ub3RpZmljYXRpb24vZGVmYXVsdC1ub3RpZmljYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUlqRDtJQUFBO0lBOEJBLENBQUM7Ozs7SUFsQkcsNkRBQXNCOzs7SUFBdEI7UUFDSSxJQUFJLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQyxtQkFBbUIsRUFBRTtZQUMzRCxJQUFJLENBQUMsZ0NBQWdDLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztTQUMvRDtJQUNMLENBQUM7Ozs7SUFFRCwrREFBd0I7OztJQUF4QjtRQUNJLElBQUksSUFBSSxDQUFDLGdDQUFnQyxDQUFDLGVBQWUsRUFBRTtZQUN2RCxJQUFJLENBQUMsZ0NBQWdDLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDM0Q7SUFDTCxDQUFDOzs7O0lBRUQsOERBQXVCOzs7SUFBdkI7UUFDSSxJQUFJLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQyxjQUFjLEVBQUU7WUFDdEQsSUFBSSxDQUFDLGdDQUFnQyxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQzFEO0lBQ0wsQ0FBQzs7Z0JBNUJKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyw2NURBQW9EO2lCQUN2RDs7SUEyQkQsbUNBQUM7Q0FBQSxBQTlCRCxJQThCQztTQTFCWSw0QkFBNEI7Ozs7OztJQUdyQyx3RUFBc0Q7Ozs7O0lBR3RELDRDQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5vdGlmaWNhdGlvbkRlZmF1bHQgfSBmcm9tICcuLi9ub3RpZmljYXRpb24tZGVmYXVsdCc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25UeXBlIH0gZnJvbSAnLi4vLi4vbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLWRlZmF1bHQtbm90aWZpY2F0aW9uJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZGVmYXVsdC1ub3RpZmljYXRpb24uY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBEZWZhdWx0Tm90aWZpY2F0aW9uQ29tcG9uZW50IHtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgZGVmYXVsdENvbmZpZ3VyYXRpb25Ob3RpZmljYXRpb246IE5vdGlmaWNhdGlvbkRlZmF1bHQ7XG5cbiAgICAvKiogKi9cbiAgICB0eXBlPzogTm90aWZpY2F0aW9uVHlwZTtcblxuICAgIGhhbmRsZUNsb3NlQnV0dG9uQ2xpY2soKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmRlZmF1bHRDb25maWd1cmF0aW9uTm90aWZpY2F0aW9uLmNsb3NlQnV0dG9uQ2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdENvbmZpZ3VyYXRpb25Ob3RpZmljYXRpb24uY2xvc2VCdXR0b25DYWxsYmFjaygpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaGFuZGxlQXBwcm92ZUJ1dHRvbkNsaWNrKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5kZWZhdWx0Q29uZmlndXJhdGlvbk5vdGlmaWNhdGlvbi5hcHByb3ZlQ2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdENvbmZpZ3VyYXRpb25Ob3RpZmljYXRpb24uYXBwcm92ZUNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBoYW5kbGVDYW5jZWxCdXR0b25DbGljaygpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuZGVmYXVsdENvbmZpZ3VyYXRpb25Ob3RpZmljYXRpb24uY2FuY2VsQ2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdENvbmZpZ3VyYXRpb25Ob3RpZmljYXRpb24uY2FuY2VsQ2FsbGJhY2soKTtcbiAgICAgICAgfVxuICAgIH1cblxufVxuIl19