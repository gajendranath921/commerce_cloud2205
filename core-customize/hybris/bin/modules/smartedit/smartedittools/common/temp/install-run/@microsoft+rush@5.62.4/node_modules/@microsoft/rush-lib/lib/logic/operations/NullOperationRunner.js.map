{"version":3,"file":"NullOperationRunner.js","sourceRoot":"","sources":["../../../src/logic/operations/NullOperationRunner.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAK3D;;;GAGG;AACH,MAAa,mBAAmB;IAW9B,YAAmB,IAAY,EAAE,MAAuB;QARxC,mBAAc,GAAY,IAAI,CAAC;QAC/C,oEAAoE;QAC7D,kBAAa,GAAY,KAAK,CAAC;QACtC,iEAAiE;QAC1D,wBAAmB,GAAY,KAAK,CAAC;QAC5C,sDAAsD;QACtC,uBAAkB,GAAY,KAAK,CAAC;QAGlD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,OAAgC;QACxD,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;CACF;AAnBD,kDAmBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { OperationStatus } from './OperationStatus';\nimport { IOperationRunner, IOperationRunnerContext } from './IOperationRunner';\n\n/**\n * Implementation of `IOperationRunner` for operations that require no work, such as empty scripts,\n * or operations that are skipped by filters.\n */\nexport class NullOperationRunner implements IOperationRunner {\n  private readonly _result: OperationStatus;\n  public readonly name: string;\n  public readonly hadEmptyScript: boolean = true;\n  // The operation may never be skipped; it doesn't do anything anyway\n  public isSkipAllowed: boolean = false;\n  // The operation is a no-op, so skip writing an empty cache entry\n  public isCacheWriteAllowed: boolean = false;\n  // Nothing will get logged, no point allowing warnings\n  public readonly warningsAreAllowed: boolean = false;\n\n  public constructor(name: string, result: OperationStatus) {\n    this.name = name;\n    this._result = result;\n  }\n\n  public async executeAsync(context: IOperationRunnerContext): Promise<OperationStatus> {\n    return this._result;\n  }\n}\n"]}