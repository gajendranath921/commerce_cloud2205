import type { BuildCacheConfiguration } from '../../api/BuildCacheConfiguration';
import type { RushConfiguration } from '../../api/RushConfiguration';
import type { IRegisteredCustomParameter } from '../../cli/scriptActions/BaseScriptAction';
import { ProjectChangeAnalyzer } from '../ProjectChangeAnalyzer';
import type { IOperationOptions, IOperationFactory } from './OperationSelector';
import { Operation } from './Operation';
export interface IOperationFactoryOptions {
    rushConfiguration: RushConfiguration;
    buildCacheConfiguration?: BuildCacheConfiguration | undefined;
    isIncrementalBuildAllowed: boolean;
    customParameters: Iterable<IRegisteredCustomParameter>;
    projectChangeAnalyzer: ProjectChangeAnalyzer;
}
export declare class OperationFactory implements IOperationFactory {
    private readonly _options;
    private readonly _customParametersByPhase;
    constructor(options: IOperationFactoryOptions);
    createTask(options: IOperationOptions): Operation;
    private static _getScriptToRun;
    private static _getDisplayName;
    private _getCustomParameterValuesForPhase;
}
//# sourceMappingURL=ShellOperationFactory.d.ts.map