/**
 * @fileoverview added by tsickle
 * Generated from: lib/layout-grid/layout-grid-span.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input } from '@angular/core';
import { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';
var LayoutGridSpanDirective = /** @class */ (function (_super) {
    tslib_1.__extends(LayoutGridSpanDirective, _super);
    /** @hidden */
    function LayoutGridSpanDirective(elementRef) {
        var _this = _super.call(this, elementRef) || this;
        _this.elementRef = elementRef;
        return _this;
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    LayoutGridSpanDirective.prototype._setProperties = /**
     * @hidden
     * @return {?}
     */
    function () {
        if (this.columnSpan) {
            this._addClassToElement('fd-layout-grid__span-column-' + this.columnSpan);
        }
    };
    LayoutGridSpanDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fdLayoutGridSpan], [fd-layout-grid-span]'
                },] }
    ];
    /** @nocollapse */
    LayoutGridSpanDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    LayoutGridSpanDirective.propDecorators = {
        columnSpan: [{ type: Input }]
    };
    return LayoutGridSpanDirective;
}(AbstractFdNgxClass));
export { LayoutGridSpanDirective };
if (false) {
    /**
     * \@Input Column span for the grid system
     * @type {?}
     */
    LayoutGridSpanDirective.prototype.columnSpan;
    /**
     * @type {?}
     * @private
     */
    LayoutGridSpanDirective.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LWdyaWQtc3Bhbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvbGF5b3V0LWdyaWQvbGF5b3V0LWdyaWQtc3Bhbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRXBFO0lBRzZDLG1EQUFrQjtJQWEzRCxjQUFjO0lBQ2QsaUNBQW9CLFVBQXNCO1FBQTFDLFlBQ0ksa0JBQU0sVUFBVSxDQUFDLFNBQ3BCO1FBRm1CLGdCQUFVLEdBQVYsVUFBVSxDQUFZOztJQUUxQyxDQUFDO0lBVkQsY0FBYzs7Ozs7SUFDZCxnREFBYzs7OztJQUFkO1FBQ0ksSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyw4QkFBOEIsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDN0U7SUFDTCxDQUFDOztnQkFkSixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDJDQUEyQztpQkFDdEQ7Ozs7Z0JBTG1CLFVBQVU7Ozs2QkFTekIsS0FBSzs7SUFjViw4QkFBQztDQUFBLEFBcEJELENBRzZDLGtCQUFrQixHQWlCOUQ7U0FqQlksdUJBQXVCOzs7Ozs7SUFHaEMsNkNBQ21COzs7OztJQVVQLDZDQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFic3RyYWN0RmROZ3hDbGFzcyB9IGZyb20gJy4uL3V0aWxzL2Fic3RyYWN0LWZkLW5neC1jbGFzcyc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tmZExheW91dEdyaWRTcGFuXSwgW2ZkLWxheW91dC1ncmlkLXNwYW5dJ1xufSlcbmV4cG9ydCBjbGFzcyBMYXlvdXRHcmlkU3BhbkRpcmVjdGl2ZSBleHRlbmRzIEFic3RyYWN0RmROZ3hDbGFzcyB7XG5cbiAgICAvKiogQElucHV0IENvbHVtbiBzcGFuIGZvciB0aGUgZ3JpZCBzeXN0ZW0gKi9cbiAgICBASW5wdXQoKVxuICAgIGNvbHVtblNwYW46IG51bWJlcjtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgX3NldFByb3BlcnRpZXMoKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbHVtblNwYW4pIHtcbiAgICAgICAgICAgIHRoaXMuX2FkZENsYXNzVG9FbGVtZW50KCdmZC1sYXlvdXQtZ3JpZF9fc3Bhbi1jb2x1bW4tJyArIHRoaXMuY29sdW1uU3Bhbik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgICAgICBzdXBlcihlbGVtZW50UmVmKTtcbiAgICB9XG59XG4iXX0=