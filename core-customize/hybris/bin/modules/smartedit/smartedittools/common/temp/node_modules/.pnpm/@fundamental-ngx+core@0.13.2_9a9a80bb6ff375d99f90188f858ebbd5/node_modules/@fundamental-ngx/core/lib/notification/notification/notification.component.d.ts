import { AfterViewInit, ChangeDetectorRef, ComponentFactoryResolver, ComponentRef, ElementRef, EmbeddedViewRef, TemplateRef, Type, ViewContainerRef } from '@angular/core';
import { NotificationRef } from '../notification-utils/notification-ref';
import { NotificationDefault } from '../notification-utils/notification-default';
import { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';
export declare type NotificationType = 'success' | 'warning' | 'information' | 'error';
export declare type NotificationSize = 's' | 'm';
export declare class NotificationComponent extends AbstractFdNgxClass implements AfterViewInit {
    private elRef;
    private componentFactoryResolver;
    private cdRef;
    private notificationRef;
    /** Size of notification, defined by user, s or m */
    size: string;
    /** Type of Notification 'success' | 'warning' | 'information' | 'error' */
    type: NotificationType;
    containerRef: ViewContainerRef;
    id: string;
    escKeyCloseable: boolean;
    focusTrapped: boolean;
    ariaLabelledBy: string;
    defaultNotificationConfiguration: NotificationDefault;
    ariaLabel: string;
    ariaDescribedBy: string;
    childComponentType: TemplateRef<any> | Type<any> | NotificationDefault;
    backdropClickCloseable: boolean;
    hasBackdrop: boolean;
    notificationPanelClass: string;
    componentRef: ComponentRef<any> | EmbeddedViewRef<any>;
    constructor(elRef: ElementRef, componentFactoryResolver: ComponentFactoryResolver, cdRef: ChangeDetectorRef, notificationRef: NotificationRef);
    ngAfterViewInit(): void;
    closeNotificationEsc(event: KeyboardEvent): void;
    private createFromDefaultConfiguration;
    private loadFromComponent;
    private loadFromTemplate;
    _setProperties(): void;
}
