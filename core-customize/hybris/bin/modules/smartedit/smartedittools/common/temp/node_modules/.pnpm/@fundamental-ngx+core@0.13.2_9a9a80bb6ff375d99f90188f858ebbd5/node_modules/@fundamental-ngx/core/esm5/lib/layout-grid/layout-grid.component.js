/**
 * @fileoverview added by tsickle
 * Generated from: lib/layout-grid/layout-grid.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';
import { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';
/**
 * Use a layout grid to arrange components evenly in a grid layout.
 */
var LayoutGridComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LayoutGridComponent, _super);
    /** @hidden */
    function LayoutGridComponent(elementRef) {
        var _this = _super.call(this, elementRef) || this;
        _this.elementRef = elementRef;
        /**
         * Whether the grid should have a gap.
         */
        _this.nogap = false;
        return _this;
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    LayoutGridComponent.prototype._setProperties = /**
     * @hidden
     * @return {?}
     */
    function () {
        this._addClassToElement('fd-layout-grid');
        if (this.nogap) {
            this._addClassToElement('fd-layout-grid--no-gap');
        }
        if (this.gapSize) {
            this._addClassToElement('fd-layout-grid--gap-' + this.gapSize);
        }
        if (this.col) {
            this._addClassToElement('fd-layout-grid--col-' + this.col);
        }
    };
    LayoutGridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-layout-grid',
                    template: "<ng-content></ng-content>",
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: ["/*!\n * Fundamental Library Styles v0.4.1\n * Copyright (c) 2020 SAP SE or an SAP affiliate company.\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/master/LICENSE)\n *//*!\n.fd-layout-grid\n*/.fd-layout-grid{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0;border:0;display:-ms-grid;display:grid;-ms-grid-columns:(1fr)[3];grid-template-columns:repeat(3,1fr);grid-gap:16px;grid-gap:var(--fd-width-gutter,16px)}.fd-layout-grid:after,.fd-layout-grid:before{box-sizing:inherit;font-size:inherit}.fd-layout-grid--no-gap{grid-gap:0}.fd-layout-grid--no-gap>*{box-shadow:none}.fd-layout-grid--gap-1{grid-gap:1px}.fd-layout-grid--gap-1>*{box-shadow:none}.fd-layout-grid--col-1{-ms-grid-columns:(1fr)[1];grid-template-columns:repeat(1,1fr)}.fd-layout-grid--col-2{-ms-grid-columns:(1fr)[2];grid-template-columns:repeat(2,1fr)}.fd-layout-grid--col-3{-ms-grid-columns:(1fr)[3];grid-template-columns:repeat(3,1fr)}.fd-layout-grid--col-4{-ms-grid-columns:(1fr)[4];grid-template-columns:repeat(4,1fr)}.fd-layout-grid--col-5{-ms-grid-columns:(1fr)[5];grid-template-columns:repeat(5,1fr)}.fd-layout-grid--col-6{-ms-grid-columns:(1fr)[6];grid-template-columns:repeat(6,1fr)}.fd-layout-grid__span-row-2{-ms-grid-row-span:2;grid-row:span 2}.fd-layout-grid__span-column-2{-ms-grid-column-span:2;grid-column:span 2}.fd-layout-grid__span-row-3{-ms-grid-row-span:3;grid-row:span 3}.fd-layout-grid__span-column-3{-ms-grid-column-span:3;grid-column:span 3}.fd-layout-grid__span-row-4{-ms-grid-row-span:4;grid-row:span 4}.fd-layout-grid__span-column-4{-ms-grid-column-span:4;grid-column:span 4}.fd-layout-grid__span-row-5{-ms-grid-row-span:5;grid-row:span 5}.fd-layout-grid__span-column-5{-ms-grid-column-span:5;grid-column:span 5}.fd-layout-grid__span-row-6{-ms-grid-row-span:6;grid-row:span 6}.fd-layout-grid__span-column-6{-ms-grid-column-span:6;grid-column:span 6}"]
                }] }
    ];
    /** @nocollapse */
    LayoutGridComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    LayoutGridComponent.propDecorators = {
        col: [{ type: Input }],
        nogap: [{ type: Input }],
        gapSize: [{ type: Input }]
    };
    return LayoutGridComponent;
}(AbstractFdNgxClass));
export { LayoutGridComponent };
if (false) {
    /**
     * \@Input Column span for the grid system
     * @type {?}
     */
    LayoutGridComponent.prototype.col;
    /**
     * Whether the grid should have a gap.
     * @type {?}
     */
    LayoutGridComponent.prototype.nogap;
    /**
     * Whether the grid should have a gap.
     * @type {?}
     */
    LayoutGridComponent.prototype.gapSize;
    /**
     * @type {?}
     * @private
     */
    LayoutGridComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LWdyaWQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ1bmRhbWVudGFsLW5neC9jb3JlLyIsInNvdXJjZXMiOlsibGliL2xheW91dC1ncmlkL2xheW91dC1ncmlkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7Ozs7QUFLcEU7SUFPeUMsK0NBQWtCO0lBZ0N2RCxjQUFjO0lBQ2QsNkJBQW9CLFVBQXNCO1FBQTFDLFlBQ0ksa0JBQU0sVUFBVSxDQUFDLFNBQ3BCO1FBRm1CLGdCQUFVLEdBQVYsVUFBVSxDQUFZOzs7O1FBekIxQyxXQUFLLEdBQVksS0FBSyxDQUFDOztJQTJCdkIsQ0FBQztJQXJCRCxjQUFjOzs7OztJQUNkLDRDQUFjOzs7O0lBQWQ7UUFFSSxJQUFJLENBQUMsa0JBQWtCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUUxQyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDWixJQUFJLENBQUMsa0JBQWtCLENBQUMsd0JBQXdCLENBQUMsQ0FBQztTQUNyRDtRQUVELElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNkLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDbEU7UUFFRCxJQUFJLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDVixJQUFJLENBQUMsa0JBQWtCLENBQUMsc0JBQXNCLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQzlEO0lBQ0wsQ0FBQzs7Z0JBckNKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFFckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2lCQUNsRDs7OztnQkFaNEMsVUFBVTs7O3NCQWdCbEQsS0FBSzt3QkFJTCxLQUFLOzBCQUlMLEtBQUs7O0lBeUJWLDBCQUFDO0NBQUEsQUEzQ0QsQ0FPeUMsa0JBQWtCLEdBb0MxRDtTQXBDWSxtQkFBbUI7Ozs7OztJQUc1QixrQ0FDWTs7Ozs7SUFHWixvQ0FDdUI7Ozs7O0lBR3ZCLHNDQUNnQjs7Ozs7SUFxQkoseUNBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBYnN0cmFjdEZkTmd4Q2xhc3MgfSBmcm9tICcuLi91dGlscy9hYnN0cmFjdC1mZC1uZ3gtY2xhc3MnO1xuXG4vKipcbiAqIFVzZSBhIGxheW91dCBncmlkIHRvIGFycmFuZ2UgY29tcG9uZW50cyBldmVubHkgaW4gYSBncmlkIGxheW91dC5cbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdmZC1sYXlvdXQtZ3JpZCcsXG4gICAgdGVtcGxhdGU6IGA8bmctY29udGVudD48L25nLWNvbnRlbnQ+YCxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIHN0eWxlVXJsczogWycuL2xheW91dC1ncmlkLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgTGF5b3V0R3JpZENvbXBvbmVudCBleHRlbmRzIEFic3RyYWN0RmROZ3hDbGFzcyB7XG5cbiAgICAvKiogQElucHV0IENvbHVtbiBzcGFuIGZvciB0aGUgZ3JpZCBzeXN0ZW0gKi9cbiAgICBASW5wdXQoKVxuICAgIGNvbDogbnVtYmVyO1xuXG4gICAgLyoqIFdoZXRoZXIgdGhlIGdyaWQgc2hvdWxkIGhhdmUgYSBnYXAuICovXG4gICAgQElucHV0KClcbiAgICBub2dhcDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgLyoqIFdoZXRoZXIgdGhlIGdyaWQgc2hvdWxkIGhhdmUgYSBnYXAuICovXG4gICAgQElucHV0KClcbiAgICBnYXBTaXplOiBudW1iZXI7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIF9zZXRQcm9wZXJ0aWVzKCkge1xuXG4gICAgICAgIHRoaXMuX2FkZENsYXNzVG9FbGVtZW50KCdmZC1sYXlvdXQtZ3JpZCcpO1xuXG4gICAgICAgIGlmICh0aGlzLm5vZ2FwKSB7XG4gICAgICAgICAgICB0aGlzLl9hZGRDbGFzc1RvRWxlbWVudCgnZmQtbGF5b3V0LWdyaWQtLW5vLWdhcCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuZ2FwU2l6ZSkge1xuICAgICAgICAgICAgdGhpcy5fYWRkQ2xhc3NUb0VsZW1lbnQoJ2ZkLWxheW91dC1ncmlkLS1nYXAtJyArIHRoaXMuZ2FwU2l6ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5jb2wpIHtcbiAgICAgICAgICAgIHRoaXMuX2FkZENsYXNzVG9FbGVtZW50KCdmZC1sYXlvdXQtZ3JpZC0tY29sLScgKyB0aGlzLmNvbCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgICAgICBzdXBlcihlbGVtZW50UmVmKTtcbiAgICB9XG59XG4iXX0=