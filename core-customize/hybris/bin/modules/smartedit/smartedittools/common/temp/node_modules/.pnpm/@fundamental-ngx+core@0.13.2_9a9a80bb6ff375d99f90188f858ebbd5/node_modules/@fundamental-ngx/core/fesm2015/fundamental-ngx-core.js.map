{"version":3,"file":"fundamental-ngx-core.js","sources":["ng://@fundamental-ngx/core/lib/utils/directives/only-digits.directive.ts","ng://@fundamental-ngx/core/lib/utils/pipes/displayFn.pipe.ts","ng://@fundamental-ngx/core/lib/utils/pipes/search-highlight.pipe.ts","ng://@fundamental-ngx/core/lib/utils/pipes/two-digits.pipe.ts","ng://@fundamental-ngx/core/lib/utils/pipes/pipe.module.ts","ng://@fundamental-ngx/core/lib/utils/drag-and-drop/dnd-container/dnd-container.directive.ts","ng://@fundamental-ngx/core/lib/utils/drag-and-drop/dnd-list/dnd-list.directive.ts","ng://@fundamental-ngx/core/lib/utils/drag-and-drop/drag-and-drop.module.ts","ng://@fundamental-ngx/core/lib/utils/interfaces/css-class-builder.interface.ts","ng://@fundamental-ngx/core/lib/utils/interfaces/css-style-builder.interface.ts","ng://@fundamental-ngx/core/lib/utils/interfaces/has-element-ref.interface.ts","ng://@fundamental-ngx/core/lib/utils/decorators/apply-css-class.decorator.ts","ng://@fundamental-ngx/core/lib/utils/decorators/apply-css-style.decorator.ts","ng://@fundamental-ngx/core/lib/utils/dynamic-component/dynamic-component-config.ts","ng://@fundamental-ngx/core/lib/utils/dynamic-component/dynamic-component-injector.ts","ng://@fundamental-ngx/core/lib/utils/dynamic-component/dynamic-component.service.ts","ng://@fundamental-ngx/core/lib/utils/functions/compare-objects.ts","ng://@fundamental-ngx/core/lib/button/button.component.ts","ng://@fundamental-ngx/core/lib/button/button.module.ts","ng://@fundamental-ngx/core/lib/utils/abstract-fd-ngx-class.ts","ng://@fundamental-ngx/core/lib/icon/icon.component.ts","ng://@fundamental-ngx/core/lib/icon/icon.module.ts","ng://@fundamental-ngx/core/lib/action-bar/action-bar.component.ts","ng://@fundamental-ngx/core/lib/action-bar/action-bar-title/action-bar-title.directive.ts","ng://@fundamental-ngx/core/lib/action-bar/action-bar-description/action-bar-description.directive.ts","ng://@fundamental-ngx/core/lib/action-bar/action-bar-header/action-bar-header.directive.ts","ng://@fundamental-ngx/core/lib/action-bar/action-bar-actions/action-bar-actions.directive.ts","ng://@fundamental-ngx/core/lib/action-bar/action-bar-back/action-bar-back.directive.ts","ng://@fundamental-ngx/core/lib/action-bar/action-bar-mobile/action-bar-mobile.directive.ts","ng://@fundamental-ngx/core/lib/action-bar/action-bar.module.ts","ng://@fundamental-ngx/core/lib/alert/alert-utils/alert-animations.ts","ng://@fundamental-ngx/core/lib/alert/alert-utils/alert-ref.ts","ng://@fundamental-ngx/core/lib/alert/alert.component.ts","ng://@fundamental-ngx/core/lib/alert/alert-utils/alert-container.component.ts","ng://@fundamental-ngx/core/lib/alert/alert-utils/alert-config.ts","ng://@fundamental-ngx/core/lib/alert/alert-service/alert.service.ts","ng://@fundamental-ngx/core/lib/alert/alert.module.ts","ng://@fundamental-ngx/core/lib/badge-label/badge-label/badge.component.ts","ng://@fundamental-ngx/core/lib/badge-label/label/label.component.ts","ng://@fundamental-ngx/core/lib/badge-label/status-label/status-label.component.ts","ng://@fundamental-ngx/core/lib/badge-label/badge-label.module.ts","ng://@fundamental-ngx/core/lib/breadcrumb/breadcrumb.component.ts","ng://@fundamental-ngx/core/lib/breadcrumb/breadcrumb-item.directive.ts","ng://@fundamental-ngx/core/lib/breadcrumb/breadcrumb-link.directive.ts","ng://@fundamental-ngx/core/lib/breadcrumb/breadcrumb.module.ts","ng://@fundamental-ngx/core/lib/busy-indicator/busy-indicator.component.ts","ng://@fundamental-ngx/core/lib/busy-indicator/busy-indicator.module.ts","ng://@fundamental-ngx/core/lib/button-group/button-group.component.ts","ng://@fundamental-ngx/core/lib/button-group/button-grouped.directive.ts","ng://@fundamental-ngx/core/lib/button-group/button-group.module.ts","ng://@fundamental-ngx/core/lib/calendar/i18n/calendar-i18n-labels.ts","ng://@fundamental-ngx/core/lib/calendar/i18n/calendar-i18n.ts","ng://@fundamental-ngx/core/lib/calendar/calendar-header/calendar-header.component.ts","ng://@fundamental-ngx/core/lib/calendar/calendar.service.ts","ng://@fundamental-ngx/core/lib/calendar/models/fd-date.ts","ng://@fundamental-ngx/core/lib/calendar/calendar-views/calendar-day-view/calendar-day-view.component.ts","ng://@fundamental-ngx/core/lib/calendar/calendar-views/calendar-month-view/calendar-month-view.component.ts","ng://@fundamental-ngx/core/lib/calendar/calendar-views/calendar-year-view/calendar-year-view.component.ts","ng://@fundamental-ngx/core/lib/calendar/calendar.component.ts","ng://@fundamental-ngx/core/lib/calendar/calendar.module.ts","ng://@fundamental-ngx/core/lib/popover/popover-directive/popover-container.ts","ng://@fundamental-ngx/core/lib/popover/popover-directive/popover.directive.ts","ng://@fundamental-ngx/core/lib/popover/popover-dropdown/popover-dropdown.component.ts","ng://@fundamental-ngx/core/lib/popover/popover.component.ts","ng://@fundamental-ngx/core/lib/popover/popover-control/popover-control.component.ts","ng://@fundamental-ngx/core/lib/popover/popover-body/popover-body.component.ts","ng://@fundamental-ngx/core/lib/popover/popover.module.ts","ng://@fundamental-ngx/core/lib/menu/menu.component.ts","ng://@fundamental-ngx/core/lib/menu/menu-group.component.ts","ng://@fundamental-ngx/core/lib/menu/menu-title.directive.ts","ng://@fundamental-ngx/core/lib/menu/menu-list.directive.ts","ng://@fundamental-ngx/core/lib/menu/menu-item.directive.ts","ng://@fundamental-ngx/core/lib/menu/menu-addon.directive.ts","ng://@fundamental-ngx/core/lib/menu/menu-item-addon.directive.ts","ng://@fundamental-ngx/core/lib/menu/menu.module.ts","ng://@fundamental-ngx/core/lib/menu/menu-keyboard.service.ts","ng://@fundamental-ngx/core/lib/combobox/combobox.component.ts","ng://@fundamental-ngx/core/lib/input-group/input-group-directives.ts","ng://@fundamental-ngx/core/lib/input-group/input-group.component.ts","ng://@fundamental-ngx/core/lib/input-group/input-group-number.component.ts","ng://@fundamental-ngx/core/lib/input-group/input-group.module.ts","ng://@fundamental-ngx/core/lib/combobox/combobox.module.ts","ng://@fundamental-ngx/core/lib/checkbox/checkbox/checkbox.component.ts","ng://@fundamental-ngx/core/lib/checkbox/checkbox.module.ts","ng://@fundamental-ngx/core/lib/date-picker/format/date-parser.ts","ng://@fundamental-ngx/core/lib/date-picker/date-picker.component.ts","ng://@fundamental-ngx/core/lib/date-picker/date-picker.module.ts","ng://@fundamental-ngx/core/lib/time/time-object.ts","ng://@fundamental-ngx/core/lib/time/i18n/time-i18n-labels.ts","ng://@fundamental-ngx/core/lib/time/i18n/time-i18n.ts","ng://@fundamental-ngx/core/lib/time/time.component.ts","ng://@fundamental-ngx/core/lib/datetime-picker/models/fd-datetime.ts","ng://@fundamental-ngx/core/lib/datetime-picker/format/datetime-parser.ts","ng://@fundamental-ngx/core/lib/datetime-picker/datetime-picker.component.ts","ng://@fundamental-ngx/core/lib/form/fieldset/fieldset.component.ts","ng://@fundamental-ngx/core/lib/form/form-control/form-control.directive.ts","ng://@fundamental-ngx/core/lib/form/form-item/form-item.component.ts","ng://@fundamental-ngx/core/lib/form/form-label/form-label.component.ts","ng://@fundamental-ngx/core/lib/form/form-legend/form-legend.directive.ts","ng://@fundamental-ngx/core/lib/form/form-message/form-message.component.ts","ng://@fundamental-ngx/core/lib/form/form-group/form-group.component.ts","ng://@fundamental-ngx/core/lib/form/form-input-message-group/form-input-message-group.component.ts","ng://@fundamental-ngx/core/lib/form/form.module.ts","ng://@fundamental-ngx/core/lib/time/time.module.ts","ng://@fundamental-ngx/core/lib/datetime-picker/datetime-picker.module.ts","ng://@fundamental-ngx/core/lib/file-input/file-input.component.ts","ng://@fundamental-ngx/core/lib/file-input/directives/file-select.directive.ts","ng://@fundamental-ngx/core/lib/file-input/directives/file-dragndrop.directive.ts","ng://@fundamental-ngx/core/lib/file-input/file-input.module.ts","ng://@fundamental-ngx/core/lib/identifier/identifier.component.ts","ng://@fundamental-ngx/core/lib/identifier/identifier.module.ts","ng://@fundamental-ngx/core/lib/image/image.component.ts","ng://@fundamental-ngx/core/lib/image/image.module.ts","ng://@fundamental-ngx/core/lib/infinite-scroll/infinite-scroll.directive.ts","ng://@fundamental-ngx/core/lib/infinite-scroll/infinite-scroll.module.ts","ng://@fundamental-ngx/core/lib/inline-help/inline-help.component.ts","ng://@fundamental-ngx/core/lib/inline-help/inline-help.module.ts","ng://@fundamental-ngx/core/lib/list/list.component.ts","ng://@fundamental-ngx/core/lib/list/list-item.directive.ts","ng://@fundamental-ngx/core/lib/list/list-action.directive.ts","ng://@fundamental-ngx/core/lib/list/list.module.ts","ng://@fundamental-ngx/core/lib/loading-spinner/loading-spinner.component.ts","ng://@fundamental-ngx/core/lib/loading-spinner/loading-spinner.module.ts","ng://@fundamental-ngx/core/lib/modal/modal-utils/modal-animations.ts","ng://@fundamental-ngx/core/lib/modal/modal-utils/modal-ref.ts","ng://@fundamental-ngx/core/lib/modal/modal.component.ts","ng://@fundamental-ngx/core/lib/modal/modal-header/modal-header.component.ts","ng://@fundamental-ngx/core/lib/modal/modal-body/modal-body.component.ts","ng://@fundamental-ngx/core/lib/modal/modal-footer/modal-footer.component.ts","ng://@fundamental-ngx/core/lib/modal/modal-utils/modal-backdrop.ts","ng://@fundamental-ngx/core/lib/modal/modal-utils/modal-container.ts","ng://@fundamental-ngx/core/lib/modal/modal-utils/modal-config.ts","ng://@fundamental-ngx/core/lib/modal/modal-service/modal.service.ts","ng://@fundamental-ngx/core/lib/modal/modal-utils/modal-directives.ts","ng://@fundamental-ngx/core/lib/modal/modal.module.ts","ng://@fundamental-ngx/core/lib/multi-input/multi-input.component.ts","ng://@fundamental-ngx/core/lib/token/token.component.ts","ng://@fundamental-ngx/core/lib/token/token.module.ts","ng://@fundamental-ngx/core/lib/multi-input/multi-input.module.ts","ng://@fundamental-ngx/core/lib/pagination/pagination.service.ts","ng://@fundamental-ngx/core/lib/pagination/pagination.component.ts","ng://@fundamental-ngx/core/lib/pagination/pagination.module.ts","ng://@fundamental-ngx/core/lib/panel/panel.component.ts","ng://@fundamental-ngx/core/lib/panel/panel-header/panel-header.component.ts","ng://@fundamental-ngx/core/lib/panel/panel-head/panel-head.component.ts","ng://@fundamental-ngx/core/lib/panel/panel-title/panel-title.directive.ts","ng://@fundamental-ngx/core/lib/panel/panel-description/panel-description.component.ts","ng://@fundamental-ngx/core/lib/panel/panel-actions/panel-actions.component.ts","ng://@fundamental-ngx/core/lib/panel/panel-filters/panel-filters.component.ts","ng://@fundamental-ngx/core/lib/panel/panel-body/panel-body.component.ts","ng://@fundamental-ngx/core/lib/panel/panel-footer/panel-footer.component.ts","ng://@fundamental-ngx/core/lib/panel/panel.module.ts","ng://@fundamental-ngx/core/lib/scroll-spy/scroll-spy.directive.ts","ng://@fundamental-ngx/core/lib/scroll-spy/scroll-spy.module.ts","ng://@fundamental-ngx/core/lib/shellbar/shellbar.component.ts","ng://@fundamental-ngx/core/lib/shellbar/product-menu/product-menu.component.ts","ng://@fundamental-ngx/core/lib/shellbar/shellbar-subtitle/shellbar-subtitle.component.ts","ng://@fundamental-ngx/core/lib/shellbar/shellbar-action/shellbar-action.component.ts","ng://@fundamental-ngx/core/lib/shellbar/user-menu/shellbar-user-menu.component.ts","ng://@fundamental-ngx/core/lib/shellbar/shellbar-actions/shellbar-actions.component.ts","ng://@fundamental-ngx/core/lib/shellbar/shellbar-logo/shellbar-logo.component.ts","ng://@fundamental-ngx/core/lib/shellbar/shellbar-title/shellbar-title.component.ts","ng://@fundamental-ngx/core/lib/product-switch/product-switch/product-switch.component.ts","ng://@fundamental-ngx/core/lib/product-switch/product-switch-body/product-switch-body.component.ts","ng://@fundamental-ngx/core/lib/product-switch/product-switch.module.ts","ng://@fundamental-ngx/core/lib/shellbar/shellbar-sidenav.directive.ts","ng://@fundamental-ngx/core/lib/shellbar/shellbar.module.ts","ng://@fundamental-ngx/core/lib/nested-list/nested-list-keyboard.service.ts","ng://@fundamental-ngx/core/lib/nested-list/nested-list-directives.ts","ng://@fundamental-ngx/core/lib/nested-list/nested-list-state.service.ts","ng://@fundamental-ngx/core/lib/nested-list/nested-link/nested-link.directive.ts","ng://@fundamental-ngx/core/lib/nested-list/nested-list-popover/nested-list-popover.component.ts","ng://@fundamental-ngx/core/lib/nested-list/prepared-nested-list/prepared-nested-list.component.ts","ng://@fundamental-ngx/core/lib/nested-list/nested-item/nested-item.directive.ts","ng://@fundamental-ngx/core/lib/nested-list/nested-list/nested-list.directive.ts","ng://@fundamental-ngx/core/lib/side-navigation/side-navigation-utility.directive.ts","ng://@fundamental-ngx/core/lib/side-navigation/side-navigation-main.directive.ts","ng://@fundamental-ngx/core/lib/side-navigation/side-navigation.component.ts","ng://@fundamental-ngx/core/lib/nested-list/nested-list.module.ts","ng://@fundamental-ngx/core/lib/side-navigation/side-navigation.module.ts","ng://@fundamental-ngx/core/lib/select/option/option.component.ts","ng://@fundamental-ngx/core/lib/select/select.component.ts","ng://@fundamental-ngx/core/lib/select/select.module.ts","ng://@fundamental-ngx/core/lib/split-button/split-button-utils/split-button.directives.ts","ng://@fundamental-ngx/core/lib/split-button/split-button.component.ts","ng://@fundamental-ngx/core/lib/split-button/split-button.module.ts","ng://@fundamental-ngx/core/lib/table/table.component.ts","ng://@fundamental-ngx/core/lib/table/column-sortable.directive.ts","ng://@fundamental-ngx/core/lib/table/table-responsive-wrapper.directive.ts","ng://@fundamental-ngx/core/lib/table/directives/table-header.directive.ts","ng://@fundamental-ngx/core/lib/table/directives/table-body.directive.ts","ng://@fundamental-ngx/core/lib/table/directives/table-row.directive.ts","ng://@fundamental-ngx/core/lib/table/directives/table-cell.directive.ts","ng://@fundamental-ngx/core/lib/table/table-wrapper.component.ts","ng://@fundamental-ngx/core/lib/table/table.module.ts","ng://@fundamental-ngx/core/lib/tabs/tab-utils/tab-directives.ts","ng://@fundamental-ngx/core/lib/tabs/tab/tab-panel.component.ts","ng://@fundamental-ngx/core/lib/tabs/tabs.service.ts","ng://@fundamental-ngx/core/lib/tabs/tab-list.component.ts","ng://@fundamental-ngx/core/lib/tabs/tab-link/tab-link.directive.ts","ng://@fundamental-ngx/core/lib/tabs/tab-item/tab-item.directive.ts","ng://@fundamental-ngx/core/lib/tabs/tab-nav/tab-nav.component.ts","ng://@fundamental-ngx/core/lib/tabs/tabs.module.ts","ng://@fundamental-ngx/core/lib/tile/tile.component.ts","ng://@fundamental-ngx/core/lib/tile/tile-content/tile-content.directive.ts","ng://@fundamental-ngx/core/lib/tile/tile-text/tile-text.directive.ts","ng://@fundamental-ngx/core/lib/tile/tile-title/tile-title.directive.ts","ng://@fundamental-ngx/core/lib/tile/tile-media/tile-media.directive.ts","ng://@fundamental-ngx/core/lib/tile/tile-actions/tile-actions.directive.ts","ng://@fundamental-ngx/core/lib/tile/product-tile.component.ts","ng://@fundamental-ngx/core/lib/tile/product-tile-media/product-tile-media.directive.ts","ng://@fundamental-ngx/core/lib/tile/product-tile-content/product-tile-content.directive.ts","ng://@fundamental-ngx/core/lib/tile/product-tile-text/product-tile-text.directive.ts","ng://@fundamental-ngx/core/lib/tile/product-tile-title/product-tile-title.directive.ts","ng://@fundamental-ngx/core/lib/tile/tile.module.ts","ng://@fundamental-ngx/core/lib/tree/tree-child.component.ts","ng://@fundamental-ngx/core/lib/tree/tree.component.ts","ng://@fundamental-ngx/core/lib/tree/tree.module.ts","ng://@fundamental-ngx/core/lib/time-picker/format/time-parser.ts","ng://@fundamental-ngx/core/lib/time-picker/time-picker.component.ts","ng://@fundamental-ngx/core/lib/time-picker/time-picker.module.ts","ng://@fundamental-ngx/core/lib/toggle/toggle.component.ts","ng://@fundamental-ngx/core/lib/toggle/toggle.module.ts","ng://@fundamental-ngx/core/lib/localizator-editor/localization-editor.directives.ts","ng://@fundamental-ngx/core/lib/localizator-editor/localization-editor-item/localization-editor-item.component.ts","ng://@fundamental-ngx/core/lib/localizator-editor/localization-editor-main/localization-editor-main.component.ts","ng://@fundamental-ngx/core/lib/localizator-editor/localization-editor.component.ts","ng://@fundamental-ngx/core/lib/localizator-editor/localization-editor.module.ts","ng://@fundamental-ngx/core/lib/mega-menu/mega-menu.component.ts","ng://@fundamental-ngx/core/lib/mega-menu/mega-menu-sublink.directive.ts","ng://@fundamental-ngx/core/lib/mega-menu/mega-menu-subitem.directive.ts","ng://@fundamental-ngx/core/lib/mega-menu/mega-menu-link/mega-menu-link.directive.ts","ng://@fundamental-ngx/core/lib/mega-menu/mega-menu-item/mega-menu-item.component.ts","ng://@fundamental-ngx/core/lib/mega-menu/mega-menu-list/mega-menu-list.directive.ts","ng://@fundamental-ngx/core/lib/mega-menu/mega-menu-group/mega-menu-group.component.ts","ng://@fundamental-ngx/core/lib/mega-menu/mega-menu-title/mega-menu-title.directive.ts","ng://@fundamental-ngx/core/lib/mega-menu/mega-menu.module.ts","ng://@fundamental-ngx/core/lib/layout-grid/layout-grid.component.ts","ng://@fundamental-ngx/core/lib/layout-grid/layout-grid-span.directive.ts","ng://@fundamental-ngx/core/lib/layout-grid/layout-grid.module.ts","ng://@fundamental-ngx/core/lib/notification/notification-group/notification-group.component.ts","ng://@fundamental-ngx/core/lib/notification/notification-utils/notification-ref.ts","ng://@fundamental-ngx/core/lib/notification/notification-utils/default-notification/default-notification.component.ts","ng://@fundamental-ngx/core/lib/notification/notification/notification.component.ts","ng://@fundamental-ngx/core/lib/notification/directives/notification-title.directive.ts","ng://@fundamental-ngx/core/lib/notification/directives/notification-content.directive.ts","ng://@fundamental-ngx/core/lib/notification/notification-header/notification-header.component.ts","ng://@fundamental-ngx/core/lib/notification/notification-footer/notification-footer.component.ts","ng://@fundamental-ngx/core/lib/notification/directives/notification-avatar.directive.ts","ng://@fundamental-ngx/core/lib/notification/directives/notification-description.directive.ts","ng://@fundamental-ngx/core/lib/notification/directives/notification-metadata.directive.ts","ng://@fundamental-ngx/core/lib/notification/notification-body/notification-body.component.ts","ng://@fundamental-ngx/core/lib/notification/notification-utils/notification-container.ts","ng://@fundamental-ngx/core/lib/notification/directives/notification-text.directive.ts","ng://@fundamental-ngx/core/lib/notification/directives/notification-actions.directive.ts","ng://@fundamental-ngx/core/lib/notification/notification-utils/notification-config.ts","ng://@fundamental-ngx/core/lib/notification/notification-service/notification.service.ts","ng://@fundamental-ngx/core/lib/notification/notification.module.ts","ng://@fundamental-ngx/core/lib/radio/radio-button/radio-button.component.ts","ng://@fundamental-ngx/core/lib/radio/radio.module.ts","ng://@fundamental-ngx/core/lib/fundamental-ngx-core.module.ts","ng://@fundamental-ngx/core/lib/calendar/models/fd-range-date.ts","ng://@fundamental-ngx/core/lib/combobox/combobox-item.ts","ng://@fundamental-ngx/core/lib/menu/default-menu-item.ts","ng://@fundamental-ngx/core/lib/modal/modal-utils/modal-position.ts","ng://@fundamental-ngx/core/lib/nested-list/nested-list-model.ts","ng://@fundamental-ngx/core/lib/notification/notification-utils/notification-default.ts","ng://@fundamental-ngx/core/lib/pagination/pagination.model.ts","ng://@fundamental-ngx/core/lib/product-switch/product-switch-body/product-switch.item.ts","ng://@fundamental-ngx/core/lib/shellbar/model/shellbar-menu-item.ts","ng://@fundamental-ngx/core/lib/shellbar/model/shellbar-user.ts","ng://@fundamental-ngx/core/lib/shellbar/model/shellbar-user-menu.ts","ng://@fundamental-ngx/core/lib/side-navigation/side-navigation-model.ts","ng://@fundamental-ngx/core/lib/tree/tree-row-object.model.ts"],"sourcesContent":["import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[fdOnlyDigits], [fd-only-digits]'\n})\nexport class OnlyDigitsDirective {\n\n    @HostListener('keydown', ['$event'])\n    onKeyDown(e: KeyboardEvent) {\n        if (\n            // Allow: Delete, Backspace, Tab, Escape, Enter\n            [46, 8, 9, 27, 13].indexOf(e.keyCode) !== -1 ||\n            (e.keyCode === 65 && e.ctrlKey === true) || // Allow: Ctrl+A\n            (e.keyCode === 67 && e.ctrlKey === true) || // Allow: Ctrl+C\n            (e.keyCode === 86 && e.ctrlKey === true) || // Allow: Ctrl+V\n            (e.keyCode === 88 && e.ctrlKey === true) || // Allow: Ctrl+X\n            (e.keyCode === 65 && e.metaKey === true) || // Cmd+A (Mac)\n            (e.keyCode === 67 && e.metaKey === true) || // Cmd+C (Mac)\n            (e.keyCode === 86 && e.metaKey === true) || // Cmd+V (Mac)\n            (e.keyCode === 88 && e.metaKey === true) || // Cmd+X (Mac)\n            (e.keyCode >= 35 && e.keyCode <= 39) // Home, End, Left, Right\n        ) {\n            return;  // let it happen, don't do anything\n        }\n        // Ensure that it is a number and stop the keypress\n        if (\n            (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&\n            (e.keyCode < 96 || e.keyCode > 105)\n        ) {\n            e.preventDefault();\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'displayFnPipe'\n})\n\nexport class DisplayFnPipe implements PipeTransform {\n\n    transform(value: any, displayFn: Function): string {\n        return displayFn(value);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'highlight'\n})\n\nexport class SearchHighlightPipe implements PipeTransform {\n\n    transform(value: string, args: string, active: boolean = true): string {\n        if (args && value && active) {\n            const startIndex = value.toLowerCase().indexOf(args.toLowerCase());\n            if (startIndex !== -1) {\n                const matchingString = value.substr(startIndex, args.length);\n                return value.replace(matchingString, '<strong>' + matchingString + '</strong>');\n            }\n\n        }\n        return value;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'twoDigits'\n})\n\nexport class TwoDigitsPipe implements PipeTransform {\n\n    transform(value: number, enable: boolean = true): string {\n        if ((value || value === 0) && enable) {\n            return value < 10 ? '0' + value : value.toString();\n        } else {\n            return String(value);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { DisplayFnPipe } from './displayFn.pipe';\nimport { SearchHighlightPipe } from './search-highlight.pipe';\nimport { TwoDigitsPipe } from './two-digits.pipe';\n\n@NgModule({\n    declarations: [\n        DisplayFnPipe,\n        SearchHighlightPipe,\n        TwoDigitsPipe\n    ],\n    exports: [\n        DisplayFnPipe,\n        SearchHighlightPipe,\n        TwoDigitsPipe\n    ]\n})\nexport class PipeModule {}\n","import {\n    AfterContentInit,\n    ContentChild, Directive,\n    ElementRef, EventEmitter, Input,\n    Output\n} from '@angular/core';\nimport { CdkDrag, CdkDragMove } from '@angular/cdk/drag-drop';\nimport { ElementChord, LinkPosition } from '../dnd-list/dnd-list.directive';\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-dnd-container]',\n    host: {\n        'class': 'fd-dnd-container'\n    }\n})\nexport class DndContainerDirective implements AfterContentInit {\n\n    /** Class added to element, when it's dragged. */\n    readonly CLASS_WHEN_ELEMENT_DRAGGED: string = 'fd-dnd-on-drag';\n\n    private placeholderElement: HTMLElement;\n\n    private lineElement: HTMLElement;\n    /** Event thrown when the element is moved by 1px */\n    @Output()\n    readonly moved: EventEmitter<CdkDragMove> = new EventEmitter<CdkDragMove>();\n\n    /** Event thrown when the element is released */\n    @Output()\n    readonly released: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event thrown when the element is started to be dragged */\n    @Output()\n    readonly started: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Whether this element should stick in one place, without changing position */\n    @Input() stickInPlace: boolean = false;\n\n    /** @hidden */\n    @ContentChild(CdkDrag, { static: false })\n    cdkDrag: CdkDrag;\n\n    constructor(\n        public element: ElementRef,\n    ) {}\n\n    /** @hidden */\n    public getElementChord(isBefore: boolean, listMode: boolean): ElementChord {\n\n        /** Takes distance from the beginning of window page */\n        const rect = <DOMRect>this.element.nativeElement.getBoundingClientRect();\n\n        const position: LinkPosition = isBefore ? 'before' : 'after';\n\n        /** Depending on the position, gets the left or right side of element */\n        const x = rect.x + (isBefore || listMode ? 0 : this.element.nativeElement.offsetWidth);\n\n        /** Vertically distance is counted by distance from top of the side + half of the element height */\n        return {\n            x: x,\n            position: position,\n            y: rect.y + (this.element.nativeElement.offsetHeight / 2),\n            stickToPosition: this.stickInPlace\n        };\n    }\n\n    /** @hidden */\n    public ngAfterContentInit(): void {\n        this.cdkDrag.moved.subscribe((event: CdkDragMove) => {\n            this.onCdkMove(event);\n        });\n        this.cdkDrag.released.subscribe(() => {\n            this.onCdkDragReleased();\n        });\n        this.cdkDrag.started.subscribe(() => {\n            this.onCdkDragStart();\n        });\n    }\n\n    /** @hidden */\n    public onCdkMove(cdkMovedEvent: CdkDragMove): void {\n        this.moved.emit(cdkMovedEvent);\n    }\n\n    /** @hidden */\n    public onCdkDragReleased(): void {\n        /** Remove class which is added, when element is dragged */\n        this.element.nativeElement.classList.remove(this.CLASS_WHEN_ELEMENT_DRAGGED);\n        this.released.emit();\n\n        /** Resets the position of element. */\n        this.cdkDrag.reset();\n\n        /** Removes placeholder element */\n        this.removePlaceholder();\n    }\n\n    /** @hidden */\n    public onCdkDragStart(): void {\n        /** Adds class */\n        this.element.nativeElement.classList.add(this.CLASS_WHEN_ELEMENT_DRAGGED);\n        if (!this.placeholderElement) {\n            this.createPlaceHolder();\n        }\n        this.started.emit();\n    }\n\n    /** @hidden */\n    public removePlaceholder(): void {\n        if (this.placeholderElement) {\n            this.placeholderElement.remove();\n            this.placeholderElement = null;\n        }\n    }\n\n    /** @hidden */\n    public removeLine(): void {\n        if (this.lineElement) {\n            this.lineElement.remove();\n            this.lineElement = null;\n        }\n    }\n\n    /** @hidden */\n    public createLine(position: LinkPosition, listMode: boolean): void {\n        /** Creating of line element */\n        this.lineElement = document.createElement('DIV');\n        if (listMode) {\n            this.lineElement.classList.add('drop-area__line');\n            this.lineElement.classList.add('drop-area__line--horizontal');\n        } else {\n            this.lineElement.classList.add('drop-area__line');\n            this.lineElement.classList.add('drop-area__line--vertical');\n        }\n        if (position === 'after') {\n            this.lineElement.classList.add('after');\n        }\n        if (position === 'before') {\n            this.lineElement.classList.add('before');\n        }\n\n        /** Putting element to the container */\n        this.element.nativeElement.appendChild(this.lineElement);\n    }\n\n    /** @hidden */\n    private createPlaceHolder(): void {\n        /** Cloning container element */\n        const clone = this.cdkDrag.element.nativeElement.cloneNode(true);\n\n        /** Taking cloned element reference */\n        this.placeholderElement = clone.firstChild.parentElement;\n\n        this.placeholderElement.classList.add('fd-dnd-placeholder');\n\n        /** Including element to the container */\n        this.element.nativeElement.appendChild(clone);\n    }\n}\n","import { AfterContentInit, ContentChildren, Directive, ElementRef, EventEmitter, Input, OnInit, Output, QueryList } from '@angular/core';\nimport { CdkDrag, CdkDragMove } from '@angular/cdk/drag-drop';\nimport { DndContainerDirective } from '../dnd-container/dnd-container.directive';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport type LinkPosition = 'after' | 'before';\n\nexport interface ElementChord {\n    x: number;\n    y: number;\n    position: LinkPosition;\n    stickToPosition?: boolean\n}\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n  selector: '[fd-dnd-list]',\n})\nexport class DndListDirective implements AfterContentInit {\n\n    /** @hidden */\n    @ContentChildren(DndContainerDirective)\n    dndContainerItems: QueryList<DndContainerDirective>;\n\n    /** Defines if the distance between elements should be counted only by vertical distance */\n    @Input()\n    listMode: boolean = false;\n\n    /** Array of items, that will be sorted */\n    @Input()\n    public items: Array<any>;\n\n    /** Event that is thrown, when the item is dropped */\n    @Output()\n    readonly itemsChange: EventEmitter<Array<any>> = new EventEmitter<any>();\n\n    /** @hidden */\n    private elementChords: ElementChord[];\n\n    /** @hidden */\n    private draggedItemIndex: number = 1000000;\n\n    /** @hidden */\n    private closestLinkIndex: number = null;\n\n    /** @hidden */\n    private closestLinkPosition: 'before' | 'after' = null;\n\n    /** An RxJS Subject that will kill the current data stream (for unsubscribing)  */\n    private readonly refresh$: Subject<void> = new Subject<void>();\n\n    /** @hidden */\n    public ngAfterContentInit(): void {\n        this.refreshQueryList();\n        this.dndContainerItems.changes.subscribe(() => this.refreshQueryList());\n    }\n\n    /** Method called, when the item is being moved by 1 px */\n    onMove(event: CdkDragMove): void {\n        /** Taking mouse position */\n        const mousePosition: {\n            x: number;\n            y: number;\n        } = event.pointerPosition;\n\n        /** Temporary object, to store lowest distance values */\n        let lowestDistanceItem: {\n            index: number,\n            distance: number\n        } = null;\n\n        this.elementChords.forEach((element, index) => {\n            /** Check if element can be replaced */\n            if (!element.stickToPosition) {\n                /** Counting the distances by the mileage of the corner of element and cursor position */\n                const distance = Math.hypot(element.x - mousePosition.x, element.y - mousePosition.y);\n                if (!lowestDistanceItem || distance < lowestDistanceItem.distance) {\n                    lowestDistanceItem = { distance: distance, index: index };\n                }\n            }\n        });\n\n        /** If the closest element is different than the old one, new one is picked. It prevents from performance issues */\n        if (lowestDistanceItem.index !== this.closestLinkIndex) {\n            this.closestLinkIndex = lowestDistanceItem.index;\n            this.closestLinkPosition = this.elementChords[lowestDistanceItem.index].position;\n            /** Generating line, that shows where the element will be placed, on drop */\n            this.generateLine(this.closestLinkIndex, this.closestLinkPosition);\n        }\n    }\n\n    /** Method called, when element is started to be dragged */\n    dragStart(ind: number): void {\n        this.draggedItemIndex = ind;\n        const draggedItemElement = this.dndContainerItems.toArray()[ind].element;\n        /** Counting all of the elements's chords */\n        this.elementChords = this.dndContainerItems.toArray().map((link) =>\n            link.getElementChord(this.isBefore(draggedItemElement, link.element), this.listMode)\n        );\n    }\n\n    /** Method called, when element is released */\n    dragEnd(): void {\n\n        const draggedItemIndex = this.draggedItemIndex;\n        const replacedItemIndex = this.closestLinkIndex;\n        const draggedItem = this.items[draggedItemIndex];\n\n        if (draggedItemIndex < replacedItemIndex) {\n            for (let i = draggedItemIndex; i < replacedItemIndex; i++) {\n                this.items[i] = this.items[i + 1];\n            }\n        } else {\n            for (let i = draggedItemIndex; i > replacedItemIndex; i--) {\n                this.items[i] = this.items[i - 1];\n            }\n        }\n\n        /** Replacing items */\n        this.items[replacedItemIndex] = draggedItem;\n\n        this.itemsChange.emit(this.items);\n\n        this.removeAllLines();\n\n        /** Reset */\n        this.elementChords = [];\n        this.closestLinkIndex = null;\n        this.closestLinkPosition = null;\n    }\n\n    /** @hidden */\n    private removeAllLines(): void {\n        this.dndContainerItems.forEach(item => item.removeLine());\n    }\n\n    /** @hidden */\n    private generateLine(closestLinkIndex: number, linkPosition: LinkPosition): void {\n        this.removeAllLines();\n        this.dndContainerItems.toArray()[closestLinkIndex].createLine(linkPosition, this.listMode);\n    }\n\n    /** @hidden */\n    private refreshQueryList(): void {\n        this.refresh$.next();\n        this.dndContainerItems.forEach((item, index) => {\n            item.moved.pipe(takeUntil(this.refresh$)).subscribe(eventMove => this.onMove(eventMove));\n            item.started.pipe(takeUntil(this.refresh$)).subscribe(() => this.dragStart(index));\n            item.released.pipe(takeUntil(this.refresh$)).subscribe(() => this.dragEnd());\n        });\n    }\n\n    /**\n     *  @hidden\n     * Return information if element is placed before the dragged element\n     */\n    private isBefore(draggedElement: ElementRef, targetElement: ElementRef): boolean {\n\n        /** Sometimes the element are not straight in one column, that's why offset is needed */\n        const VERTICAL_OFFSET: number = 20;\n\n        /** Distances from the top of screen */\n        const draggedElementBound = <DOMRect>draggedElement.nativeElement.getBoundingClientRect();\n        const targetElementBound = <DOMRect>targetElement.nativeElement.getBoundingClientRect();\n\n        if (draggedElementBound.y - targetElementBound.y > VERTICAL_OFFSET) {\n            /** If element is higher than the dragged element, it's for sure before */\n            return true;\n        } else if (targetElementBound.y - draggedElementBound.y > VERTICAL_OFFSET) {\n            /** If element is lower than the dragged element, it's for sure after */\n            return false;\n        } else {\n            /** If elements are in same level, the horizontal position decides if it's before/after */\n            return draggedElementBound.x - targetElementBound.x > 0;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DndListDirective } from './dnd-list/dnd-list.directive';\nimport { DndContainerDirective } from './dnd-container/dnd-container.directive';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\n@NgModule({\n    imports: [CommonModule, DragDropModule],\n    exports: [\n        DndContainerDirective,\n        DndListDirective,\n    ],\n    declarations: [DndListDirective, DndContainerDirective]\n})\nexport class DragAndDropModule {}\n","import { HasElementRef } from '../public_api';\n\nexport interface CssClassBuilder extends HasElementRef {\n    class: string\n    buildComponentCssClass(): string;\n}\n","import { HasElementRef, Hash } from '../public_api';\n\nexport interface CssStyleBuilder extends HasElementRef {\n    buildComponentCssStyle(): Hash<number | string>;\n}\n","import { ElementRef } from '@angular/core';\n\nexport interface HasElementRef {\n    elementRef(): ElementRef;\n}\n\nexport const ELEMENT_REF_EXCEPTION = 'HasElementRef interface has to be implemented';\n","import { ELEMENT_REF_EXCEPTION } from '../public_api';\n\n/**\n * Method decorator to apply css class to a component through native element\n * decorator will store original method in variable and wrap it with custom one\n * component has to implement CssClassBuilder interface\n * more info abour method decorator: https://www.typescriptlang.org/docs/handbook/decorators.html#method-decorators\n * @param target a component\n * @param propertyKey name of the method\n * @param descriptor method\n */\nexport function applyCssClass(target: any, propertyKey: string, descriptor: PropertyDescriptor): void {\n    const originalMethod = descriptor.value;\n    descriptor.value = function(): string {\n        if (!this.elementRef) {\n            throw ELEMENT_REF_EXCEPTION;\n        }\n\n        const _class = originalMethod.apply(this);\n        const elementRef = this.elementRef.apply(this);\n\n        if (elementRef) {\n            (elementRef.nativeElement as HTMLElement).className = `${_class} ${this.class ? this.class : ''}`;\n        }\n\n        return _class;\n    };\n}\n","import { Hash, ELEMENT_REF_EXCEPTION } from '../public_api';\n\n/**\n * Method decorator to apply css styles to a component through native element\n * decorator will store original method in variable and wrap it with custom one\n * component has to implement HasElementRef or CssStyleBuilder interface\n * more info abour method decorator: https://www.typescriptlang.org/docs/handbook/decorators.html#method-decorators\n * @param target a component\n * @param propertyKey name of the method\n * @param descriptor method\n */\nexport function applyCssStyle(target: any, propertyKey: string, descriptor: PropertyDescriptor): void {\n    const originalMethod = descriptor.value;\n    descriptor.value = function(): Hash<number | string> {\n        if (!this.elementRef) {\n            throw ELEMENT_REF_EXCEPTION;\n        }\n\n        const _styles: Hash<number | string> = originalMethod.apply(this);\n        if (!this.elementRef()) {\n            return;\n        }\n\n        const htmlElement = this.elementRef().nativeElement as HTMLElement;\n        Object.keys(_styles).forEach(key => {\n            htmlElement.style[key] = _styles[key];\n        });\n\n        return _styles;\n    };\n}\n","export interface DynamicComponentConfig {\n\n    /** Data to pass along to the content through the dynamic component reference service. */\n    data?: any;\n\n    /** The container that the dynamic component is appended to. By default, it is appended to the body. */\n    container?: HTMLElement | 'body';\n}\n","\nimport { Injector, Type, InjectionToken, InjectFlags } from '@angular/core';\n\nexport class DynamicComponentInjector implements Injector {\n    constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n    get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n\n    get(token: any, notFoundValue?: any);\n\n    get(token: any, notFoundValue?: any, flags?: any) {\n        const value = this._additionalTokens.get(token);\n\n        if (value) {\n            return value;\n        }\n\n        return this._parentInjector.get<any>(token, notFoundValue);\n    }\n}\n","import {\n    ComponentFactoryResolver,\n    Injectable,\n    ApplicationRef,\n    Injector,\n    EmbeddedViewRef,\n    ComponentRef,\n    Type, TemplateRef\n} from '@angular/core';\nimport { DynamicComponentInjector } from './dynamic-component-injector';\nimport { DynamicComponentConfig } from './dynamic-component-config';\n\n/**\n * Service used to dynamically generate components like modals/alerts/notifications\n */\n@Injectable()\nexport class DynamicComponentService {\n\n    /** @hidden */\n    constructor(\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private appRef: ApplicationRef,\n        private injector: Injector\n    ) {}\n\n    /**\n     * Function that creates dynamic component and injects services to allow communication between component and outside\n     * @param contentType Type of the component content\n     * @param componentType Type of component that should be rendered.\n     * @param config Configuration that will be passed to the component.\n     * @param services Services that will be injected to the component.\n     */\n    public createDynamicComponent<T>(\n        contentType: TemplateRef<any> | Type<any> | string | Object,\n        componentType: Type<any>,\n        config: DynamicComponentConfig,\n        services?: any[]\n    ): ComponentRef<T> {\n\n        // Dynamically inject services to component\n        const configMap = new WeakMap();\n        if (services) {\n            services.forEach(service => configMap.set(service.constructor, service))\n        }\n\n        // Prepare component\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n        const componentRef = componentFactory.create(new DynamicComponentInjector(this.injector, configMap));\n        this.appRef.attachView(componentRef.hostView);\n\n        // Assign component attributes\n        const configObj = Object.assign({}, config);\n        Object.keys(configObj).forEach(key => {\n            if (key !== 'data') {\n                componentRef.instance[key] = configObj[key];\n            }\n        });\n        componentRef.instance.childComponentType = contentType;\n\n        // Render component\n        const componentEl = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n        if (configObj.container !== 'body') {\n            configObj.container.appendChild(componentEl);\n        } else {\n            document.body.appendChild(componentEl);\n        }\n\n        return componentRef;\n    }\n\n    /** Function that destroys dynamic component */\n    public destroyComponent(componentRef: ComponentRef<any>): void {\n        this.appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n    }\n\n}\n","/** Function used for object comparision\n * source: https://stackoverflow.com/a/1144249/8245136\n * */\nexport function compareObjects(obj1: any, obj2: any): boolean {\n    const leftChain = [];\n    const rightChain = [];\n\n    // remember that NaN === NaN returns false\n    // and isNaN(undefined) returns true\n    if (isNaN(obj1) && isNaN(obj2) && typeof obj1 === 'number' && typeof obj2 === 'number') {\n        return true;\n    }\n\n    // Compare primitives and functions.\n    // Check if both arguments link to the same object.\n    // Especially useful on the step where we compare prototypes\n    if (obj1 === obj2) {\n        return true;\n    }\n\n    // Works in case when functions are created in constructor.\n    // Comparing dates is a common scenario. Another built-ins?\n    // We can even handle functions passed across iframes\n    if ((typeof obj1 === 'function' && typeof obj2 === 'function') ||\n        (obj1 instanceof Date && obj2 instanceof Date) ||\n        (obj1 instanceof RegExp && obj2 instanceof RegExp) ||\n        (obj1 instanceof String && obj2 instanceof String) ||\n        (obj1 instanceof Number && obj2 instanceof Number)) {\n        return obj1.toString() === obj2.toString();\n    }\n\n    // At last checking prototypes as good as we can\n    if (!(obj1 instanceof Object && obj2 instanceof Object)) {\n        return false;\n    }\n\n    if (obj1.isPrototypeOf(obj2) || obj2.isPrototypeOf(obj1)) {\n        return false;\n    }\n\n    if (obj1.constructor !== obj2.constructor) {\n        return false;\n    }\n\n    if (obj1.prototype !== obj2.prototype) {\n        return false;\n    }\n\n    // Check for infinitive linking loops\n    if (leftChain.indexOf(obj1) > -1 || rightChain.indexOf(obj2) > -1) {\n        return false;\n    }\n\n    // Quick checking of one object being a subset of another.\n    for (const p in obj2) {\n        if (obj2.hasOwnProperty(p) !== obj1.hasOwnProperty(p)) {\n            return false;\n        } else if (typeof obj2[p] !== typeof obj1[p]) {\n            return false;\n        }\n    }\n\n    for (const p of Object.keys(obj1)) {\n        if (obj2.hasOwnProperty(p) !== obj1.hasOwnProperty(p)) {\n            return false;\n        } else if (typeof obj2[p] !== typeof obj1[p]) {\n            return false;\n        }\n\n        switch (typeof (obj1[p])) {\n            case 'object':\n            case 'function':\n\n                leftChain.push(obj1);\n                rightChain.push(obj2);\n\n                if (!compareObjects(obj1[p], obj2[p])) {\n                    return false;\n                }\n\n                leftChain.pop();\n                rightChain.pop();\n                break;\n\n            default:\n                if (obj1[p] !== obj2[p]) {\n                    return false;\n                }\n                break;\n        }\n    }\n\n    return true;\n}\n\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation, OnInit } from '@angular/core';\nimport { CssStyleBuilder, Hash, applyCssClass, CssClassBuilder, applyCssStyle } from '../utils/public_api';\n\nexport type ButtonType = 'standard' | 'positive' | 'medium' | 'negative' | 'half';\nexport type ButtonOptions = 'light' | 'emphasized' | 'menu';\n\n/**\n * Button directive, used to enhance standard HTML buttons.\n *\n * ```html\n * <button fd-button>Button Text</button>\n * ```\n */\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: `button[fd-button], a[fd-button]`,\n    exportAs: 'fd-button',\n    template: `<ng-content></ng-content>`,\n    styleUrls: ['./button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonComponent implements OnInit, CssClassBuilder, CssStyleBuilder {\n    private _class: string = '';\n    @Input() set class(userClass: string) {\n        this._class = userClass;\n        this.buildComponentCssClass();\n    } // user's custom classes\n\n    /** The icon to include in the button. See the icon page for the list of icons.\n     * setter is used to control when css class have to be rebuilded\n     */\n    private _glyph: string\n    @Input() set glyph(icon: string) {\n        this._glyph = icon;\n        this.buildComponentCssClass();\n        this.buildComponentCssStyle();\n    };\n\n    /** Defines if there will be added fd-button class. Enabled by default. */\n    @Input() fdButtonClass: boolean = true;\n\n    /** Whether to apply compact mode to the button. */\n    @Input() compact: boolean;\n\n    /** The type of the button. Types include 'standard', 'positive', 'medium', 'negative', 'half'.\n     * Leave empty for default (Action button).'*/\n    @Input() fdType: ButtonType;\n\n    /** @hidden */\n    @Input() semantic: string; // TODO: deprecated, leaving for backwards compatibility\n\n    /** Button options.  Options include 'emphasized' and 'light'. Leave empty for default.' */\n    @Input() options: ButtonOptions | ButtonOptions[];\n\n    /** @hidden */\n    @Input() size: string; // TODO: deprecated, leaving for backwards compatibility\n\n    /** @hidden */\n    constructor(private _elementRef: ElementRef) {\n    }\n\n    /** Function runs when component is initialized\n     * function should build component css class\n     * function should build css style\n     */\n    ngOnInit(): void {\n        this.buildComponentCssClass();\n        this.buildComponentCssStyle();\n    }\n\n    @applyCssClass\n    /** CssClassBuilder interface implementation\n     * function must return single string\n     * function is responsible for order which css classes are applied\n     */\n    buildComponentCssClass(): string {\n        return [\n            this.fdButtonClass ? 'fd-button' : '',\n            this.compact ? 'fd-button--compact' : '',\n            this._glyph ? `sap-icon--${this._glyph}` : '',\n            this.fdType ? `fd-button--${this.fdType}` : '',\n            this.options ? this._getOptionCssClass(this.options) : '',\n            this._class\n        ].filter(x => x !== '').join(' ');\n    }\n\n    @applyCssStyle\n    /** CssStyleBuilder interface implementation\n     * function must return hashmap where\n     * key:string\n     * value:any\n     */\n    buildComponentCssStyle(): Hash<number | string> {\n        return {\n        }\n    }\n\n    /** HasElementRef interface implementation\n     * function used by applyCssClass and applyCssStyle decorators \n     */\n    elementRef(): ElementRef<any> {\n        return this._elementRef;\n    }\n\n    /** @hidden */\n    private _getOptionCssClass(options: string | ButtonOptions[]): string {\n        if (Array.isArray(this.options)) {\n            return this.options.map(option => `fd-button--${option}`).join(' ');\n        }\n        return `fd-button--${options}`\n    }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ButtonComponent],\n    declarations: [ButtonComponent]\n})\nexport class ButtonModule { }\n","import { ElementRef, OnChanges, OnInit, Input } from '@angular/core';\n\n/*\n This abstract class allows the user to set their own custom styles on a Fundamental NGX directive, in addition to the\n styles the library needs to add itself.\n When library styles were added through the directive's host: {'[class]'} property, any styles the user added would be\n overwritten.  By extending this class, we instead add library styles to the user's classList rather than replace them.\n */\n\n/** @hidden */\nexport abstract class AbstractFdNgxClass implements OnInit, OnChanges {\n    private _elementRef: ElementRef;\n\n    /** @hidden */\n    @Input() class: string // user's custom classes\n\n    /*\n     each directive that extends this class will implement this function and populate it with one or more calls to\n     the '_addClassToElement' function, passing the style names to be added with each call\n     */\n    /** @hidden */\n    abstract _setProperties(): void;\n\n    _setClassToElement(className: string): void {\n        (this._elementRef.nativeElement as HTMLElement).classList.value = `${className} ${this.class}`;\n    }\n\n    _clearElementClass(): void {\n        (this._elementRef.nativeElement as HTMLElement).classList.value = '';\n    }\n\n    /** @hidden */\n    _addClassToElement(className: string): void {\n        (this._elementRef.nativeElement as HTMLElement).classList.add(...className.split(' '));\n    }\n\n    /** @hidden */\n    _addStyleToElement(attribute, value): void {\n        (this._elementRef.nativeElement as HTMLElement).style[attribute] = value;\n    }\n\n    /** @hidden */\n    protected constructor(elementRef: ElementRef) {\n        this._elementRef = elementRef;\n        this._setProperties();\n    }\n\n    /** @hidden */\n    ngOnChanges() {\n        const classList = (this._elementRef.nativeElement as HTMLElement).classList;\n        while (classList.length > 0) {\n            classList.remove(classList.item(0));\n        }\n        if (this.class) {\n            this._addClassToElement(this.class);\n        }\n        this._setProperties();\n    }\n\n    /** @hidden */\n    ngOnInit() {\n        this._setProperties();\n    }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\n\n/**\n * @hidden\n * The base class for the icon component\n */\nconst BASE_ICON_CLASS = 'sap-icon';\n\n/**\n * @hidden\n * Prefix for icon prop classes\n */\nconst PREFIX_ICON_CLASS = BASE_ICON_CLASS + '--';\n\n/**\n * The component that represents an icon.\n *\n * ```html\n * <fd-icon [glyph]=\"cart-approval\" [size]=\"'l'\"></fd-icon>\n * ```\n */\n@Component({\n    selector: 'fd-icon',\n    template: ``,\n    styleUrls: ['./icon.component.scss'],\n    host: {\n        role: 'presentation'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IconComponent extends AbstractFdNgxClass {\n\n    /** The icon name to display. See the icon page for the list of icons\n     * here: https://sap.github.io/fundamental-ngx/icon\n     * */\n    @Input() glyph;\n\n    /**\n     * The size of the icon\n     * The predefined values for the input size are *xs*, *s*, *l*, and *xl*.\n     * *size* can accept any other string, for example *xxs*, which will be translated into class *sap-icon--xxs*.\n     */\n    @Input() size: string = '';\n\n    /** @hidden */\n    _setProperties() {\n        if (this.glyph) {\n            this._addClassToElement(PREFIX_ICON_CLASS + this.glyph);\n        }\n\n        if (this.size) {\n            this._addClassToElement(PREFIX_ICON_CLASS + this.size);\n        }\n    }\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconComponent } from './icon.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [IconComponent],\n    declarations: [IconComponent]\n})\nexport class IconModule {}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * The parent action bar directive.\n *\n * Children usage:\n * ```html\n * <div fd-action-bar-actions>\n * <div fd-action-bar-back>\n * <div fd-action-bar-description>\n * <div fd-action-bar-header>\n * <div fd-action-bar-mobile>\n * <h1 fd-action-bar-title>\n * ```\n */\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: '[fd-action-bar]',\n    template: `\n        <ng-content></ng-content>`,\n    host: {\n        class: 'fd-action-bar'\n    },\n    styleUrls: ['./action-bar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActionBarComponent {\n}\n","import { Directive } from '@angular/core';\n\n/**\n * The action bar title component.\n *\n * ```html\n * <fd-action-bar>\n *     <div fd-action-bar-header>\n *         <h1 fd-action-bar-title>Page Title</h1>\n *     </div>\n * <fd-action-bar>\n * ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-action-bar-title]',\n    host: {\n        class: 'fd-action-bar__title'\n    }\n})\nexport class ActionBarTitleDirective {}\n","import { Directive } from '@angular/core';\n\n/**\n * The action bar description.\n *\n * ```html\n * <div fd-action-bar>\n *     <div fd-action-bar-header>\n *         <div fd-action-bar-description>Page Description</div>\n *     </div>\n * <div>\n * ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-action-bar-description]',\n    host: {\n        class: 'fd-action-bar__description'\n    }\n})\nexport class ActionBarDescriptionDirective { }\n","import { Directive } from '@angular/core';\n\n/**\n * The action bar header, which contains the action bar's title and description components.\n *\n * ```html\n * <div fd-action-bar>\n *     <div fd-action-bar-header>\n *     </div>\n * </div>\n * ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-action-bar-header]',\n    host: {\n        class: 'fd-action-bar__header'\n    }\n})\nexport class ActionBarHeaderDirective {}\n","import { Directive } from '@angular/core';\n\n/**\n * This component holds the right-aligned action buttons for the action bar.\n *\n * ```html\n * <div fd-action-bar>\n *     <div fd-action-bar-actions>\n *         <button fd-button [fdType]=\"'primary'\">Cancel</button>\n *         <button fd-button [fdType]=\"'main'\">Save</button>\n *     </div>\n * </div>\n * ```\n */\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-action-bar-actions]',\n    host: {\n        class: 'fd-action-bar__actions'\n    }\n})\nexport class ActionBarActionsDirective {}\n","import { Directive } from '@angular/core';\n\n/**\n * The left-aligned back button for the action bar.\n *\n * ```html\n * <div fd-action-bar>\n *     <div fd-action-bar-back>\n *         <button aria-label=\"back\" fd-button [fdType]=\"'light'\" [compact]=\"true\" [glyph]=\"'nav-back'\"></button>\n *     </div>\n * </div>\n * ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-action-bar-back]',\n    host: {\n        class: 'fd-action-bar__back'\n    }\n})\nexport class ActionBarBackDirective {}\n","import { Directive } from '@angular/core';\n\n/**\n * The action bar mobile component. This component should wrap all other action bar components, including the <fd-action-bar>.\n *\n * ```html\n * <div fd-action-bar-mobile>\n *     <div fd-action-bar>\n *     </div>\n * </div>\n * ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-action-bar-mobile]'\n})\nexport class ActionBarMobileDirective { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from '../button/button.module';\nimport { IconModule } from '../icon/icon.module';\n\nimport { ActionBarComponent } from './action-bar.component';\nimport { ActionBarTitleDirective } from './action-bar-title/action-bar-title.directive';\nimport { ActionBarDescriptionDirective } from './action-bar-description/action-bar-description.directive';\nimport { ActionBarHeaderDirective } from './action-bar-header/action-bar-header.directive';\nimport { ActionBarActionsDirective } from './action-bar-actions/action-bar-actions.directive';\nimport { ActionBarBackDirective } from './action-bar-back/action-bar-back.directive';\nimport { ActionBarMobileDirective } from './action-bar-mobile/action-bar-mobile.directive';\n\n@NgModule({\n    declarations: [\n        ActionBarComponent,\n        ActionBarTitleDirective,\n        ActionBarDescriptionDirective,\n        ActionBarHeaderDirective,\n        ActionBarActionsDirective,\n        ActionBarBackDirective,\n        ActionBarMobileDirective\n    ],\n    imports: [CommonModule, ButtonModule, IconModule],\n    exports: [\n        ActionBarComponent,\n        ActionBarTitleDirective,\n        ActionBarDescriptionDirective,\n        ActionBarHeaderDirective,\n        ActionBarActionsDirective,\n        ActionBarBackDirective,\n        ActionBarMobileDirective\n    ]\n})\nexport class ActionBarModule {}\n","import { animate, AnimationTriggerMetadata, style, transition, trigger } from '@angular/animations';\n\nexport const alertFadeNgIf: AnimationTriggerMetadata = trigger(\n    'fadeAlertNgIf',\n    [\n        transition(\n            ':enter', [\n                style({\n                    opacity: 0\n                }),\n                animate('250ms ease-in-out', style({\n                    opacity: 1\n                }))\n            ]\n        ),\n        transition(\n            ':leave', [\n                style({\n                    opacity: 1,\n                    marginTop: '*',\n                    paddingTop: '*',\n                    paddingBottom: '*',\n                    height: '*',\n                    overflow: 'hidden'\n                }),\n                animate('400ms ease-in-out', style({\n                    opacity: 0,\n                    marginTop: 0,\n                    paddingTop: 0,\n                    paddingBottom: 0,\n                    height: 0,\n                    overflow: 'hidden'\n                }))\n            ]\n        )\n    ]\n);\n\nexport const alertContainerNgIf: AnimationTriggerMetadata = trigger(\n    'alertContainerNgIf',\n    [\n        transition(\n            ':leave', [\n                style({opacity: 1}),\n                animate('400ms ease-in-out', style({opacity: 0}))\n            ]\n        )\n    ]\n);\n","import { Observable, Subject } from 'rxjs';\n\n/**\n * Reference to an alert component generated via the AlertService.\n * It can be injected into the content component in the same way a service would be injected.\n * For a template, add let-alert to your ng-template tag. Now using *alert* in the template refers to this class.\n */\nexport class AlertRef {\n    \n    private readonly _afterDismissed: Subject<any> = new Subject<any>();\n\n    /** Observable that is triggered when the alert is dismissed. */\n    public afterDismissed: Observable<any> = this._afterDismissed.asObservable();\n\n    /** Data passed from the service open method. */\n    public data: any;\n\n    /**\n     * Dismisses the alert.\n     *\n     * @param reason Data passed back to the calling component through the AfterDismissed observable.\n     */\n    dismiss(reason?: any): void {\n        this._afterDismissed.next(reason);\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n    ElementRef,\n    ChangeDetectorRef,\n    ViewChild,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Type,\n    AfterViewInit,\n    ViewContainerRef,\n    TemplateRef,\n    Optional,\n    EmbeddedViewRef,\n    Output,\n    EventEmitter, ViewEncapsulation, HostListener, NgZone, ChangeDetectionStrategy\n} from '@angular/core';\nimport { alertFadeNgIf } from './alert-utils/alert-animations';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\nimport { AlertRef } from './alert-utils/alert-ref';\n\nlet alertUniqueId: number = 0;\n\n/**\n * The component that represents an alert. It can be only be used inline.\n * If the AlertService is used, this component is auto-generated.\n */\n@Component({\n    selector: 'fd-alert',\n    templateUrl: './alert.component.html',\n    styleUrls: ['./alert.component.scss'],\n    host: {\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.aria-label]': 'ariaLabel',\n        '[style.width]': 'width',\n        '[style.min-width]': 'minWidth',\n        'role': 'alert',\n        '[attr.id]': 'id',\n        '[@fadeAlertNgIf]': ''\n    },\n    animations: [\n        alertFadeNgIf\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlertComponent extends AbstractFdNgxClass implements OnInit, AfterViewInit {\n\n    /** @hidden */\n    @ViewChild('container', { read: ViewContainerRef, static: false })\n    containerRef: ViewContainerRef;\n\n    /** Whether the alert is dismissible. */\n    @Input()\n    dismissible: boolean = true;\n\n    /** The type of the alert. Can be one of *warning*, *success*, *information*, *error* or null. */\n    @Input()\n    type: string;\n\n    /** Id for the alert component. If omitted, a unique one is generated. */\n    @Input()\n    id: string = 'fd-alert-' + alertUniqueId++;\n\n    /** Duration of time *in milliseconds* that the alert will be visible. Set to -1 for indefinite. */\n    @Input()\n    duration: number = 10000;\n\n    /** Whether the alert should stay open if the mouse is hovering over it. */\n    @Input()\n    mousePersist: boolean = false;\n\n    /** Id of the element that labels the alert. */\n    @Input()\n    ariaLabelledBy: string = null;\n\n    /** Aria label for the alert component element. */\n    @Input()\n    ariaLabel: string = null;\n\n    /** Aria label for the dismiss button. */\n    @Input()\n    dismissLabel: string = 'Dismiss';\n\n    /** Width of the alert. */\n    @Input()\n    width: string;\n\n    /** Minimum width of the alert. */\n    @Input()\n    minWidth: string;\n\n    /** Alternative way of passing in a message to the alert. */\n    @Input()\n    message: string;\n\n    /** Event fired when the alert is dismissed. */\n    @Output()\n    onDismiss: EventEmitter<undefined> = new EventEmitter<undefined>();\n\n    /** @hidden */\n    mouseInAlert: boolean = false;\n\n    /** @hidden */\n    componentRef: ComponentRef<any> | EmbeddedViewRef<any>;\n\n    /** @hidden */\n    childComponentType: Type<any> | TemplateRef<any> | string;\n\n    /** @hidden */\n    constructor(private elRef: ElementRef,\n                private cdRef: ChangeDetectorRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngZone: NgZone,\n                @Optional() private alertRef: AlertRef) {\n        super(elRef);\n    }\n\n    /** @hidden */\n    ngOnInit(): void {\n        if (this.alertRef) {\n            this.open();\n        }\n        this._setProperties();\n    }\n\n    /** @hidden */\n    ngAfterViewInit(): void {\n        if (this.childComponentType) {\n            if (this.childComponentType instanceof Type) {\n                this.loadFromComponent(this.childComponentType);\n            } else if (this.childComponentType instanceof TemplateRef) {\n                this.loadFromTemplate(this.childComponentType);\n            } else {\n                this.loadFromString(this.childComponentType);\n            }\n            this.cdRef.detectChanges();\n        }\n    }\n\n    /**\n     * Dismisses the alert. If the alert was generated via the AlertService, it is removed from the DOM.\n     * Otherwise, it sets the display value to none. Fires the onDismiss event.\n     *\n     * @param manualDismiss Set to true to skip the dismiss animation.\n     * @param reason Data to pass back to the calling component. Only usable if alert is opened using the Service.\n     *\n     */\n    dismiss(reason?: any, manualDismiss: boolean = false): void {\n        if (manualDismiss) {\n            this.elRef.nativeElement.classList.add('fd-has-display-none');\n            this.elRef.nativeElement.classList.remove('fd-has-display-block');\n        }\n        if (this.alertRef) {\n            this.alertRef.dismiss(reason);\n        } else {\n            this.elRef.nativeElement.classList.add('fd-has-display-none');\n            this.elRef.nativeElement.classList.remove('fd-has-display-block');\n        }\n        this.onDismiss.emit();\n    }\n\n    /**\n     * Opens the alert.\n     */\n    open(): void {\n        if (!this.alertRef) {\n            if (this.elRef.nativeElement.style.display === 'block') {\n                return;\n            }\n            this.elRef.nativeElement.classList.remove('fd-has-display-none');\n            this.elRef.nativeElement.classList.add('fd-has-display-block');\n        }\n\n        if (this.duration >= 0) {\n            this.ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    if (this.mousePersist) {\n                        const wait = () => {\n                            if (this.mouseInAlert === true) {\n                                setTimeout(wait, 500);\n                            } else {\n                                this.ngZone.run(() => this.dismiss());\n                            }\n                        };\n                        wait();\n                    } else {\n                        this.ngZone.run(() => this.dismiss());\n                    }\n                }, this.duration);\n            });\n        }\n    }\n\n    /** @hidden */\n    @HostListener('mouseenter', ['$event'])\n    @HostListener('mouseleave', ['$event'])\n    handleAlertMouseEvent(event): void {\n        if (event.type === 'mouseenter') {\n            this.mouseInAlert = true;\n        } else if (event.type === 'mouseleave') {\n            this.mouseInAlert = false;\n        }\n    }\n\n    /** @hidden */\n    _setProperties(): void {\n        this._addClassToElement('fd-alert');\n        if (this.type) {\n            this._addClassToElement('fd-alert--' + this.type);\n        }\n        if (this.dismissible) {\n            this._addClassToElement('fd-alert--dismissible');\n        }\n    }\n\n    private loadFromTemplate(template: TemplateRef<any>): void {\n        const context = {\n            $implicit: this.alertRef\n        };\n        this.componentRef = this.containerRef.createEmbeddedView(template, context);\n    }\n\n    private loadFromComponent(componentType: Type<any>): void {\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n        this.containerRef.clear();\n        this.componentRef = this.containerRef.createComponent(componentFactory);\n    }\n\n    private loadFromString(contentString: string): void {\n        this.containerRef.clear();\n        this.message = contentString;\n    }\n\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\nimport { alertContainerNgIf } from './alert-animations';\n\n@Component({\n    selector: 'fd-alert-container',\n    template: ``,\n    styles: [`\n        .fd-alert-container {\n            position: fixed;\n            display: flex;\n            flex-direction: column;\n            z-index: 5000;\n            align-items: center;\n            top: 0;\n            right: 50%;\n            left: 50%;\n        }\n    `],\n    host: {\n        '[@alertContainerNgIf]': ''\n    },\n    animations: [\n        alertContainerNgIf\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlertContainerComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-alert-container')\n    fdAlertContainerClass: boolean = true;\n}\n","/**\n * Configuration for opening an alert with the AlertService.\n */\nimport { DynamicComponentConfig } from '../../utils/dynamic-component/dynamic-component-config';\n\nexport class AlertConfig implements DynamicComponentConfig {\n\n    /** Whether the alert is dismissible. */\n    dismissible?: boolean = true;\n\n    /** The type of the alert. Can be one of *warning*, *success*, *information*, *error* or null. */\n    type?: string;\n\n    /** Id for the alert component. If omitted, a unique one is generated. */\n    id?: string;\n\n    /** Width of the alert. */\n    width?: string = '33vw';\n\n    /** Minimum width of the alert. */\n    minWidth?: string = '300px';\n\n    /** Data being injected into the child component or template. */\n    data?: any;\n\n    /** Duration of time *in milliseconds* that the alert will be visible. Set to -1 for indefinite. */\n    duration?: number = 10000;\n\n    /** Whether the alert should stay open if the mouse is hovering over it. */\n    mousePersist?: boolean = false;\n\n    /** Id of the element that labels the alert. */\n    ariaLabelledBy?: string = null;\n\n    /** Aria label for the alert component element. */\n    ariaLabel?: string = null;\n\n    /** The container that the Alert is appended to. By default, it is appended to the body. */\n    container?: HTMLElement | 'body' = 'body';\n}\n","import {\n    Injectable,\n    ComponentRef,\n    TemplateRef,\n    Type\n} from '@angular/core';\nimport { AlertComponent } from '../alert.component';\nimport { AlertContainerComponent } from '../alert-utils/alert-container.component';\nimport { AlertConfig } from '../alert-utils/alert-config';\nimport { DynamicComponentService } from '../../utils/dynamic-component/dynamic-component.service';\nimport { AlertRef } from '../alert-utils/alert-ref';\n\n/**\n * Service used to dynamically generate an alert as an overlay.\n */\n@Injectable()\nexport class AlertService {\n    private alerts: ComponentRef<AlertComponent>[] = [];\n    private alertContainerRef: ComponentRef<AlertContainerComponent>;\n\n    /** @hidden */\n    constructor(\n        private dynamicComponentService: DynamicComponentService\n    ) {}\n\n    /**\n     * Returns true if there are some alerts currently open. False otherwise.\n     */\n    public hasOpenAlerts(): boolean {\n        return this.alerts && this.alerts.length > 0;\n    }\n\n    /**\n     * Opens an alert component with a content of type TemplateRef, Component Type or String.\n     * @param content Content of the alert component.\n     * @param alertConfig Configuration of the alert component.\n     */\n    public open(content: TemplateRef<any> | Type<any> | string, alertConfig: AlertConfig = new AlertConfig()): AlertRef {\n\n        // Get default values from alert model\n        alertConfig = Object.assign(new AlertConfig(), alertConfig);\n\n        // Instantiate alert ref service\n        const service: AlertRef = new AlertRef();\n        service.data = alertConfig.data;\n\n        // If empty or undefined alert array, create container\n        if (!this.alerts || this.alerts.length === 0 || !this.alertContainerRef) {\n            this.alertContainerRef = this.dynamicComponentService.createDynamicComponent\n                < AlertContainerComponent > (content, AlertContainerComponent, alertConfig)\n            ;\n        }\n\n        // Define Container to put backdrop and component to container\n        alertConfig.container = this.alertContainerRef.location.nativeElement;\n\n        const component = this.dynamicComponentService.createDynamicComponent\n            <AlertComponent>(content, AlertComponent, alertConfig, [service]);\n\n        component.location.nativeElement.style.marginTop = '10px';\n\n        // Subscription to close alert from ref\n        const refSub = service.afterDismissed.subscribe(() => {\n            this.destroyAlertComponent(component);\n            refSub.unsubscribe();\n        });\n\n        // Log new component\n        this.alerts.push(component);\n        return service;\n    }\n\n    /**\n     * Dismisses all service-opened alerts.\n     */\n    public dismissAll(): void {\n        this.alerts.forEach(ref => {\n            this.destroyAlertComponent(ref);\n        });\n    }\n\n    private destroyAlertComponent(alert: ComponentRef<AlertComponent>): void {\n        this.alerts[this.alerts.indexOf(alert)] = null;\n        this.alerts = this.alerts.filter(item => item !== null && item !== undefined);\n        this.dynamicComponentService.destroyComponent(alert);\n\n        if (this.alertContainerRef && (!this.alerts || this.alerts.length === 0)) {\n            this.destroyAlertContainer();\n        }\n    }\n\n    private destroyAlertContainer(): void {\n        this.dynamicComponentService.destroyComponent(this.alertContainerRef);\n        this.alertContainerRef = undefined;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconModule } from '../icon/icon.module';\n\nimport { AlertComponent } from './alert.component';\nimport { AlertService } from './alert-service/alert.service';\nimport { AlertContainerComponent } from './alert-utils/alert-container.component';\nimport { DynamicComponentService } from '../utils/dynamic-component/dynamic-component.service';\nimport { ButtonModule } from '../button/button.module';\n\n@NgModule({\n    declarations: [AlertComponent, AlertContainerComponent],\n    imports: [CommonModule, IconModule, ButtonModule],\n    exports: [AlertComponent, AlertContainerComponent],\n    entryComponents: [AlertContainerComponent, AlertComponent],\n    providers: [AlertService, DynamicComponentService]\n})\nexport class AlertModule {}\n","import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, ViewEncapsulation } from '@angular/core';\nimport { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';\nimport { BadgeStatus, BadgeModifier } from '../label/label.component';\n\n/**\n * Badge component, used to indicate status.\n * Colors, generally in combination with text, are used to easily highlight the state of an object.\n */\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: '[fd-badge]',\n    template: `<ng-content></ng-content>`,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./badge-label.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BadgeComponent extends AbstractFdNgxClass {\n    /** Color coded status for the badge. Options are 'success', 'warning', and 'error'. Leave empty for default badge. */\n    @Input() status: BadgeStatus;\n\n    /** Modifier for the badge. Options are 'pill' and 'filled'. Leave empty for normal. */\n    @Input() modifier: BadgeModifier;\n\n    /** @hidden */\n    @HostBinding('class.fd-badge')\n    fdBadgeClass: boolean = true;\n\n    /** @hidden */\n    _setProperties() {\n        if (this.status) {\n            this._addClassToElement('fd-badge--' + this.status);\n        }\n        if (this.modifier) {\n            this._addClassToElement('fd-badge--' + this.modifier);\n        }\n    }\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';\n\nexport type BadgeStatus = 'success' | 'warning' | 'error';\nexport type BadgeModifier = 'pill' | 'filled';\nexport type BadgeIconStatus = 'available' | 'away' | 'busy' | 'offline';\n\n/**\n * Label component, used to indicate status, without any background or border\n * Colors, generally in combination with text, are used to easily highlight the state of an object.\n */\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: '[fd-label]',\n    template: `<ng-content></ng-content>`,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./label.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LabelComponent extends AbstractFdNgxClass {\n    /** Color coded status for the label. Options are 'success', 'warning', and 'error'. Leave empty for default label. */\n    @Input() status: BadgeStatus;\n\n    /** @hidden */\n    _setProperties() {\n        this._addClassToElement('fd-label');\n        if (this.status) {\n            this._addClassToElement('fd-label--' + this.status);\n        }\n    }\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';\nimport { BadgeStatus, BadgeIconStatus } from '../label/label.component';\n\n/**\n * Status Label component with some default icons based on status input used to indicate status.\n * Icons are used to easily highlight the state of an object.\n */\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: '[fd-status-label]',\n    template: `<ng-content></ng-content>`,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./status-label.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StatusLabelComponent extends AbstractFdNgxClass {\n    /** Color coded status for the label. Options are 'success', 'warning', and 'error'. Leave empty for default label. */\n    @Input() status: BadgeStatus;\n\n    /** Built-in status icon. Options include 'available', 'away', 'busy', and 'offline'. */\n    @Input() statusIcon: BadgeIconStatus;\n\n    /** The icon used with the status indicator. See the icon page for the list of icons. */\n    @Input() icon: string = '';\n\n    /** @hidden */\n    _setProperties() {\n        this._addClassToElement('fd-status-label');\n        if (this.status) {\n            this._addClassToElement('fd-status-label--' + this.status);\n        }\n        if (this.statusIcon) {\n            this._addClassToElement('fd-status-label--' + this.statusIcon);\n        }\n        if (this.icon) {\n            this._addClassToElement('sap-icon--' + this.icon);\n        }\n    }\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BadgeComponent } from './badge-label/badge.component';\nimport { LabelComponent } from './label/label.component';\nimport { StatusLabelComponent } from './status-label/status-label.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BadgeComponent, LabelComponent, StatusLabelComponent],\n    declarations: [BadgeComponent, LabelComponent, StatusLabelComponent]\n})\nexport class BadgeLabelModule { }\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * Breadcrumb parent wrapper directive. Must have breadcrumb item child directives.\n *\n * ```html\n * <fd-breadcrumb>\n *     <fd-breadcrumb-item>\n *         <a fd-breadcrumb-link [routerLink]=\"'#'\">Breadcrumb Link</a>\n *     </fd-breadcrumb-item>\n * </fd-breadcrumb>\n * ```\n */\n@Component({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-component\n    selector: 'fd-breadcrumb',\n    host: {\n        class: 'fd-breadcrumb'\n    },\n    template: `\n        <ng-content></ng-content>`,\n    styleUrls: ['./breadcrumb.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BreadcrumbComponent {\n}\n","import { Directive } from '@angular/core';\n\n/**\n * Breadcrumb item directive. Must have child breadcrumb link directives.\n *\n * ```html\n * <fd-breadcrumb-item>\n *     <a fd-breadcrumb-link [routerLink]=\"'#'\">Breadcrumb Link</a>\n * </fd-breadcrumb-item>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: 'fd-breadcrumb-item',\n    host: {\n        class: 'fd-breadcrumb__item'\n    }\n})\nexport class BreadcrumbItemDirective {}\n","import { Directive } from '@angular/core';\n\n/**\n * Breadcrumb link directive. Use Angular router options (such as 'routerLink' and 'queryParams') with this directive.\n *\n * ```html\n * <a fd-breadcrumb-link [routerLink]=\"'some-url'\" [queryParams]=\"'params'\">Breadcrumb Link</a>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-breadcrumb-link]',\n    host: {\n        class: 'fd-breadcrumb__link'\n    }\n})\nexport class BreadcrumbLinkDirective {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { BreadcrumbItemDirective } from './breadcrumb-item.directive';\nimport { BreadcrumbLinkDirective } from './breadcrumb-link.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BreadcrumbComponent, BreadcrumbItemDirective, BreadcrumbLinkDirective],\n    declarations: [BreadcrumbComponent, BreadcrumbItemDirective, BreadcrumbLinkDirective]\n})\nexport class BreadcrumbModule {}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'fd-busy-indicator',\n  templateUrl: './busy-indicator.component.html',\n  styleUrls: ['./busy-indicator.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BusyIndicatorComponent {\n\n  /** Whether to display the loading indicator animation. */\n  @Input()\n  loading: boolean;\n\n  /** The size of the loading indicator, default will be medium */\n  @Input()\n  size: string = 'm';\n\n  /** Aria label for the 'loading' indicator. */\n  @Input()\n  loadingLabel: string = 'Loading';\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BusyIndicatorComponent } from './busy-indicator.component';\n\n@NgModule({\n  declarations: [BusyIndicatorComponent],\n  exports: [BusyIndicatorComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class BusyIndicatorModule { }\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n/**\n * Container for grouped buttons.\n *\n * ```html\n * <fd-button-group>\n *     <button fd-button-grouped>Button</button>\n * </fd-button-group>\n * ```\n */\n@Component({\n    selector: 'fd-button-group',\n    templateUrl: './button-group.component.html',\n    styleUrls: ['./button-group.component.scss'],\n    host: {\n        'role': 'group'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonGroupComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-button-group')\n    fdButtonGroupClass: boolean = true;\n}\n","import { Directive, ElementRef, HostBinding, Input } from '@angular/core';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\n\n/**\n * Directive to be applied to buttons that are members of a button group.\n *\n * ```html\n * <button fd-button-grouped>Button</button>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-button-grouped]'\n})\nexport class ButtonGroupedDirective extends AbstractFdNgxClass {\n\n    /**\n     * @deprecated\n     * Will be removed in 0.13.0\n     */\n    @Input()\n    size: string;\n\n    /** Defines if there will be added fd-button class. Enabled by default. */\n    @Input() fdButtonClass: boolean = true;\n\n    /** Glyph (icon) of the button. */\n    @Input()\n    glyph: string;\n\n    /** State of the button. Can be `selected` or `disabled`. */\n    @Input()\n    state: string;\n\n    /** Whether the button should be in compact form. */\n    @Input()\n    @HostBinding('class.fd-button--compact')\n    compact: boolean = false;\n\n    /** @hidden */\n    @HostBinding('class.fd-button--grouped')\n    fdButtonGroupedClass: boolean = true;\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    /** @hidden */\n    _setProperties() {\n        this._addClassToElement('fd-button--grouped');\n        if (this.fdButtonClass) {\n            this._addClassToElement('fd-button');\n        }\n        if (this.size) {\n            this._addClassToElement('fd-button--' + this.size);\n        }\n        if (this.glyph) {\n            this._addClassToElement('sap-icon--' + this.glyph);\n        }\n        if (this.state) {\n            this._addClassToElement('is-' + this.state);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonGroupComponent } from './button-group.component';\nimport { ButtonGroupedDirective } from './button-grouped.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ButtonGroupComponent, ButtonGroupedDirective],\n    declarations: [ButtonGroupComponent, ButtonGroupedDirective]\n})\nexport class ButtonGroupModule {}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/**\n * Provides i18n support for labels inside the calendar component.\n */\n@Injectable({ providedIn: 'root' })\nexport class CalendarI18nLabels {\n\n    /** This is event that should be called, when labels are changed, to let component detect an changes. */\n    public readonly labelsChange: Subject<void> = new Subject<void>();\n\n    /** Year selection aria label. Used on the button to navigate to the years view. */\n    yearSelectionLabel: string = 'Year selection';\n\n    /** Previous year aria label. Used on the button to switch to a previous year in the years view. */\n    previousYearLabel: string = 'Previous year';\n\n    /** Next year aria label. Used on the button to switch to a next year in the years view. */\n    nextYearLabel: string = 'Next year';\n\n    /** Month selection aria label. Used on the button to navigate to the months view. */\n    monthSelectionLabel: string = 'Month selection';\n\n    /** Previous month aria label. Used on the button to switch to a previous month in the months view. */\n    previousMonthLabel: string = 'Previous month';\n\n    /** Next month aria label. Used on the button to switch to a next month in the months view. */\n    nextMonthLabel: string = 'Next month';\n\n}\n","import { Inject, Injectable, LOCALE_ID, Optional } from '@angular/core';\nimport { FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth } from '@angular/common';\nimport { Subject } from 'rxjs';\n\nexport function CALENDAR_I18N_FACTORY(locale) {\n    return new CalendarI18nDefault(locale);\n}\n\n/**\n * Abstract class which defines the behaviour calendar internationalization. See calendar examples for usage details.\n */\n@Injectable({\n    providedIn: 'root',\n    useFactory: CALENDAR_I18N_FACTORY,\n    deps: [LOCALE_ID]\n})\nexport abstract class CalendarI18n {\n\n    /** This is event that should be called, when any property is changed, to let component detect an changes. */\n    public readonly i18nChange: Subject<void> = new Subject<void>();\n\n    /**\n     * Aria label for a specific date.\n     * @param date Native date object to use for the label.\n     */\n    abstract getDayAriaLabel(date: Date): string;\n\n    /** Get all short week day names, such as Mo for Monday. */\n    abstract getAllShortWeekdays(): string[];\n\n    /** Get all short month names, such as Nov for November. */\n    abstract getAllShortMonthNames(): string[];\n\n    /** Get all full month names. */\n    abstract getAllFullMonthNames(): string[];\n\n    /**  */\n}\n\n/**\n * Default implementation of the CalendarI18n service. It will get dates from the application locale if it is present.\n */\n@Injectable()\nexport class CalendarI18nDefault extends CalendarI18n {\n\n    private weekdaysShort: string[];\n    private monthsShort: string[];\n    private monthsFull: string[];\n\n    private weekdaysFallback: string[] = [\n        'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n    ];\n\n    private monthsFullFallback: string[] = [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July',\n        'August', 'September', 'October', 'November', 'December'\n    ];\n\n    private monthsShortFallback: string[] = [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul',\n        'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n    ];\n\n    /** Constructor takes in a locale_id and gets the appropriate data from Angular. */\n    constructor(@Optional() @Inject(LOCALE_ID) private locale: string) {\n        super();\n        if (locale) {\n            const sundayStartWeekdays = getLocaleDayNames(locale, FormStyle.Standalone, TranslationWidth.Short);\n            this.weekdaysShort = sundayStartWeekdays.map((day, index) => sundayStartWeekdays[index % 7]);\n            this.monthsShort = getLocaleMonthNames(locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n            this.monthsFull = getLocaleMonthNames(locale, FormStyle.Standalone, TranslationWidth.Wide);\n        }\n\n        this.checkForFallback();\n    }\n\n    /**\n     * Aria label for a specific date. Default implementation produces the label: {Date} {Month} {Year}.\n     *\n     * @param date Native date object to use for the label.\n     */\n    getDayAriaLabel(date: Date): string {\n        return date.getDate() + ' ' + this.monthsFull[date.getMonth()] + ' ' + date.getFullYear();\n    }\n\n    /** Get all full month names. */\n    getAllFullMonthNames(): string[] {\n        return this.monthsFull;\n    }\n\n    /** Get all short month names, such as Nov for November. */\n    getAllShortMonthNames(): string[] {\n        return this.monthsShort;\n    }\n\n    /** Get all short week day names, such as Mo for Monday. */\n    getAllShortWeekdays(): string[] {\n        return this.weekdaysShort;\n    }\n\n    /** Checks if a fallback is needed. Older versions of Angular may need this. */\n    private checkForFallback(): void {\n        if (!this.weekdaysShort || this.weekdaysShort.length === 0) {\n            this.weekdaysShort = this.weekdaysFallback;\n        }\n\n        if (!this.monthsShort || this.monthsShort.length === 0) {\n            this.monthsShort = this.monthsShortFallback;\n        }\n\n        if (!this.monthsFull || this.monthsFull.length === 0) {\n            this.monthsFull = this.monthsFullFallback;\n        }\n    }\n\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input, OnDestroy,\n    OnInit,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport { CalendarI18nLabels } from '../i18n/calendar-i18n-labels';\nimport { CalendarI18n } from '../i18n/calendar-i18n';\nimport { FdCalendarView } from '../calendar.component';\nimport { CalendarCurrent } from '../models/calendar-current';\nimport { takeUntil } from 'rxjs/operators';\nimport { merge, Subject } from 'rxjs';\n\n/**\n * Internal use only.\n * Header of the calendar component.\n */\n@Component({\n    selector: 'fd-calendar-header',\n    templateUrl: './calendar-header.component.html',\n    styleUrls: ['./calendar-header.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[attr.id]': 'id + \"-header\"'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CalendarHeaderComponent implements OnDestroy {\n\n    /** Currently active view. Needed for a11y labels. */\n    @Input()\n    activeView: FdCalendarView;\n\n    /** Currently displayed date on the calendar. */\n    @Input()\n    currentlyDisplayed: CalendarCurrent;\n\n    /** Id */\n    @Input()\n    id: string;\n\n    /** Event emitted when the active view should change. */\n    @Output()\n    readonly activeViewChange: EventEmitter<FdCalendarView>\n        = new EventEmitter<FdCalendarView>();\n\n    /** Event emitted when the previous button is clicked. */\n    @Output()\n    readonly previousClicked: EventEmitter<void>\n        = new EventEmitter<void>();\n\n    /** Event emitted when the next button is clicked. */\n    @Output()\n    readonly nextClicked: EventEmitter<void>\n        = new EventEmitter<void>();\n\n    /** An RxJS Subject that will kill the data stream upon component’s destruction (for unsubscribing)  */\n    private readonly onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        public calendarI18nLabels: CalendarI18nLabels,\n        public calendarI18n: CalendarI18n,\n        private changeDetRef: ChangeDetectorRef\n    ) {\n        /** Merging 18n observables */\n        const i18nObservables = merge(this.calendarI18n.i18nChange, this.calendarI18nLabels.labelsChange);\n\n        /** Called to trigger change detection */\n        i18nObservables.pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => this.changeDetRef.markForCheck())\n        ;\n    }\n\n    /** @hidden */\n    ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    /** Get the aria label for the previous button. Depends on the active view. */\n    get previousLabel(): string {\n        return this.activeView !== 'year' ? this.calendarI18nLabels.previousMonthLabel\n            : this.calendarI18nLabels.previousYearLabel;\n    }\n\n    /** Get the aria label for the next button. Depends on the active view. */\n    get nextLabel(): string {\n        return this.activeView !== 'year' ? this.calendarI18nLabels.nextMonthLabel\n            : this.calendarI18nLabels.nextMonthLabel;\n    }\n\n    /** Get aria label for the month shown. */\n    get monthLabel(): string {\n        return this.calendarI18n.getAllFullMonthNames()[this.currentlyDisplayed.month - 1];\n    }\n\n    isOnMonthView(): boolean {\n        return this.activeView === 'month';\n    }\n\n    isOnYearView(): boolean {\n        return this.activeView === 'year';\n    }\n\n    processViewChange(type: FdCalendarView): void {\n        if (type === this.activeView) {\n            this.activeView = 'day';\n        } else {\n            this.activeView = type;\n        }\n        this.activeViewChange.emit(this.activeView);\n    }\n\n}\n","import { FdDate } from './models/fd-date';\nimport { Subject } from 'rxjs';\n\nexport class CalendarService {\n\n    /** Event thrown, when the element is selected by space or enter keys */\n    public onKeySelect: Subject<number> = new Subject<number>();\n\n    /** Event thrown, when the focus goes after list of elements */\n    public onListEndApproach: Subject<void> = new Subject<void>();\n\n    /** Event thrown, when the focus goes before list of elements */\n    public onListStartApproach: Subject<void> = new Subject<void>();\n\n    /** Event thrown, when the focus is changed. */\n    public onFocusIdChange: Subject<number> = new Subject<number>();\n\n    /** Function that is called when the focus would escape the element. */\n    focusEscapeFunction: Function;\n\n    /**\n     * Method that provides, amount of day depending on month and year passed\n     * @param month which is number 1-12\n     * @param year which is number\n     */\n    static getDaysInMonth(month: number, year: number): number {\n\n        const isLeapYear = (_year: number): boolean => {\n            if (_year % 4 !== 0) {\n                return false;\n            } else if (_year % 400 === 0) {\n                return true;\n            } else {\n                return _year % 100 !== 0;\n            }\n        };\n\n        if (month === 2) {\n            return isLeapYear(year) ? 29 : 28;\n        } else if ((month % 2 === 0 && month < 8) || (month % 2 === 1 && month > 8)) {\n            return 30;\n        } else {\n            return 31;\n        }\n    }\n\n    /**\n     * Method that check equality of 2 dates.\n     */\n    static datesEqual(date1: FdDate, date2: FdDate): boolean {\n        if (!date1 || !date2) {\n            return false;\n        } else {\n            return date1.toDateString() === date2.toDateString();\n        }\n    }\n\n    /**\n     * Method that handles keydown events, dedicated for Month and Year views, which have a list with 12 elements.\n     * Triggers the events, when the focus approaches start and end of list. Or when there is basic change of focus.\n     * Triggers also event, when the element is selected by enter key, or space bar.\n     * @param event KeyboardEvent\n     * @param index which is number (0 - 11)\n     */\n    public onKeydownHandler(event: KeyboardEvent, index: number): void {\n        switch (event.key) {\n            case 'Enter':\n            case ' ': {\n                event.preventDefault();\n                this.onKeySelect.next(index);\n                break;\n            }\n            case 'ArrowLeft': {\n                event.preventDefault();\n                if (index === 0) {\n                    this.onListStartApproach.next();\n                    this.onFocusIdChange.next(11)\n                } else {\n                    this.onFocusIdChange.next(index - 1)\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                event.preventDefault();\n                if (index === 11) {\n                    this.onListEndApproach.next();\n                    this.onFocusIdChange.next(0)\n                } else {\n                    this.onFocusIdChange.next(index + 1)\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                event.preventDefault();\n                if (index <= 3) {\n                    this.onListStartApproach.next();\n                    this.onFocusIdChange.next(index + 8);\n                } else {\n                    this.onFocusIdChange.next(index - 4);\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                event.preventDefault();\n                if (index >= 8) {\n                    this.onListEndApproach.next();\n                    this.onFocusIdChange.next(index - 8);\n                } else {\n                    this.onFocusIdChange.next(index + 4);\n                }\n                break;\n            }\n            case 'Tab': {\n                if (this.focusEscapeFunction && !event.shiftKey) {\n                    event.preventDefault();\n                    this.focusEscapeFunction();\n                }\n                break;\n            }\n        }\n    }\n\n}\n","/**\n * Default date model used by the fundamental components.\n */\nimport { CalendarService } from '../calendar.service';\n\nexport class FdDate {\n\n    /**\n     * The year of the date.\n     */\n    public year: number;\n\n    /**\n     * The month of the date. 1 = January, 12 = December.\n     */\n    public month: number;\n\n    /**\n     * Day of the date. Starts at 1.\n     */\n    public day: number;\n\n    /**\n     * Static function to get the current date in FdDate form.\n     */\n    static getToday(): FdDate {\n        const tempDate: Date = new Date();\n        return new FdDate(tempDate.getFullYear(), tempDate.getMonth() + 1, tempDate.getDate());\n    }\n\n    /**\n     *  Static function allowing convert js date object to FdDate model\n     */\n    static getModelFromDate(date: Date): FdDate {\n        if (date) {\n            return new FdDate(date.getFullYear(), date.getMonth() + 1, date.getDate());\n        }\n    }\n\n    /**\n     * Constructor to build a FdDate object from a year, month and day.\n     * @param year The year of the date.\n     * @param month The month of the date (1-12).\n     * @param day The day of the date (1-31, generally).\n     */\n    constructor(year: number, month: number, day: number) {\n        this.year = year;\n        this.month = month;\n        this.day = day;\n    }\n\n    /**\n     * Get Luxon date object converted to string from FdDate.\n     */\n    public toDateString(): string {\n        if (this.year && this.month && this.day && this.isDateValid()) {\n            return this.toDate().toDateString();\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * Get amount of milliseconds from 01.01.1970\n     * -1 is thrown when some some of properties (day,month,year) are not defined\n     */\n    public getTimeStamp(): number {\n        if (this.year && this.month && this.day) {\n            return this.toDate().getTime();\n        } else {\n            return -1;\n        }\n    }\n\n    /**\n     * Get number of weekday ex. Sunday = 1, Monday = 2, Tuesday = 3 etc.\n     * -1 is thrown when some some of properties (day,month,year) are not defined\n     * Native javascript date getDay() function returns Sunday as 0, Monday as 1, etc, to it's needed to increment value\n     *\n     */\n    public getDay(): number {\n        if (this.year && this.month && this.day) {\n            return this.toDate().getDay() + 1;\n        } else {\n            return -1;\n        }\n    }\n\n    /** Get next day */\n    public nextDay(): FdDate {\n        const maxDays = CalendarService.getDaysInMonth(this.month, this.year);\n        const isNextMonth = this.day >= maxDays;\n        const isNextYear = isNextMonth && this.month === 12;\n\n        const day = isNextMonth ? 1 : this.day + 1;\n        const month = isNextMonth ? (isNextYear ? 1 : this.month + 1) : this.month;\n        const year = isNextYear ? this.year + 1 : this.year;\n        return new FdDate(year, month, day);\n    }\n\n    /** Get previous day  */\n    public previousDay(): FdDate {\n\n        /** Check if should switch month to previous one */\n        const prevMonth: boolean = this.day === 1;\n\n        /** Check if should switch year to previous one */\n        const prevYear: boolean = prevMonth && ( this.month === 1 );\n\n        const year = prevYear ? this.year - 1 : this.year;\n        const month = prevYear ? 12 : ( prevMonth ? this.month - 1 : this.month );\n\n        /** Amount of days in month */\n        const maxDays: number = CalendarService.getDaysInMonth(month, year);\n\n        const day = this.day === 1 ? maxDays : this.day - 1;\n\n        return new FdDate(year, month, day);\n    }\n\n    /**\n     * Get native date object from FdDate.\n     */\n    public toDate(): Date {\n        return new Date(this.year, this.month - 1, this.day);\n    }\n\n    /**\n     * Method that checks validity of current FdDate object.\n     */\n    public isDateValid(): boolean {\n        if (!this) {\n            return false;\n        }\n\n        if (!this.year || !this.month || !this.day) {\n            return false;\n        }\n\n        if (this.year <= 0 ||\n            this.month < 1 ||\n            this.month > 12 ||\n            isNaN(this.year) ||\n            isNaN(this.month) ||\n            isNaN(this.day)\n        ) {\n            return false;\n        }\n\n        if (this.day < 1 || this.day > CalendarService.getDaysInMonth(this.month, this.year)) {\n            return false;\n        }\n\n        return true;\n    }\n\n}\n","import {\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input, OnChanges, OnDestroy,\n    OnInit,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport { CalendarI18n } from '../../i18n/calendar-i18n';\nimport { FdDate } from '../../models/fd-date';\nimport { CalendarCurrent } from '../../models/calendar-current';\nimport { CalendarType, DaysOfWeek } from '../../calendar.component';\nimport { CalendarDay } from '../../models/calendar-day';\nimport { CalendarService } from '../../calendar.service';\nimport { FdRangeDate } from '../../models/fd-range-date';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/** Component representing the day view of the calendar. */\n@Component({\n    selector: 'fd-calendar-day-view',\n    templateUrl: './calendar-day-view.component.html',\n    styleUrls: ['./calendar-day-view.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[attr.id]': 'id + \"-day-view\"'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CalendarDayViewComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** @hidden */\n    newFocusedDayId: string = '';\n\n    /** Actual day grid with previous/current/next month days */\n    public dayViewGrid: CalendarDay[][];\n\n    /** @hidden */\n    @HostBinding('class.fd-calendar__dates')\n    public fdCalendarDateViewClass: boolean = true;\n\n    /** Currently displayed month and year for days */\n    @Input()\n    public currentlyDisplayed: CalendarCurrent;\n\n    /** The currently selected FdDate model in single mode. */\n    @Input()\n    public selectedDate: FdDate;\n\n    /** The currently selected FdDates model start and end in range mode. */\n    @Input()\n    public selectedRangeDate: FdRangeDate;\n\n    /** The day of the week the calendar should start on. 1 represents Sunday, 2 is Monday, 3 is Tuesday, and so on. */\n    @Input()\n    public startingDayOfWeek: DaysOfWeek;\n\n    /** The type of calendar, 'single' for single date selection or 'range' for a range of dates. */\n    @Input()\n    calType: CalendarType = 'single';\n\n    /** Id of the calendar. If none is provided, one will be generated. */\n    @Input() id: string;\n\n    /** Function that allows to specify which function would be called, when focus wants to escape */\n    @Input()\n    focusEscapeFunction: Function;\n\n    /** Event emitted always, when model is changed in range mode */\n    @Output()\n    public readonly selectedRangeDateChange: EventEmitter<FdRangeDate> = new EventEmitter<FdRangeDate>();\n\n    /** Event emitted always, when next month is selected, by focus */\n    @Output()\n    public readonly nextMonthSelect: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted always, when previous month is selected, by focus */\n    @Output()\n    public readonly previousMonthSelect: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted always, when model is changed in single mode */\n    @Output()\n    public readonly selectedDateChange: EventEmitter<FdDate> = new EventEmitter<FdDate>();\n\n    /** An RxJS Subject that will kill the data stream upon component’s destruction (for unsubscribing)  */\n    private readonly onDestroy$: Subject<void> = new Subject<void>();\n\n    /**\n     * Variable that contains first letter of every weekday, basing on CalendarI18nDefault.\n     */\n    private _shortWeekDays: string[];\n\n    /**\n     * Function used to disable certain dates in the calendar.\n     * @param fdDate FdDate\n     */\n    @Input()\n    disableFunction = function (fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to disable certain dates in the calendar for the range start selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    disableRangeStartFunction = function (fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to disable certain dates in the calendar for the range end selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    disableRangeEndFunction = function (fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to block certain dates in the calendar for the range start selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    blockRangeStartFunction = function (fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to block certain dates in the calendar for the range end selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    blockRangeEndFunction = function (fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to block certain dates in the calendar.\n     * @param fdDate FdDate\n     */\n    @Input()\n    blockFunction = function (fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /** @hidden */\n    constructor(\n        private calendarI18n: CalendarI18n,\n        private eRef: ElementRef,\n        private changeDetRef: ChangeDetectorRef\n    ) {\n        this.calendarI18n.i18nChange\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => this.refreshShortWeekDays())\n        ;\n    }\n\n    /**\n     * Function for selecting a date on the calendar. Typically called when a date is clicked, but can also be called programmatically.\n     * @param day CalendarDay object to be selected.\n     */\n    selectDate(day: CalendarDay, event?: MouseEvent): void {\n        if (event) {\n            /**\n             * There are some problems with popup integration. After clicking inside day component, the popover closes.\n             */\n            event.stopPropagation();\n            event.preventDefault();\n            this.newFocusedDayId = day.id;\n            this.focusElement(this.newFocusedDayId);\n        }\n        if (!day.blocked && !day.disabled) {\n            if (this.calType === 'single') {\n                this.selectedDate = day.date;\n                this.selectedDateChange.emit(day.date);\n                this.buildDayViewGrid();\n            } else {\n                if (this.selectCounter === 0 || this.selectCounter === 2) {\n                    this.selectedRangeDate = { start: day.date, end: null };\n                    this.selectedRangeDateChange.emit(this.selectedRangeDate);\n                    this.buildDayViewGrid();\n                } else if (this.selectCounter === 1) {\n                    // Check if date picked is higher than already chosen, otherwise just reverse them\n                    if (this.selectedRangeDate.start.getTimeStamp() < day.date.getTimeStamp()) {\n                        this.selectedRangeDate = { start: this.selectedRangeDate.start, end: day.date };\n                    } else {\n                        this.selectedRangeDate = { start: day.date, end: this.selectedRangeDate.start };\n                    }\n                    this.selectedRangeDateChange.emit(this.selectedRangeDate);\n                    this.buildDayViewGrid();\n                }\n\n            }\n        }\n    }\n\n    /** @hidden */\n    ngOnInit(): void {\n        this.refreshShortWeekDays();\n        this.buildDayViewGrid();\n    }\n\n    /** @hidden */\n    ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    /** @hidden\n     *  Amount of selected days\n     *  0, when there is no day selected, or start date is invalid,\n     *  1, when there is only valid start date, or end date is same as start date,\n     *  2, when both dates are valid\n     */\n    get selectCounter(): number {\n        if (!this.selectedRangeDate || !this.selectedRangeDate.start || !this.selectedRangeDate.start.isDateValid()) {\n            return 0;\n        } else if (this.selectedRangeDate.start &&\n            (!this.selectedRangeDate.end || !this.selectedRangeDate.end.isDateValid() ||\n                CalendarService.datesEqual(this.selectedRangeDate.start, this.selectedRangeDate.end)\n            )\n        ) {\n            return 1;\n        } else if (\n            this.selectedRangeDate.start && this.selectedRangeDate.start.isDateValid() &&\n            this.selectedRangeDate.end && this.selectedRangeDate.end.isDateValid()) {\n            return 2;\n        }\n    }\n\n    /**\n     * @hidden\n     * Method that handles day cells keydown events,\n     * @param event KeyboardEvent\n     * @param cell CalendarDay\n     * @param grid with specified column and row as a x and y\n     */\n    onKeydownDayHandler(event, cell: CalendarDay, grid: { x: number, y: number }): void {\n        if (event.key === 'Tab' && !event.shiftKey) {\n            if (this.focusEscapeFunction) {\n                event.preventDefault();\n                this.focusEscapeFunction();\n            }\n        } else {\n            switch (event.key) {\n                case (' '):\n                case ('Enter'): {\n                    event.preventDefault();\n                    this.selectDate(cell);\n                    this.newFocusedDayId = cell.id;\n                    break;\n                }\n                case ('ArrowUp'): {\n                    event.preventDefault();\n                    if (grid.y > 0) {\n                        this.newFocusedDayId = this.dayViewGrid[grid.y - 1][grid.x].id;\n                    } else {\n                        this.selectPreviousMonth();\n                        this.newFocusedDayId = this.dayViewGrid[this.dayViewGrid.length - 1][grid.x].id;\n                    }\n                    break;\n                }\n                case ('ArrowDown'): {\n                    event.preventDefault();\n                    if (grid.y < this.dayViewGrid.length - 1) {\n                        this.newFocusedDayId = this.dayViewGrid[grid.y + 1][grid.x].id;\n                    } else {\n                        this.selectNextMonth();\n                        this.newFocusedDayId = this.dayViewGrid[0][grid.x].id;\n                    }\n                    break;\n                }\n                case ('ArrowLeft'): {\n                    event.preventDefault();\n                    if (grid.x > 0) {\n                        this.newFocusedDayId = this.dayViewGrid[grid.y][grid.x - 1].id;\n                    } else if (grid.y > 0) {\n                        this.newFocusedDayId = this.dayViewGrid[grid.y - 1][this.dayViewGrid[0].length - 1].id;\n                    } else {\n                        this.selectPreviousMonth();\n                        this.newFocusedDayId =\n                            this.dayViewGrid[this.dayViewGrid.length - 1][this.dayViewGrid[0].length - 1].id\n                            ;\n                    }\n                    break;\n                }\n                case ('ArrowRight'): {\n                    event.preventDefault();\n                    if (grid.x < this.dayViewGrid[0].length - 1) {\n                        this.newFocusedDayId = this.dayViewGrid[grid.y][grid.x + 1].id;\n                    } else if (grid.y < this.dayViewGrid.length - 1) {\n                        this.newFocusedDayId = this.dayViewGrid[grid.y + 1][0].id;\n                    } else {\n                        this.selectNextMonth();\n                        this.newFocusedDayId = this.dayViewGrid[0][0].id;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (this.newFocusedDayId) {\n            this.focusElement(this.newFocusedDayId);\n        }\n    }\n\n    /** @hidden */\n    public ngOnChanges(): void {\n        this.buildDayViewGrid();\n    }\n\n    /** @hidden\n     *  Method that allow to focus elements inside this component\n     */\n    public focusElement(elementSelector): void {\n        if (this.newFocusedDayId) {\n            this.newFocusedDayId = '';\n            setTimeout(() => {\n                const elementToFocus: HTMLElement = this.eRef.nativeElement.querySelector('#' + elementSelector);\n                if (elementToFocus) {\n                    elementToFocus.focus();\n                }\n            }, 0);\n        }\n    }\n\n    /** Active day means that with tabindex = 0, it's selected day or today or first day */\n    public focusActiveDay(): void {\n        this.newFocusedDayId = this.getActiveCell(\n            this.calendarDayList.filter(cell => cell.monthStatus === 'current')\n        ).id;\n        this.focusElement(this.newFocusedDayId);\n    }\n\n    /** Function that gives array of all displayed CalendarDays */\n    public get calendarDayList(): CalendarDay[] {\n        return this.dayViewGrid.reduce((totalCalendarRows: CalendarDay[], calendarRow: CalendarDay[]) => {\n            if (!calendarRow) {\n                calendarRow = [];\n            }\n            return totalCalendarRows.concat(calendarRow);\n        });\n    }\n\n    /**\n     * Method that selects previous month\n     * Triggered only when the month is changed during changing focus\n     * Also triggers event to parent calendar component and rebuilds day view grid\n     */\n    private selectPreviousMonth(): void {\n        if (this.currentlyDisplayed.month > 1) {\n            this.currentlyDisplayed = { ...this.currentlyDisplayed, month: this.currentlyDisplayed.month - 1 };\n        } else {\n            this.currentlyDisplayed = { year: this.currentlyDisplayed.year - 1, month: 12 };\n        }\n        this.buildDayViewGrid();\n        this.previousMonthSelect.emit();\n    }\n\n    /**\n     * Method that selects next month\n     * Triggered only when the month is changed during changing focus\n     * Also triggers event to parent calendar component and rebuilds day view grid\n     */\n    private selectNextMonth(): void {\n        if (this.currentlyDisplayed.month > 1) {\n            this.currentlyDisplayed = { ...this.currentlyDisplayed, month: this.currentlyDisplayed.month + 1 };\n        } else {\n            this.currentlyDisplayed = { year: this.currentlyDisplayed.year + 1, month: 1 };\n        }\n        this.buildDayViewGrid();\n        this.nextMonthSelect.emit();\n    }\n\n    /**\n     * Method that creates array of CalendarDay models which will be shown on day grid,\n     * depending on current month and year.\n     */\n    private populateCalendar(): CalendarDay[] {\n        let calendar: CalendarDay[] = [];\n\n        calendar = this.getPreviousMonthDays(calendar);\n        calendar = calendar.concat(this.getCurrentMonthDays());\n        calendar = this.getNextMonthDays(calendar);\n\n        calendar.forEach((call, index: number) => call.id = this.id + '-fd-day-' + (Math.floor(index / 7) + 1) + '' + (index % 7));\n\n        return calendar;\n    }\n\n    /**\n     * Method that builds 2 dimensions day view grid, also sets up currently displayed month, or year,\n     * when there is not any.\n     */\n    private buildDayViewGrid(): void {\n        if (!this.currentlyDisplayed) {\n            if (this.selectedDate) {\n                this.currentlyDisplayed = { month: this.selectedDate.month, year: this.selectedDate.year };\n            } else {\n                this.currentlyDisplayed = { month: FdDate.getToday().month, year: FdDate.getToday().year };\n            }\n        }\n\n        const calendarDays = this.populateCalendar();\n        const dayViewGrid: CalendarDay[][] = [];\n\n        while (calendarDays.length > 0) {\n            dayViewGrid.push(calendarDays.splice(0, 7));\n        }\n        this.dayViewGrid = dayViewGrid;\n        return;\n    }\n\n    /**\n     * Method which provides array of CalendarDay, which contains every single day of currently shown month/year.\n     */\n    private getCurrentMonthDays(): CalendarDay[] {\n        const month = this.currentlyDisplayed.month;\n        const year = this.currentlyDisplayed.year;\n        const calendarDays: CalendarDay[] = [];\n        const amountOfDaysInCurrentMonth: number = CalendarService.getDaysInMonth(month, year);\n        for (let dayNumber = 1; dayNumber <= amountOfDaysInCurrentMonth; dayNumber++) {\n            const fdDate: FdDate = new FdDate(year, month, dayNumber);\n            calendarDays.push({\n                ...this.getDay(fdDate),\n                monthStatus: 'current',\n                today: CalendarService.datesEqual(FdDate.getToday(), fdDate)\n            });\n        }\n        this.getActiveCell(calendarDays).isTabIndexed = true;\n        return calendarDays;\n    }\n\n    /**\n     * Method that returns active cell, which means:\n     * if there is any selected day, return selected day\n     * if there is no selected day, but there is today day, return today day\n     * if there is no today, or selected, return first one\n     */\n    private getActiveCell(calendarDays: CalendarDay[]): CalendarDay {\n        if (calendarDays.find(cell => cell.selected)) {\n            return calendarDays.find(cell => cell.selected);\n        } else if (calendarDays.find(cell => cell.today)) {\n            return calendarDays.find(cell => cell.today);\n        } else {\n            return calendarDays[0];\n        }\n    }\n\n    /**\n     * Method which provides array of CalendarDay, which contains last 0-6 days of previous month/year. Theses days\n     * fills the gap between starting startingDayOfWeek and first day of current month\n     */\n    private getPreviousMonthDays(calendarDays: CalendarDay[]): CalendarDay[] {\n        const month = this.currentlyDisplayed.month > 1 ? this.currentlyDisplayed.month - 1 : 12;\n        const year = this.currentlyDisplayed.month > 1 ? this.currentlyDisplayed.year : this.currentlyDisplayed.year - 1;\n        const amountOfDaysInCurrentMonth: number = CalendarService.getDaysInMonth(month, year);\n        const prevMonthLastDate = new FdDate(year, month, amountOfDaysInCurrentMonth);\n        const prevMonthLastDay = amountOfDaysInCurrentMonth;\n        let prevMonthLastWeekDay = prevMonthLastDate.getDay() - this.startingDayOfWeek;\n\n        /** Checking if there are some days cut by startingDayOfWeek option\n         *  If yes, there is whole week added, to avoid hiding\n         */\n        if (prevMonthLastWeekDay < 0) {\n            prevMonthLastWeekDay = prevMonthLastWeekDay + 7;\n        }\n\n        if (prevMonthLastWeekDay < 6) {\n            while (prevMonthLastWeekDay >= 0) {\n                const prevMonthDay = prevMonthLastDay - prevMonthLastWeekDay;\n                const fdDate = new FdDate(year, month, prevMonthDay);\n                calendarDays.push({ ...this.getDay(fdDate), monthStatus: 'previous' });\n                prevMonthLastWeekDay--;\n            }\n        }\n        return calendarDays;\n    }\n\n    /**\n     * Method which provides array of CalendarDay, which contains first days of next month/year. Theses days\n     * fills the gap between last day of current day and end of 6-weeks calendar grid.\n     */\n    private getNextMonthDays(calendarDays: CalendarDay[]): CalendarDay[] {\n        const month = this.currentlyDisplayed.month < 12 ? this.currentlyDisplayed.month + 1 : 1;\n        const year = this.currentlyDisplayed.month < 12 ? this.currentlyDisplayed.year : this.currentlyDisplayed.year + 1;\n\n        // The calendar grid can have 6 (42 days) weeks\n        const nextMonthDisplayedDays = 42 - calendarDays.length;\n\n        for (let nextD = 1; nextD <= nextMonthDisplayedDays; nextD++) {\n            const fdDate = new FdDate(year, month, nextD);\n            calendarDays.push({ ...this.getDay(fdDate), monthStatus: 'next' });\n        }\n        return calendarDays;\n    }\n\n    /**\n     * Method that generates whole day model basing on fdDate, disabling functions, block functions, and actually\n     * chosen range / single date.\n     */\n    private getDay(fdDate: FdDate): CalendarDay {\n        const day: CalendarDay = {\n            date: fdDate,\n            weekDay: fdDate.getDay(),\n            disabled: this.disableFunction(fdDate),\n            blocked: this.blockFunction(fdDate),\n            selected: (\n                (this.calType === 'single' && CalendarService.datesEqual(fdDate, this.selectedDate)) ||\n                (this.selectedRangeDate && CalendarService.datesEqual(fdDate, this.selectedRangeDate.start)) ||\n                (this.selectedRangeDate && CalendarService.datesEqual(fdDate, this.selectedRangeDate.end))\n            ),\n            selectedFirst: (this.selectedRangeDate && CalendarService.datesEqual(fdDate, this.selectedRangeDate.start)),\n            selectedLast: (this.selectedRangeDate && CalendarService.datesEqual(fdDate, this.selectedRangeDate.end)),\n            selectedRange: (this.selectedRangeDate && (\n                (this.selectedRangeDate.start && (this.selectedRangeDate.start.getTimeStamp() < fdDate.getTimeStamp())) &&\n                (this.selectedRangeDate.end && (this.selectedRangeDate.end.getTimeStamp() > fdDate.getTimeStamp()))\n            )),\n            ariaLabel: this.calendarI18n.getDayAriaLabel(fdDate.toDate())\n        };\n\n        if (this.calType === 'range' && (this.selectCounter === 0 || this.selectCounter === 2)) {\n            if (this.disableRangeStartFunction && !day.disabled) {\n                day.disabled = this.disableRangeStartFunction(day.date);\n            }\n            if (this.blockRangeStartFunction && !day.blocked) {\n                day.blocked = this.blockRangeStartFunction(day.date);\n            }\n        } else if (this.selectCounter === 1) {\n            if (this.disableRangeEndFunction && !day.disabled) {\n                day.disabled = this.disableRangeEndFunction(day.date);\n            }\n\n            if (this.blockRangeEndFunction && !day.blocked) {\n                day.blocked = this.blockRangeEndFunction(day.date);\n            }\n        }\n\n        return day;\n    }\n\n    /**\n     * Method that returns first letter of every weekday, basing on CalendarI18nDefault. Can be changed by user by\n     * providing other class which implements CalendarI18n\n     */\n    get shortWeekDays(): string[] {\n        return this._shortWeekDays;\n    }\n\n    /**\n     * Method that is called to refresh i18n short week days.\n     */\n    private refreshShortWeekDays(): void {\n        this._shortWeekDays = this.calendarI18n.getAllShortWeekdays()\n            .slice(this.startingDayOfWeek - 1)\n            .concat(this.calendarI18n.getAllShortWeekdays().slice(0, this.startingDayOfWeek - 1))\n            .map(weekday => weekday[0].toLocaleUpperCase());\n        this.changeDetRef.markForCheck();\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    ViewEncapsulation,\n    EventEmitter,\n    ElementRef,\n    OnInit,\n    OnDestroy,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy\n} from '@angular/core';\nimport { FdDate } from '../../models/fd-date';\nimport { CalendarI18n } from '../../i18n/calendar-i18n';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CalendarService } from '../../calendar.service';\n\n/** Component representing the month view of the calendar. */\n@Component({\n    selector: 'fd-calendar-month-view',\n    templateUrl: './calendar-month-view.component.html',\n    styleUrls: ['./calendar-month-view.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[attr.id]': 'id + \"-month-view\"'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CalendarMonthViewComponent implements OnInit, OnDestroy {\n\n    /** A number offset used to achieve the 1-12 representation of the calendar */\n    private readonly _monthOffset: number = 1;\n\n    private readonly _amountOfColPerRow: number = 4;\n\n    private _shortMonthNames: string[][];\n    private _fullMonthNames: string[];\n\n    /** An RxJS Subject that will kill the data stream upon component’s destruction (for unsubscribing)  */\n    private readonly onDestroy$: Subject<void> = new Subject<void>();\n\n    /** The id of the calendar passed from the parent component */\n    @Input()\n    id: string;\n\n    /** A number (1-12) representing the selected month */\n    @Input()\n    monthSelected: number;\n\n    /** A function that handles escape focus */\n    @Input()\n    focusEscapeFunction: Function;\n\n    /** An event fired when a new month is selected */\n    @Output()\n    readonly monthClicked: EventEmitter<number> = new EventEmitter<number>();\n\n    constructor(\n        private eRef: ElementRef,\n        private cdRef: ChangeDetectorRef,\n        private calendarI18n: CalendarI18n,\n        private calendarService: CalendarService\n    ) {\n    }\n\n    /** @hidden */\n    ngOnInit(): void {\n        this.calendarService.focusEscapeFunction = this.focusEscapeFunction;\n        this.refreshShortMonthNames();\n\n        this.calendarService.onFocusIdChange\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(index => this.focusElement('#' + this.id + '-fd-month-' + index))\n        ;\n\n        this.calendarService.onKeySelect\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(index => this.selectMonth(index))\n        ;\n\n        this.calendarI18n.i18nChange\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => this.refreshShortMonthNames())\n        ;\n    }\n\n    /** @hidden */\n    ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    /** Get a number (1-12) representing the current month  */\n    get currentMonth(): number {\n        return FdDate.getToday().month;\n    }\n\n    /**  Getter for the private class member _monthOffset */\n    get monthOffset(): number {\n        return this._monthOffset;\n    }\n\n    /** Method for handling the mouse click event when a month is selected  */\n    selectMonth(selectedMonth: number, event?: MouseEvent): void {\n        if (event) {\n            event.stopPropagation();\n        }\n        this.monthSelected = selectedMonth + this.monthOffset;\n        this.monthClicked.emit(this.monthSelected);\n    }\n\n    /** Method for handling the keyboard events (a11y) */\n    onKeydownMonthHandler(event, index: number): void {\n        this.calendarService.onKeydownHandler(event, index);\n    }\n\n    /** Method that allows to focus elements inside this component */\n    focusElement(elementSelector: string): void {\n        const elementToFocus: HTMLElement = this.eRef.nativeElement.querySelector(elementSelector);\n        if (elementToFocus) {\n            elementToFocus.focus();\n        }\n    }\n\n    /** Method returning id of month cell */\n    getId(rowIndex: number, colIndex: number): number {\n        return rowIndex * this._amountOfColPerRow + colIndex;\n    }\n\n    /** Method that checks if this is current month */\n    isCurrent(id: number): boolean {\n        return id + this._monthOffset === this.currentMonth;\n    }\n\n    /** Method that check if this is selected month */\n    isSelected(id: number): boolean {\n        return id + this._monthOffset === this.monthSelected;\n    }\n\n    /** Method that returns grid of short month names from currently provided calendarI18n service */\n    get shortMonthNames(): string[][] {\n        return this._shortMonthNames;\n    }\n\n    /** Method that returns the full name of month for grid element. */\n    getFullMonthName(rowIndex: number, colIndex: number): string {\n        const index = this.getId(rowIndex, colIndex);\n        return this._fullMonthNames[index];\n    }\n\n    /** Method that rewrite short month names, used mostly in case of i18n service language change */\n    private refreshShortMonthNames(): void {\n        const monthNames: string[] = [...this.calendarI18n.getAllShortMonthNames()];\n        this._fullMonthNames = [...this.calendarI18n.getAllFullMonthNames()];\n        const twoDimensionMonthNames: string[][] = [];\n        /** Creating 2d grid */\n        while (monthNames.length) {\n            twoDimensionMonthNames.push(monthNames.splice(0, this._amountOfColPerRow));\n        }\n        this._shortMonthNames = twoDimensionMonthNames;\n        this.cdRef.markForCheck();\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ViewEncapsulation,\n    Output,\n    Input,\n    EventEmitter,\n    ElementRef,\n    AfterViewChecked,\n    OnDestroy,\n    ChangeDetectionStrategy, ChangeDetectorRef\n} from '@angular/core';\nimport { FdDate } from '../../models/fd-date';\nimport { takeUntil } from 'rxjs/operators';\nimport { CalendarService } from '../../calendar.service';\nimport { Subject } from 'rxjs';\n\n/** Component representing the YearView of the Calendar Component. */\n@Component({\n    selector: 'fd-calendar-year-view',\n    templateUrl: './calendar-year-view.component.html',\n    styleUrls: ['./calendar-year-view.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[attr.id]': 'id + \"-year-view\"'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CalendarYearViewComponent implements AfterViewChecked, OnInit, OnDestroy {\n\n    private readonly _amountOfColPerRow: number = 4;\n\n    /** @hidden\n     *  This variable is used to define which year from calendarYearList should be focusable by tab key\n     */\n    activeYear: number;\n\n    /** Parameter that stores the dozen of years that are currently being displayed. */\n    calendarYearListGrid: number[][];\n\n    /** Parameter storing the year of the present day. */\n    currentYear: number = FdDate.getToday().year;\n\n    /** Parameter storing first shown year on list */\n    firstYearInList: number = this.currentYear;\n\n    /** An RxJS Subject that will kill the data stream upon component’s destruction (for unsubscribing)  */\n    private readonly onDestroy$: Subject<void> = new Subject<void>();\n\n    /** @hidden */\n    private newFocusedYearId: string;\n\n    /** Parameter used in id of years used for help with focusing on the correct element during keyboard navigation. */\n    @Input()\n    id: string;\n\n    /** Function that is called when the focus would escape the element. */\n    @Input()\n    focusEscapeFunction: Function;\n\n    /** Parameter holding the year that is currently selected. */\n    @Input()\n    yearSelected: number;\n\n    /** Event fired when a year is selected. */\n    @Output()\n    readonly yearClicked: EventEmitter<number> = new EventEmitter<number>();\n\n    /** @hidden */\n    constructor(\n        private eRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private calendarService: CalendarService) {\n    }\n\n    /** @hidden */\n    ngAfterViewChecked(): void {\n        if (this.newFocusedYearId) {\n            this.focusElement(this.newFocusedYearId);\n            this.newFocusedYearId = null;\n        }\n    }\n\n    /** @hidden */\n    ngOnInit(): void {\n        this.firstYearInList = this.yearSelected;\n        this.constructYearGrid();\n\n        this.calendarService.onFocusIdChange\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(index => {\n                this.newFocusedYearId = this.id + '-fd-year-' + index;\n                this.focusElement(this.newFocusedYearId);\n            })\n        ;\n        this.calendarService.focusEscapeFunction = this.focusEscapeFunction;\n\n        this.calendarService.onKeySelect\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(index => this.selectYear(this.getYearList()[index]))\n        ;\n\n        this.calendarService.onListStartApproach\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => this.loadPreviousYearList())\n        ;\n\n        this.calendarService.onListEndApproach\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => this.loadNextYearList())\n        ;\n    }\n\n    /** @hidden */\n    ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    /**\n     * Method that returns active cell, which means:\n     * if there is any selected year, return selected year\n     * if there is no selected year, but there is current year, return current year\n     * if there is no current year, or selected, return first one\n     */\n    private getActiveYear(): number {\n        const selectedYear: number = this.getYearList().find(year => year === this.yearSelected);\n        if (selectedYear) {\n            return selectedYear;\n        }\n\n        const currentYear: number = this.getYearList().find(year => year === this.currentYear);\n        if (currentYear) {\n            return currentYear;\n        }\n\n        return this.calendarYearListGrid[0][0];\n    }\n\n    /** Method for handling the keyboard navigation. */\n    onKeydownYearHandler(event, index: number): void {\n        this.calendarService.onKeydownHandler(event, index);\n    }\n\n    /** Method used to load the previous 12 years to be displayed. */\n    loadNextYearList(): void {\n        this.firstYearInList += 12;\n        this.constructYearGrid();\n    }\n\n    /** Method used to load the next 12 years to be displayed. */\n    loadPreviousYearList(): void {\n        this.firstYearInList -= 12;\n        this.constructYearGrid();\n    }\n\n    /** Method allowing focusing on elements within this component. */\n    focusElement(elementSelector: string): void {\n        setTimeout(() => {\n            const elementToFocus: HTMLElement = this.eRef.nativeElement.querySelector('#' + elementSelector);\n            if (elementToFocus) {\n                this.eRef.nativeElement.querySelector('#' + elementSelector).focus();\n            }\n        }, 0);\n    }\n\n    /** Method that sends the year to the parent component when it is clicked. */\n    selectYear(selectedYear: number, event?: MouseEvent) {\n        if (event) {\n            event.stopPropagation();\n        }\n        this.yearSelected = selectedYear;\n        this.yearClicked.emit(this.yearSelected);\n    }\n\n    getId(rowIndex: number, colIndex: number): number {\n        return rowIndex * this._amountOfColPerRow + colIndex;\n    }\n\n    /** @hidden */\n    private constructYearGrid(): void {\n        const displayedYearsAmount: number = 12;\n        const calendarYearList = [];\n        this.calendarYearListGrid = [];\n        for (let x = 0; x < displayedYearsAmount; ++x) {\n            calendarYearList.push(this.firstYearInList + x);\n        }\n        /** Creating 2d grid */\n        while (calendarYearList.length) {\n            this.calendarYearListGrid.push(calendarYearList.splice(0, this._amountOfColPerRow));\n        }\n        this.activeYear = this.getActiveYear();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Returns transformed 1d array from 2d year grid. */\n    private getYearList(): number[] {\n        return [].concat.apply([], this.calendarYearListGrid);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { CalendarI18n } from './i18n/calendar-i18n';\nimport { FdDate } from './models/fd-date';\nimport { CalendarCurrent } from './models/calendar-current';\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms';\nimport { CalendarDayViewComponent } from './calendar-views/calendar-day-view/calendar-day-view.component';\nimport { FdRangeDate } from './models/fd-range-date';\nimport { CalendarYearViewComponent } from './calendar-views/calendar-year-view/calendar-year-view.component';\n\nlet calendarUniqueId: number = 0;\n\n/** Type of calendar */\nexport type CalendarType = 'single' | 'range';\n\n/** Type for the calendar view */\nexport type FdCalendarView = 'day' | 'month' | 'year';\n\n/** Type for the days of the week. */\nexport type DaysOfWeek = 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\n/**\n * Months: 1 = January, 12 = december.\n * Days: 1 = Sunday, 7 = Saturday\n *\n * Calendar component used for selecting dates, typically used by the DatePicker and DateTimePicker components.\n * Supports the Angular forms module, enabling form validity, ngModel, etc.\n * ```html\n * <fd-calendar></fd-calendar>\n * ```\n */\n@Component({\n    selector: 'fd-calendar',\n    templateUrl: './calendar.component.html',\n    styleUrls: ['./calendar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => CalendarComponent),\n            multi: true\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => CalendarComponent),\n            multi: true\n        }\n    ],\n    host: {\n        '(blur)': 'onTouched()',\n        '[attr.id]': 'id'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CalendarComponent implements OnInit, ControlValueAccessor, Validator {\n\n    /** @hidden */\n    @ViewChild(CalendarDayViewComponent, { static: false }) dayViewComponent: CalendarDayViewComponent;\n\n    /** @hidden */\n    @ViewChild(CalendarYearViewComponent, { static: false }) yearViewComponent: CalendarYearViewComponent;\n\n    /** @hidden */\n    @HostBinding('class.fd-calendar')\n    fdCalendarClass: boolean = true;\n\n    /** @hidden */\n    @HostBinding('class.fd-has-display-block')\n    fdHasDisplayBlockClass: boolean = true;\n\n    /** Currently displayed days depending on month and year */\n    currentlyDisplayed: CalendarCurrent;\n\n    /** The currently selected FdDate model in single mode. */\n    @Input()\n    public selectedDate: FdDate = FdDate.getToday();\n\n    /** The currently selected FdDates model start and end in range mode. */\n    @Input()\n    public selectedRangeDate: FdRangeDate;\n\n    /** Actually shown active view one of 'day' | 'month' | 'year' */\n    @Input()\n    public activeView: FdCalendarView = 'day';\n\n    /** The day of the week the calendar should start on. 1 represents Sunday, 2 is Monday, 3 is Tuesday, and so on. */\n    @Input()\n    public startingDayOfWeek: DaysOfWeek = 1;\n\n    /** The type of calendar, 'single' for single date selection or 'range' for a range of dates. */\n    @Input()\n    public calType: CalendarType = 'single';\n\n    /** Id of the calendar. If none is provided, one will be generated. */\n    @Input()\n    id = 'fd-calendar-' + calendarUniqueId++;\n\n    /** Event thrown every time active view is changed */\n    @Output()\n    public readonly activeViewChange: EventEmitter<FdCalendarView> = new EventEmitter<FdCalendarView>();\n\n    /** Event thrown every time selected date in single mode is changed */\n    @Output()\n    public readonly selectedDateChange: EventEmitter<FdDate> = new EventEmitter<FdDate>();\n\n    /** Event thrown every time selected first or last date in range mode is changed */\n    @Output()\n    public readonly selectedRangeDateChange: EventEmitter<FdRangeDate> = new EventEmitter<FdRangeDate>();\n\n    /** Event thrown every time when value is overwritten from outside and throw back isValid */\n    @Output()\n    public readonly isValidDateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event thrown every time when calendar should be closed */\n    @Output()\n    public readonly closeCalendar: EventEmitter<void> = new EventEmitter<void>();\n\n    /** @hidden */\n    onChange: Function = () => {\n    };\n\n    /** @hidden */\n    onTouched: Function = () => {\n    };\n\n    /**\n     * Function used to disable certain dates in the calendar.\n     * @param fdDate FdDate\n     */\n    @Input()\n    disableFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to disable certain dates in the calendar for the range start selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    disableRangeStartFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to disable certain dates in the calendar for the range end selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    disableRangeEndFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to block certain dates in the calendar for the range start selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    blockRangeStartFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to block certain dates in the calendar for the range end selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    blockRangeEndFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to block certain dates in the calendar.\n     * @param fdDate FdDate\n     */\n    @Input()\n    blockFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /** That allows to define function that should happen, when focus should normally escape of component */\n    @Input()\n    escapeFocusFunction: Function = (): void => {\n        if (document.getElementById(this.id + '-left-arrow')) {\n            document.getElementById(this.id + '-left-arrow').focus();\n        }\n    };\n\n    /** @hidden */\n    constructor(\n        public calendarI18n: CalendarI18n,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /** @hidden */\n    ngOnInit(): void {\n        this.prepareDisplayedView();\n    }\n\n    /**\n     * @hidden\n     * Function that provides support for ControlValueAccessor that allows to use [(ngModel)] or forms.\n     */\n    writeValue(selected: FdRangeDate | FdDate): void {\n        let valid: boolean = true;\n        if (selected) {\n            if (this.calType === 'single') {\n                selected = <FdDate>selected;\n\n                valid = selected.isDateValid();\n                this.selectedDate = selected;\n\n                if (selected.isDateValid()) {\n                    this.prepareDisplayedView();\n                }\n            } else if (this.calType === 'range') {\n                selected = <FdRangeDate>selected;\n\n                if (!selected.start || !selected.end) {\n                    valid = false;\n                }\n                if (selected.start && !selected.start.isDateValid()) {\n                    valid = false;\n                }\n                if (selected.end && !selected.end.isDateValid()) {\n                    valid = false;\n                }\n                this.selectedRangeDate = { start: selected.start, end: selected.end };\n                if (valid) {\n                    this.prepareDisplayedView();\n                }\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n        this.isValidDateChange.emit(valid);\n    }\n\n    /**\n     * @hidden\n     * Function that implements Validator Interface, adds validation support for forms\n     */\n    validate(control: AbstractControl): {\n        [key: string]: any\n    } {\n        return this.isModelValid() ? null : {\n            dateValidation: {\n                valid: false\n            }\n        };\n    }\n\n    /** @hidden */\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    setDisabledState?(isDisabled: boolean): void {\n        // Not needed\n    }\n\n    /**\n     * Method that handle active view change and throws event.\n     */\n    public handleActiveViewChange(activeView: FdCalendarView): void {\n        this.activeView = activeView;\n        this.activeViewChange.emit(activeView);\n    }\n\n    /**\n     * @hidden\n     * Method that is triggered by events from day view component, when there is selected single date changed\n     */\n    selectedDateChanged(date: FdDate): void {\n        this.selectedDate = date;\n        this.onChange(date);\n        this.onTouched();\n        this.selectedDateChange.emit(date);\n        this.closeCalendar.emit();\n    }\n\n    /**\n     * @hidden\n     * Method that is triggered by events from day view component, when there is selected range date changed\n     */\n    public selectedRangeDateChanged(dates: FdRangeDate): void {\n        if (dates) {\n            this.selectedRangeDate = { start: dates.start, end: dates.end ? dates.end : dates.start };\n            this.selectedRangeDateChange.emit(this.selectedRangeDate);\n            this.onChange(this.selectedRangeDate);\n            this.onTouched();\n            this.closeCalendar.emit();\n        }\n    }\n\n    /** Function that handles next arrow icon click, depending on current view it changes month, year or list of years */\n    public handleNextArrowClick(): void {\n        switch (this.activeView) {\n            case 'day':\n                this.displayNextMonth();\n                break;\n            case 'month':\n                this.displayNextYear();\n                break;\n            case 'year':\n                this.displayNextYearList();\n                break;\n        }\n        this.onTouched();\n    }\n\n    /** Function that handles previous arrow icon click, depending on current view it changes month, year or list of years */\n    public handlePreviousArrowClick(): void {\n        switch (this.activeView) {\n            case 'day':\n                this.displayPreviousMonth();\n                break;\n            case 'month':\n                this.displayPreviousYear();\n                break;\n            case 'year':\n                this.displayPreviousYearList();\n                break;\n        }\n        this.onTouched();\n    }\n\n    /** Function that allows to switch actual view to next month */\n    public displayNextMonth(): void {\n        if (this.currentlyDisplayed.month === 12) {\n            this.currentlyDisplayed = { year: this.currentlyDisplayed.year + 1, month: 1 };\n        } else {\n            this.currentlyDisplayed = { year: this.currentlyDisplayed.year, month: this.currentlyDisplayed.month + 1 };\n        }\n    }\n\n    /** Function that allows to switch actual view to previous month */\n    public displayPreviousMonth(): void {\n        if (this.currentlyDisplayed.month <= 1) {\n            this.currentlyDisplayed = { year: this.currentlyDisplayed.year - 1, month: 12 };\n        } else {\n            this.currentlyDisplayed = { year: this.currentlyDisplayed.year, month: this.currentlyDisplayed.month - 1 };\n        }\n    }\n\n    /** Function that allows to switch actual view to next year */\n    public displayNextYear(): void {\n        this.currentlyDisplayed = { month: this.currentlyDisplayed.month, year: this.currentlyDisplayed.year + 1 };\n    }\n\n    /** Function that allows to switch actual view to previous year */\n    public displayPreviousYear(): void {\n        this.currentlyDisplayed = { month: this.currentlyDisplayed.month, year: this.currentlyDisplayed.year - 1 };\n    }\n\n    /** Function that allows to switch actually displayed list of year to next year list*/\n    public displayNextYearList(): void {\n        this.yearViewComponent.loadNextYearList();\n    }\n\n    /** Function that allows to switch actually displayed list of year to previous year list*/\n    public displayPreviousYearList(): void {\n        this.yearViewComponent.loadPreviousYearList();\n    }\n\n    /** Function that allows to change currently displayed month/year configuration,\n     * which are connected to days displayed\n     */\n    public setCurrentlyDisplayed(fdDate: FdDate): void {\n        this.currentlyDisplayed = { month: fdDate.month, year: fdDate.year };\n    }\n\n    /**\n     * @hidden\n     * Function that handles changes from month view child component, changes actual view and changes currently displayed month\n     */\n    public handleMonthViewChange(month: number): void {\n        this.currentlyDisplayed = { month: month, year: this.currentlyDisplayed.year };\n        this.activeView = 'day';\n        this.activeViewChange.emit(this.activeView);\n        this.changeDetectorRef.detectChanges();\n        this.dayViewComponent.focusActiveDay();\n    }\n\n    public selectedYear(yearSelected: number) {\n        this.activeView = 'day';\n        this.currentlyDisplayed.year = yearSelected;\n        this.changeDetectorRef.detectChanges();\n        this.dayViewComponent.focusActiveDay();\n    }\n\n    /** Method that provides information if model selected date/dates have properly types and are valid */\n    public isModelValid(): boolean {\n        if (this.calType === 'single') {\n            return this.selectedDate &&\n                this.selectedDate instanceof FdDate &&\n                this.selectedDate.isDateValid();\n        } else {\n            return this.selectedRangeDate &&\n                (\n                    this.selectedRangeDate.start &&\n                    this.selectedRangeDate.start instanceof FdDate &&\n                    this.selectedRangeDate.start.isDateValid()\n                ) && (\n                    this.selectedRangeDate.end &&\n                    this.selectedRangeDate.end instanceof FdDate &&\n                    this.selectedRangeDate.start.isDateValid()\n                );\n        }\n    }\n\n    /**\n     * @hidden\n     * Method that sets up the currently displayed variables, like shown month and year.\n     * Day grid is based on currently displayed month and year\n     */\n    private prepareDisplayedView(): void {\n        if (this.calType === 'single' && this.selectedDate && this.selectedDate.month && this.selectedDate.year) {\n            this.currentlyDisplayed = { month: this.selectedDate.month, year: this.selectedDate.year };\n        } else if (this.selectedRangeDate && this.selectedRangeDate.start) {\n            this.currentlyDisplayed = {\n                month: this.selectedRangeDate.start.month,\n                year: this.selectedRangeDate.start.year\n            };\n        } else if (this.selectedRangeDate && this.selectedRangeDate.end) {\n            this.currentlyDisplayed = {\n                month: this.selectedRangeDate.end.month,\n                year: this.selectedRangeDate.end.year\n            };\n        } else {\n            const tempDate = FdDate.getToday();\n            this.currentlyDisplayed = { month: tempDate.month, year: tempDate.year };\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconModule } from '../icon/icon.module';\n\nimport { CalendarHeaderComponent } from './calendar-header/calendar-header.component';\nimport { CalendarDayViewComponent } from './calendar-views/calendar-day-view/calendar-day-view.component';\nimport { CalendarMonthViewComponent } from './calendar-views/calendar-month-view/calendar-month-view.component';\nimport { CalendarYearViewComponent } from './calendar-views/calendar-year-view/calendar-year-view.component';\nimport { CalendarService } from './calendar.service';\nimport { CalendarComponent } from './calendar.component';\nimport { ButtonModule } from '../button/button.module';\n\n@NgModule({\n    declarations: [CalendarComponent, CalendarHeaderComponent,\n        CalendarDayViewComponent, CalendarMonthViewComponent, CalendarYearViewComponent],\n    imports: [CommonModule, IconModule, ButtonModule],\n    exports: [CalendarComponent, CalendarDayViewComponent,\n        CalendarHeaderComponent, CalendarYearViewComponent, CalendarMonthViewComponent],\n    providers: [CalendarService]\n})\nexport class CalendarModule {}\n","import {\n    AfterViewInit, ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ElementRef, EmbeddedViewRef,\n    EventEmitter, HostBinding,\n    HostListener, OnDestroy,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport focusTrap from 'focus-trap';\n\n/**\n * Not intended for external use.\n */\n@Component({\n    selector: 'fd-popover-container',\n    template: `\n        <span class=\"fd-popover__arrow\" x-arrow></span>\n        <ng-container #vc>\n            {{contentString}}\n        </ng-container>\n    `,\n    styleUrls: ['./popover-container.scss'],\n    host: {\n        class: 'fd-popover__popper fd-popover-container-custom',\n        'tabindex': '-1'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopoverContainer implements AfterViewInit, OnDestroy {\n\n    @ViewChild('vc', { read: ViewContainerRef, static: false })\n    containerRef: ViewContainerRef;\n\n    @HostBinding('class.fd-popover__popper--no-arrow')\n    noArrow: boolean = true;\n\n    @Output()\n    isSetup = new EventEmitter<undefined>();\n\n    content: TemplateRef<any> | string;\n\n    contentString: string;\n\n    context: any;\n\n    placement: string;\n\n    focusTrapped: boolean;\n\n    closeOnEscapeKey: boolean;\n\n    private componentRef: EmbeddedViewRef<any>;\n    private focusTrap: any;\n\n    constructor(private elRef: ElementRef,\n                private cdRef: ChangeDetectorRef) {\n    }\n\n    ngAfterViewInit(): void {\n        if (this.content instanceof TemplateRef) {\n            this.loadFromTemplate(this.content);\n        } else {\n            this.contentString = this.content;\n        }\n        this.setupFocusTrap();\n        this.isSetup.emit();\n        this.cdRef.detectChanges();\n    }\n\n    ngOnDestroy(): void {\n        if (this.focusTrap) {\n            this.focusTrap.deactivate();\n        }\n    }\n\n    private loadFromTemplate(content: TemplateRef<any>): void {\n        this.containerRef.clear();\n        const context = {\n            $implicit: this.context\n        };\n        this.componentRef = this.containerRef.createEmbeddedView(content, context);\n    }\n\n    private setupFocusTrap(): void {\n        if (this.focusTrapped) {\n            try {\n                this.focusTrap = focusTrap(this.elRef.nativeElement, {\n                    clickOutsideDeactivates: true,\n                    escapeDeactivates: false,\n                    initialFocus: this.elRef.nativeElement\n                });\n                this.focusTrap.activate();\n            } catch (e) {\n                console.warn('Attempted to focus trap the popover, but no tabbable elements were found.');\n            }\n        }\n    }\n\n    @HostListener('keydown.escape')\n    escapeHandler(): void {\n        if (this.containerRef && this.context.isOpen && this.closeOnEscapeKey) {\n            this.context.close();\n        }\n    }\n}\n","import {\n    ApplicationRef,\n    ChangeDetectorRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    ElementRef, EmbeddedViewRef, EventEmitter, HostBinding, HostListener,\n    Injector, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges,\n    TemplateRef\n} from '@angular/core';\nimport { PopoverContainer } from './popover-container';\nimport Popper, { Placement, PopperOptions } from 'popper.js';\n\nexport type PopoverFillMode = 'at-least' | 'equal';\n\n/**\n * Directive which manages the popper and popover components of the library.\n * It can be attached to any element. To bind it to a body, use the following syntax.\n * ```html\n * <div [fdPopover]=\"template\">Control Element</div>\n * <ng-template #template>\n *     Popover Body\n * </ng-template>\n * ```\n */\n@Directive({\n    selector: '[fdPopover]'\n})\nexport class PopoverDirective implements OnInit, OnDestroy, OnChanges {\n\n    /** Content of the popover. Used through the actual directive tag. Accepts strings or TemplateRefs. */\n    @Input('fdPopover')\n    content: TemplateRef<any> | string;\n\n    /** Whether the popover is open. Can be used through two-way binding. */\n    @Input()\n    isOpen: boolean = false;\n\n    /** The trigger events that will open/close the popover.\n     *  Accepts any [HTML DOM Events](https://www.w3schools.com/jsref/dom_obj_event.asp). */\n    @Input()\n    triggers: string[] = ['click'];\n\n    /** Whether the popover should display the default arrow. */\n    @Input()\n    noArrow: boolean = true;\n\n    /** The placement of the popover. It can be one of: top, top-start, top-end, bottom,\n     *  bottom-start, bottom-end, right, right-start, right-end, left, left-start, left-end. */\n    @Input()\n    placement: Placement;\n\n    /** Whether the popover should be focusTrapped. */\n    @Input()\n    focusTrapped: boolean = false;\n\n    /** Whether the popover should close when the escape key is pressed. */\n    @Input()\n    closeOnEscapeKey: boolean = true;\n\n    /** Whether the popover is disabled. */\n    @Input()\n    @HostBinding('class.fd-popover-custom--disabled')\n    disabled: boolean = false;\n\n    /** Whether the popover should close when a click is made outside its boundaries. */\n    @Input()\n    closeOnOutsideClick: boolean = true;\n\n    /** The element to which the popover should be appended. */\n    @Input()\n    appendTo: HTMLElement | 'body' = 'body';\n\n    /** List of additional classes that will be added to popover container element */\n    @Input()\n    additionalClasses: string[] = [];\n\n    /** The Popper.js options to attach to this popover.\n     * See the [Popper.js Documentation](https://popper.js.org/popper-documentation.html) for details. */\n    @Input()\n    options: PopperOptions = {\n        placement: 'bottom-start',\n        modifiers: {\n            preventOverflow: {\n                enabled: true,\n                escapeWithReference: true,\n                boundariesElement: 'scrollParent'\n            }\n        }\n    };\n\n    /**\n     * Preset options for the popover body width.\n     * * `at-least` will apply a minimum width to the body equivalent to the width of the control.\n     * * `equal` will apply a width to the body equivalent to the width of the control.\n     * * Leave blank for no effect.\n     */\n    @Input()\n    fillControlMode: PopoverFillMode;\n\n    /** Event emitted when the state of the isOpen property changes. */\n    @Output()\n    isOpenChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    private containerRef: ComponentRef<PopoverContainer>;\n    private popper: Popper;\n    private eventRef: Function[] = [];\n    private isSetup: boolean = false;\n    private _outsideClickEventReference: () => void;\n\n    /** @hidden */\n    constructor(private elRef: ElementRef,\n                private cdRef: ChangeDetectorRef,\n                private resolver: ComponentFactoryResolver,\n                private injector: Injector,\n                private appRef: ApplicationRef,\n                private renderer: Renderer2) {\n    }\n\n    /** @hidden */\n    ngOnInit(): void {\n        if (this.isOpen) {\n            this.open();\n        }\n\n        this.setupFillBehaviour();\n        this.initPlacement();\n\n        this.addTriggerListeners();\n        this.isSetup = true;\n    }\n\n    /** @hidden */\n    ngOnDestroy(): void {\n        if (this.popper) {\n            this.popper.destroy();\n        }\n\n        if (this.containerRef) {\n            this.destroyContainer();\n        }\n\n        this.destroyTriggerListeners();\n    }\n\n    /** @hidden */\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this.isSetup) {\n            return;\n        }\n\n        if (changes.triggers) {\n            setTimeout(() => {\n                this.destroyTriggerListeners();\n                this.addTriggerListeners();\n            });\n        }\n\n        if (changes.isOpen) {\n            if (changes.isOpen.currentValue) {\n                setTimeout(() => {\n                    this.isOpen = false;\n                    this.open(false);\n                });\n            } else {\n                setTimeout(() => {\n                    this.isOpen = true;\n                    this.close(false);\n                });\n            }\n        }\n\n        if (changes.placement) {\n            setTimeout(() => {\n                this.initPlacement();\n            });\n        }\n\n        if (changes.fillControl) {\n            setTimeout(() => {\n                this.setupFillBehaviour();\n            });\n        }\n    }\n\n    /**\n     * Toggles the popover open state.\n     */\n    public toggle(fireEvent: boolean = true): void {\n        if (this.isOpen) {\n            this.close(fireEvent);\n        } else {\n            this.open(fireEvent);\n        }\n    }\n\n    /**\n     * Opens the popover.\n     */\n    public open(fireEvent: boolean = true): void {\n        if (!this.isOpen && !this.disabled) {\n            this.createContainer();\n            this._addListenerForOutsideClick();\n            this.isOpen = true;\n\n            if (fireEvent) {\n                this.isOpenChange.emit(this.isOpen);\n            }\n        }\n    }\n\n    /**\n     * Closes the popover.\n     */\n    public close(fireEvent: boolean = true): void {\n        if (this._outsideClickEventReference) {\n            this._outsideClickEventReference();\n            this._outsideClickEventReference = null;\n        }\n\n        if (this.isOpen) {\n            this.destroyContainer();\n            this.isOpen = false;\n\n            if (fireEvent) {\n                this.isOpenChange.emit(this.isOpen);\n            }\n        }\n    }\n\n    /**\n     * Forces an update of the popover's positioning calculation.\n     */\n    public updatePopper(): void {\n        if (this.popper) {\n            this.popper.scheduleUpdate();\n        }\n    }\n\n    private createContainer(): void {\n        if (this.containerRef) {\n            return;\n        }\n\n        const factory = this.resolver.resolveComponentFactory(PopoverContainer);\n        this.containerRef = factory.create(this.injector);\n\n        // Set instance properties\n        this.containerRef.instance.context = this;\n        this.containerRef.instance.content = this.content;\n        this.containerRef.instance.focusTrapped = this.focusTrapped;\n        this.containerRef.instance.noArrow = this.noArrow;\n        this.containerRef.instance.closeOnEscapeKey = this.closeOnEscapeKey;\n\n        if (this.additionalClasses) {\n            this.containerRef.location.nativeElement.classList.add(...this.additionalClasses);\n        }\n\n        this.appRef.attachView(this.containerRef.hostView);\n        const setupRef = this.containerRef.instance.isSetup.subscribe(() => {\n            this.createPopper();\n            setupRef.unsubscribe();\n        });\n\n        const containerEl = (this.containerRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\n        if (this.appendTo === 'body') {\n            document.body.appendChild(containerEl);\n        } else {\n            this.appendTo.appendChild(containerEl);\n        }\n\n    }\n\n    private destroyTriggerListeners(): void {\n        if (this.eventRef && this.eventRef.length > 0) {\n            this.eventRef.forEach(event => {\n                event();\n            });\n            this.eventRef = [];\n        }\n    }\n\n    private addTriggerListeners(): void {\n        if (this.triggers && this.triggers.length > 0) {\n            this.triggers.forEach(trigger => {\n                this.eventRef.push(this.renderer.listen(this.elRef.nativeElement, trigger, () => {\n                    this.toggle();\n                }));\n            });\n        }\n    }\n\n    private destroyContainer(): void {\n        if (this.containerRef) {\n            this.appRef.detachView(this.containerRef.hostView);\n            this.containerRef.destroy();\n            this.containerRef = null;\n        }\n\n        if (this.popper) {\n            this.popper.destroy();\n            this.popper = null;\n        }\n    }\n\n    private createPopper(): void {\n        this.popper = new Popper(\n            this.elRef.nativeElement as HTMLElement,\n            this.containerRef.location.nativeElement as HTMLElement,\n            this.options\n        );\n    }\n\n    private fillReference(data): any {\n        data.offsets.popper.left = data.offsets.reference.left;\n        data.offsets.popper.right = data.offsets.reference.right;\n        data.offsets.popper.width = data.styles.width = data.offsets.reference.width;\n        return data;\n    }\n\n    private atLeastReference(data): any {\n        data.offsets.popper.left = data.offsets.reference.left;\n        data.offsets.popper.right = data.offsets.reference.right;\n        data.styles.minWidth = data.offsets.reference.width + 'px';\n        return data;\n    }\n\n    private initPlacement(): void {\n        if (this.placement) {\n            if (this.options) {\n                this.options.placement = this.placement;\n            } else {\n                this.options = { placement: this.placement };\n            }\n        }\n    }\n\n    private setupFillBehaviour(): void {\n        if (this.fillControlMode) {\n            if (this.options && this.options.modifiers) {\n                this.options.modifiers.fillReference = {\n                    enabled: true,\n                    fn: this.fillControlMode === 'equal' ? this.fillReference : this.atLeastReference,\n                    order: 840\n                };\n            } else {\n                this.options = {\n                    modifiers: {\n                        fillReference: {\n                            enabled: true,\n                            fn: this.fillControlMode === 'equal' ? this.fillReference : this.atLeastReference,\n                            order: 840\n                        }\n                    }\n                };\n            }\n        }\n    }\n\n    private _addListenerForOutsideClick(): void {\n        if (!this._outsideClickEventReference) {\n            this._outsideClickEventReference = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n                if (this._shouldClose(event)) {\n                    this.close();\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n            });\n        }\n    }\n\n    private _shouldClose(event: MouseEvent): boolean {\n        return this.containerRef &&\n            this.isOpen &&\n            this.closeOnOutsideClick &&\n            event.target !== this.elRef.nativeElement &&\n            !this.elRef.nativeElement.contains(event.target) &&\n            !this.containerRef.location.nativeElement.contains(event.target)\n        ;\n    }\n}\n","import { ChangeDetectionStrategy, Component, Host, Inject, Input, isDevMode, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PopoverComponent } from '../popover.component';\nimport { ButtonType } from '../../button/button.component';\n/**\n * A component used to enforce a certain layout for the popover. With additional styling\n * ```html\n * <fd-popover>\n *     <fd-dropdown>Dropdown</fd-dropdown>\n *     <fd-popover-body>Popover Body</fd-popover-body>\n * </fd-popover>\n * ```\n */\n@Component({\n    selector: 'fd-dropdown-control',\n    host: {\n        class: 'fd-dropdown',\n    },\n    templateUrl: 'popover-dropdown.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopoverDropdownComponent {\n    /** Whether the popover should have an arrow. */\n    @Input()\n    noArrow: boolean = true;\n\n    /** Whether the popover is disabled. */\n    @Input()\n    disabled: boolean = false;\n\n    /** The glyph to display. */\n    @Input()\n    glyph: string;\n\n    /** The btnType to display. */\n    @Input()\n    btnType: ButtonType;\n\n    /** Whether the dropdown is in compact format. */\n    @Input()\n    compact: boolean = false;\n\n    /** Whether the dropdown is in a toolbar. */\n    @Input()\n    toolbar: boolean = false;\n\n    /** Whether the dropdown is opened. */\n    @Input()\n    isOpen: boolean = false;\n\n    constructor() {\n        if (isDevMode()) {\n            console.warn('Popover Dropdown has been deprecated, it will be removed soon. Replace it by popover with menu button');\n        }\n    }\n\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild, ViewEncapsulation, ContentChild, ChangeDetectionStrategy, HostBinding\n} from '@angular/core';\nimport { Placement, PopperOptions } from 'popper.js';\nimport { PopoverDirective, PopoverFillMode } from './popover-directive/popover.directive';\nimport { PopoverDropdownComponent } from './popover-dropdown/popover-dropdown.component';\n\nlet popoverUniqueId: number = 0;\n\n/**\n * The popover is a wrapping component that accepts a *control* as well as a *body*.\n * The control is what will trigger the opening of the actual popover, which is called the body.\n * By default, popovers are triggered by click. This can be customized through the *triggers* input.\n * PopoverComponent is an abstraction of PopoverDirective.\n */\n@Component({\n    selector: 'fd-popover',\n    templateUrl: './popover.component.html',\n    styleUrls: ['./popover.component.scss'],\n    host: {\n        '[class.fd-popover-custom]': 'true',\n        '[attr.id]': 'id'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopoverComponent {\n\n    /** @hidden */\n    @ViewChild(PopoverDirective, { static: false })\n    directiveRef: PopoverDirective;\n    /** @hidden */\n    @ContentChild(PopoverDropdownComponent, { static: false }) dropdownComponent: PopoverDropdownComponent;\n\n    /** Whether the popover should have an arrow. */\n    @Input()\n    noArrow: boolean = true;\n\n    /** Whether the popover container needs an extra class for styling. */\n    @Input()\n    addContainerClass: string;\n\n    /** Whether the popover is disabled. */\n    @Input()\n    @HostBinding('class.fd-popover-custom--disabled')\n    disabled: boolean = false;\n\n    /** Whether the popover should be treated as a dropdown. */\n    @Input()\n    isDropdown: boolean = false;\n\n    /** The element to which the popover should be appended. */\n    @Input()\n    appendTo: HTMLElement | 'body';\n\n    /** The trigger events that will open/close the popover.\n     *  Accepts any [HTML DOM Events](https://www.w3schools.com/jsref/dom_obj_event.asp). */\n    @Input()\n    triggers: string[] = ['click'];\n\n    /** The placement of the popover. It can be one of: top, top-start, top-end, bottom,\n     *  bottom-start, bottom-end, right, right-start, right-end, left, left-start, left-end. */\n    @Input()\n    placement: Placement;\n\n    /** Whether the popover is open. Can be used through two-way binding. */\n    @Input()\n    isOpen: boolean = false;\n\n    /** List of additional classes that will be added to popover container element */\n    @Input()\n    additionalClasses: string[] = [];\n\n    /** The Popper.js options to attach to this popover.\n     * See the [Popper.js Documentation](https://popper.js.org/popper-documentation.html) for details. */\n    @Input()\n    options: PopperOptions = {\n        placement: 'bottom-start',\n        modifiers: {\n            preventOverflow: {\n                enabled: true,\n                escapeWithReference: true,\n                boundariesElement: 'scrollParent'\n            }\n        }\n    };\n\n    /** Whether the popover should be focusTrapped. */\n    @Input()\n    focusTrapped: boolean = false;\n\n    /**\n     * Preset options for the popover body width.\n     * * `at-least` will apply a minimum width to the body equivalent to the width of the control.\n     * * `equal` will apply a width to the body equivalent to the width of the control.\n     * * Leave blank for no effect.\n     */\n    @Input()\n    fillControlMode: PopoverFillMode;\n\n    /** Whether the popover should close when a click is made outside its boundaries. */\n    @Input()\n    closeOnOutsideClick: boolean = true;\n\n    /** Whether the popover should close when the escape key is pressed. */\n    @Input()\n    closeOnEscapeKey: boolean = true;\n\n    /** Event emitted when the state of the isOpen property changes. */\n    @Output()\n    isOpenChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Id of the popover. If none is provided, one will be generated. */\n    @Input()\n    id: string = 'fd-popover-' + popoverUniqueId++;\n    \n    /**\n     * Toggles the popover open state.\n     */\n    public toggle(): void {\n        if (this.isOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /**\n     * Closes the popover.\n     */\n    public close(): void {\n        if (this.isOpen) {\n            this.isOpen = false;\n            this.isOpenChange.emit(this.isOpen);\n        }\n    }\n\n    /**\n     * Opens the popover.\n     */\n    public open(): void {\n        if (!this.isOpen) {\n            this.isOpen = true;\n            this.isOpenChange.emit(this.isOpen);\n        }\n    }\n\n    /**\n     * Forces an update of the popover's positioning calculation.\n     */\n    public updatePopover(): void {\n        this.directiveRef.updatePopper();\n    }\n\n    /**\n     * Function is called every time popover changes open attribute\n     */\n    public openChanged(isOpen: boolean) {\n        this.isOpenChange.emit(isOpen);\n        this.updateDropdownIsOpen(isOpen);\n    }\n\n    /** Method that is called, when there is keydown event dispatched */\n    public handleKeydown(event: KeyboardEvent): void {\n        if (event.key === 'ArrowDown' && event.altKey) {\n            this.open();\n        }\n    }\n\n\n    /** @hidden\n     *  Function that allows us to control aria-expanded on dropdown child\n     * */\n    private updateDropdownIsOpen(isOpen: boolean) {\n        if (this.dropdownComponent) {\n            this.dropdownComponent.isOpen = isOpen;\n        }\n    }\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * A component used to enforce a certain layout for the popover.\n * ```html\n * <fd-popover>\n *     <fd-popover-control>Control Element</fd-popover-control>\n *     <fd-popover-body>Popover Body</fd-popover-body>\n * </fd-popover>\n * ```\n */\n@Component({\n    selector: 'fd-popover-control',\n    templateUrl: './popover-control.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopoverControlComponent {}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * A component used to enforce a certain layout for the popover.\n * ```html\n * <fd-popover>\n *     <fd-popover-control>Control Element</fd-popover-control>\n *     <fd-popover-body>Popover Body</fd-popover-body>\n * </fd-popover>\n * ```\n */\n@Component({\n    selector: 'fd-popover-body',\n    templateUrl: './popover-body.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopoverBodyComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PopoverComponent } from './popover.component';\nimport { PopoverControlComponent } from './popover-control/popover-control.component';\nimport { PopoverBodyComponent } from './popover-body/popover-body.component';\nimport { PopoverDirective } from './popover-directive/popover.directive';\nimport { PopoverContainer } from './popover-directive/popover-container';\nimport { PopoverDropdownComponent } from './popover-dropdown/popover-dropdown.component';\nimport { ButtonModule } from '../button/button.module';\n\n@NgModule({\n    declarations: [\n        PopoverComponent,\n        PopoverControlComponent,\n        PopoverBodyComponent,\n        PopoverDirective,\n        PopoverContainer,\n        PopoverDropdownComponent,\n    ],\n    imports: [CommonModule, ButtonModule],\n    exports: [PopoverComponent, PopoverControlComponent, PopoverBodyComponent, PopoverDirective, PopoverDropdownComponent],\n    entryComponents: [PopoverContainer]\n})\nexport class PopoverModule {}\n","import {\n    Component, HostBinding,\n    ViewEncapsulation,\n    Input, ChangeDetectionStrategy\n} from '@angular/core';\n\n/**\n * The component that represents a menu.\n */\n@Component({\n    selector: 'fd-menu',\n    templateUrl: './menu.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MenuComponent {\n    /** @hidden */\n    @HostBinding('class.fd-menu')\n    fdMenuClass: boolean = true;\n\n    /** The separator line for each menu item. When set to true, it adds a separator below each menu item in the list.\n     * False by default. Leave empty for default. */\n    @Input()\n    @HostBinding('class.fd-menu__list--separated')\n    separator: boolean = false;\n\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n/**\n * The component that represents a menu group.\n */\n@Component({\n    selector: 'fd-menu-group',\n    templateUrl: './menu-group.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MenuGroupComponent {\n    /** @hidden*/\n    @HostBinding('class.fd-has-display-block')\n    fdHasDisplayBlockClass: boolean = true;\n\n    /** @hidden*/\n    @HostBinding('class.fd-menu__group')\n    fdMenuGroupClass: boolean = true;\n\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * The directive that represents the menu title.\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-menu-title]'\n})\nexport class MenuTitleDirective {\n    /** @hidden */\n    @HostBinding('class')\n    elementClass = 'fd-menu__title';\n\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * The directive that represents a listing structure of the menu.\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-menu-list]'\n})\nexport class MenuListDirective {\n    /** @hidden */\n    @HostBinding('class.fd-menu__list')\n    fdMenuListClass: boolean = true;\n}\n","import { Directive, ElementRef, HostBinding } from '@angular/core';\nimport { DefaultMenuItem } from './default-menu-item';\n\n/**\n * The directive that represents a menu item.\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-menu-item]',\n})\nexport class MenuItemDirective implements DefaultMenuItem {\n\n    /** @hidden*/\n    @HostBinding('class.fd-menu__item')\n    fdMenuItemClass: boolean = true;\n\n    /** @hidden */\n    constructor (public itemEl: ElementRef) {}\n\n    public focus(): void {\n        this.itemEl.nativeElement.focus();\n    }\n\n    public click(): void {\n        this.itemEl.nativeElement.click();\n    }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\n\n/**\n * The directive for menu addon(for icons).\n */\n@Directive({\n    selector: '[fd-menu-addon], [fdMenuAddon]'\n})\nexport class MenuAddonDirective {\n    /** @hidden */\n    @Input()\n    @HostBinding('class.fd-menu--addon-before')\n    fdMenuAddonClass: boolean = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * The directive for menu item addon(for icons).\n */\n@Directive({\n    selector: '[fd-menu-item-addon], [fdMenuItemAddon]'\n})\nexport class MenuItemAddonDirective {\n    /** @hidden */\n    @HostBinding('class.fd-menu__addon-before')\n    fdMenuItemAddonClass: boolean = true;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MenuComponent } from './menu.component';\nimport { MenuGroupComponent } from './menu-group.component';\nimport { MenuTitleDirective } from './menu-title.directive';\nimport { MenuListDirective } from './menu-list.directive';\nimport { MenuItemDirective } from './menu-item.directive';\nimport { MenuAddonDirective } from './menu-addon.directive';\nimport { MenuItemAddonDirective } from './menu-item-addon.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [\n        MenuComponent,\n        MenuGroupComponent,\n        MenuTitleDirective,\n        MenuListDirective,\n        MenuItemDirective,\n        MenuAddonDirective,\n        MenuItemAddonDirective\n    ],\n    declarations: [\n        MenuComponent,\n        MenuGroupComponent,\n        MenuTitleDirective,\n        MenuListDirective,\n        MenuItemDirective,\n        MenuAddonDirective,\n        MenuItemAddonDirective\n    ]\n})\nexport class MenuModule { }\n","import { Subject } from 'rxjs';\nimport { Output } from '@angular/core';\nimport { DefaultMenuItem } from './default-menu-item';\n\nexport class MenuKeyboardService {\n\n    /** Event emitted when an item link is clicked.*/\n    @Output()\n    public readonly itemClicked: Subject<number> = new Subject<number>();\n\n    /** Whether user wants to remove keyboard handling */\n    disableKeydownHandling: boolean = false;\n\n    /** Function that is supposed to be called, when focus escape before list */\n    focusEscapeBeforeList: Function;\n\n    /** Function that is supposed to be called, when focus escape after list */\n    focusEscapeAfterList: Function;\n\n    /** Function that should be called every time, keydown event is used on some menu item,\n     * it provides whole functionality for handling\n     * ArrowDown - focus, ArrowUp - focus, Space bar - simulate click, Enter key - simulate click.\n     * @param event KeyboardEvent\n     * @param index index of items starts from 0\n     * @param menuItems array of menu item directives\n     * */\n    keyDownHandler(event: KeyboardEvent, index: number, menuItems: DefaultMenuItem[]): void {\n\n        if (this.disableKeydownHandling) {\n            return;\n        }\n\n        switch (event.key) {\n            case ('ArrowDown'): {\n                if (menuItems.length > index + 1) {\n                    menuItems[index + 1].focus();\n                } else {\n                    if (this.focusEscapeAfterList) {\n                        this.focusEscapeAfterList();\n                    } else {\n                        menuItems[0].focus();\n                    }\n                }\n                event.preventDefault();\n                break;\n            }\n            case ('ArrowUp'): {\n                if (index > 0) {\n                    menuItems[index - 1].focus();\n                } else {\n                    if (this.focusEscapeBeforeList) {\n                        this.focusEscapeBeforeList();\n                    } else {\n                        menuItems[menuItems.length - 1].focus();\n                    }\n                }\n                event.preventDefault();\n                break;\n            }\n            case (' '): {\n                if (menuItems[index]) {\n                    menuItems[index].click();\n                    event.preventDefault();\n                }\n                break;\n            }\n            case ('Enter'): {\n                if (menuItems[index]) {\n                    menuItems[index].click();\n                    event.preventDefault();\n                }\n                break;\n            }\n        }\n    }\n}\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MenuItemDirective } from '../menu/menu-item.directive';\nimport { ComboboxItem } from './combobox-item';\nimport { MenuKeyboardService } from '../menu/menu-keyboard.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport focusTrap, { FocusTrap } from 'focus-trap';\nimport { FormStates } from '../form/form-control/form-states';\n\n/**\n * Allows users to filter through results and select a value.\n *\n * Supports Angular Forms.\n * ```html\n * <fd-combobox\n *      [(ngModel)]=\"searchTerm\"\n *      [dropdownValues]=\"dropdownValues\"\n *      [placeholder]=\"'Type some text...'\">\n * </fd-combobox>\n * ```\n */\n@Component({\n    selector: 'fd-combobox',\n    templateUrl: './combobox.component.html',\n    styleUrls: ['./combobox.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ComboboxComponent),\n            multi: true\n        },\n        MenuKeyboardService\n    ],\n    host: {\n        '[class.fd-combobox-custom-class]': 'true',\n        '[class.fd-combobox-input]': 'true'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ComboboxComponent implements ControlValueAccessor, OnInit, OnChanges, AfterViewInit, OnDestroy {\n\n    /** Values to be filtered in the search input. */\n    @Input()\n    dropdownValues: any[] = [];\n\n    /** Filter function. Accepts an array of objects and a search term as arguments\n     * and returns a string. See search input examples for details. */\n    @Input()\n    filterFn: Function = this.defaultFilter;\n\n    /** Whether the search input is disabled. **/\n    @Input()\n    disabled: boolean;\n\n    /** Placeholder of the search input. **/\n    @Input()\n    placeholder: string;\n\n    /** Whether the combobox is opened. */\n    @Input()\n    open: boolean = false;\n\n    /** Icon to display in the right-side button. */\n    @Input()\n    glyph: string = 'navigation-down-arrow';\n\n    /**\n     *  The trigger events that will open/close the options popover, by default it is click, so if user click on\n     *  input field, the popover with options will open or close\n     *  Accepts any [HTML DOM Events](https://www.w3schools.com/jsref/dom_obj_event.asp).\n     */\n    @Input()\n    triggers: string[] = ['click'];\n\n    /** Whether the combobox should close, when a click is performed outside its boundaries. True by default */\n    @Input()\n    closeOnOutsideClick: boolean = true;\n\n    /**\n     * Whether the combobox should open, when any key is pressed in input (except Escape, Space, Enter). True by default\n     */\n    @Input()\n    openOnKeyboardEvent: boolean = true;\n\n    /**\n     *  The state of the form control - applies css classes.\n     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.\n     */\n    @Input()\n    state: FormStates;\n\n    /**\n     * The template with which to display the individual listed items.\n     * Use it by passing an ng-template with implicit content. See examples for more info.\n     */\n    @Input()\n    itemTemplate: TemplateRef<any>;\n\n    /** Max height of the popover. Any overflowing elements will be accessible through scrolling. */\n    @Input()\n    maxHeight: string = '200px';\n\n    /** Search function to execute when the Enter key is pressed on the main input. */\n    @Input()\n    searchFunction: Function;\n\n    /** Whether the search input should be displayed in compact mode. */\n    @Input()\n    compact: boolean = false;\n\n    /** Whether the matching string should be highlighted during filtration. */\n    @Input()\n    highlighting: boolean = true;\n\n    /** Whether the popover should close when a user selects a result. */\n    @Input()\n    closeOnSelect: boolean = true;\n\n    /** Whether the input field should be populated with the result picked by the user. */\n    @Input()\n    fillOnSelect: boolean = true;\n\n    /** Defines if combobox should behave same as dropdown. When it's enabled writing inside text input won't\n     * trigger onChange function, until it matches one of displayed dropdown values. Also communicating with combobox\n     * can be achieved only by objects with same type as dropdownValue */\n    @Input()\n    communicateByObject: boolean = false;\n\n    /** Display function. Accepts an object of the same type as the\n     * items passed to dropdownValues as argument, and outputs a string.\n     * An arrow function can be used to access the *this* keyword in the calling component.\n     * See search input examples for details. */\n    @Input()\n    displayFn: Function = this.defaultDisplay;\n\n    /** Whether AddOn Button should be focusable, set to false by default */\n    @Input()\n    buttonFocusable: boolean = false;\n\n    /** Event emitted when an item is clicked. Use *$event* to retrieve it. */\n    @Output()\n    readonly itemClicked: EventEmitter<ComboboxItem> = new EventEmitter<ComboboxItem>();\n\n    /** Event emitted, when the combobox's popover body is opened or closed */\n    @Output()\n    readonly openChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n\n    /** @hidden */\n    @ViewChildren(MenuItemDirective)\n    menuItems: QueryList<MenuItemDirective>;\n\n    /** @hidden */\n    @ViewChild('searchInputElement', { static: false })\n    searchInputElement: ElementRef;\n\n    /** @hidden */\n    @ViewChild('comboboxMenuElement', { static: false })\n    comboboxMenuElement: ElementRef;\n\n    /** @hidden */\n    displayedValues: any[] = [];\n\n    /** @hidden */\n    inputTextValue: string;\n\n    /** @hidden */\n    public focusTrap: FocusTrap;\n\n    /** @hidden */\n    private readonly onDestroy$: Subject<void> = new Subject<void>();\n\n    /** @hidden */\n    onChange: any = () => { };\n\n    /** @hidden */\n    onTouched: any = () => { };\n\n    constructor(\n        private elRef: ElementRef,\n        private menuKeyboardService: MenuKeyboardService,\n        private cdRef: ChangeDetectorRef\n    ) { }\n\n    /** @hidden */\n    ngOnInit(): void {\n        if (this.dropdownValues) {\n            this.displayedValues = this.dropdownValues;\n        }\n        this.setupFocusTrap();\n    }\n\n    /** @hidden */\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.dropdownValues && (changes.dropdownValues || changes.searchTerm)) {\n            this.refreshDisplayedValues();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    /** @hidden */\n    ngAfterViewInit(): void {\n        this.menuKeyboardService.itemClicked\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(index => this.onMenuClickHandler(index));\n        this.menuKeyboardService.focusEscapeBeforeList = () => this.searchInputElement.nativeElement.focus();\n        this.menuKeyboardService.focusEscapeAfterList = () => { };\n    }\n\n    /** @hidden */\n    onInputKeydownHandler(event: KeyboardEvent) {\n        if (event.key === 'Enter' && this.searchFunction) {\n            this.searchFunction();\n        } else if (event.key === 'ArrowDown') {\n            if (event.altKey) {\n                this.isOpenChangeHandle(true);\n            }\n            event.preventDefault();\n            if (this.menuItems && this.menuItems.first) {\n                this.menuItems.first.focus();\n            }\n        }\n    }\n\n    /** @hidden */\n    onInputKeyupHandler(event: KeyboardEvent) {\n        if (this.openOnKeyboardEvent &&\n            this.inputText &&\n            this.inputText.length &&\n            event.key !== 'Escape' &&\n            event.key !== ' ' &&\n            event.key !== 'Tab' &&\n            event.key !== 'Enter') {\n            this.isOpenChangeHandle(true);\n        }\n    }\n\n    /** @hidden */\n    onMenuKeydownHandler(event: KeyboardEvent, index: number) {\n        this.menuKeyboardService.keyDownHandler(event, index, this.menuItems.toArray());\n    }\n\n    /** @hidden */\n    onMenuClickHandler(index: number) {\n        const selectedItem = this.displayedValues[index];\n        if (selectedItem) {\n            this.handleClickActions(selectedItem);\n            this.itemClicked.emit({ item: selectedItem, index: index });\n        }\n    }\n\n    /** Get the input text of the input. */\n    get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /** Set the input text of the input. */\n    set inputText(value) {\n        this.inputTextValue = value;\n        if (this.communicateByObject) {\n            this.onChange(this.getOptionObjectByDisplayedValue(value));\n        } else {\n            this.onChange(value);\n        }\n        this.onTouched();\n    }\n\n    /** @hidden */\n    writeValue(value: any): void {\n        if (this.communicateByObject) {\n            this.inputTextValue = this.displayFn(value);\n        } else {\n            this.inputTextValue = value;\n        }\n        this.cdRef.markForCheck();\n    }\n\n    /** @hidden */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    handleSearchTermChange(): void {\n        this.displayedValues = this.filterFn(this.dropdownValues, this.inputText);\n    }\n\n    /** @hidden */\n    onPrimaryButtonClick(): void {\n        if (this.searchFunction) {\n            this.searchFunction();\n        }\n    }\n\n    /** @hidden */\n    isOpenChangeHandle(isOpen: boolean): void {\n        if (this.open !== isOpen) {\n            this.open = isOpen;\n            this.openChange.emit(this.open);\n            this.onTouched();\n            if (isOpen) {\n                this.focusTrap.activate();\n            } else {\n                this.focusTrap.deactivate();\n            }\n        }\n    }\n\n    /** @hidden */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.cdRef.detectChanges();\n    }\n\n    /** Method that reset filtering for displayed values. It overrides displayed values by all possible dropdown values */\n    public resetDisplayedValues(): void {\n        this.displayedValues = this.dropdownValues;\n    }\n\n    private defaultDisplay(str: any): string {\n        return str;\n    }\n\n    private defaultFilter(contentArray: any[], searchTerm: string): any[] {\n        const searchLower = searchTerm.toLocaleLowerCase();\n        return contentArray.filter(item => {\n            if (item) {\n                return this.displayFn(item).toLocaleLowerCase().includes(searchLower);\n            }\n        });\n    }\n\n    private handleClickActions(term): void {\n        if (this.closeOnSelect) {\n            this.isOpenChangeHandle(false);\n        }\n        if (this.fillOnSelect) {\n            this.inputText = this.displayFn(term);\n            this.handleSearchTermChange();\n        }\n    }\n\n    private getOptionObjectByDisplayedValue(displayValue: string): any {\n        return this.dropdownValues.find(value => this.displayFn(value) === displayValue);\n    }\n\n    private setupFocusTrap(): void {\n        try {\n            this.focusTrap = focusTrap(this.elRef.nativeElement, {\n                clickOutsideDeactivates: true,\n                returnFocusOnDeactivate: true,\n                escapeDeactivates: false\n            });\n        } catch (e) {\n            console.warn('Unsuccessful attempting to focus trap the Combobox.');\n        }\n    }\n\n    private refreshDisplayedValues(): void {\n        if (this.inputText) {\n            this.displayedValues = this.filterFn(this.dropdownValues, this.inputText);\n        } else {\n            this.displayedValues = this.dropdownValues;\n        }\n    }\n\n}\n","import { AfterContentInit, Directive, ElementRef, HostBinding, Input, Renderer2 } from '@angular/core';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\nimport { InputGroupPlacement } from './input-group.component';\nimport { FormStates } from '../form/form-control/form-states';\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-input-group-input]',\n})\nexport class InputGroupInputDirective extends AbstractFdNgxClass {\n\n    @Input()\n    compact: boolean = false;\n\n    /** @hidden */\n    _setProperties() {\n        this._addClassToElement('fd-input');\n        this._addClassToElement('fd-input-group__input');\n        if (this.compact) {\n            this._addClassToElement('fd-input--compact');\n        }\n    }\n\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n}\n\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-textarea-group-input]',\n})\nexport class InputGroupTextareaDirective  {}\n\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-input-group-addon]'\n})\nexport class InputGroupAddOnDirective extends AbstractFdNgxClass implements AfterContentInit {\n\n    /** @hidden */\n    @HostBinding('class.fd-input-group__addon')\n    fdInputGroupAddonClass: boolean = true;\n\n    /**\n     * The placement of the add-on. Options include *before* and *after*\n     */\n    @Input()\n    placement: InputGroupPlacement = 'after';\n\n    /** Whether to apply compact mode to the AddOn. */\n    @Input()\n    compact: boolean = false;\n\n    /**\n     * The placement of the add-on. Options include *before* and *after*\n     */\n    @Input()\n    type: string;\n\n    /**\n     *  The state of the form control - applies css classes.\n     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.\n     */\n    @Input()\n    state: FormStates;\n\n    /**\n     * Whether the icon add-on or the text add-on is a button.\n     */\n    @Input()\n    button: boolean = false;\n\n    /** @hidden */\n    _setProperties() {\n        this._addClassToElement('fd-input-group__addon');\n        if (this.button) {\n            this._addClassToElement('fd-input-group__addon--button');\n        }\n        if (this.type) {\n            this._addClassToElement('fd-input-group__addon--' + this.type);\n        }\n        if (this.state) {\n            this._addClassToElement('is-' + this.state);\n        }\n        if (this.compact) {\n            this._addClassToElement('fd-input-group__addon--compact')\n        }\n    }\n\n    /** @hidden */\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2\n    ) {\n        super(elementRef);\n    }\n\n    /** @hidden */\n    ngAfterContentInit(): void {\n        /** Add fd-input-group__button to button child element */\n        const button = this.elementRef.nativeElement.querySelector('button');\n        if (button) {\n            this.renderer.addClass(button, 'fd-input-group__button');\n        }\n    }\n\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    forwardRef,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, AfterViewInit, OnInit\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputGroupAddOnDirective, InputGroupInputDirective } from './input-group-directives';\nimport { FormStates } from '../form/form-control/form-states';\nimport { ButtonOptions, ButtonType } from '../button/button.component';\n\nexport type InputGroupPlacement = 'before' | 'after';\n\n\n/**\n * The component that represents an input group.\n * The input group includes form inputs with add-ons that allow the user to better understand the information being entered.\n *\n * ```html\n * <fd-input-group [placement]=\"'after'\" [addOnText]=\"'$'\" [placeholder]=\"'Amount'\">\n * </fd-input-group>\n * ```\n */\n@Component({\n    selector: 'fd-input-group',\n    templateUrl: './input-group.component.html',\n    styleUrls: ['./input-group.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => InputGroupComponent),\n            multi: true\n        }\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InputGroupComponent implements ControlValueAccessor {\n\n    /** @hidden */\n    @ContentChild(InputGroupInputDirective, { static: false })\n    inputElement: InputGroupInputDirective;\n\n    /** @hidden */\n    @ContentChild(InputGroupAddOnDirective, { static: false })\n    addOnElement: InputGroupAddOnDirective;\n\n    /** Input template */\n    @Input()\n    inputTemplate: TemplateRef<any>;\n\n    /**\n     * The placement of the add-on.\n     * Options include *before* and *after*\n     */\n    @Input()\n    placement: InputGroupPlacement = 'after';\n\n    /** Whether the input group is in compact mode. */\n    @Input()\n    compact: boolean = false;\n\n    /** Whether the input group is inline. */\n    @Input()\n    inline: boolean;\n\n    /** Placeholder for the input group. */\n    @Input()\n    placeholder: string;\n\n    /** The text for the add-on. */\n    @Input()\n    addOnText: string;\n\n    /** Whether AddOn Button should be focusable */\n    @Input()\n    buttonFocusable: boolean = true;\n\n    /**\n     * The type of the button. Types include 'standard', 'positive', 'medium', and 'negative'.\n     * Leave empty for default (Action button).'*/\n    @Input()\n    buttonType: ButtonType;\n\n    /** Button options.  Options include 'emphasized' and 'light'. Leave empty for default.' */\n    @Input()\n    buttonOptions: ButtonOptions | ButtonOptions[] = 'light';\n\n    /** The icon value for the add-on. */\n    @Input()\n    glyph: string;\n\n    /** Whether the icon add-on or the text add-on is a button. */\n    @Input()\n    button: boolean;\n\n    /** Whether the input group is disabled. */\n    @Input()\n    disabled: boolean;\n\n    /**\n     *  The state of the form control - applies css classes.\n     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.\n     */\n    @Input()\n    state: FormStates;\n\n    /** Event emitted when the add-on button is clicked. */\n    @Output()\n    addOnButtonClicked: EventEmitter<any> = new EventEmitter<any>();\n\n    /** @hidden */\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /** @hidden */\n    inputTextValue: string;\n\n    /** @hidden */\n    onChange: any = () => { };\n\n    /** @hidden */\n    onTouched: any = () => { };\n\n    /** Get the value of the text input. */\n    get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /** Set the value of the text input. */\n    set inputText(value) {\n        this.inputTextValue = value;\n        this.onChange(value);\n        this.onTouched();\n    }\n\n    /** @hidden */\n    writeValue(value: any): void {\n        this.inputTextValue = value;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** @hidden */\n    registerOnChange(fn): void {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn): void {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** @hidden */\n    buttonClicked($event): void {\n        this.addOnButtonClicked.emit($event);\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, forwardRef, Input, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * The component that represents an integer value input.\n * The value is increased or decreased using the spinner add-on.\n *\n * ```html\n * <fd-input-group-number [disabled]=\"false\" [(ngModel)]=\"numberValue\"></fd-input-group-number>\n * ```\n */\n@Component({\n    selector: 'fd-input-group-number',\n    templateUrl: './input-group-number.component.html',\n    styleUrls: ['./input-group.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => InputGroupNumberComponent),\n            multi: true\n        }\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InputGroupNumberComponent implements ControlValueAccessor {\n    /** Whether the input is disabled. */\n    @Input()\n    disabled: boolean;\n\n    /** Placeholder for the input field. */\n    @Input()\n    placeholder: string;\n\n    /** Aria label for the 'step up' button. */\n    @Input()\n    stepUpLabel: string = 'Step up';\n\n    /** Aria label for the 'step down' button. */\n    @Input()\n    stepDownLabel: string = 'Step down';\n\n    /** @hidden */\n    inputTextValue: number;\n\n    /** @hidden */\n    onChange: any = () => { };\n\n    /** @hidden */\n    onTouched: any = () => { };\n\n    /** Get the value of the text input. */\n    get inputText() {\n        return this.inputTextValue;\n    }\n\n    /** Set the value of the text input. */\n    set inputText(value) {\n        this.inputTextValue = value;\n        this.onChange(value);\n        this.onTouched();\n    }\n\n    /** @hidden */\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /** @hidden */\n    writeValue(value: any) {\n        this.inputTextValue = value;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** @hidden */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** @hidden */\n    stepUpClicked() {\n        this.inputTextValue++;\n        this.onChange(this.inputTextValue);\n        this.onTouched();\n    }\n\n    /** @hidden */\n    stepDownClicked() {\n        this.inputTextValue--;\n        this.onChange(this.inputTextValue);\n        this.onTouched();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { InputGroupComponent } from './input-group.component';\nimport { InputGroupNumberComponent } from './input-group-number.component';\nimport { ButtonModule } from '../button/button.module';\nimport { IconModule } from '../icon/icon.module';\nimport {\n    InputGroupAddOnDirective,\n    InputGroupInputDirective,\n    InputGroupTextareaDirective\n} from './input-group-directives';\n\n@NgModule({\n    declarations: [\n        InputGroupNumberComponent,\n        InputGroupComponent,\n        InputGroupInputDirective,\n        InputGroupTextareaDirective,\n        InputGroupAddOnDirective,\n    ],\n    imports: [CommonModule, ButtonModule, IconModule, FormsModule],\n    exports: [\n        InputGroupNumberComponent,\n        InputGroupComponent,\n        InputGroupInputDirective,\n        InputGroupTextareaDirective,\n        InputGroupAddOnDirective\n    ]\n})\nexport class InputGroupModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PopoverModule } from '../popover/popover.module';\nimport { FormsModule } from '@angular/forms';\nimport { MenuModule } from '../menu/menu.module';\nimport { PipeModule } from '../utils/pipes/pipe.module';\nimport { ComboboxComponent } from './combobox.component';\nimport { ButtonModule } from '../button/button.module';\nimport { InputGroupModule } from '../input-group/input-group.module';\n\n@NgModule({\n    declarations: [ComboboxComponent],\n    imports: [CommonModule, PopoverModule, FormsModule, MenuModule, PipeModule, ButtonModule, InputGroupModule],\n    exports: [ComboboxComponent]\n})\nexport class ComboboxModule {}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef, HostBinding,\n    Input,\n    ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {FdCheckboxValues} from './fd-checkbox-values.interface';\nimport {compareObjects} from '../../utils/functions';\n\nlet checkboxUniqueId: number = 0;\n\n@Component({\n    selector: 'fd-checkbox',\n    templateUrl: './checkbox.component.html',\n    styleUrls: ['./checkbox.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => CheckboxComponent),\n            multi: true\n        }\n    ]\n})\nexport class CheckboxComponent implements ControlValueAccessor {\n\n    /** Sets [id] property of input, binds input with input label using [for] property. */\n    @Input()\n    inputId: string = `fd-checkbox-${checkboxUniqueId++}`;\n\n    /** State of control, changes visual appearance of control. */\n    @Input()\n    state: 'valid' | 'invalid' | 'info' | 'warning';\n\n    /** Sets [name] property of input. */\n    @Input()\n    name: string;\n\n    /** Sets text of control label. */\n    @Input()\n    label: string;\n\n    /** Allows to disable/enable control. */\n    @Input()\n    disabled: boolean;\n\n    /** Allows to minimize control to compact mode. */\n    @Input()\n    compact: boolean;\n\n    /** Enables controls third state. */\n    @Input()\n    tristate: boolean;\n\n    /** Allows to prevent user from manually selecting controls third state. */\n    @Input()\n    tristateSelectable: boolean = true;\n\n    /** Sets values returned by control. */\n    @Input('values')\n    set _values(checkboxValues: FdCheckboxValues) {\n        this.values = {...this.values, ...checkboxValues}\n    }\n\n    /** @hidden */\n    @HostBinding('style.position')\n    readonly position = 'relative';\n\n    /** Values returned by control. */\n    public values: FdCheckboxValues = {trueValue: true, falseValue: false, thirdStateValue: null};\n    /** Stores current checkbox value. */\n    public checkboxValue: any;\n    /** Stores current checkbox state. */\n    public checkboxState: 'checked' | 'unchecked' | 'indeterminate';\n    /** @hidden Reference to callback provided by FormControl.*/\n    public onTouched = () => {};\n    /** @hidden Reference to callback provided by FormControl.*/\n    public onValueChange = (newValue) => {};\n\n    constructor(private _changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    /** @hidden Used to define if control is in 'checked' / 'unchecked' state.*/\n    get isChecked(): boolean {\n        return this.checkboxState === 'checked';\n    }\n\n    /** @hidden Used to define if control is in 'indeterminate' state.*/\n    get isIndeterminate(): boolean {\n        return this.checkboxState === 'indeterminate';\n    }\n\n    /** @hidden ControlValueAccessor interface\n     * - sets new control value\n     * - updates control state\n     * */\n    public writeValue(value: any): void {\n        this.checkboxValue = value;\n        this._setState();\n        this._changeDetectorRef.detectChanges();\n    }\n\n    /** @hidden ControlValueAccessor interface method - sets onValueChange callback.*/\n    public registerOnChange(fn: any): void {\n        this.onValueChange = fn;\n    }\n\n    /** @hidden ControlValueAccessor interface method - sets onTouched callback.*/\n    public registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    /** @hidden Called by FormControl - used to disable / enable control.*/\n    public setDisabledState(disabled: boolean): void {\n        this.disabled = disabled;\n        this._changeDetectorRef.detectChanges();\n    }\n\n    /** @hidden Based on current control state:\n     * - sets next control value\n     * - emits new control value\n     * - updates control state based on new control value\n     * */\n    public nextValue(): void {\n        switch (this.checkboxState) {\n            case 'checked':\n                this.checkboxValue = this.values.falseValue;\n                break;\n            case 'unchecked':\n                this.checkboxValue = this.tristate && this.tristateSelectable\n                    ? this.values.thirdStateValue\n                    : this.values.trueValue;\n                break;\n            case 'indeterminate':\n                this.checkboxValue = this.values.trueValue;\n                break;\n        }\n        this._setState();\n        this.onValueChange(this.checkboxValue);\n        this._changeDetectorRef.detectChanges();\n    }\n\n    /** @hidden Updates checkbox state on mouse click\n     * and prevents from double check update from label-input binding */\n    public checkByClick(event: Event) {\n        this.nextValue();\n        event.preventDefault();\n    }\n\n    /** @hidden Updates checkbox state on spacebar key\n     * and prevents from double check update from label-input binding */\n    public checkByKey(event: KeyboardEvent): void {\n        if (this._isSpaceBarEvent(event)) {\n            this.nextValue();\n            event.preventDefault();\n        }\n    }\n\n    /** @hidden Prevents from checkbox update based on label-input binding */\n    public muteKey(event: KeyboardEvent): void {\n        if (this._isSpaceBarEvent(event)) {\n            event.preventDefault();\n        }\n    }\n\n    /** @hidden Determines event source based on key code */\n    private _isSpaceBarEvent(event: KeyboardEvent): boolean {\n        return event.keyCode === 32;\n    }\n\n    /** @hidden Based on current control value sets new control state. */\n    private _setState(): void {\n        if (this._compare(this.checkboxValue, this.values.trueValue)) {\n            this.checkboxState = 'checked';\n        } else if (this._compare(this.checkboxValue, this.values.falseValue)) {\n            this.checkboxState = 'unchecked';\n        } else if (this.tristate && this._compare(this.checkboxValue, this.values.thirdStateValue)) {\n            this.checkboxState = 'indeterminate';\n        }\n    }\n\n    /** @hidden Compares values */\n    private _compare(val1: any, val2: any): boolean {\n        return typeof val1 === 'object'\n            ? compareObjects(val1, val2)\n            : val1 === val2;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CheckboxComponent} from './checkbox/checkbox.component';\n\n@NgModule({\n    declarations: [CheckboxComponent],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        CheckboxComponent\n    ]\n})\nexport class CheckboxModule {\n}\n","import { Injectable } from '@angular/core';\nimport { FdDate } from '../../calendar/models/fd-date';\nimport { DatePipe } from '@angular/common';\n\nexport function DATE_FORMAT_FACTORY() {\n    return new DateFormatParserDefault();\n}\n\n/**\n * Abstract class which defines the behaviour of the date format and parser.\n */\n@Injectable({\n    providedIn: 'root',\n    useFactory: DATE_FORMAT_FACTORY\n})\nexport abstract class DateFormatParser {\n\n    /**\n     * Delimiter for the range. This should not show up in the string representation of the dates.\n     */\n    rangeDelimiter: string = ' - ';\n\n    /**\n     * Should take in a string value and return a FdDate model object.\n     * @param value String to concert to a FdDate model object.\n     */\n    abstract parse(value: string): FdDate;\n\n    /**\n     * Should take in a FdDate model object and return a string representation.\n     * @param date FdDate to format to string value.\n     * Return null, to keep default angular DatePipe as a formatter.\n     */\n    abstract format(date: FdDate): string;\n}\n\n/**\n * Default implementation of the DateFormatParser service.\n */\n@Injectable()\nexport class DateFormatParserDefault extends DateFormatParser {\n\n    /**\n     * Takes in a string value and return a FdDate model object.\n     * @param value String to concert to a FdDate model object.\n     */\n    public parse(value: string): FdDate {\n        if (value) {\n            const date: Date = new Date(value);\n            return new FdDate(date.getFullYear(), date.getMonth() + 1, date.getDate());\n        } else {\n            return new FdDate(null, null, null);\n        }\n    }\n\n    /**\n     * Takes in a FdDate model object and return a string representation.\n     * @param date FdDate to format to string value.\n     * Return null, to keep default angular DatePipe as a formatter.\n     */\n    public format(date: FdDate): string {\n        return null;\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input, Optional,\n    Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { CalendarComponent, CalendarType, DaysOfWeek, FdCalendarView } from '../calendar/calendar.component';\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms';\nimport { Placement } from 'popper.js';\nimport { FdDate } from '../calendar/models/fd-date';\nimport { CalendarService } from '../calendar/calendar.service';\nimport { FdRangeDate } from '../calendar/models/fd-range-date';\nimport { DateFormatParser } from './format/date-parser';\nimport { DatePipe } from '@angular/common';\nimport { FormStates } from '../form/form-control/form-states';\n\n/**\n * The datetime picker component is an opinionated composition of the fd-popover and\n * fd-calendar components to accomplish the UI pattern for picking a date.\n *\n * Supports Angular Forms.\n * ```html\n * <fd-date-picker [(ngModel)]=\"date\"></fd-date-picker>\n * ```\n */\n@Component({\n    selector: 'fd-date-picker',\n    templateUrl: './date-picker.component.html',\n    styleUrls: ['./date-picker.component.scss'],\n    host: {\n        '(blur)': 'onTouched()',\n        '[class.fd-date-picker]': 'true',\n        '[class.fd-date-picker-custom]': 'true'\n    },\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DatePickerComponent),\n            multi: true\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => DatePickerComponent),\n            multi: true\n        },\n        DatePipe\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatePickerComponent implements ControlValueAccessor, Validator {\n\n    /** @hidden The value of the input */\n    inputFieldDate: string = null;\n\n    /** @hidden Whether the date input is invalid */\n    isInvalidDateInput: boolean = false;\n\n    /** @hidden Whether the date picker is open */\n    isOpen: boolean = false;\n\n    /** @hidden */\n    @ViewChild(CalendarComponent, { static: false })\n    calendarComponent: CalendarComponent;\n\n    /** The type of calendar, 'single' for single date selection or 'range' for a range of dates. */\n    @Input()\n    type: CalendarType = 'single';\n\n    /** Date picker input placeholder string */\n    @Input()\n    placeholder: string = 'mm/dd/yyyy';\n\n    /** Date Format displayed on input. See more options: https://angular.io/api/common/DatePipe */\n    @Input()\n    format: string = 'MM/dd/yyyy';\n\n    /** Locale for date pipe. See more https://angular.io/guide/i18n */\n    @Input()\n    locale: string;\n\n    /** Whether this is the compact input date picker */\n    @Input()\n    compact: boolean = false;\n\n    /** The currently selected CalendarDay model */\n    @Input()\n    selectedDate: FdDate;\n\n    /** The currently selected FdDates model start and end in range mode. */\n    @Input()\n    public selectedRangeDate: FdRangeDate = { start: null, end: null };\n\n    /** The day of the week the calendar should start on. 1 represents Sunday, 2 is Monday, 3 is Tuesday, and so on. */\n    @Input()\n    startingDayOfWeek: DaysOfWeek = 1;\n\n    /** Whether to validate the date picker input. */\n    @Input()\n    useValidation: boolean = true;\n\n    /** Aria label for the datepicker input. */\n    @Input()\n    dateInputLabel: string = 'Date input';\n\n    /** Aria label for the button to show/hide the calendar. */\n    @Input()\n    displayCalendarToggleLabel: string = 'Display calendar toggle';\n\n    /** Whether a null input is considered valid. */\n    @Input()\n    allowNull: boolean = true;\n\n    /** Actually shown active view one of 'day' | 'month' | 'year' in calendar component*/\n    @Input()\n    public activeView: FdCalendarView = 'day';\n\n    /**\n     *  The placement of the popover. It can be one of: top, top-start, top-end, bottom,\n     *  bottom-start, bottom-end, right, right-start, right-end, left, left-start, left-end.\n     */\n    @Input()\n    placement: Placement = 'bottom-start';\n\n    /** Whether the date picker is disabled. */\n    @Input()\n    disabled: boolean;\n\n    /**\n     *  The state of the form control - applies css classes.\n     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.\n     */\n    @Input()\n    state: FormStates;\n\n    /**\n     * Whether AddOn Button should be focusable, set to true by default\n     */\n    @Input()\n    buttonFocusable: boolean = true;\n\n    /** Fired when a new date is selected. */\n    @Output()\n    public readonly selectedDateChange: EventEmitter<FdDate> = new EventEmitter<FdDate>();\n\n    /** Event thrown every time selected first or last date in range mode is changed */\n    @Output()\n    public readonly selectedRangeDateChange: EventEmitter<FdRangeDate> = new EventEmitter<FdRangeDate>();\n\n    /** Event thrown every time calendar active view is changed */\n    @Output()\n    public readonly activeViewChange: EventEmitter<FdCalendarView> = new EventEmitter<FdCalendarView>();\n\n    /** @hidden */\n    onChange: any = (selected: any) => {\n    };\n\n    /** @hidden */\n    onTouched: any = () => {\n    };\n\n    /**\n     * Function used to disable certain dates in the calendar.\n     * @param fdDate FdDate\n     */\n    @Input()\n    disableFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to disable certain dates in the calendar for the range start selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    disableRangeStartFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to disable certain dates in the calendar for the range end selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    disableRangeEndFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to block certain dates in the calendar for the range start selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    blockRangeStartFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to block certain dates in the calendar for the range end selection.\n     * @param fdDate FdDate\n     */\n    @Input()\n    blockRangeEndFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to block certain dates in the calendar.\n     * @param fdDate FdDate\n     */\n    @Input()\n    blockFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Method that handle calendar active view change and throws event.\n     */\n    public handleCalendarActiveViewChange(activeView: FdCalendarView): void {\n        this.activeViewChange.emit(activeView);\n    }\n\n    /** @hidden */\n    public closeFromCalendar(): void {\n        if (this.type === 'single') {\n            this.closeCalendar();\n        }\n    }\n\n    /** Opens the calendar */\n    openCalendar(): void {\n        if (!this.disabled) {\n            this.onTouched();\n            this.isOpen = true;\n        }\n    }\n\n    /** Toggles the calendar open or closed */\n    public toggleCalendar(): void {\n        this.onTouched();\n        this.isOpen = !this.isOpen;\n    }\n\n    /** Closes the calendar if it is open */\n    public closeCalendar(): void {\n        if (this.isOpen) {\n            this.isOpen = false;\n        }\n    }\n\n    /**\n     * @hidden\n     * Method that is triggered by events from calendar component, when there is selected single date changed\n     */\n    public handleSingleDateChange(date: FdDate): void {\n        if (date) {\n            this.inputFieldDate = this._formatDate(date);\n            this.selectedDate = date;\n            this.selectedDateChange.emit(date);\n            this.onChange(date);\n            this.isInvalidDateInput = !this.isModelValid();\n        }\n    }\n\n    /**\n     * @hidden\n     * Method that is triggered by events from calendar component, when there is selected range date changed\n     */\n    public handleRangeDateChange(dates: FdRangeDate): void {\n        if (dates &&\n            (!CalendarService.datesEqual(this.selectedRangeDate.start, dates.start) ||\n                !CalendarService.datesEqual(this.selectedRangeDate.end, dates.end))\n        ) {\n            this.inputFieldDate = this._formatDate(dates.start)\n                + this.dateAdapter.rangeDelimiter\n                + this._formatDate(dates.end)\n            ;\n            this.selectedRangeDate = { start: dates.start, end: dates.end };\n            this.selectedRangeDateChange.emit(this.selectedRangeDate);\n            this.onChange(this.selectedRangeDate);\n            this.isInvalidDateInput = !this.isModelValid();\n        }\n    }\n\n    /**\n     * @hidden\n     * Method that is triggered when the text input is confirmed to ba changed, by clicking enter, or blur\n     */\n    public handleInputChange(strDate: string): void {\n        this.dateStringUpdate(strDate);\n    }\n\n    /** @hidden */\n    constructor(\n        public dateAdapter: DateFormatParser,\n        private _changeDetectionRef: ChangeDetectorRef,\n        @Optional() private _datePipe: DatePipe\n    ) {\n    }\n\n    /**\n     * @hidden\n     * Function that implements Validator Interface, adds validation support for forms\n     */\n    validate(control: AbstractControl): {\n        [key: string]: any\n    } {\n        return this.isModelValid() ? null : {\n            dateValidation: {\n                valid: false\n            }\n        };\n    }\n\n    /** @hidden */\n    registerOnChange(fn: (selected: any) => { void }): void {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectionRef.detectChanges();\n    }\n\n    /**\n     * @hidden\n     * Function that provides support for ControlValueAccessor that allows to use [(ngModel)] or forms\n     */\n    writeValue(selected: FdRangeDate | FdDate): void {\n        /** If written value is not defined, null, empty string */\n        if (!selected) {\n            this.inputFieldDate = '';\n            return;\n        }\n        if (this.type === 'single') {\n            /**\n             * For single mode, if the date is invalid, model is changed, it refresh currently\n             * input field text, but it does not refresh currently displayed day\n             */\n            selected = <FdDate>selected;\n            this.selectedDate = selected;\n            if (this._isSingleModelValid(this.selectedDate)) {\n                this.inputFieldDate = this._formatDate(selected);\n                this._refreshCurrentlyDisplayedCalendarDate(selected);\n            } else {\n                this.inputFieldDate = '';\n            }\n\n        } else {\n            /**\n             * For range mode, if the date is invalid, model is changed, but it does not refresh currently\n             * displayed day view, or input field text\n             */\n            selected = <FdRangeDate>selected;\n\n            if (selected.start) {\n                this.selectedRangeDate = { start: selected.start, end: selected.end };\n\n                if (this._isRangeModelValid(this.selectedRangeDate)) {\n                    this._refreshCurrentlyDisplayedCalendarDate(selected.start);\n                    this.inputFieldDate = this._formatDate(selected.start) +\n                        this.dateAdapter.rangeDelimiter + this._formatDate(selected.end);\n                } else {\n                    this.inputFieldDate = '';\n                }\n            } else {\n                this.inputFieldDate = '';\n            }\n        }\n        this._changeDetectionRef.detectChanges();\n        this.isInvalidDateInput = !this.isModelValid();\n    }\n\n    /**\n     * @hidden\n     * Method, which is responsible for transforming string to date, depending on type or\n     * validation the results are different. It also changes to state of isInvalidDateInput\n     */\n    dateStringUpdate(date: string): void {\n        this.inputFieldDate = date;\n        /** Case when there is single mode */\n        if (this.type === 'single') {\n\n            let fdDate = this.dateAdapter.parse(date);\n\n            /** Check if dates are equal, if so, there is no need to make any changes */\n            if (!CalendarService.datesEqual(fdDate, this.selectedDate)) {\n                this.isInvalidDateInput = !this._isSingleModelValid(fdDate);\n\n                /** Check if date is valid, if it's not, there is no need to refresh calendar */\n                if (!this.isInvalidDateInput && date) {\n                    this._refreshCurrentlyDisplayedCalendarDate(fdDate);\n                } else {\n                    /** Whether string is invalid, by passed block or disable functions there is forced Invalid Object, */\n                    fdDate = this._invalidDate();\n                }\n                /**\n                 * Date in model is changed no matter if the parsed date from string is valid or not.\n                 */\n                this.selectedDate = fdDate;\n                this.onChange(this.selectedDate);\n                this.selectedDateChange.emit(this.selectedDate);\n            }\n\n\n            /** Case when there is range mode */\n        } else {\n            const currentDates = date.split(this.dateAdapter.rangeDelimiter);\n            const firstDate = this.dateAdapter.parse(currentDates[0]);\n            const secondDate = this.dateAdapter.parse(currentDates[1]);\n\n            /**\n             * Check if dates are equal, if dates are the same there is no need to make any changes\n             * Date in model is changed no matter if the parsed dates from string are valid or not.\n             */\n            if (!CalendarService.datesEqual(firstDate, this.selectedRangeDate.start) ||\n                !CalendarService.datesEqual(secondDate, this.selectedRangeDate.end)) {\n\n                let selectedRangeDate: FdRangeDate = null;\n\n                /** If the end date is before the start date, there is need to replace them  */\n                if ((firstDate.getTimeStamp() > secondDate.getTimeStamp()) && secondDate.isDateValid()) {\n                    selectedRangeDate = { start: secondDate, end: firstDate };\n                } else {\n                    selectedRangeDate = { start: firstDate, end: secondDate };\n                }\n\n                this.isInvalidDateInput = !this._isRangeModelValid(selectedRangeDate);\n\n                /** If start date is invalid, because of format, block or disable function, there is invalidDate forced */\n                if (!this._isStartDateValid(selectedRangeDate.start)) {\n                    selectedRangeDate.start = this._invalidDate();\n                }\n\n                /** If end date is invalid, because of format, block or disable function, there is invalidDate forced */\n                if (!this._isEndDateValid(selectedRangeDate.end)) {\n                    selectedRangeDate.end = this._invalidDate();\n                }\n\n                /** Whole object is changed, even it's invalid */\n                this.selectedRangeDate = selectedRangeDate;\n\n                this.selectedRangeDateChange.emit(this.selectedRangeDate);\n                this.onChange(this.selectedRangeDate);\n\n                /** Check if start date is valid, if it's not, there is no need o refresh calendar */\n                if (this._isStartDateValid(this.selectedRangeDate.start)) {\n                    this._refreshCurrentlyDisplayedCalendarDate(this.selectedRangeDate.start);\n                }\n            }\n        }\n\n        if (!date && this.allowNull) {\n            this.isInvalidDateInput = false;\n        }\n    }\n\n    /** Method that provides information if model selected date/dates have properly types and are valid */\n    public isModelValid(): boolean {\n        if (this.type === 'single') {\n            return this._isSingleModelValid(this.selectedDate);\n        } else {\n            return this._isRangeModelValid(this.selectedRangeDate);\n        }\n    }\n\n    /** Method that returns info if single model given is valid */\n    private _isSingleModelValid(fdDate: FdDate): boolean {\n        return (\n            this._isFdDateValid(fdDate) &&\n            !this.disableFunction(fdDate) &&\n            !this.blockFunction(fdDate)\n        ) || (!this.inputFieldDate && this.allowNull);\n    }\n\n    /** Method that returns info if range date model given is valid */\n    private _isRangeModelValid(fdRangeDate: FdRangeDate): boolean {\n        return (fdRangeDate &&\n                this._isStartDateValid(fdRangeDate.start) &&\n                this._isEndDateValid(fdRangeDate.end)\n            ) || (!this.inputFieldDate && this.allowNull);\n    }\n\n    /** Method that returns info if end date model given is valid */\n    private _isEndDateValid(endDate: FdDate): boolean {\n        return this._isFdDateValid(endDate) &&\n            !this.disableRangeEndFunction(endDate) &&\n            !this.blockRangeEndFunction(endDate);\n    }\n\n    /** Method that returns info if start date model given is valid */\n    private _isStartDateValid(startDate: FdDate): boolean {\n        return this._isFdDateValid(startDate) &&\n            !this.disableRangeStartFunction(startDate) &&\n            !this.blockRangeStartFunction(startDate);\n    }\n\n    /** Method that returns info if end date model given is valid */\n    private _isFdDateValid(fdDate: FdDate): boolean {\n        return fdDate &&\n            fdDate instanceof FdDate &&\n            fdDate.isDateValid();\n    }\n\n    private _invalidDate(): FdDate {\n        return this.dateAdapter.parse('InVaLiDDaTe');\n    }\n\n    /** @hidden */\n    private _refreshCurrentlyDisplayedCalendarDate(date: FdDate): void {\n        if (this.calendarComponent) {\n            this.calendarComponent.setCurrentlyDisplayed(date);\n        }\n    }\n\n    /**\n     * @hidden\n     * If there is any format function provided, it is used. Otherwise date format follows angular DatePipe functionality.\n     */\n    private _formatDate(fdDate: FdDate): string {\n\n        const customFormattedDate: string = this.dateAdapter.format(fdDate);\n\n        if (customFormattedDate) {\n            return customFormattedDate;\n        } else {\n            return this._datePipe.transform(fdDate.toDate(), this.format, null, this.locale);\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconModule } from '../icon/icon.module';\nimport { PopoverModule } from '../popover/popover.module';\nimport { CalendarModule } from '../calendar/calendar.module';\nimport { FormsModule } from '@angular/forms';\n\nimport { DatePickerComponent } from './date-picker.component';\nimport { InputGroupModule } from '../input-group/input-group.module';\nimport { ButtonModule } from '../button/button.module';\n\n@NgModule({\n    declarations: [DatePickerComponent],\n    imports: [CommonModule, IconModule, PopoverModule, CalendarModule, FormsModule, InputGroupModule, ButtonModule],\n    exports: [DatePickerComponent]\n})\nexport class DatePickerModule {}\n","export class TimeObject {\n    hour: number;\n    minute: number;\n    second: number;\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Provides i18n support for labels inside the time component.\n */\n@Injectable({providedIn: 'root'})\nexport class TimeI18nLabels {\n\n    /** Aria label for the 'increase hours' button */\n    increaseHoursLabel: string = 'Increase hours';\n\n    /** Aria label for the 'hours' input */\n    hoursLabel: string = 'Hours';\n\n    /** Aria label for the 'decrease hours' button */\n    decreaseHoursLabel: string = 'Decrease hours';\n\n    /** Aria label for the 'increase minutes' button */\n    increaseMinutesLabel: string = 'Increase minutes';\n\n    /** Aria label for the 'minutes' input */\n    minutesLabel: string = 'Minutes';\n\n    /** Aria label for the 'decrease minutes' button */\n    decreaseMinutesLabel: string = 'Decrease minutes';\n\n    /** Aria label for the 'increase seconds' button */\n    increaseSecondsLabel: string = 'Increase seconds';\n\n    /** Aria label for the 'seconds' input */\n    secondsLabel: string = 'Seconds';\n\n    /** Aria label for the 'decrease seconds' button */\n    decreaseSecondsLabel: string = 'Decrease seconds';\n\n    /** Aria label for the 'increase period' button */\n    increasePeriodLabel: string = 'Increase period';\n\n    /** Aria label for the 'period' input */\n    periodLabel: string = 'Period';\n\n    /** Aria label for the 'decrease period' button */\n    decreasePeriodLabel: string = 'Decrease period';\n\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Provides i18n support for placeholders and meridian modifiers naming in the time component.\n */\n@Injectable({providedIn: 'root'})\nexport class TimeI18n {\n\n    /**\n     * Ante Meridian naming label. The value written in the input should match this or Post Meridian. Otherwise it would be\n     * treated as invalid\n     * */\n    meridianAm: string = 'am';\n\n    /**\n     * Post Meridian naming label. The value written in the input should match this or Ante Meridian. Otherwise it would be\n     * treated as invalid\n     * */\n    meridianPm: string = 'pm';\n\n    /**\n     * Placeholder on the Ante Meridian / Post Meridian input\n     * */\n    meridianPlaceholder: string = 'am';\n\n    /**\n     * Placeholder for hours input\n     * */\n    hoursPlaceholder: string = 'hh';\n\n    /**\n     * Placeholder for minutes input\n     * */\n    minutesPlaceholder: string = 'mm';\n\n    /**\n     * Placeholder for seconds input\n     * */\n    secondsPlaceholder: string = 'ss';\n\n    /**\n     * Defines if the meridian validation should be case sensitive.\n     * */\n    meridianCaseSensitive: boolean = false;\n\n}\n","import {\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TimeObject } from './time-object';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TimeI18nLabels } from './i18n/time-i18n-labels';\nimport { TimeI18n } from './i18n/time-i18n';\n\n@Component({\n    selector: 'fd-time',\n    templateUrl: './time.component.html',\n    styleUrls: ['./time.component.scss'],\n    host: {\n        '(blur)': 'onTouched()',\n        class: 'fd-time fd-has-display-block'\n    },\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeComponent),\n            multi: true\n        }\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimeComponent implements OnChanges, ControlValueAccessor {\n\n    /**\n     * @Input When set to false, uses the 24 hour clock (hours ranging from 0 to 23)\n     * and does not display a period control.\n     */\n    @Input() meridian: boolean = false;\n\n    /**\n     *  @Input When set to false, does not set the input field to invalid state on invalid entry.\n     */\n    @Input() validate: boolean = true;\n\n    /**\n     * @Input when set to true, time inputs won't allow to have 1 digit\n     * for example 9 will become 09\n     * but 12 will be kept as 12.\n     */\n    @Input() keepTwoDigits: boolean = false;\n\n    /**\n     * @Input Disables the component.\n     */\n    @Input() disabled: boolean;\n\n    /**\n     * @Input When set to false, hides the buttons that increment and decrement the corresponding input.\n     */\n    @Input() spinners: boolean = true;\n\n    /**\n     * @Input When set to false, hides the input for seconds.\n     */\n    @Input() displaySeconds: boolean = true;\n\n    /** @Input When set to false, hides the input for minutes. */\n    @Input()\n    displayMinutes: boolean = true;\n\n    /**\n     * When set to false, hides the input for hours\n     */\n    @Input()\n    displayHours: boolean = true;\n\n    /**\n     * @Input An object that contains three integer properties: 'hour' (ranging from 0 to 23),\n     * 'minute' (ranging from 0 to 59), and 'second' (ranging from 0 to 59). This is the model the component consumes. Example:\n     *\n     * ```json\n     * { hour: 12, minute: 0, second: 0 }\n     * ```\n     */\n    @Input()\n    time: TimeObject = { hour: 0, minute: 0, second: 0 };\n\n    /** @hidden */\n    @Output()\n    readonly focusArrowLeft: EventEmitter<void> = new EventEmitter<void>();\n\n    /** @hidden\n     * Used only in meridian mode. Stores information the current am/pm state.\n     */\n    period: string;\n\n    /** @hidden\n     * Variable that is displayed as an hour.\n     * For meridian mode ranging from 0 to 12,\n     * For non-meridian mode ranging from 0 to 23, and reflects the hour value\n     */\n    displayedHour: number = 0;\n\n    /** @hidden */\n    onChange = (time: TimeObject) => {\n    };\n\n    /** @hidden */\n    onTouched = () => {\n    };\n\n    /** @hidden */\n    registerOnChange(fn: (time: TimeObject) => void): void {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.changeDetRef.detectChanges();\n    }\n\n    constructor(\n        public timeI18nLabels: TimeI18nLabels,\n        public timeI18n: TimeI18n,\n        private changeDetRef: ChangeDetectorRef\n    ) {}\n\n    /** @hidden */\n    writeValue(time: TimeObject): void {\n        if (!time) {\n            return;\n        }\n        this.time = Object.assign({}, time);\n        this.setDisplayedHour();\n        this.changeDetRef.detectChanges();\n    }\n\n    /** @hidden\n     * Reacts only when there is meridian or time input change\n     */\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.meridian || changes.time) {\n            this.setDisplayedHour();\n        }\n    }\n\n    /** @hidden\n     * Changes displayed hour value, used mostly when the model hour is changed\n     */\n    setDisplayedHour(): void {\n        if (!this.meridian) {\n            this.displayedHour = this.time.hour;\n        } else if (this.time.hour === 0) {\n            this.displayedHour = 12;\n            this.period = this.timeI18n.meridianAm;\n        } else if (this.time.hour > 12) {\n            this.displayedHour = this.time.hour - 12;\n            this.period = this.timeI18n.meridianPm;\n        } else if (this.time.hour === 12) {\n            this.displayedHour = 12;\n            this.period = this.timeI18n.meridianPm;\n        } else {\n            this.displayedHour = this.time.hour;\n            this.period = this.timeI18n.meridianAm;\n        }\n    }\n\n    /** @hidden\n     * Handles changes of displayed hour value from template.\n     */\n    displayedHourChanged(changedHour: number): void {\n        this.displayedHour = changedHour;\n        if (!this.meridian) {\n            this.time.hour = this.displayedHour;\n        } else {\n            if (this.period === this.timeI18n.meridianAm) {\n                if (this.displayedHour === 12) {\n                    this.time.hour = 0;\n                } else {\n                    this.time.hour = this.displayedHour;\n                }\n            } else if (this.period === this.timeI18n.meridianPm) {\n                if (this.displayedHour === 12) {\n                    this.time.hour = this.displayedHour;\n                } else {\n                    this.time.hour = this.displayedHour + 12;\n                }\n            }\n        }\n        this.onChange(this.time);\n    }\n\n    /** @hidden\n     * Handles the blur events from inputs. Also rewrite values if they are incorrect, prevents from negative or too big\n     * values. Also changes period if it's on meridian type and hour is bigger than 12.\n     */\n    inputBlur(inputType: string): void {\n        switch (inputType) {\n            case 'hour': {\n                this.displayedHour = Math.round(Math.abs(this.displayedHour)) % 24;\n                this.time.hour = this.displayedHour;\n\n                if (this.meridian) {\n                    if (this.displayedHour > 12) {\n                        this.period = this.timeI18n.meridianPm;\n                        this.displayedHour = this.displayedHour !== 12 ? this.displayedHour % 12 : this.displayedHour;\n                    } else if (this.displayedHour === 0) {\n                        this.displayedHour = 12;\n                        this.period = this.timeI18n.meridianAm;\n                    } else if (this.isAm(this.period) && this.displayedHour === 12) {\n                        this.time.hour = 0;\n                    }\n                }\n                break;\n            }\n            case 'minute': {\n                this.time.minute = Math.abs(Math.round(this.time.minute) % 60);\n                break;\n            }\n            case 'second': {\n                this.time.second = Math.abs(Math.round(this.time.second) % 60);\n                break;\n            }\n            case 'period': {\n                /**\n                 * When there is invalid period, function changes period to valid basing on actual hour\n                 */\n                if (!this.period ||\n                    (!this.isPm(this.period) && !this.isAm(this.period))\n                ) {\n                    this.setDisplayedHour();\n                }\n            }\n        }\n        this.onChange(this.time);\n    }\n\n    /** Increases the hour value by one. */\n    increaseHour(): void {\n        if (this.time.hour === null) {\n            this.time.hour = 0;\n        } else if (this.time.hour === 23) {\n            this.time.hour = 0;\n        } else {\n            this.time.hour = this.time.hour + 1;\n        }\n        this.setDisplayedHour();\n        this.onChange(this.time);\n    }\n\n    /** Decreases the hour value by one. */\n    decreaseHour(): void {\n        if (this.time.hour === null) {\n            this.time.hour = 0;\n        } else if (this.time.hour === 0) {\n            this.time.hour = 23;\n        } else {\n            this.time.hour = this.time.hour - 1;\n        }\n        this.setDisplayedHour();\n        this.onChange(this.time);\n    }\n\n    /** Increases the minute value by one. */\n    increaseMinute(): void {\n        if (this.time.minute === null) {\n            this.time.minute = 0;\n        } else if (this.time.minute === 59) {\n            this.time.minute = 0;\n            this.increaseHour();\n        } else {\n            this.time.minute = this.time.minute + 1;\n        }\n        this.onChange(this.time);\n    }\n\n    /** Decreases the minute value by one. */\n    decreaseMinute(): void {\n        if (this.time.minute === null) {\n            this.time.minute = 0;\n        } else if (this.time.minute === 0) {\n            this.time.minute = 59;\n            this.decreaseHour();\n        } else {\n            this.time.minute = this.time.minute - 1;\n        }\n        this.onChange(this.time);\n    }\n\n    /** Increases the second value by one. */\n    increaseSecond(): void {\n        if (this.displaySeconds) {\n            if (this.time.second === null) {\n                this.time.second = 0;\n            } else if (this.time.second === 59) {\n                this.time.second = 0;\n                this.increaseMinute();\n            } else {\n                this.time.second = this.time.second + 1;\n            }\n        }\n        this.onChange(this.time);\n    }\n\n    /** Decreases the second value by one. */\n    decreaseSecond(): void {\n        if (this.displaySeconds) {\n            if (this.time.second === null) {\n                this.time.second = 0;\n            } else if (this.time.second === 0) {\n                this.time.second = 59;\n                this.decreaseMinute();\n            } else {\n                this.time.second = this.time.second - 1;\n            }\n        }\n        this.onChange(this.time);\n    }\n\n    /** Toggles the period (am/pm). */\n    togglePeriod(): void {\n        if (this.time.hour < 24 && this.time.hour >= 0) {\n            if (this.isAm(this.period)) {\n                this.period = this.timeI18n.meridianPm;\n                this.periodModelChange();\n            } else if (this.isPm(this.period)) {\n                this.period = this.timeI18n.meridianAm;\n                this.periodModelChange();\n            }\n        }\n    }\n\n    /** @hidden\n     * Handles minutes model change from template\n     * */\n    minuteModelChange(minuteChange: number): void {\n        this.time.minute = minuteChange;\n        if (!(this.time.minute > 59 || this.time.minute < 0) || !this.validate) {\n            this.onChange(this.time);\n        }\n    }\n\n    /** @hidden\n     * Handles seconds model change from template\n     * */\n    secondModelChange(secondChange: number): void {\n        this.time.second = secondChange;\n        if (!(this.time.second > 59 || this.time.second < 0) || !this.validate) {\n            this.onChange(this.time);\n        }\n    }\n\n    /** @hidden\n     * Handles period model change. depending on current hour and new period changes hours by +/- 12\n     */\n    periodModelChange(): void {\n        if (this.time && !this.time.hour) {\n            this.time.hour = 0;\n        }\n        if (this.time.hour < 24 && this.time.hour >= 0) {\n            if (this.isPm(this.period) && this.time.hour < 12) {\n                this.time.hour = this.time.hour + 12;\n            } else if (this.time.hour >= 12 && this.isAm(this.period)) {\n                this.time.hour = this.time.hour - 12;\n            }\n            this.onChange(this.time);\n        }\n    }\n\n    /** @hidden\n     * Handles last button keyboard events\n     */\n    lastButtonKeydown(event: KeyboardEvent): void {\n        if (event.key === 'Tab' && !event.shiftKey) {\n            event.preventDefault();\n            this.focusArrowLeft.emit();\n        }\n    }\n\n    /**\n     * @hidden\n     * Defines if period is PM, Considers the fact that period should be case sensitive\n     */\n    private isPm(period: string): boolean {\n        const pmMeridian = this.timeI18n.meridianCaseSensitive ? this.timeI18n.meridianPm : this.timeI18n.meridianPm.toLocaleUpperCase();\n        period = this.timeI18n.meridianCaseSensitive ? period : period.toLocaleUpperCase();\n        return period === pmMeridian;\n    }\n\n    /**\n     * @hidden\n     * Defines if period is AM, Considers the fact that period should be case sensitive\n     */\n    private isAm(period: string): boolean {\n        const amMeridian = this.timeI18n.meridianCaseSensitive ? this.timeI18n.meridianAm : this.timeI18n.meridianAm.toLocaleUpperCase();\n        period = this.timeI18n.meridianCaseSensitive ? period : period.toLocaleUpperCase();\n        return period === amMeridian;\n    }\n}\n","/**\n * Default date with time model used by the fundamental components.\n */\n\nimport { FdDate } from '../../calendar/models/fd-date';\nimport { TimeObject } from '../../time/time-object';\n\nexport class FdDatetime {\n\n    date: FdDate;\n    time: TimeObject;\n\n    /**\n     * Static function to get the current date in FdDateTime form.\n     */\n    static getToday(): FdDatetime {\n        const date: Date = new Date();\n        const time: TimeObject = {hour: date.getHours(), minute: date.getMinutes(), second: date.getSeconds()};\n        return new FdDatetime(FdDate.getToday(), time);\n    }\n\n    /**\n     * Constructor to build a FdDateTime object from a FdDate and TimeObject.\n     * @param date the FdDate object.\n     * @param time the TimeObject object.\n     */\n    constructor(\n        date: FdDate,\n        time: TimeObject\n    ) {\n        this.date = date;\n        this.time = time;\n    }\n\n    /**\n     * Get Luxon date object converted to string from FdDate.\n     */\n    public toLocaleDateString(): string {\n        if (this.toDate() && this.isTimeValid() && this.isDateValid()) {\n            return this.toDate().toLocaleString();\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Method that checks validity of time on FdDateTime object.\n     */\n    public isTimeValid(): boolean {\n\n        if (!this.time ||\n            this.hour === undefined ||\n            this.minute === undefined ||\n            this.second === undefined ||\n            isNaN(this.hour) ||\n            isNaN(this.minute) ||\n            isNaN(this.second)\n        ) {\n            return false;\n        }\n\n        if (this.hour > 23 || this.hour < 0) {\n            return false;\n        }\n\n        if (this.minute > 59 || this.minute < 0) {\n            return false;\n        }\n\n        if (this.second > 59 || this.second < 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Method that checks validity of date on FdDateTime object.\n     */\n    public isDateValid(): boolean {\n        return this.date && this.date.isDateValid();\n    }\n\n    public get year(): number {\n        if (this.date) {\n            return this.date.year;\n        }\n    }\n\n    public get month(): number {\n        if (this.date) {\n            return this.date.month;\n        }\n    }\n\n    public get day(): number {\n        if (this.date) {\n            return this.date.day;\n        }\n    }\n\n    public get hour(): number {\n        if (this.time) {\n            return this.time.hour;\n        }\n    }\n\n    public get minute(): number {\n        if (this.time) {\n            return this.time.minute;\n        }\n    }\n\n    public get second(): number {\n        if (this.time) {\n            return this.time.second;\n        }\n    }\n\n    /**\n     * Get native date object from FdDate.\n     */\n    public toDate(): Date {\n        return new Date(this.year, this.month - 1, this.day, this.hour, this.minute, this.second);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { FdDatetime } from '../models/fd-datetime';\nimport { FdDate } from '../../calendar/models/fd-date';\nimport { DatePipe } from '@angular/common';\n\nexport function DATE_TIME_FORMAT_FACTORY() {\n    return new DateTimeFormatParserDefault();\n}\n\n/**\n * Abstract class which defines the behaviour of the datetime format and parser.\n */\n@Injectable({\n    providedIn: 'root',\n    useFactory: DATE_TIME_FORMAT_FACTORY\n})\nexport abstract class DateTimeFormatParser {\n\n    /**\n     * Should take in a string value and return a FdDatetime model object.\n     * @param value String to concert to a FdDatetime model object.\n     */\n    abstract parse(value: string): FdDatetime;\n\n    /**\n     * Should take in a FdDatetime model object and return a string representation.\n     * @param date FdDatetime object to concert to a date string.\n     * Return null, to keep default angular DatePipe as a formatter.\n     */\n    abstract format(date: FdDatetime): string;\n}\n\n/**\n * Default implementation of the DateFormatParser service.\n */\n@Injectable()\nexport class DateTimeFormatParserDefault extends DateTimeFormatParser {\n\n    /**\n     * Takes in a string representation of a date and returns a FdDatetime object.\n     * @param value String to convert to a FdDatetime model object.\n     */\n    public parse(value: string): FdDatetime {\n        if (!value) {\n            return FdDatetime.getToday();\n        } else {\n            const date: Date = new Date(value);\n            return new FdDatetime(\n                new FdDate(date.getFullYear(), date.getMonth() + 1, date.getDate()),\n                {\n                    hour: date.getHours(),\n                    minute: date.getMinutes(),\n                    second: date.getSeconds()\n                }\n            );\n        }\n    }\n\n    /**\n     * Takes in a FdDatetime object and returns the string representation.\n     * @param date FdDatetime model object to convert to a string.\n     * Return null, to keep default angular DatePipe as a formatter.\n     */\n    public format(date: FdDatetime): string {\n        return null;\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { TimeObject } from '../time/time-object';\nimport { TimeComponent } from '../time/time.component';\nimport { Placement } from 'popper.js';\nimport { DateTimeFormatParser } from './format/datetime-parser';\nimport { FdDate } from '../calendar/models/fd-date';\nimport { CalendarComponent, DaysOfWeek, FdCalendarView } from '../calendar/calendar.component';\nimport { FdDatetime } from './models/fd-datetime';\nimport { FormStates } from '../form/form-control/form-states';\nimport { DatePipe } from '@angular/common';\n\n/**\n * The datetime picker component is an opinionated composition of the fd-popover,\n * fd-calendar and fd-time components to accomplish the UI pattern for picking a date and time.\n * Supports Angular Forms.\n * ```html\n * <fd-date-time-picker [(ngModel)]=\"dateTime\"></fd-date-time-picker>\n * ```\n */\n@Component({\n    selector: 'fd-datetime-picker',\n    templateUrl: './datetime-picker.component.html',\n    styleUrls: ['./datetime-picker.component.scss'],\n    host: {\n        '(blur)': 'onTouched()',\n        '[class.fd-datetime-host]': 'true'\n    },\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DatetimePickerComponent),\n            multi: true\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => DatetimePickerComponent),\n            multi: true\n        },\n        DatePipe\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatetimePickerComponent implements OnInit, ControlValueAccessor, Validator {\n\n    /** @hidden Reference to the inner time component. */\n    @ViewChild(TimeComponent, { static: false })\n    timeComponent: TimeComponent;\n\n    /** @hidden Reference to the inner calendar component. */\n    @ViewChild(CalendarComponent, { static: false })\n    calendarComponent: CalendarComponent;\n\n    /**\n     * @hidden Date of the input field. Internal use.\n     * For programmatic selection, use two-way binding on the date input.\n     */\n    inputFieldDate: string = null;\n\n    /** @hidden The Time object which interacts with the inner Time component. Internal use. */\n    isInvalidDateInput: boolean = false;\n\n    /** @hidden The Time object which interacts with the inner Time component. Internal use. */\n    time: TimeObject = { hour: 0, minute: 0, second: 0 };\n\n    /** @hidden The CalendarDay object which interacts with the inner Calendar component. Internal use. */\n    selectedDate: FdDate;\n\n    /** Placeholder for the inner input element. */\n    @Input()\n    placeholder: string = 'mm/dd/yyyy, hh:mm:ss am';\n\n    /** Whether the component should be in compact mode. */\n    @Input()\n    compact: boolean = false;\n\n    /**\n     *  The placement of the popover. It can be one of: top, top-start, top-end, bottom,\n     *  bottom-start, bottom-end, right, right-start, right-end, left, left-start, left-end.\n     */\n    @Input()\n    placement: Placement = 'bottom-start';\n\n    /** Whether the time component should be meridian (am/pm). */\n    @Input()\n    meridian: boolean = true;\n\n    /** Date Format displayed on input. See more options: https://angular.io/api/common/DatePipe */\n    @Input()\n    format: string = 'MM/dd/yyyy, HH:mm:ss';\n\n    /** Locale for date pipe. See more https://angular.io/guide/i18n */\n    @Input()\n    locale: string;\n\n    /** Whether the component is disabled. */\n    @Input()\n    disabled: boolean;\n\n    /** Whether the time component shows spinners for changing the time. */\n    @Input()\n    spinners: boolean = true;\n\n    /** Whether the time component shows seconds. */\n    @Input()\n    displaySeconds: boolean = true;\n\n    /** Whether the time component shows minutes. */\n    @Input()\n    displayMinutes: boolean = true;\n\n    /** Whether the time component shows hours. */\n    @Input()\n    displayHours: boolean = true;\n\n    /** Whether to perform visual validation on the picker input. */\n    @Input()\n    useValidation: boolean = true;\n\n    /** Current selected date. Two-way binding is supported. */\n    @Input()\n    date: FdDatetime = FdDatetime.getToday();\n\n    /** Whether the popover is open. Two-way binding is supported. */\n    @Input()\n    isOpen: boolean = false;\n\n    /** The disableFunction for the calendar. */\n    @Input()\n    startingDayOfWeek: DaysOfWeek = 1;\n\n    /** Actually shown active view one of 'day' | 'month' | 'year' in calendar component*/\n    @Input()\n    public activeView: FdCalendarView = 'day';\n\n    /** Aria label for the datetime picker input. */\n    @Input()\n    datetimeInputLabel: string = 'Datetime input';\n\n    /** Aria label for the button to show/hide the calendar. */\n    @Input()\n    displayDatetimeToggleLabel: string = 'Display calendar toggle';\n\n    /** Whether a null input is considered valid. */\n    @Input()\n    allowNull: boolean = true;\n\n    /**\n     * @Input when set to true, time inputs won't allow to have 1 digit\n     * for example 9 will become 09\n     * but 12 will be kept as 12.\n     */\n    @Input() keepTwoDigitsTime: boolean = false;\n\n    /**\n     *  The state of the form control - applies css classes.\n     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.\n     */\n    @Input()\n    state: FormStates;\n\n    /**\n     * Whether AddOn Button should be focusable, set to true by default\n     */\n    @Input()\n    buttonFocusable: boolean = true;\n\n    /** Event thrown every time calendar active view is changed */\n    @Output()\n    public readonly activeViewChange: EventEmitter<FdCalendarView> = new EventEmitter<FdCalendarView>();\n\n    /** Event emitted when the date changes. This can be a time or day change. */\n    @Output()\n    readonly dateChange: EventEmitter<FdDatetime> = new EventEmitter<FdDatetime>();\n\n    /** Event emitted when the day changes from the calendar. */\n    @Output()\n    readonly calendarChange: EventEmitter<FdDatetime> = new EventEmitter<FdDatetime>();\n\n    /** Event emitted when the time changes from the time component. */\n    @Output()\n    readonly timeChange: EventEmitter<FdDatetime> = new EventEmitter<FdDatetime>();\n\n    /** Event emitted when popover closes. */\n    @Output()\n    readonly onClose: EventEmitter<void> = new EventEmitter<void>();\n\n    /** @hidden */\n    onChange: any = (selected: any) => {\n    };\n\n    /** @hidden */\n    onTouched: any = () => {\n    };\n\n    /**\n     * Function used to disable certain dates in the calendar.\n     * @param fdDate FdDate\n     */\n    @Input()\n    disableFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * Function used to block certain dates in the calendar.\n     * @param fdDate FdDate\n     */\n    @Input()\n    blockFunction = function(fdDate: FdDate): boolean {\n        return false;\n    };\n\n    /**\n     * @hidden\n     * Function that implements Validator Interface, adds validation support for forms\n     */\n    validate(control: AbstractControl): {\n        [key: string]: any\n    } {\n        return ( this.isCurrentModelValid() && !this.isInvalidDateInput ) ? null : {\n            dateValidation: {\n                valid: false\n            }\n        };\n    }\n\n    /** Toggles the popover. */\n    togglePopover(): void {\n        this.onTouched();\n        if (this.isOpen) {\n            this.closePopover();\n        } else {\n            this.openPopover();\n        }\n    }\n\n    /**\n     * Method that handle calendar active view change and throws event.\n     */\n    public handleCalendarActiveViewChange(activeView: FdCalendarView): void {\n        this.activeViewChange.emit(activeView);\n    }\n\n    /** Opens the popover. */\n    openPopover(): void {\n        if (!this.isOpen && !this.disabled) {\n            this.onTouched();\n            this.isOpen = true;\n        }\n    }\n\n    /** Closes the popover and refresh model */\n    closePopover(): void {\n        if (this.isOpen) {\n            this.handleInputChange(this.inputFieldDate);\n            this.onClose.emit();\n            this.isOpen = false;\n        }\n    }\n\n    /** @hidden */\n    isInvalidDateInputHandler(e): void {\n        this.isInvalidDateInput = e;\n    }\n\n    /** @hidden */\n    @HostListener('document:keydown.escape', [])\n    onEscapeKeydownHandler(): void {\n        this.closePopover();\n    }\n\n    /** @hidden */\n    @HostListener('document:click', ['$event'])\n    public onGlobalClick(event: MouseEvent): void {\n        if (!this._elRef.nativeElement.contains(event.target)) {\n            this.closePopover();\n        }\n    }\n\n    /** @hidden */\n    ngOnInit(): void {\n        if (this.date && this.inputFieldDate !== null) {\n            this.selectedDate = this.date.date;\n            this.time = this.date.time;\n        }\n    }\n\n    /** @hidden */\n    constructor(private _elRef: ElementRef,\n                private _changeDetRef: ChangeDetectorRef,\n                public dateTimeAdapter: DateTimeFormatParser,\n                @Optional() private _datePipe: DatePipe\n    ) {}\n\n    /** @hidden */\n    registerOnChange(fn: (selected: any) => { void }): void {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetRef.detectChanges();\n    }\n\n    /**\n     * @hidden\n     * Function that provides support for ControlValueAccessor that allows to use [(ngModel)] or forms\n     */\n    writeValue(selected: FdDatetime): void {\n        if (!selected || !(selected instanceof FdDatetime)) {\n            return;\n        }\n        this.selectedDate = selected.date;\n        this.time = selected.time;\n        this.date = new FdDatetime(this.selectedDate, this.time);\n        if (this.isCurrentModelValid()) {\n            this._refreshCurrentlyDisplayedCalendarDate(this.date.date);\n            this._setInput(this.date);\n        }\n        this._changeDetRef.detectChanges();\n    }\n\n    /**\n     * @hidden\n     * Method that is triggered by events from calendar component, when there is selected date changed.\n     * If invalid time model is detected, it takes time model data from TimeComponent.\n     */\n    handleDateChange(date: FdDate): void {\n        this.selectedDate = date;\n        if (!this.date.isTimeValid()) {\n            this.time = this.timeComponent.time;\n        }\n        this.date = new FdDatetime(this.selectedDate, this.time);\n        this.isInvalidDateInput = !this.isCurrentModelValid();\n        this._setInput(this.date);\n        this.onChange(this.date);\n    }\n\n    /**\n     * @hidden\n     * Method that is triggered by events from time component, when there is selected time changed\n     */\n    handleTimeChange(time: TimeObject): void {\n        this.time = time;\n        if (!this.selectedDate || !this.selectedDate.isDateValid()) {\n            this.selectedDate = FdDate.getToday();\n        }\n        this.date = new FdDatetime(this.selectedDate, this.time);\n        this.isInvalidDateInput = !this.isCurrentModelValid();\n        this._setInput(this.date);\n        this.onChange(this.date);\n    }\n\n    /** @hidden */\n    focusArrowLeft(): void {\n        if (this._elRef.nativeElement.querySelector('#' + this.calendarComponent.id + '-left-arrow')) {\n            this._elRef.nativeElement.querySelector('#' + this.calendarComponent.id + '-left-arrow').focus();\n        }\n    }\n\n    /**\n     * @hidden\n     * Method, which is responsible for transforming string to datetime, depending on type or\n     * validation the results are different. It also changes to state of isInvalidDateInput.\n     */\n    handleInputChange(date: string): void {\n        const fdTimeDate = this.dateTimeAdapter.parse(date);\n        this.isInvalidDateInput = !this._isModelValid(fdTimeDate);\n        if (!this.isInvalidDateInput) {\n            this.selectedDate = fdTimeDate.date;\n            this.time = fdTimeDate.time;\n            this.date = new FdDatetime(this.selectedDate, this.time);\n            this.onChange(fdTimeDate);\n            this._refreshCurrentlyDisplayedCalendarDate(fdTimeDate.date);\n        } else {\n            this.onChange(this.date);\n        }\n        if (!date && this.allowNull) {\n            this.isInvalidDateInput = false;\n            this.date = FdDatetime.getToday();\n            this.selectedDate = this.date.date;\n            this.time = this.date.time;\n            this._refreshCurrentlyDisplayedCalendarDate(this.date.date);\n            this.onChange(null);\n        } else if (!date && !this.allowNull) {\n            this.isInvalidDateInput = true;\n        }\n    }\n\n    /** Method that provides information if model selected date/dates have properly types and are valid */\n    public isCurrentModelValid(): boolean {\n        return this._isModelValid(this.date);\n    }\n\n    /** Method that provides information if FdDateTime passed as arg has properly types and is valid */\n    private _isModelValid(fdDateTime: FdDatetime): boolean {\n        return fdDateTime &&\n            fdDateTime instanceof FdDatetime &&\n            this._isDateValid(fdDateTime) &&\n            fdDateTime.isTimeValid()\n        ;\n    }\n\n    /** Method that provides information if Date is valid */\n    private _isDateValid(fdDateTime: FdDatetime): boolean {\n        return fdDateTime && fdDateTime.isDateValid() &&\n            !this.disableFunction(fdDateTime.date) &&\n            !this.blockFunction(fdDateTime.date)\n        ;\n    }\n\n    private _setInput(fdDateTime: FdDatetime): void {\n        this.inputFieldDate = this._formatDateTime(fdDateTime);\n        this._changeDetRef.detectChanges();\n    }\n\n    /** @hidden */\n    private _refreshCurrentlyDisplayedCalendarDate(date: FdDate): void {\n        if (this.calendarComponent) {\n            this.calendarComponent.setCurrentlyDisplayed(date);\n        }\n    }\n\n    /**\n     * @hidden\n     * If there is any format function provided, it is used. Otherwise date format follows angular DatePipe functionality.\n     */\n    private _formatDateTime(fdDateTime: FdDatetime): string {\n\n        const customFormattedDate: string = this.dateTimeAdapter.format(fdDateTime);\n\n        if (customFormattedDate) {\n            return customFormattedDate;\n        } else {\n            return this._datePipe.transform(fdDateTime.toDate(), this.format, null, this.locale);\n        }\n    }\n\n}\n","import { Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n/**\n * Used for easily displaying forms with a margin. Not necessary for fundamental forms to be functional.\n *\n * ```html\n * <div fd-fieldset\n *     <div fd-form-item>\n *         ...\n *     </div>\n * </div>\n * ```\n */\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: '[fd-fieldset]',\n    template: `<ng-content></ng-content>`,\n    styleUrls: ['./fieldset.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FieldsetComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-fieldset')\n    fdFieldClass: boolean = true;\n}\n","import { Input, ElementRef, Directive } from '@angular/core';\nimport { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';\nimport { FormStates } from './form-states';\n\n\n/**\n * Directive intended for use on form controls.\n *\n * ```html\n * <input type=\"text\" fd-form-control />\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-form-control]',\n})\nexport class FormControlDirective extends AbstractFdNgxClass {\n\n    /**\n     *  The state of the form control - applies css classes.\n     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.\n     */\n    @Input()\n    state: FormStates;\n\n    /**\n     * Whether form is in compact mode\n     */\n    @Input()\n    compact: boolean = false;\n\n\n    @Input()\n    type: string;\n\n    /** @hidden */\n    _setProperties(): void {\n        if (this.state) {\n            this._addClassToElement('is-' + this.state);\n        }\n\n        switch (this.type) {\n            case 'radio': {\n                this._addControlClass('fd-radio');\n                break;\n            }\n            default: {\n                if (this.getElementTag() === 'input') {\n                    this._addControlClass('fd-input');\n                } else if (this.getElementTag() === 'textarea') {\n                    this._addControlClass('fd-textarea');\n                } else if (this.getElementTag() === 'select') {\n                    this._addControlClass('fd-form-select');\n                }\n                break;\n            }\n        }\n    }\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    /** @hidden */\n    private getElementTag(): string {\n        if (this.elementRef && this.elementRef.nativeElement) {\n            return this.elementRef.nativeElement.tagName.toLocaleLowerCase();\n        }\n    }\n\n    /** @hidden */\n    private _addControlClass(className: string): void {\n        this._addClassToElement(className);\n        if (this.compact) {\n            this._addClassToElement(className + '--compact');\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * Directive to be applied to the parent of a form control.\n *\n * ```html\n * <div fd-form-item>\n *     <input fd-form-control type=\"text\" />\n * </div>\n * ```\n */\n@Component({\n    // TODO to be discussed\n    // tslint:disable-next-line: component-selector\n    selector: '[fd-form-item]',\n    template: `<ng-content></ng-content>`,\n    styleUrls: ['./form-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormItemComponent {\n\n    /** @deprecated  */\n    @Input()\n    isCheck: boolean = false;\n\n    /** Whether the form item is inline. */\n    @Input()\n    @HostBinding('class.fd-form-item--inline')\n    isInline: boolean = false;\n\n    /** Whether the form item is horizontal. */\n    @Input()\n    @HostBinding('class.fd-form-item--horizontal')\n    horizontal: boolean = false;\n\n    /** @hidden */\n    @HostBinding('class.fd-form-item')\n    fdFormItemClass: boolean = true;\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * Label to be linked to a form control.\n *\n * ```html\n * <label fd-form-label for=\"input-id\">Label Text</label>\n * <input fd-form-control type=\"text\" id=\"input-id\" />\n * ```\n */\n@Component({\n    // TODO to be discussed\n    // tslint:disable-next-line:component-selector\n    selector: '[fd-form-label]',\n    template: `<ng-content></ng-content>`,\n    styleUrls: ['./form-label.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormLabelComponent {\n    /** @hidden */\n    @HostBinding('class.fd-form-label')\n    fdFormLabelClass: boolean = true;\n\n    /** Whether form is required */\n    @Input()\n    @HostBinding('class.fd-form-label--required')\n    required: boolean = false;\n\n    /** Whether label is for checkbox */\n     @Input()\n    @HostBinding('class.fd-form-label--checkbox')\n    checkbox: boolean = false;\n\n    /** Whether label is for radio */\n    @Input()\n    @HostBinding('class.fd-form-label--radio')\n    radio: boolean = false;\n\n    /** Whether label is for inline-help */\n    @Input()\n    @HostBinding('class.fd-form-label--inline-help')\n    inlineHelp: boolean = false;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * Applies css to a legend html element.\n *\n * <legend fd-form-legend>Legend</legend>\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-form-legend]',\n})\nexport class FormLegendDirective {\n\n    /** @hidden */\n    @HostBinding('class.fd-fieldset__legend')\n    fdFormLegendClass: boolean = true;\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport type MessageStates = 'success' | 'error' | 'warning' | 'information'\n\n/**\n * Form message. Intended to be displayed with a form control for validation purposes.\n */\n@Component({\n    selector: 'fd-form-message',\n    templateUrl: './form-message.component.html',\n    styleUrls: ['./form-message.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormMessageComponent {\n\n    /** Type of the message. Can be 'success' | 'error' | 'warning' | 'information' */\n    @Input()\n    type: MessageStates;\n\n    /** Whether to apply compact mode to the message. */\n    @Input()\n    compact: boolean = false;\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation, ElementRef, Input, AfterViewInit } from '@angular/core';\nimport { CssClassBuilder, applyCssClass } from '../../utils/public_api';\n\n/**\n * Represents a form group element.\n *\n * ```html\n * <fd-form-group>\n *     <div fd-form-item [isCheck]=\"true\">\n *         <input fd-form-control type=\"radio\" checked>\n *         <fd-form-label>Option One</fd-form-label>\n *     </div>\n * </fd-form-group>\n * ```\n */\n@Component({\n    selector: 'fd-form-group',\n    templateUrl: './form-group.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./form-group.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormGroupComponent implements CssClassBuilder, AfterViewInit {\n    class: string;\n    /** @hidden */\n    @HostBinding('class.fd-form-group')\n    fdFormGroupClass: boolean = true;\n\n    private _isInline: boolean = false;\n    /** Determines if form items should be displayed inline or not\n     * Default value is set to false;\n     */\n    @Input() set isInline(inline: boolean) {\n        this._isInline = inline;\n        this.buildComponentCssClass();\n    }\n\n    /** @hidden */\n    constructor(private _elementRef: ElementRef) {\n\n    }\n\n    /** @hidden */\n    ngAfterViewInit() {\n        this.buildComponentCssClass();\n    }\n\n    /** This method is responsible for building a css class based on current state\n     *  It is implementation of CssClassBuilder interface and\n     *  should be used with @applyCssClass decorator\n     */\n    @applyCssClass\n    buildComponentCssClass(): string {\n        return this._isInline ? 'fd-form-group--inline' : '';\n    }\n\n    /** @hidden */\n    elementRef(): ElementRef<any> {\n        return this._elementRef;\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { PopoverFillMode } from '../../popover/popover-directive/popover.directive';\n\n@Component({\n    selector: 'fd-form-input-message-group',\n    templateUrl: './form-input-message-group.component.html',\n    styleUrls: ['./form-input-message-group.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormInputMessageGroupComponent {\n\n    /*\n     * To allow user to determine what event he wants to trigger the messages to show\n     * Accepts any [HTML DOM Events](https://www.w3schools.com/jsref/dom_obj_event.asp).\n     */\n    @Input()\n    triggers: string[] = ['click'];\n\n    /*\n     * Allows the user to decide if he wants to keep the error message after they click outside\n     *  Whether the popover should close when a click is made outside its boundaries.\n     */\n    @Input()\n    closeOnOutsideClick: boolean = true;\n\n    /**\n     * Preset options for the message body width.\n     * * `at-least` will apply a minimum width to the body equivalent to the width of the control.\n     * * `equal` will apply a width to the body equivalent to the width of the control.\n     * * Leave blank for no effect.\n     */\n    @Input()\n    fillControlMode: PopoverFillMode;\n\n    /** Whether the message is open. Can be used through two-way binding. */\n    @Input()\n    isOpen: boolean = false;\n\n    /** Event emitted when the state of the isOpen property changes. */\n    @Output()\n    isOpenChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /**\n     * Function is called every time message changes isOpen attribute\n     */\n    public openChanged(isOpen: boolean) {\n        this.isOpenChange.emit(isOpen);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FieldsetComponent } from './fieldset/fieldset.component';\nimport { FormControlDirective } from './form-control/form-control.directive';\nimport { FormItemComponent } from './form-item/form-item.component';\nimport { FormLabelComponent } from './form-label/form-label.component';\nimport { FormLegendDirective } from './form-legend/form-legend.directive';\nimport { FormMessageComponent } from './form-message/form-message.component';\nimport { FormGroupComponent } from './form-group/form-group.component';\nimport { FormInputMessageGroupComponent } from './form-input-message-group/form-input-message-group.component';\nimport { PopoverModule } from '../popover/popover.module';\n\n@NgModule({\n    imports: [CommonModule, PopoverModule],\n    exports: [\n        FieldsetComponent,\n        FormControlDirective,\n        FormItemComponent,\n        FormLabelComponent,\n        FormLegendDirective,\n        FormMessageComponent,\n        FormInputMessageGroupComponent,\n        FormGroupComponent\n    ],\n    declarations: [\n        FieldsetComponent,\n        FormControlDirective,\n        FormItemComponent,\n        FormLabelComponent,\n        FormLegendDirective,\n        FormMessageComponent,\n        FormInputMessageGroupComponent,\n        FormGroupComponent,\n    ]\n})\nexport class FormModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TimeComponent } from './time.component';\nimport { ButtonModule } from '../button/button.module';\nimport { OnlyDigitsDirective } from '../utils/directives/only-digits.directive';\nimport { FormModule } from '../form/form.module';\nimport { PipeModule } from '../utils/pipes/pipe.module';\n\n\n@NgModule({\n    declarations: [TimeComponent, OnlyDigitsDirective],\n    imports: [CommonModule, FormsModule, FormModule, ButtonModule, PipeModule],\n    exports: [TimeComponent, OnlyDigitsDirective]\n})\nexport class TimeModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconModule } from '../icon/icon.module';\nimport { PopoverModule } from '../popover/popover.module';\nimport { CalendarModule } from '../calendar/calendar.module';\nimport { FormsModule } from '@angular/forms';\nimport { DatetimePickerComponent } from './datetime-picker.component';\nimport { TimeModule } from '../time/time.module';\nimport { ButtonModule } from '../button/button.module';\nimport { InputGroupModule } from '../input-group/input-group.module';\n\n@NgModule({\n    declarations: [DatetimePickerComponent],\n    imports: [CommonModule, IconModule, PopoverModule, CalendarModule, FormsModule, TimeModule, InputGroupModule, ButtonModule],\n    exports: [DatetimePickerComponent]\n})\nexport class DatetimePickerModule {}\n","import {\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Tool to facilitate the input of files from the user.\n * It supports drag and drop, multiple input, max file size and more.\n * The drag events make it very easy to create and style elements like a dropzone.\n */\n@Component({\n    selector: 'fd-file-input',\n    templateUrl: './file-input.component.html',\n    styleUrls: ['./file-input.component.scss'],\n    host: {\n        '(blur)': 'onTouched()'\n    },\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FileInputComponent),\n        multi: true,\n    }],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileInputComponent implements ControlValueAccessor {\n\n    /** @hidden */\n    @HostBinding('class.fd-file-input')\n    fdFileInputClass: boolean = true;\n\n    /** @hidden */\n    @ViewChild('input', { static: false })\n    inputRef: ElementRef;\n\n    /** Whether the file input is disabled. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Whether the file input should accept multiple files. */\n    @Input()\n    multiple: boolean = true;\n\n    /** Accepted file extensions. Format: `'.png,.jpg'`. */\n    @Input()\n    accept: string;\n\n    /** Whether the file input accepts drag and dropped files. */\n    @Input()\n    dragndrop: boolean = true;\n\n    /** Max file size in bytes that the input will accept. */\n    @Input()\n    maxFileSize: number;\n\n    /** Event fired when files are selected. Passed object is the array of files selected. */\n    @Output()\n    readonly onSelect: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    /** Event fired when some invalid files are selected. Passed object is the array of invalid files. */\n    @Output()\n    readonly onInvalidFiles: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    /** Event fired when the dragged file enters the component boundaries. */\n    @Output()\n    readonly onDragEnter: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event fired when the dragged file exits the component boundaries. */\n    @Output()\n    readonly onDragLeave: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor (\n        private changeDetRef: ChangeDetectorRef\n    ) {}\n\n    /** @hidden */\n    onChange: Function = () => {};\n\n    /** @hidden */\n    onTouched: Function = () => {};\n\n    /** @hidden */\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.changeDetRef.detectChanges();\n    }\n\n    /** @hidden */\n    writeValue(files: File[]): void {\n        // not needed - should be handled by user.\n    }\n\n    /** @hidden */\n    selectHandler(event: File[]) {\n        if (this.maxFileSize) {\n            const valid_files: File[] = [];\n            const invalid_files: File[] = [];\n            event.forEach(file => {\n                if (file.size < this.maxFileSize) {\n                    valid_files.push(file);\n                } else {\n                    invalid_files.push(file);\n                }\n            });\n            if (valid_files.length > 0) {\n                this.onChange(valid_files);\n                this.onSelect.emit(valid_files);\n            }\n            if (invalid_files.length > 0) {\n                this.onInvalidFiles.emit(invalid_files);\n            }\n        } else {\n            this.onChange(event);\n            this.onSelect.emit(event);\n        }\n    }\n\n    /**\n     * Opens the file selector.\n     */\n    public open(): void {\n        this.inputRef.nativeElement.click();\n    }\n\n    /**\n     * Clears the files from the input.\n     */\n    public clear(): void {\n        this.inputRef.nativeElement.value = '';\n        this.onChange([]);\n    }\n\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding } from '@angular/core';\n\n/**\n * Directive tool to facilitate interacting with a native file input element.\n */\n@Directive({\n    selector: '[fdFileSelect]',\n})\nexport class FileSelectDirective {\n\n    /** Whether the input should accept multiple file selections. */\n    @Input()\n    private multiple: boolean = true;\n\n    /** Event emitted when files are selected. */\n    @Output()\n    readonly onFileSelect: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    /** @hidden */\n    @HostBinding('attr.multiple')\n    get multipleBinding(): string {\n        return this.multiple ? '' : undefined;\n    }\n\n    /** @hidden */\n    @HostListener('change', ['$event'])\n    onChange(event: Event): void {\n        if (event.target instanceof HTMLInputElement) {\n            const elRef: HTMLInputElement = (<HTMLInputElement>event.target);\n            const files: FileList = elRef.files;\n            const fileArray: File[] = Array.from(files);\n            if (files.length) {\n                this.onFileSelect.emit(fileArray);\n            }\n        }\n    }\n}\n","import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n/**\n * Directive that handles the drag and drop feature of the file input.\n */\n@Directive({\n    selector: '[fdFileDragnDrop]'\n})\nexport class FileDragndropDirective {\n\n    /** Whether multiple files can be dropped at once. */\n    @Input()\n    multiple: boolean = true;\n\n    /** Accepted file extensions. Format: `'.png,.jpg'`. */\n    @Input()\n    accept: string;\n\n    /** Whether selecting of new files is disabled. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Whether drag and drop is enabled. Disables this directive. */\n    @Input()\n    dragndrop: boolean = true;\n\n    /** Event emitted when files are selected. Passes back an array of files. */\n    @Output()\n    readonly onFileChange: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    /** Event emitted when invalid files are selected. Passes back an array of files. */\n    @Output()\n    readonly onInvalidFiles: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    /** Event emitted when the dragged file enters the dropzone. */\n    @Output()\n    readonly onDragEnter: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the dragged file exits the dropzone. */\n    @Output()\n    readonly onDragLeave: EventEmitter<void> = new EventEmitter<void>();\n\n    private elementStateCounter: number = 0;\n\n    /** @hidden */\n    @HostListener('dragover', ['$event'])\n    public onDragover(event) {\n        if (this.dragndrop) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** @hidden */\n    @HostListener('dragenter', [])\n    public onDragenter() {\n        ++this.elementStateCounter;\n        if (this.dragndrop && this.elementStateCounter === 1) {\n            this.onDragEnter.emit();\n        }\n    }\n\n    /** @hidden */\n    @HostListener('dragleave', ['$event'])\n    public onDragleave(event) {\n        --this.elementStateCounter;\n        if (this.dragndrop && this.elementStateCounter === 0) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.onDragLeave.emit();\n        }\n    }\n\n    /** @hidden */\n    @HostListener('drop', ['$event'])\n    public onDrop(event) {\n        this.elementStateCounter = 0;\n\n        if (!this.dragndrop || this.disabled) {\n            return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        const rawFiles = event.dataTransfer.files;\n        const files: File[] = Array.from(rawFiles);\n\n        if (!this.multiple && files.length > 1) {\n            this.onInvalidFiles.emit(files);\n            return;\n        }\n\n        const valid_files: File[] = [];\n        const invalid_files: File[] = [];\n        if (files.length > 0) {\n            if (!this.accept) {\n                files.forEach((file: File) => {\n                    valid_files.push(file);\n                });\n            } else {\n                const allowed_extensions = this.accept.toLocaleLowerCase().replace(/[\\s.]/g, '').split(',');\n                files.forEach((file: File) => {\n                    const ext = file.name.split('.')[file.name.split('.').length - 1];\n                    if (allowed_extensions.lastIndexOf(ext) !== -1) {\n                        valid_files.push(file);\n                    } else {\n                        invalid_files.push(file);\n                    }\n                });\n            }\n            this.onFileChange.emit(valid_files);\n            if (invalid_files.length > 0) {\n                this.onInvalidFiles.emit(invalid_files);\n            }\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FileInputComponent } from './file-input.component';\nimport { FormsModule } from '@angular/forms';\nimport { FileSelectDirective } from './directives/file-select.directive';\nimport { FileDragndropDirective } from './directives/file-dragndrop.directive';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    exports: [FileInputComponent, FileSelectDirective, FileDragndropDirective],\n    declarations: [FileInputComponent, FileSelectDirective, FileDragndropDirective]\n})\nexport class FileInputModule {}\n","import { ChangeDetectionStrategy, Component, ElementRef, Inject, Input, ViewEncapsulation } from '@angular/core';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\n\n/**\n * The directive that represents an identifier.\n * Identifier is a way to visually present something using an icon or user initials.\n *\n * ```html\n * <span fd-identifier [size]=\"'l'\" [glyph]=\"'washing-machine'\"></span>\n * ```\n */\n@Component({\n    // TODO to be discussed\n    // tslint:disable-next-line:component-selector\n    selector: '[fd-identifier]',\n    host: {\n        role: 'presentation',\n    },\n    template: `<ng-content></ng-content>`,\n    styleUrls: ['./identifier.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IdentifierComponent extends AbstractFdNgxClass {\n    /**\n     * The size of the identifier.\n     * The predefined values for the size are *xxs*, *xs*, *s*, *m*, *l*, *xl* and *xxl*.\n     *  *size* can accept any other string, for example *xxxs*, which will be translated into class *fd-identifier--xxxs*.\n     */\n    @Input() size: string;\n\n    /**\n     * Whether to render a circle style for the identifier.\n     */\n    @Input() circle: boolean;\n\n    /**\n     * Whether to render a transparent style for the identifier.\n     */\n    @Input() transparent: boolean;\n\n    /** A number specifying the background color of the identifier. */\n    @Input() colorAccent: number;\n\n    /** The glyph name */\n    @Input() glyph: string;\n\n    /** @hidden */\n    _setProperties() {\n        this._addClassToElement('fd-identifier');\n        if (this.size) {\n            this._addClassToElement('fd-identifier--' + this.size);\n        }\n        if (this.circle) {\n            this._addClassToElement('fd-identifier--circle');\n        }\n        if (this.transparent) {\n            this._addClassToElement('fd-identifier--transparent');\n        }\n        if (this.colorAccent) {\n            this._addClassToElement('fd-has-background-color-accent-' + this.colorAccent);\n        }\n        if (this.glyph) {\n            this._addClassToElement('sap-icon--' + this.glyph);\n        }\n    }\n\n    /** @hidden */\n    constructor(@Inject(ElementRef) elementRef: ElementRef) {\n        super(elementRef);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IdentifierComponent } from './identifier.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [IdentifierComponent],\n    declarations: [IdentifierComponent]\n})\nexport class IdentifierModule {}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The component that represents an image.\n *\n * ```html\n * <fd-image style=\"margin-right: 10px;\" [size]=\"'l'\" [circle]=\"true\" [photo]=\"'https://placeimg.com/400/400/nature'\"></fd-image>\n * ```\n */\n@Component({\n    selector: 'fd-image',\n    templateUrl: './image.component.html',\n    styleUrls: ['./image.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageComponent {\n    /**\n     * The size of the image.\n     * The predefined values for the size are *s*, *m*, and *l*.\n     */\n    @Input() size: string = 'm';\n\n    /**\n     * Whether to render a circle style for the image.\n     */\n    @Input() circle: boolean = false;\n\n    /**\n     * The image label.\n     */\n    @Input() label: string = 'Image label';\n\n    /**\n     * The image url.\n     */\n    @Input() photo: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ImageComponent } from './image.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ImageComponent],\n    declarations: [ImageComponent]\n})\nexport class ImageModule {}\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { fromEvent, Observable, Subscription } from 'rxjs';\n\n/**\n * Tool directive used to achieve the infinite scroll mechanism.\n */\n@Directive({\n    selector: '[fdInfiniteScroll]'\n})\nexport class InfiniteScrollDirective implements OnInit, OnDestroy {\n\n    /** Scroll percentage at which the onScrollAction event is fired. */\n    @Input()\n    scrollPercent: number = 75;\n\n    /** Event emitted when the scrollPercent threshold is met. */\n    @Output()\n    onScrollAction = new EventEmitter<any>();\n\n    private scrollEvent: Observable<any>;\n    private subscription: Subscription;\n\n    /** @hidden */\n    constructor(private element: ElementRef) {}\n\n    /** @hidden */\n    ngOnInit(): void {\n        this.scrollEvent = fromEvent(this.element.nativeElement, 'scroll');\n\n        this.subscription = this.scrollEvent.subscribe((e: any) => {\n            if ((e.target.scrollTop + e.target.offsetHeight) / e.target.scrollHeight > this.scrollPercent / 100) {\n                this.onScrollAction.emit(null);\n            }\n        });\n    }\n\n    ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\n\n@NgModule({\n    declarations: [InfiniteScrollDirective],\n    exports: [InfiniteScrollDirective]\n})\nexport class InfiniteScrollModule {}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Placement } from 'popper.js';\n/**\n * The component that represents an inline-help.\n * Inline help is used to display help text in a popover, often inline with headers, body text and form labels.\n *\n * ```html\n * <fd-inline-help [placement]=\"'bottom-left'\">\n *      Lorem ipsum dolor sit amet, consectetur adipiscing.\n * </fd-inline-help>\n * ```\n */\n@Component({\n    selector: 'fd-inline-help',\n    templateUrl: './inline-help.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['inline-help.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InlineHelpComponent {\n\n    /** The placement of the inline help component. It can be one of: top, top-start, top-end, bottom,\n     *  bottom-start, bottom-end, right, right-start, right-end, left, left-start, left-end.\n     *   The default placement is *bottom start*\n     */\n    @Input()\n    placement: Placement = 'bottom-start';\n\n    /** The trigger events that will open/close the inline help component.\n     *  Accepts any [HTML DOM Events](https://www.w3schools.com/jsref/dom_obj_event.asp). */\n    @Input()\n    triggers: string[] = ['mouseenter', 'mouseleave'];\n\n    /**\n     * The inline help style has same type as popular [ngStyle] directive. Value will be passed to `control` element\n     * */\n    @Input()\n    inlineHelpIconStyle: {[key: string]: any} | {[key: string]: any}[];\n\n    /** The inline help style has same type as popular [ngStyle] directive. Value will be passed to content element */\n    @Input()\n    inlineHelpContentStyle: {[key: string]: any} | {[key: string]: any}[];\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InlineHelpComponent } from './inline-help.component';\nimport { PopoverModule } from '../popover/public_api';\n\n@NgModule({\n    imports: [CommonModule, PopoverModule],\n    exports: [InlineHelpComponent],\n    declarations: [InlineHelpComponent]\n})\nexport class InlineHelpModule {}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * The directive that represents a list.\n * It is used to display a list of items with simple information such as scopes, names, etc.\n */\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: '[fd-list]',\n    template: `<ng-content></ng-content>`,\n    host: {\n        class: 'fd-list-group'\n    },\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListComponent {}\n","import { Component, Directive, HostBinding, ViewEncapsulation } from '@angular/core';\n\n/**\n * The component that represents a list item.\n * The list item can contain plain text, links or actions.\n * \n * ```html\n * <ul fd-list>\n *    <li fd-list-item>\n *        List item 1\n *    </li>\n * </ul>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-list-item]',\n    host: {\n        'class': 'fd-list-group__item'\n    }\n})\nexport class ListItemDirective {}\n","import { Directive } from '@angular/core';\n\n/**\n * List item level actions such as add, remove, delete, sort, etc.\n *\n * ```html\n * <fd-list>\n *    <li fd-list-item>List item 1\n *        <fd-list-action>\n *            <button fd-button [options]=\"'light'\" [glyph]=\"'edit'\"></button>\n *       </fd-list-action>\n *    </li>\n * </fd-list> \n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: 'fd-list-action',\n    host: {\n        class: 'fd-list-group__action'\n    }\n})\nexport class ListActionDirective {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListComponent } from './list.component';\nimport { ListItemDirective } from './list-item.directive';\nimport { ListActionDirective } from './list-action.directive';\nimport { ButtonModule } from '../button/button.module';\nimport { IconModule } from '../icon/icon.module';\nimport { FormsModule } from '@angular/forms';\nimport { FormModule } from '../form/form.module';\n@NgModule({\n    declarations: [ListComponent, ListItemDirective, ListActionDirective],\n    imports: [CommonModule, ButtonModule, IconModule, FormsModule, FormModule],\n    exports: [ListComponent, ListItemDirective, ListActionDirective]\n})\nexport class ListModule {}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The component that represents a loading spinner.\n *\n * ```html\n * <fd-loading-spinner [loading]=\"true\"></fd-loading-spinner>\n * ```\n */\n@Component({\n    selector: 'fd-loading-spinner',\n    templateUrl: './loading-spinner.component.html',\n    styleUrls: ['./loading-spinner.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingSpinnerComponent {\n    /** Whether to display the loading indicator animation. */\n    @Input()\n    loading: boolean = false;\n\n    /** Aria label for the 'loading' spinner. */\n    @Input()\n    loadingLabel: string = 'Loading';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingSpinnerComponent } from './loading-spinner.component';\n\n@NgModule({\n    declarations: [LoadingSpinnerComponent],\n    exports: [LoadingSpinnerComponent],\n    imports: [CommonModule]\n})\nexport class LoadingSpinnerModule {}\n","import { animate, AnimationTriggerMetadata, style, transition, trigger } from '@angular/animations';\n\nexport const modalFadeNgIf: AnimationTriggerMetadata = trigger(\n    'modal-fade',\n    [\n        transition(\n            ':enter', [\n                style({opacity: 0}),\n                animate('150ms ease-in-out', style({opacity: 1}))\n            ]\n        ),\n        transition(\n            ':leave', [\n                style({opacity: 1}),\n                animate('75ms ease-in-out', style({opacity: 0}))\n            ]\n        )\n    ]\n);\n","import { Observable, Subject } from 'rxjs';\n\n/**\n * Reference to a modal component generated via the ModalService.\n * It can be injected into the content component through the constructor.\n * For a template, it is declared as part of the implicit context, see examples.\n */\nexport class ModalRef {\n    private readonly _afterClosed = new Subject<any>();\n\n    /**\n     * Observable that is triggered when the modal is closed.\n     * On close a *result* is passed back. On dismiss, an *error* is returned instead.\n     */\n    public afterClosed: Observable<any> = this._afterClosed.asObservable();\n\n    /** Data passed from the calling component to the content.*/\n    public data: any;\n\n    /**\n     * Closes the modal and passes the argument to the afterClosed observable.\n     * @param result Value passed back to the observable as a result.\n     */\n    close(result?: any): void {\n        this._afterClosed.next(result);\n        this._afterClosed.complete();\n    }\n\n    /**\n     * Dismisses the modal and passes the argument to the afterClosed observable as an error.\n     * @param reason Value passed back to the observable as an error.\n     */\n    dismiss(reason?: any): void {\n        this._afterClosed.error(reason);\n    }\n}\n","import {\n    AfterViewInit, ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    HostListener,\n    OnDestroy,\n    OnInit,\n    Optional,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { modalFadeNgIf } from './modal-utils/modal-animations';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\nimport focusTrap from 'focus-trap';\nimport { ModalRef } from './modal-utils/modal-ref';\n\n@Component({\n    selector: 'fd-modal',\n    styleUrls: ['modal.component.scss'],\n    templateUrl: './modal.component.html',\n    host: {\n        'role': 'dialog',\n        '[class.fd-modal]': 'true',\n        '[class.fd-modal-custom]': 'true',\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.aria-label]': 'ariaLabel',\n        '[attr.aria-describedby]': 'ariaDescribedBy',\n        '[attr.aria-modal]': 'true',\n        '[attr.id]': 'id',\n        'tabindex': '-1',\n        '[@modal-fade]': ''\n    },\n    animations: [\n        modalFadeNgIf\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ModalComponent extends AbstractFdNgxClass implements OnInit, AfterViewInit, OnDestroy {\n\n    /** List of classes that will be added to component, when load from component option is picked. */\n    readonly HOST_COMPONENT_CLASS_LIST: string[] = [\n        'fd-modal__content--overrides',\n        'fd-modal__content',\n    ];\n\n\n    @ViewChild('vc', { read: ViewContainerRef, static: false  })\n    containerRef: ViewContainerRef;\n\n    id: string;\n\n    escKeyCloseable: boolean = true;\n\n    focusTrapped: boolean = true;\n\n    ariaLabelledBy: string = null;\n\n    ariaLabel: string = null;\n\n    ariaDescribedBy: string = null;\n\n    childComponentType: TemplateRef<any> | Type<any>;\n\n    backdropClickCloseable: boolean = true;\n\n    hasBackdrop: boolean  = true;\n\n    modalPanelClass: string = '';\n\n    private componentRef: ComponentRef<any> | EmbeddedViewRef<any>;\n\n    private focusTrap: any;\n\n    constructor(private elRef: ElementRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private cdRef: ChangeDetectorRef,\n                @Optional() private modalRef: ModalRef) {\n        super(elRef);\n    }\n\n    ngOnInit(): void {\n        this._setProperties();\n    }\n\n    ngOnDestroy(): void {\n        if (this.focusTrap) {\n            this.focusTrap.deactivate();\n        }\n    }\n\n    ngAfterViewInit(): void {\n        if (this.childComponentType) {\n            if (this.childComponentType instanceof Type) {\n                this.loadFromComponent(this.childComponentType);\n            } else if (this.childComponentType instanceof TemplateRef) {\n                this.loadFromTemplate(this.childComponentType);\n            }\n        }\n        if (this.focusTrapped) {\n            try {\n                this.focusTrap = focusTrap(this.elRef.nativeElement, {\n                    clickOutsideDeactivates: this.backdropClickCloseable && this.hasBackdrop,\n                    escapeDeactivates: false,\n                    initialFocus: this.elRef.nativeElement\n                });\n                this.focusTrap.activate();\n            } catch (e) {\n                console.warn('Attempted to focus trap the modal, but no tabbable elements were found.');\n            }\n        }\n        this.cdRef.detectChanges();\n    }\n\n    @HostListener('keyup', ['$event'])\n    closeModalEsc(event: KeyboardEvent): void {\n        if (this.escKeyCloseable && event.key === 'Escape') {\n            this.modalRef.dismiss('escape');\n        }\n    }\n\n    private loadFromComponent(content: Type<any>): void {\n        this.containerRef.clear();\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(content);\n        this.componentRef = this.containerRef.createComponent(componentFactory);\n        this.addClassesToComponent(this.componentRef.location);\n    }\n\n    private loadFromTemplate(content: TemplateRef<any>): void {\n        this.containerRef.clear();\n        const context = {\n            $implicit: this.modalRef\n        };\n        this.componentRef = this.containerRef.createEmbeddedView(content, context);\n    }\n\n    private addClassesToComponent(elementRef: ElementRef): void {\n        if (!elementRef) {\n            return;\n        }\n        elementRef.nativeElement.classList.add(...this.HOST_COMPONENT_CLASS_LIST);\n    }\n\n    _setProperties(): void {\n        if (this.modalPanelClass) {\n            this._addClassToElement(this.modalPanelClass);\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\n/**\n * Applies fundamental layout and styling to the contents of a modal header.\n *\n * ```html\n * <fd-modal-header>\n *     <h1 fd-modal-title>Title</h1>\n *     <button fd-modal-close-btn></button>\n * </fd-modal-header>\n * ```\n */\n@Component({\n    selector: 'fd-modal-header',\n    templateUrl: './modal-header.component.html',\n    styles: [':host {display: block;}'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModalHeaderComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-modal__header')\n    modalHeader = true;\n}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\n/**\n * Applies fundamental layout and styling to the contents of a modal body.\n *\n * ```html\n * <fd-modal-body>\n *     <div>Modal body content</div>\n * </fd-modal-body>\n * ```\n */\n@Component({\n    selector: 'fd-modal-body',\n    templateUrl: './modal-body.component.html',\n    styles: [`\n        :host {\n            display: block;\n            overflow: auto;\n            flex-grow: 1;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModalBodyComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-modal__body')\n    modalBody = true;\n}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\n/**\n * Applies fundamental layout and styling to the contents of a modal footer.\n *\n * ```html\n * <fd-modal-footer>\n *     <button>Do action</button>\n * </fd-modal-footer>\n * ```\n */\n@Component({\n    selector: 'fd-modal-footer',\n    templateUrl: './modal-footer.component.html',\n    styles: [`\n        :host {\n            display: block;\n            border-top: 1px solid #eeeeef;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModalFooterComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-modal__footer')\n    modalFooter = true;\n}\n","import { Component, ElementRef, HostBinding, HostListener, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';\nimport { modalFadeNgIf } from './modal-animations';\nimport { ModalRef } from './modal-ref';\n\n@Component({\n    selector: 'fd-modal-overlay',\n    template: ``,\n    host: {\n        'tabindex': '-1',\n        '[@modal-fade]': ''\n    },\n    animations: [\n        modalFadeNgIf\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ModalBackdrop extends AbstractFdNgxClass implements OnInit {\n\n    backdropClass: string = '';\n    backdropClickCloseable: boolean = true;\n\n    @HostBinding('class.fd-overlay') overlayMain = true;\n    @HostBinding('class.fd-overlay--modal') overlayModal = true;\n\n    constructor(private elRef: ElementRef,\n                private modalRef: ModalRef) {\n        super(elRef);\n    }\n\n    ngOnInit(): void {\n        this._setProperties();\n    }\n\n    _setProperties(): void {\n        if (this.backdropClass) {\n            this._addClassToElement(this.backdropClass);\n        }\n    }\n\n    @HostListener('click')\n    closeModal(): void {\n        if (this.backdropClickCloseable) {\n            this.modalRef.dismiss('backdrop');\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { modalFadeNgIf } from './modal-animations';\n\n@Component({\n    selector: 'fd-modal-container',\n    template: ``,\n    styles: [`\n        .fd-modal-container {\n            position: fixed;\n            top: 0;\n            bottom: 0;\n            right: 0;\n            left: 0;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            z-index: 1000;\n        }\n    `],\n    host: {\n        '[@modal-fade]': '',\n        '[class.fd-modal-container]': 'true'\n    },\n    animations: [\n        modalFadeNgIf\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModalContainer {}\n","/**\n * Configuration for opening a modal with the ModalService.\n */\nimport { ModalPosition } from './modal-position';\nimport { DynamicComponentConfig } from '../../utils/dynamic-component/dynamic-component-config';\n\nexport class ModalConfig implements DynamicComponentConfig {\n\n    /** Id for the modal component. If omitted, a unique one is generated. */\n    id?: string;\n\n    /** Width of the modal. */\n    width?: string;\n\n    /** Height of the modal. */\n    height?: string;\n\n    /** Minimum width of the modal. */\n    minWidth?: string;\n\n    /** Minimum height of the modal. */\n    minHeight?: string;\n\n    /** Maximum width of the modal. */\n    maxWidth?: string;\n\n    /** Maximum height of the modal. */\n    maxHeight?: string;\n\n    /** Position of the modal. */\n    position?: ModalPosition;\n\n    /** Aria label for the modal component element. */\n    ariaLabel?: string = null;\n\n    /** Id of the element that labels the modal. */\n    ariaLabelledBy?: string = null;\n\n    /** Id of the element that describes the modal. */\n    ariaDescribedBy?: string = null;\n\n    /** Whether the modal should have a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** Global classes to apply to the backdrop. */\n    backdropClass?: string = '';\n\n    /** Whether clicking on the backdrop should close the modal. Only works if hasBackdrop is true. */\n    backdropClickCloseable?: boolean = true;\n\n    /** Global classes to apply to the modal panel. */\n    modalPanelClass?: string = '';\n\n    /** Whether the escape key should close the modal. */\n    escKeyCloseable?: boolean = true;\n\n    /** Whether the modal should be focus trapped. */\n    focusTrapped?: boolean = true;\n\n    /** The container that the modal is appended to. By default, it is appended to the body. */\n    container?: HTMLElement | 'body' = 'body';\n\n    /** Data to pass along to the content through the ModalRef. */\n    data?: any;\n}\n","import {\n    Injectable,\n    ComponentRef,\n    Type,\n    TemplateRef, Inject\n} from '@angular/core';\nimport { ModalComponent } from '../modal.component';\nimport { ModalBackdrop } from '../modal-utils/modal-backdrop';\nimport { ModalContainer } from '../modal-utils/modal-container';\nimport { ModalConfig } from '../modal-utils/modal-config';\nimport { ModalPosition } from '../modal-utils/modal-position';\nimport { DynamicComponentService } from '../../utils/dynamic-component/dynamic-component.service';\nimport { ModalRef } from '../modal-utils/modal-ref';\n\n/**\n * Service used to dynamically generate a modal.\n */\n@Injectable()\nexport class ModalService {\n    private modals: {\n        modalRef: ComponentRef<ModalComponent>,\n        backdropRef?: ComponentRef<ModalBackdrop>,\n        containerRef?: ComponentRef<ModalContainer>\n    }[] = [];\n\n    /** @hidden */\n    constructor(\n        @Inject(DynamicComponentService) private dynamicComponentService: DynamicComponentService\n    ) {}\n\n    /**\n     * Status of the modal service.\n     * Returns true if there are open modals, false otherwise.\n     */\n    public hasOpenModals(): boolean {\n        return this.modals && this.modals.length > 0;\n    }\n\n    /**\n     * Dismisses all currently open modals.\n     */\n    public dismissAll(): void {\n        this.modals.forEach(item => {\n            this.destroyModalComponent(item.modalRef);\n        });\n    }\n\n    /**\n     * Opens a modal component with a content of type TemplateRef or a component type.\n     * @param contentType Content of the modal component.\n     * @param modalConfig Configuration of the modal component.\n     */\n    public open(contentType: Type<any> | TemplateRef<any>, modalConfig: ModalConfig = new ModalConfig()): ModalRef {\n\n        // Get default values from model\n        modalConfig = Object.assign(new ModalConfig(), modalConfig);\n\n        // Instantiate modal ref service\n        const service: ModalRef = new ModalRef();\n        service.data = modalConfig.data;\n\n        // Create Container\n        const container: ComponentRef<ModalContainer> = this.dynamicComponentService.createDynamicComponent\n            < ModalContainer > (contentType, ModalContainer, modalConfig)\n        ;\n\n        // Define Container to put backdrop and component to container\n        modalConfig.container = container.location.nativeElement;\n\n        // Create Backdrop\n        let backdrop: ComponentRef<ModalBackdrop>;\n        if (modalConfig.hasBackdrop) {\n            backdrop = this.dynamicComponentService.createDynamicComponent<ModalBackdrop>\n                (contentType, ModalBackdrop, modalConfig, [service])\n            ;\n        }\n\n        // Create Component\n        const component = this.dynamicComponentService.createDynamicComponent\n            < ModalComponent > (contentType, ModalComponent, modalConfig, [service])\n        ;\n\n        // Sizing\n        this.setModalSize(component, modalConfig);\n\n        // Positioning\n        this.setModalPosition(component, modalConfig.position);\n\n        this.modals.push({\n            modalRef: component,\n            containerRef: container,\n            backdropRef: backdrop\n        });\n\n        const defaultBehaviourOnClose = () => {\n            this.destroyModalComponent(component);\n            refSub.unsubscribe();\n        };\n\n        const refSub = service.afterClosed\n            .subscribe(defaultBehaviourOnClose, defaultBehaviourOnClose)\n        ;\n\n        return service;\n    }\n\n    private destroyModalComponent(modal: ComponentRef<ModalComponent>): void {\n\n        const arrayRef = this.modals.find((item) => item.modalRef === modal);\n        const indexOf = this.modals.indexOf(arrayRef);\n        this.dynamicComponentService.destroyComponent(arrayRef.modalRef);\n        this.dynamicComponentService.destroyComponent(arrayRef.containerRef);\n        arrayRef.containerRef.destroy();\n        arrayRef.modalRef.destroy();\n\n        if (arrayRef.backdropRef) {\n            this.dynamicComponentService.destroyComponent(arrayRef.backdropRef);\n            arrayRef.backdropRef.destroy();\n        }\n\n        this.modals[indexOf] = null;\n        this.modals = this.modals.filter(item => item !== null && item !== undefined);\n\n    }\n\n    private setModalSize(componentRef: ComponentRef<ModalComponent>, configObj: ModalConfig): void {\n        componentRef.location.nativeElement.style.minWidth = configObj.minWidth;\n        componentRef.location.nativeElement.style.minHeight = configObj.minHeight;\n        componentRef.location.nativeElement.style.maxWidth = configObj.maxWidth;\n        componentRef.location.nativeElement.style.maxHeight = configObj.maxHeight;\n        componentRef.location.nativeElement.style.width = configObj.width;\n        componentRef.location.nativeElement.style.height = configObj.height;\n    }\n\n    private setModalPosition(componentRef: ComponentRef<ModalComponent>, position: ModalPosition): void {\n        if (position) {\n            componentRef.location.nativeElement.style.top = position.top;\n            componentRef.location.nativeElement.style.bottom = position.bottom;\n            componentRef.location.nativeElement.style.right = position.right;\n            componentRef.location.nativeElement.style.left = position.left;\n        }\n    }\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * Directive that applies fundamental modal styling to a header.\n *\n * ```html\n * <h1 fd-modal-title>Modal Title</h1>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-modal-title]'\n})\nexport class ModalTitleDirective {\n\n    /** @hidden */\n    @HostBinding('class.fd-modal__title')\n    modalTitle = true;\n}\n\n/**\n * Directive that applies fundamental modal styling to a button.\n *\n * ```html\n * <button fd-modal-close-btn></button>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-modal-close-btn]'\n})\nexport class ModalCloseButtonDirective {\n\n    /** @hidden */\n    @HostBinding('attr.aria-label')\n    ariaLabel: string = 'close';\n\n    /** @hidden */\n    @HostBinding('class.sap-icon--decline')\n    sapIconDeclineClass: boolean = true;\n\n    /** @hidden */\n    @HostBinding('class.sap-icon--l')\n    sapIconLClass: boolean = true;\n\n    /** @hidden */\n    @HostBinding('class.fd-button--light')\n    lightButtonClass: boolean = true;\n\n    /** @hidden */\n    @HostBinding('class.fd-modal__close')\n    modalCloseClass: boolean = true;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from '../button/button.module';\nimport { IconModule } from '../icon/icon.module';\n\nimport { ModalComponent } from './modal.component';\nimport { ModalHeaderComponent } from './modal-header/modal-header.component';\nimport { ModalBodyComponent } from './modal-body/modal-body.component';\nimport { ModalFooterComponent } from './modal-footer/modal-footer.component';\n\nimport { ModalService } from './modal-service/modal.service';\nimport { ModalBackdrop } from './modal-utils/modal-backdrop';\nimport { ModalContainer } from './modal-utils/modal-container';\nimport { ModalCloseButtonDirective, ModalTitleDirective } from './modal-utils/modal-directives';\nimport { DynamicComponentService } from '../utils/dynamic-component/dynamic-component.service';\n\n@NgModule({\n    declarations: [\n        ModalComponent,\n        ModalHeaderComponent,\n        ModalBodyComponent,\n        ModalFooterComponent,\n        ModalBackdrop,\n        ModalContainer,\n        ModalCloseButtonDirective,\n        ModalTitleDirective\n    ],\n    imports: [\n        CommonModule,\n        ButtonModule,\n        IconModule\n    ],\n    exports: [\n        ModalHeaderComponent,\n        ModalBodyComponent,\n        ModalFooterComponent,\n        ModalBackdrop,\n        ModalContainer,\n        ModalCloseButtonDirective,\n        ModalTitleDirective\n    ],\n    entryComponents: [\n        ModalComponent,\n        ModalBackdrop,\n        ModalContainer\n    ],\n    providers: [ModalService, DynamicComponentService]\n})\nexport class ModalModule {}\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    OnChanges,\n    OnInit,\n    Output, QueryList,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PopoverComponent } from '../popover/popover.component';\nimport { PopoverFillMode } from '../popover/popover-directive/popover.directive';\nimport { MenuItemDirective } from '../menu/menu-item.directive';\nimport { MenuKeyboardService } from '../menu/menu-keyboard.service';\nimport focusTrap, { FocusTrap } from 'focus-trap';\nimport { FormStates } from '../form/form-control/form-states';\n\n/**\n * Input field with multiple selection enabled. Should be used when a user can select between a\n * limited number of pre-defined options with a filter-enabled context.\n *\n * Supports Angular Forms.\n */\n@Component({\n    selector: 'fd-multi-input',\n    templateUrl: './multi-input.component.html',\n    styleUrls: ['./multi-input.component.scss'],\n    host: {\n        '(blur)': 'onTouched()',\n        '[class.fd-multi-input-custom]': 'true'\n    },\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MultiInputComponent),\n            multi: true\n        },\n        MenuKeyboardService\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MultiInputComponent implements OnInit, ControlValueAccessor, OnChanges, AfterViewInit {\n\n    /** @hidden */\n    @ViewChild(PopoverComponent, { static: false })\n    popoverRef: PopoverComponent;\n\n    /** @hidden */\n    @ViewChildren(MenuItemDirective)\n    menuItems: QueryList<MenuItemDirective>;\n\n    /** @hidden */\n    @ViewChild('searchInputElement', { static: false })\n    searchInputElement: ElementRef;\n\n    /** @hidden */\n    @HostBinding('class.fd-multi-input')\n    multiInputClass = true;\n\n    /** Placeholder for the input field. */\n    @Input()\n    placeholder: string = '';\n\n    /** Whether the input is disabled. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Whether the input is in compact mode. */\n    @Input()\n    compact: boolean = false;\n\n    /** Max height of the popover. Any overflowing elements will be accessible through scrolling. */\n    @Input()\n    maxHeight: string = '300px';\n\n    /** Icon of the button on the right of the input field. */\n    @Input()\n    glyph: string = 'navigation-down-arrow';\n\n    /** Values to be displayed in the unfiltered dropdown. */\n    @Input()\n    dropdownValues: any[] = [];\n\n    /** Search term, or more specifically the value of the inner input field. */\n    @Input()\n    searchTerm: string;\n\n    /** Whether the search term should be highlighted in results. */\n    @Input()\n    highlight: boolean = true;\n\n    /** Selected dropdown items. */\n    @Input()\n    selected: any[] = [];\n\n    /** Filter function. Accepts an array and a string as arguments, and outputs an array.\n     * An arrow function can be used to access the *this* keyword in the calling component.\n     * See multi input examples for details. */\n    @Input()\n    filterFn: Function = this.defaultFilter;\n\n    /** Display function. Accepts an object of the same type as the\n     * items passed to dropdownValues as argument, and outputs a string.\n     * An arrow function can be used to access the *this* keyword in the calling component.\n     * See multi input examples for details. */\n    @Input()\n    displayFn: Function = this.defaultDisplay;\n\n    /** Aria label for the multi input body. */\n    @Input()\n    multiInputBodyLabel: string = 'Multi input body';\n\n    /**\n     * Preset options for the popover body width.\n     * * `at-least` will apply a minimum width to the body equivalent to the width of the control.\n     * * `equal` will apply a width to the body equivalent to the width of the control.\n     * * Leave blank for no effect.\n     */\n    @Input()\n    fillControlMode: PopoverFillMode = 'at-least';\n\n    /**\n     *  The state of the form control - applies css classes.\n     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.\n     */\n    @Input()\n    state: FormStates;\n\n    /**\n     * Whether AddOn Button should be focusable, set to false by default\n     */\n    @Input()\n    buttonFocusable: boolean = false;\n\n    /** Event emitted when the search term changes. Use *$event* to access the new term. */\n    @Output()\n    readonly searchTermChange: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Event emitted when the selected items change. Use *$event* to access the new selected array. */\n    @Output()\n    readonly selectedChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    /** Whether multi input popover body should be opened */\n    @Input()\n    open: boolean = false;\n\n    /** Event emitted, when the multi input's popover body is opened or closed */\n    @Output()\n    readonly openChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** @hidden */\n    displayedValues: any[] = [];\n\n    /** @hidden */\n    public focusTrap: FocusTrap;\n\n    /** @hidden */\n    onChange: Function = () => { };\n\n    /** @hidden */\n    onTouched: Function = () => { };\n\n    /** @hidden */\n    constructor(\n        private elRef: ElementRef,\n        private changeDetRef: ChangeDetectorRef,\n        private menuKeyboardService: MenuKeyboardService\n    ) { }\n\n    /** @hidden */\n    ngOnInit() {\n        if (this.dropdownValues) {\n            this.displayedValues = this.dropdownValues;\n        }\n        this.setupFocusTrap();\n    }\n\n    /** @hidden */\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.dropdownValues && (changes.dropdownValues || changes.searchTerm)) {\n            if (this.searchTerm) {\n                this.displayedValues = this.filterFn(this.dropdownValues, this.searchTerm);\n            } else {\n                this.displayedValues = this.dropdownValues;\n            }\n        }\n        this.changeDetRef.markForCheck();\n    }\n\n    /** @hidden */\n    ngAfterViewInit(): void {\n        this.menuKeyboardService.focusEscapeBeforeList = () => this.searchInputElement.nativeElement.focus();\n        this.menuKeyboardService.focusEscapeAfterList = () => { };\n    }\n\n    /** @hidden */\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        if (isDisabled) {\n            this.elRef.nativeElement.style.pointerEvents = 'none';\n        } else {\n            this.elRef.nativeElement.style.pointerEvents = 'auto';\n        }\n        this.changeDetRef.detectChanges();\n    }\n\n    /** @hidden */\n    writeValue(selected: any[]): void {\n        if (selected) {\n            this.selected = selected;\n        }\n        this.changeDetRef.markForCheck();\n    }\n\n    /** @hidden */\n    openChangeHandle(open: boolean): void {\n        this.open = open;\n        this.openChange.emit(this.open);\n        this.onTouched();\n        if (this.open) {\n            this.focusTrap.activate();\n        } else {\n            this.focusTrap.deactivate();\n        }\n    }\n\n    /** @hidden */\n    handleSelect(checked: any, value: any): void {\n        const previousLength = this.selected.length;\n        if (checked) {\n            this.selected.push(value);\n        } else {\n            this.selected.splice(this.selected.indexOf(value), 1);\n        }\n\n        // Handle popover placement update\n        if ((previousLength === 0 && this.selected.length === 1) ||\n            (previousLength === 1 && this.selected.length === 0)) {\n            this.popoverRef.updatePopover();\n        }\n\n        this.onChange(this.selected);\n        this.selectedChange.emit(this.selected);\n    }\n\n    /** @hidden */\n    public handleKeyDown(event: KeyboardEvent, index: number): void {\n        this.menuKeyboardService.keyDownHandler(event, index, this.menuItems.toArray());\n    }\n\n    /** @hidden */\n    public handleInputKeydown(event: KeyboardEvent): void {\n        if (event.key === 'ArrowDown') {\n            if (event.altKey) {\n                this.openChangeHandle(true)\n            }\n            if (this.menuItems.first) {\n                this.menuItems.first.focus();\n                event.preventDefault();\n            }\n        }\n    }\n\n    /** @hidden */\n    handleSearchTermChange(): void {\n        if (!this.open && this.searchTerm && this.searchTerm.length) {\n            this.openChangeHandle(true);\n        }\n        this.searchTermChange.emit(this.searchTerm);\n        this.displayedValues = this.filterFn(this.dropdownValues, this.searchTerm);\n        this.popoverRef.updatePopover();\n    }\n\n    private defaultFilter(contentArray: any[], searchTerm: string): any[] {\n        const searchLower = searchTerm.toLocaleLowerCase();\n        return contentArray.filter(item => {\n            if (item) {\n                return this.displayFn(item).toLocaleLowerCase().includes(searchLower);\n            }\n        });\n    }\n\n    private defaultDisplay(str: string): string {\n        return str;\n    }\n\n    private setupFocusTrap(): void {\n        try {\n            this.focusTrap = focusTrap(this.elRef.nativeElement, {\n                clickOutsideDeactivates: true,\n                returnFocusOnDeactivate: true,\n                escapeDeactivates: false\n            });\n        } catch (e) {\n            console.warn('Unsuccessful attempting to focus trap the Multi Input.');\n        }\n    }\n\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n    Input,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n/**\n * A token is used to represent contextualizing information.\n * They can be useful to show applied filters, selected values for form fields or object metadata.\n */\n@Component({\n    selector: 'fd-token',\n    templateUrl: './token.component.html',\n    styleUrls: ['./token.component.scss'],\n    host: {\n        class: 'fd-token',\n        '[class.fd-token__disabled]': 'disabled',\n        'role': 'button'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TokenComponent {\n\n    /** @hidden */\n    @ViewChild('contentContainer', { static: false })\n    contentContainer: ElementRef;\n\n    /** Whether the token is disabled. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Emitted when the *x* icon is clicked. Specifically, any pseudo-element. */\n    @Output()\n    readonly onCloseClick: EventEmitter<void> = new EventEmitter<void>();\n\n    /** @hidden */\n    constructor(private elRef: ElementRef) {\n    }\n\n    /** @hidden */\n    @HostListener('click', ['$event'])\n    clickHandler(event): void {\n        if (this.contentContainer && !this.disabled) {\n            if (this.elRef.nativeElement.contains(event.target) && !this.contentContainer.nativeElement.contains(event.target)) {\n                this.onCloseClick.emit();\n            }\n        }\n    }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TokenComponent } from './token.component';\n\n@NgModule({\n    declarations: [TokenComponent],\n    imports: [CommonModule],\n    exports: [TokenComponent]\n})\nexport class TokenModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MultiInputComponent } from './multi-input.component';\nimport { TokenModule } from '../token/token.module';\nimport { FormsModule } from '@angular/forms';\nimport { MenuModule } from '../menu/menu.module';\nimport { PopoverModule } from '../popover/popover.module';\nimport { PipeModule } from '../utils/pipes/pipe.module';\nimport { InputGroupModule } from '../input-group/input-group.module';\nimport { FormModule } from '../form/form.module';\nimport { CheckboxModule } from '../checkbox/checkbox.module';\n\n@NgModule({\n    declarations: [MultiInputComponent],\n    imports: [\n        CommonModule,\n        TokenModule,\n        FormsModule,\n        MenuModule,\n        PopoverModule,\n        PipeModule,\n        InputGroupModule,\n        FormModule,\n        CheckboxModule\n    ],\n    exports: [MultiInputComponent]\n})\nexport class MultiInputModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { Pagination } from './pagination.model';\n\nconst DISPLAY_NUM_PAGES = 3;\n\n/**\n * Service that is used to retrieve all the pages,\n * the number of pages,\n * and to validate the pagination object.\n */\n@Injectable()\nexport class PaginationService {\n    /** Constant representing the default number of items per page. */\n    public DEFAULT_ITEMS_PER_PAGE = 10;\n    \n    /** @hidden */\n    public MORE = -1;\n\n    /** @hidden */\n    constructor() {}\n\n    /**\n     * Returns a number array representing the pages of the pagination object.\n     * @param pagination An object of type *Pagination*.\n     */\n    public getPages(pagination: Pagination): number[] {\n        const pages = [];\n        this.validate(pagination);\n        const totalPages = this.getTotalPages(pagination);\n\n        if (totalPages <= DISPLAY_NUM_PAGES) {\n            for (let i = 1; i <= totalPages; i++) {\n                pages.push(i);\n            }\n        } else {\n            if (pagination.currentPage <= DISPLAY_NUM_PAGES) {\n                for (let i = 1; i <= DISPLAY_NUM_PAGES; i++) {\n                    pages.push(i);\n                }\n                if (totalPages !== DISPLAY_NUM_PAGES + 1) {\n                    pages.push(this.MORE);\n                }\n                pages.push(totalPages);\n            } else if (pagination.currentPage > totalPages - (DISPLAY_NUM_PAGES - 1)) {\n                pages.push(1);\n                if (totalPages !== DISPLAY_NUM_PAGES + 1) {\n                    pages.push(this.MORE);\n                }\n                for (let i = totalPages - (DISPLAY_NUM_PAGES - 1); i <= totalPages; i++) {\n                    pages.push(i);\n                }\n            } else {\n                pages.push(1);\n                if (totalPages !== DISPLAY_NUM_PAGES + 1) {\n                    pages.push(this.MORE);\n                }\n                const buffer = Math.floor(DISPLAY_NUM_PAGES / 2);\n                for (let i = pagination.currentPage - buffer; i <= pagination.currentPage + buffer; i++) {\n                    pages.push(i);\n                }\n                if (totalPages !== DISPLAY_NUM_PAGES + 1) {\n                    pages.push(this.MORE);\n                }\n                pages.push(totalPages);\n            }\n        }\n        return pages;\n    }\n\n    /**\n     * Retrieves the total number of pages.\n     * @param pagination An object of type *Pagination*.\n     */\n    public getTotalPages(pagination: Pagination): number {\n        if (pagination.itemsPerPage <= 0) {\n            pagination.itemsPerPage = this.DEFAULT_ITEMS_PER_PAGE;\n        }\n        return Math.ceil(pagination.totalItems / pagination.itemsPerPage);\n    }\n\n    /**\n     * Provides validation for the pagination object.\n     * @param pagination An object of type *Pagination*.\n     */\n    public validate(pagination: Pagination) {\n        if (!pagination.totalItems && isDevMode()) {\n            console.warn(`No pages provided in the Pagination object. This warning only appears in development mode.`);\n        }\n        if (!pagination.itemsPerPage) {\n            pagination.itemsPerPage = this.DEFAULT_ITEMS_PER_PAGE;\n        } else if (pagination.itemsPerPage < 0 && isDevMode()) {\n            console.warn(`itemsPerPage must be greater than zero. This warning only appears in development mode.`);\n        }\n        if (!pagination.currentPage) {\n            pagination.currentPage = 1;\n        }\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport { PaginationService } from './pagination.service';\n\n/**\n * The component that is used to provide navigation between paged information.\n * ```html\n * <fd-pagination\n *          [totalItems]=\"50\"\n *          [itemsPerPage]=\"10\"\n *          [currentPage]=\"3\">\n * </fd-pagination>\n * ```\n */\n@Component({\n    selector: 'fd-pagination',\n    templateUrl: './pagination.component.html',\n    providers: [PaginationService],\n    host: {\n        class: 'fd-pagination'\n    },\n    styles: [`\n        .fd-pagination a {\n            cursor: pointer;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaginationComponent implements OnChanges {\n    /** Represents the total number of items. */\n    @Input()\n    totalItems: number;\n\n    /** Represents the current page number. */\n    @Input()\n    currentPage: number;\n\n    /** Represents the number of items per page. */\n    @Input()\n    itemsPerPage: number;\n\n    /** Whether to display the total number of items. */\n    @Input()\n    displayTotalItems: boolean = true;\n\n    /**\n     * The text appended to the total number of items.\n     * The default text is set to 'items'\n     */\n    @Input()\n    displayText: string = 'items';\n\n    /** Label for the 'previous' page button. */\n    @Input()\n    previousLabel: string = 'Previous';\n\n    /** Label for the 'next' page button. */\n    @Input()\n    nextLabel: string = 'Next';\n\n    /** Event fired when the page is changed. */\n    @Output()\n    pageChangeStart = new EventEmitter<number>();\n\n    /** @hidden */\n    pages: number[];\n\n    /** @hidden */\n    constructor(private paginationService: PaginationService) {}\n\n    /** @hidden */\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes && changes.currentPage) {\n            this.currentPage = changes.currentPage.currentValue;\n        }\n        this.pages = this.paginationService.getPages(this.getPaginationObject());\n        const totalPages = this.paginationService.getTotalPages(this.getPaginationObject());\n        if (!this.currentPage || this.currentPage < 1) {\n            this.currentPage = 1;\n        } else if (this.currentPage > totalPages) {\n            this.currentPage = totalPages;\n        }\n    }\n\n    /**\n     * Checks if the current page is the last page.\n     */\n    isLastPage(): boolean {\n        return this.currentPage === this.paginationService.getTotalPages(this.getPaginationObject());\n    }\n\n    /**\n     * Navigates to a specific page when the user presses 'Space' or 'Enter' key.\n     * @param page The number of the page.\n     * @param $event The keyboard event.\n     */\n    onKeypressHandler(page: number, $event: KeyboardEvent) {\n        if ($event.key === ' ' || $event.key === 'Enter') {\n            $event.preventDefault();\n            this.goToPage(page);\n        }\n    }\n\n    /**\n     * Navigates to a specific page.\n     * @param page The number of the page to navigate to.\n     * @param $event The mouse event (optional).\n     */\n    goToPage(page: number, $event?: MouseEvent) {\n        if ($event) {\n            $event.preventDefault();\n        }\n        if (page > this.paginationService.getTotalPages(this.getPaginationObject()) || page < 1) {\n            return;\n        }\n        this.pages = this.paginationService.getPages(this.getPaginationObject());\n        this.pageChangeStart.emit(page);\n    }\n\n    /**\n     * Retrieves an object that represents\n     * the total number of items, the current page, and the number of items per page.\n     */\n    getPaginationObject() {\n        const retVal = {\n            totalItems: this.totalItems,\n            currentPage: this.currentPage,\n            itemsPerPage: this.itemsPerPage\n        };\n        return retVal;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PaginationComponent } from './pagination.component';\nimport { ButtonModule } from '../button/button.module';\nimport { IconModule } from '../icon/icon.module';\nimport { PaginationService } from './pagination.service';\n\n@NgModule({\n    declarations: [PaginationComponent],\n    imports: [CommonModule, ButtonModule, IconModule],\n    providers: [PaginationService],\n    exports: [PaginationComponent]\n})\nexport class PaginationModule {}\n","import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, ViewEncapsulation } from '@angular/core';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\n\n/**\n * Panels are used to encapsulate part of the content, form elements, lists, collections, etc., on a page.\n */\n@Component({\n    selector: 'fd-panel',\n    templateUrl: './panel.component.html',\n    host: {\n        '[class.fd-has-display-block]': 'true'\n    },\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PanelComponent extends AbstractFdNgxClass {\n\n    /** @Input Background image of the panel. */\n    @Input()\n    backgroundImage: string;\n\n    /** @hidden */\n    @HostBinding('class.fd-panel')\n    fdPanelClass: boolean = true;\n\n    /** @hidden */\n    _setProperties() {\n        if (this.backgroundImage) {\n            this._addStyleToElement('background-image', 'url(\"' + this.backgroundImage + '\")');\n        }\n    }\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n/**\n * Header of the panel. Contains a head and actions.\n *\n * ```html\n * <fd-panel>\n *     <fd-panel-header>\n *         <fd-panel-head>\n *             <fd-panel-title>Title!</fd-panel-title>\n *         </fd-panel-head>\n *     </fd-panel-header>\n * </fd-panel>\n * ```\n */\n@Component({\n    selector: 'fd-panel-header',\n    templateUrl: './panel-header.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PanelHeaderComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-panel__header')\n    fdPanelHeaderClass = true;\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n/**\n * Container for title and description.\n *\n * ```html\n * <fd-panel>\n *     <fd-panel-header>\n *         <fd-panel-head>\n *             <fd-panel-title>Title!</fd-panel-title>\n *         </fd-panel-head>\n *     </fd-panel-header>\n * </fd-panel>\n * ```\n */\n@Component({\n    selector: 'fd-panel-head',\n    templateUrl: './panel-head.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PanelHeadComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-panel__head')\n    fdPanelHeadClass = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * Applies the panel title style to a header element. It can be used with any header level.\n *\n * ```html\n * <h1 fd-panel-title>Panel Title</h1>\n * <h3 fd-panel-title>Panel Title</h3>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-panel-title]',\n})\nexport class PanelTitleDirective {\n\n    /** @hidden */\n    @HostBinding('class.fd-panel__title')\n    fdPanelTitleClass: boolean = true;\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * Description of the panel title.\n *\n * ```html\n * <fd-panel>\n *     <fd-panel-header>\n *         <fd-panel-head>\n *             <fd-panel-description>This is a description for a panel title!</fd-panel-description>\n *         </fd-panel-head>\n *     </fd-panel-header>\n * </fd-panel>\n * ```\n */\n@Component({\n    selector: 'fd-panel-description',\n    templateUrl: './panel-description.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PanelDescriptionComponent {}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n/**\n * Panel level actions such as add, remove, delete, sort, etc.\n *\n * ```html\n * <fd-panel>\n *     <fd-panel-header>\n *         <fd-panel-actions>\n *             <button fd-button (click)=\"action()\">Action</button>\n *         </fd-panel-actions>\n *     </fd-panel-header>\n * </fd-panel>\n * ```\n */\n@Component({\n    selector: 'fd-panel-actions',\n    templateUrl: './panel-actions.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PanelActionsComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-panel__actions')\n    fdPanelActionsClass: boolean = true;\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n/**\n * Panel level filters that is specific to the data being displayed within the panel.\n *\n * ```html\n * <fd-panel>\n *     <fd-panel-filters>\n *         Some text can go here!\n *     </fd-panel-filters>\n * </fd-panel>\n * ```\n */\n@Component({\n    selector: 'fd-panel-filters',\n    templateUrl: './panel-filters.component.html',\n    host: {\n        '[class.fd-has-display-block]': 'true'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PanelFiltersComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-panel__filters')\n    fdPanelFiltersClass: boolean = true;\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * Main content of the panel can that hold lists, table, tree, text, form or any other information.\n *\n * ```html\n * <fd-panel>\n *     <fd-panel-body>\n *         Some text can go here!\n *     </fd-panel-body>\n * </fd-panel>\n * ```\n */\n@Component({\n    selector: 'fd-panel-body',\n    templateUrl: './panel-body.component.html',\n    host: {\n        '[class.fd-has-display-block]': 'true'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PanelBodyComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-panel__body')\n    fdPanelBodyClass: boolean = true;\n\n    /** Whether the edges of the panel should have bleeding padding. */\n    @Input()\n    @HostBinding('class.fd-panel__body--bleed')\n    bleed: boolean = false;\n\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n/**\n * Panel footer can be utilized for pagination, secondary actions, add more data, etc.\n *\n * ```html\n * <fd-panel>\n *     <fd-panel-footer>\n *         Some text can go here!\n *     </fd-panel-footer>\n * </fd-panel>\n * ```\n */\n@Component({\n    selector: 'fd-panel-footer',\n    templateUrl: './panel-footer.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PanelFooterComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-panel__footer')\n    fdPanelFooterClass: boolean = true;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PanelComponent } from './panel.component';\nimport { PanelHeaderComponent } from './panel-header/panel-header.component';\nimport { PanelHeadComponent } from './panel-head/panel-head.component';\nimport { PanelTitleDirective } from './panel-title/panel-title.directive';\nimport { PanelDescriptionComponent } from './panel-description/panel-description.component';\nimport { PanelActionsComponent } from './panel-actions/panel-actions.component';\nimport { PanelFiltersComponent } from './panel-filters/panel-filters.component';\nimport { PanelBodyComponent } from './panel-body/panel-body.component';\nimport { PanelFooterComponent } from './panel-footer/panel-footer.component';\n@NgModule({\n    declarations: [\n        PanelComponent,\n        PanelHeaderComponent,\n        PanelHeadComponent,\n        PanelTitleDirective,\n        PanelDescriptionComponent,\n        PanelActionsComponent,\n        PanelFiltersComponent,\n        PanelBodyComponent,\n        PanelFooterComponent,\n    ],\n    imports: [CommonModule],\n    exports: [\n        PanelComponent,\n        PanelHeaderComponent,\n        PanelHeadComponent,\n        PanelTitleDirective,\n        PanelDescriptionComponent,\n        PanelActionsComponent,\n        PanelFiltersComponent,\n        PanelBodyComponent,\n        PanelFooterComponent,\n    ]\n})\nexport class PanelModule {}\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n/**\n * A directive designed to help navigation elements determine the element currently in view of the user.\n */\n@Directive({\n    selector: '[fdScrollSpy]'\n})\nexport class ScrollSpyDirective {\n    /**\n     * An array of tags to track.\n     */\n    @Input()\n    public trackedTags: string[] = [];\n\n    /**\n     * Whether events are still fired if there is no tag present on the user's screen.\n     */\n    @Input()\n    public fireEmpty: boolean = false;\n\n    /**\n     * A number that represent at what location in the container the event is fired.\n     * 0.5 would fire the events in the middle of the container,\n     * 0 for the top and 1 for the bottom.\n     */\n    @Input()\n    public targetPercent: number = 0;\n\n    /**\n     * Number that represents the offset in pixels for fired target. `100` value means that the event will be fired for\n     * target that is 100 pixels below the spy container.\n     */\n    @Input()\n    public targetOffset: number = 0;\n\n    /**\n     * Event fired on the scroll element when a new item becomes activated by the scrollspy .\n     * The returned value is the HTMLElement itself.\n     */\n    @Output()\n    public readonly spyChange: EventEmitter<HTMLElement> = new EventEmitter<HTMLElement>();\n\n    /** @hidden */\n    private currentActive: HTMLElement;\n\n    /** @hidden */\n    constructor(private elRef: ElementRef) {}\n\n    /** @hidden */\n    @HostListener('scroll', ['$event'])\n    onScroll(event: any) {\n        let spiedTag: HTMLElement;\n        const children = this.elRef.nativeElement.children;\n        const targetScrollTop = event.target.scrollTop;\n        const targetOffsetTop = event.target.offsetTop + this.targetOffset;\n\n        for (let i = 0; i < children.length; i++) {\n            const element: HTMLElement = children[i];\n            if (this.trackedTags.some(tag => tag.toLocaleUpperCase() === element.tagName.toLocaleUpperCase())) {\n                if ((element.offsetTop - targetOffsetTop) <= targetScrollTop + event.target.offsetHeight * this.targetPercent) {\n                    spiedTag = element;\n                }\n            }\n        }\n\n        if ((spiedTag || this.fireEmpty) && spiedTag !== this.currentActive) {\n            this.currentActive = spiedTag;\n            this.spyChange.emit(this.currentActive);\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { ScrollSpyDirective } from './scroll-spy.directive';\n\n@NgModule({\n    declarations: [ScrollSpyDirective],\n    exports: [ScrollSpyDirective]\n})\nexport class ScrollSpyModule {}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * The shellbar offers consistent, responsive navigation across all products and applications.\n * Includes support for branding, product navigation, search, notifications, and user settings.\n * Shellbar is a composite component comprised of mandatory and optional elements.\n */\n@Component({\n    selector: 'fd-shellbar',\n    templateUrl: './shellbar.component.html',\n    styleUrls: ['./shellbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShellbarComponent {\n}\n","import { ChangeDetectionStrategy, Component, ContentChild, HostListener, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { PopoverComponent } from '../../popover/popover.component';\nimport { MenuComponent } from '../../menu/menu.component';\nimport { ShellbarMenuItem } from '../model/shellbar-menu-item';\n\n/**\n * The component that represents a product menu.\n * Product menu is used for navigating to applications within the product.\n * ```html\n * <fd-product-menu [control]=\"productMenuControl\"\n *                  [items]=\"productMenuItems\">\n * </fd-product-menu>\n * ```\n */\n@Component({\n    selector: 'fd-product-menu',\n    templateUrl: './product-menu.component.html',\n    styleUrls: ['./product-menu.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductMenuComponent extends PopoverComponent implements OnInit {\n\n    /** @hidden */\n    @ViewChild(PopoverComponent, { static: false })\n    popoverComponent: PopoverComponent;\n\n    /** @hidden */\n    @ContentChild(MenuComponent, { static: false })\n    menuComponent: MenuComponent;\n\n    /**\n     * The control element to toggle the product menu,\n     * represented by the name of the current application.\n     */\n    @Input()\n    control: string;\n\n    /**\n     *  The items in the product menu. If the value is not passed or there is empty array,\n     * the template changes and shows only control\n     */\n    @Input()\n    items: ShellbarMenuItem[];\n\n    /** @hidden */\n    productMenuCollapsed: boolean = false;\n\n    /** When set to true, popover list will be closed after selecting the option */\n    @Input()\n    closePopoverOnSelect: boolean = false;\n\n    /** @hidden */\n    @HostListener('window:resize', [])\n    onResize(): void {\n        const mq = window.matchMedia('(max-width: 601px)');\n        mq.matches ? this.productMenuCollapsed = true : this.productMenuCollapsed = false;\n    }\n\n    /** @hidden */\n    ngOnInit(): void {\n        this.onResize();\n    }\n\n    /**\n     * @hidden\n     */\n    itemClicked(item: any, event: any): void {\n        if (this.closePopoverOnSelect) {\n            this.popoverComponent.close();\n        }\n        if (item.callback) {\n            item.callback(event);\n        }\n    }\n\n    /**\n    * @hidden\n    */\n    isAnyGlyphInItems(): boolean {\n        if (!this.items || this.items.length === 0) {\n            return false;\n        }\n        return !!this.items.find(item => item.glyph);\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * The component that represents a shellbar subtitle.\n * The subtitle is optional and should be used rarely.\n * ```html\n *   <fd-shellbar-subtitle>\n *      Corporate Portal\n *   </fd-shellbar-subtitle>\n * ```\n */\n@Component({\n    selector: 'fd-shellbar-subtitle',\n    templateUrl: './shellbar-subtitle.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShellbarSubtitleComponent {}\n","import { ChangeDetectionStrategy, Component, ContentChild, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The component that represents a shellbar action.\n * ```html\n *  <fd-shellbar-action *ngFor=\"let action of actions\"\n *                      [glyph]=\"action.glyph\"\n *                      [callback]=\"action.callback\"\n *                      [label]=\"action.label\"\n *                      [notificationCount]=\"action.notificationCount\"\n *                      [notificationLabel]=\"action.notificationLabel\">\n *  </fd-shellbar-action>\n * ```\n */\n@Component({\n    selector: 'fd-shellbar-action',\n    templateUrl: './shellbar-action.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShellbarActionComponent {\n\n    /** The glyph (icon) name */\n    @Input()\n    glyph: string;\n\n    /** Callback that hanldles the response to clicks on any of the actions. */\n    @Input()\n    callback: Function;\n\n    /** The action label. */\n    @Input()\n    label: string;\n\n    /** The notification label. */\n    @Input()\n    notificationLabel: string;\n\n    /** Represents the number of notifications. */\n    @Input()\n    notificationCount: number;\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PopoverComponent } from '../../popover/popover.component';\nimport { ShellbarUser } from '../model/shellbar-user';\nimport { ShellbarUserMenu } from '../model/shellbar-user-menu';\n\n/**\n * This Component extends popover component and passes all of the options and events from outside to popover component\n * and Vice Versa\n * */\n@Component({\n    selector: 'fd-shellbar-user-menu',\n    templateUrl: './shellbar-user-menu.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShellbarUserMenuComponent extends PopoverComponent {\n\n    /** The user data. */\n    @Input()\n    user: ShellbarUser;\n\n    /** The user menu data. */\n    @Input()\n    userMenu: ShellbarUserMenu[];\n\n    /** Event emitted on item click */\n    @Output()\n    itemClicked: EventEmitter<void> = new EventEmitter<void>();\n\n    /**\n     * @hidden\n     */\n    itemClick(item: ShellbarUserMenu, event: any): void {\n        this.itemClicked.emit();\n        if (item.callback) {\n            item.callback(event);\n        }\n    }\n}\n","import {\n    Component,\n    ContentChildren,\n    HostListener,\n    Input,\n    OnInit,\n    AfterContentChecked,\n    QueryList,\n    ViewEncapsulation,\n    ContentChild, ViewChild, ChangeDetectionStrategy\n} from '@angular/core';\nimport { ShellbarActionComponent } from '../shellbar-action/shellbar-action.component';\nimport { ShellbarMenuItem } from '../model/shellbar-menu-item';\nimport { ShellbarUser } from '../model/shellbar-user';\nimport { ShellbarUserMenuComponent } from '../user-menu/shellbar-user-menu.component';\nimport { ComboboxComponent } from '../../combobox/combobox.component';\n\n/**\n * The component that represents shellbar actions.\n * It is a container wrapper for all product actions and links (required element).\n * ```html\n * <fd-shellbar-actions [user]=\"user\"\n *                      [userMenu]=\"userMenu\"\n *                      [productSwitcher]=\"productSwitcher\">\n *        <button fd-button [fdType]=\"'standard'\">Custom Button</button>\n *\n *        <fd-shellbar-action *ngFor=\"let action of actions\"\n *                            [glyph]=\"action.glyph\"\n *                            [callback]=\"action.callback\"\n *                            [label]=\"action.label\"\n *                            [notificationCount]=\"action.notificationCount\"\n *                            [notificationLabel]=\"action.notificationLabel\">\n *        </fd-shellbar-action>\n * </fd-shellbar-actions>\n * ```\n */\n\n@Component({\n    selector: 'fd-shellbar-actions',\n    templateUrl: './shellbar-actions.component.html',\n    styleUrls: ['./shellbar-actions.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShellbarActionsComponent implements OnInit, AfterContentChecked {\n\n    /** @hidden */\n    actionsCollapsed: boolean = false;\n\n    /** @hidden */\n    showCollapsedProducts: boolean = false;\n\n    /** The user data. */\n    @Input()\n    user: ShellbarUser;\n\n    /** The user menu data. */\n    @Input()\n    userMenu: ShellbarMenuItem[];\n\n    /** When set to true, popover list will be closed after selecting the option */\n    @Input()\n    closePopoverOnSelect: boolean = false;\n\n    /** Label for the collapsed item menu. */\n    @Input()\n    collapsedItemMenuLabel: string = 'Collapsed Item Menu';\n\n    /** @hidden */\n    @ContentChildren(ShellbarActionComponent)\n    shellbarActions: QueryList<ShellbarActionComponent>;\n\n    /** @hidden */\n    @ContentChild(ShellbarUserMenuComponent, { static: false })\n    userComponent: ShellbarUserMenuComponent;\n\n    /** @hidden */\n    @ViewChild(ShellbarUserMenuComponent, { static: false })\n    userComponentView: ShellbarUserMenuComponent;\n\n    /** @hidden */\n    @ContentChild(ComboboxComponent, { static: false })\n    comboboxComponent: ComboboxComponent;\n\n    /** @hidden */\n    totalNotifications: number;\n\n    /** @hidden */\n    @HostListener('window:resize', [])\n    onResize(): void {\n        this.actionsCollapsed = window.innerWidth < 1024;\n    }\n\n    /**\n     * @hidden\n     */\n    actionClicked(item: ShellbarActionComponent, event: any): void {\n        this.triggerItems();\n        item.callback(event);\n    }\n\n    /** @hidden */\n    triggerItems(): void {\n        if (this.closePopoverOnSelect) {\n            if (this.userComponentView) {\n                this.userComponentView.close();\n            }\n            if (this.userComponent) {\n                this.userComponent.close();\n            }\n        }\n    }\n\n    /** @hidden */\n    ngOnInit(): void {\n        this.onResize();\n    }\n\n    /** @hidden */\n    ngAfterContentChecked(): void {\n        this.totalNotifications = 0;\n        this.shellbarActions.forEach((action) => {\n            if (action.notificationCount && typeof action.notificationCount === 'number') {\n                this.totalNotifications = this.totalNotifications + action.notificationCount;\n            }\n        });\n    }\n\n    /** @hidden */\n    toggleCollapsedProducts(event: MouseEvent): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.showCollapsedProducts = !this.showCollapsedProducts;\n    }\n\n    public get userItem(): ShellbarUser {\n        if (this.userComponent) {\n            return this.userComponent.user;\n        } else {\n            return this.user;\n        }\n    }\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * The component that represents a shellbar logo.\n * The logo is a required element and is used for company branding.\n * ```html\n *   <fd-shellbar-logo>\n *      <a href=\"#\" class=\"fd-shellbar__logo fd-shellbar__logo--image-replaced\" aria-label=\"SAP\"></a>\n *   </fd-shellbar-logo>\n * ```\n */\n@Component({\n    selector: 'fd-shellbar-logo',\n    templateUrl: './shellbar-logo.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShellbarLogoComponent {}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * The component that represents a shellbar title.\n * The title is a required element and displays the current application name.\n * ```html\n *   <fd-shellbar-title>\n *      Corporate Portal\n *   </fd-shellbar-title>\n * ```\n */\n@Component({\n    selector: 'fd-shellbar-title',\n    templateUrl: './shellbar-title.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShellbarTitleComponent { }\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { PopoverComponent } from '../../popover/popover.component';\n\n@Component({\n    selector: 'fd-product-switch',\n    templateUrl: './product-switch.component.html',\n    styleUrls: ['./product-switch.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductSwitchComponent extends PopoverComponent {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostListener, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { ProductSwitchItem } from './product-switch.item';\n\n@Component({\n    selector: 'fd-product-switch-body',\n    templateUrl: './product-switch-body.component.html',\n    styleUrls: ['./product-switch-body.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductSwitchBodyComponent implements OnInit {\n\n    /** Defines if drag and drop functionality should be included in product switch*/\n    @Input()\n    dragAndDropEnabled: boolean = true;\n\n    /** The product switch's product items. */\n    @Input()\n    products: ProductSwitchItem[];\n\n    /** Event thrown on products array change */\n    @Output()\n    readonly productsChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    /** Event emitted on product click */\n    @Output()\n    readonly itemClicked: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Defines if the product switcher should be displayed in list mode, no matter what is the size of window */\n    @Input()\n    forceListMode: boolean = false;\n\n    /**\n     * @hidden\n     */\n    listMode: boolean;\n\n    /** @hidden */\n    ngOnInit(): void {\n        this.checkSize();\n    }\n\n    /**\n     * @hidden\n     */\n    itemClick(item: ProductSwitchItem, event: any): void {\n        this.itemClicked.emit();\n        if (item.callback) {\n            item.callback(event);\n        }\n    }\n\n    /** Method called on products change */\n    productSwitchItemsChangeHandle(items: any[]): void {\n        this.productsChange.emit(items);\n        this.products = items;\n    }\n\n    /** @hidden */\n    @HostListener('window:resize', [])\n    onResize(): void {\n        this.checkSize();\n    }\n\n    /** @hidden */\n    public isSmallMode(): boolean {\n        return this.products && this.products.length < 7;\n    }\n\n    /** @hidden */\n    public isListMode(): boolean {\n        return this.listMode || this.forceListMode;\n    }\n\n    /** @hidden */\n    private checkSize(): void {\n        if (this.isSmallMode()) {\n            this.listMode = window.innerWidth < 588;\n        } else {\n            this.listMode = window.innerWidth < 776;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { ProductSwitchComponent } from './product-switch/product-switch.component';\nimport { PopoverModule } from '../popover/popover.module';\nimport { ButtonModule } from '../button/button.module';\nimport { CommonModule } from '@angular/common';\nimport { DragAndDropModule } from '../utils/drag-and-drop/drag-and-drop.module';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ProductSwitchBodyComponent } from './product-switch-body/product-switch-body.component';\n\n@NgModule({\n    imports: [PopoverModule, CommonModule, ButtonModule, DragAndDropModule, DragDropModule],\n    declarations: [ProductSwitchComponent, ProductSwitchBodyComponent],\n    exports: [ProductSwitchComponent, ProductSwitchBodyComponent]\n})\nexport class ProductSwitchModule {}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[fdShellbarSidenav], [fd-shellbar-side-nav]'\n})\nexport class ShellbarSidenavDirective {\n\n    /** @hidden */\n    @HostBinding('class.fd-shellbar-side-nav-control')\n    classSideNavUtility: boolean = true;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShellbarComponent } from './shellbar.component';\nimport { ProductMenuComponent } from './product-menu/product-menu.component';\nimport { PopoverModule } from '../popover/popover.module';\nimport { MenuModule } from '../menu/menu.module';\nimport { IdentifierModule } from '../identifier/identifier.module';\nimport { ButtonModule } from '../button/button.module';\nimport { ComboboxModule } from '../combobox/combobox.module';\n\n\nimport { ShellbarSubtitleComponent } from './shellbar-subtitle/shellbar-subtitle.component';\nimport { ShellbarActionsComponent } from './shellbar-actions/shellbar-actions.component';\nimport { ShellbarActionComponent } from './shellbar-action/shellbar-action.component';\nimport { ShellbarLogoComponent } from './shellbar-logo/shellbar-logo.component';\nimport { ShellbarTitleComponent } from './shellbar-title/shellbar-title.component';\n\nimport { ShellbarUserMenuComponent } from './user-menu/shellbar-user-menu.component';\nimport { IconModule } from '../icon/icon.module';\nimport { DragAndDropModule } from '../utils/drag-and-drop/drag-and-drop.module';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ProductSwitchModule } from '../product-switch/product-switch.module';\nimport { ShellbarSidenavDirective } from './shellbar-sidenav.directive';\n\n@NgModule({\n    declarations: [\n        ShellbarComponent,\n        ProductMenuComponent,\n        ShellbarSubtitleComponent,\n        ShellbarActionsComponent,\n        ShellbarActionComponent,\n        ShellbarLogoComponent,\n        ShellbarTitleComponent,\n        ShellbarUserMenuComponent,\n        ShellbarSidenavDirective\n    ],\n    imports: [\n        CommonModule,\n        PopoverModule,\n        MenuModule,\n        IdentifierModule,\n        ButtonModule,\n        ComboboxModule,\n        DragAndDropModule,\n        DragDropModule,\n        ProductSwitchModule,\n        IconModule\n    ],\n    exports: [\n        ShellbarComponent,\n        ProductMenuComponent,\n        ShellbarSubtitleComponent,\n        ShellbarActionsComponent,\n        ShellbarActionComponent,\n        ShellbarLogoComponent,\n        ShellbarTitleComponent,\n        ShellbarUserMenuComponent,\n        ShellbarSidenavDirective\n    ]\n})\nexport class ShellbarModule { }\n","import { Subject } from 'rxjs';\nimport { MenuKeyboardService } from '../menu/menu-keyboard.service';\nimport { Inject, Injectable } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { NestedItemInterface } from './nested-item/nested-item.interface';\nimport { NestedListInterface } from './nested-list/nested-list.interface';\n\n/**\n * Nested list keyboard service, which uses MenuKeyboardService, to deal with ArrowUp, ArrowDown, Space, Enter.\n * Also has own handling of ArrowLeft and ArrowRight, to open/close the menu if it has any children.\n */\n@Injectable()\nexport class NestedListKeyboardService {\n\n    constructor (\n        @Inject(MenuKeyboardService) private keyboardService: MenuKeyboardService,\n    ) {}\n\n    /**\n     * Event, that is thrown always, when the open/close i being called on item components.\n     * Also triggers changing of elements, to remove closed/hidden elements\n     */\n    readonly refresh$: Subject<void> = new Subject<void>();\n\n    /** Recursive function to get all of the NestedItem elements in correct order. */\n    private getItems(item: NestedItemInterface): NestedItemInterface[] {\n        const childrenItems = item.expanded ? item.allChildrenItems : [];\n        return childrenItems.reduce(\n            (actualArray: NestedItemInterface[], nextItem: NestedItemInterface) =>\n                [...actualArray, ...this.getItems(nextItem)], [item]\n        );\n    }\n\n    /**\n     * Function called after refresh$ event is triggered.\n     * Refresh the list of NestedItems, that the keyboard support should be provided for\n     */\n    public refreshItems(lists: NestedListInterface[]): void {\n\n        const items: NestedItemInterface[] = [];\n\n        /** Gathering all of the items */\n        lists.forEach(list => items.push(...this.getAllListItems(list)));\n\n        /** Putting the keyboard support function to each of the items */\n        items.forEach((item, index) => {\n            item.keyboardTriggered\n                .pipe(takeUntil(this.refresh$))\n                .subscribe((keyboardEvent: KeyboardEvent) =>\n                this.handleKeyDown(keyboardEvent, index, items)\n            )\n        });\n    }\n\n    /** Method that calls the recursive function, getItems() and gathers all of the items in the NestedList */\n    private getAllListItems(list: NestedListInterface): NestedItemInterface[] {\n\n        const _items: NestedItemInterface[] = [];\n        if (list && list.nestedItems) {\n            list.nestedItems.toArray().forEach(item => {\n                _items.push(...this.getItems(item));\n            });\n        }\n\n        return _items;\n    }\n\n    /**\n     * Keyboard handle function. Uses keyboard support service from MenuComponent, to deal with ArrowUp, ArrowDown, Space, Enter.\n     * For ArrowRight, if item is not expanded and has children (list or popup), the open function is triggered.\n     * Otherwise it follows ArrowDown functionality.\n     * For ArrowLeft, if item is expanded and has children (list or popup), the close function is triggered.\n     * Otherwise it follows ArrowUp functionality\n     */\n    private handleKeyDown(keyboardEvent: KeyboardEvent, index: number, items: NestedItemInterface[]): void {\n\n        const item: NestedItemInterface = items[index];\n\n        switch (keyboardEvent.key) {\n            case ('ArrowRight'): {\n                if (!item.expanded && item.hasChildren) {\n                    item.triggerOpen();\n                } else {\n                    if (items.length > index + 1) {\n                        items[index + 1].focus();\n                    } else {\n                        items[0].focus();\n                    }\n                    keyboardEvent.preventDefault();\n                }\n                break;\n            }\n\n            case ('ArrowLeft'): {\n                if (item.expanded && item.hasChildren) {\n                    item.triggerClose();\n                } else {\n                    if (index > 0) {\n                        items[index - 1].focus();\n                    } else {\n                        items[items.length - 1].focus();\n                    }\n                    keyboardEvent.preventDefault();\n                }\n                break;\n            }\n\n            default: {\n                this.keyboardService.keyDownHandler(keyboardEvent, index, items);\n            }\n        }\n\n    }\n\n}\n","import { Directive, ElementRef, HostBinding, Input } from '@angular/core';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\n\n@Directive({\n  selector: '[fdNestedDirectivesHeader], [fd-nested-list-header]'\n})\nexport class NestedListHeaderDirective {\n\n    /** @hidden */\n    @HostBinding('class.fd-nested-list__group-header')\n    fdNestedListHeaderClass: boolean = true;\n\n}\n\n@Directive({\n  selector: '[fdNestedDirectivesIcon], [fd-nested-list-icon]'\n})\nexport class NestedListIconDirective extends AbstractFdNgxClass {\n\n    /** @hidden */\n    @HostBinding('class.fd-nested-list__icon')\n    fdNestedListIconClass: boolean = true;\n\n    /**\n     * The icon name to display. See the icon page for the list of icons\n     * here: https://sap.github.io/fundamental-ngx/icon\n     */\n    @Input() glyph: string;\n\n    /** @hidden */\n    _setProperties() {\n        if (this.glyph) {\n            this._addClassToElement('sap-icon--' + this.glyph);\n        }\n        this._addClassToElement('fd-nested-list__icon');\n    }\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n}\n\n@Directive({\n  selector: '[fdNestedDirectivesTitle], [fd-nested-list-title]'\n})\nexport class NestedListTitleDirective {\n\n    /** @hidden */\n    @HostBinding('class.fd-nested-list__title')\n    fdNestedListTitleClass: boolean = true;\n\n    /** @hidden */\n    constructor (\n        private elementRef: ElementRef\n    ) {}\n\n    /** Returns element's InnerText */\n    public getInnerText(): string {\n        return this.elementRef && this.elementRef.nativeElement.innerText;\n    }\n\n}\n","import { NestedListInterface } from './nested-list/nested-list.interface';\nimport { NestedItemInterface } from './nested-item/nested-item.interface';\nimport { Subject } from 'rxjs';\n\nexport class NestedListStateService {\n\n    /**\n     * @hidden\n     * The condensed state is modified by the parent and read by nested lists.\n     */\n    condensed: boolean = false;\n\n    /**\n     * Event, that is thrown always, when the link's selected state is changed, triggers\n     */\n    readonly refresh$: Subject<void> = new Subject<void>();\n\n    /**\n     * @hidden\n     * Recursive method, that adds selected state to parents, when any of the children is selected\n     */\n    private selected(item: NestedItemInterface): boolean {\n\n        item.allChildrenItems.forEach(_item => _item.linkItem.controlSelected = _item.linkItem.selected);\n\n        const hasChildSelected: boolean = !!item.allChildrenItems.find(\n            _item => (_item.linkItem && _item.linkItem.selected || this.selected(_item))\n        );\n\n        if (hasChildSelected) {\n            item.linkItem.controlSelected = hasChildSelected;\n        }\n        return hasChildSelected;\n    }\n\n    /**\n     * @hidden\n     * Recursive method, that removes all of controlSelected properties.\n     */\n    private resetSelected(item: NestedItemInterface): void {\n        if (item.linkItem) {\n            item.linkItem.controlSelected = false;\n        }\n        item.allChildrenItems.forEach(_item => {\n            this.resetSelected(_item);\n        })\n    }\n\n    /** Method that adds selected state to elements, depending on children from deeper level */\n    public propagateSelected(list: NestedListInterface): void {\n        list.nestedItems.forEach(item => this.resetSelected(item));\n        list.nestedItems.forEach(item => this.selected(item));\n    }\n\n}\n","import {\n    ChangeDetectorRef,\n    ContentChild,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnInit,\n    Output,\n    Renderer2\n} from '@angular/core';\nimport { NestedListTitleDirective } from '../nested-list-directives';\nimport { NestedListStateService } from '../nested-list-state.service';\n\n@Directive({\n    selector: '[fdNestedLink], [fd-nested-list-link]',\n    host: {\n        'tabindex': '0',\n    }\n})\nexport class NestedLinkDirective implements OnInit {\n\n    /** @hidden */\n    @HostBinding('class.fd-nested-list__link')\n    fdNestedListItemClass: boolean = true;\n\n    /**\n     *  @hidden\n     *  Reference to title element, it is used, to get title for condensed mode.\n     */\n    @ContentChild(NestedListTitleDirective, { static: false })\n    title: NestedListTitleDirective;\n\n    /** Event that is thrown, when any keyboard event is dispatched on this element */\n    @Output()\n    readonly keyboardTriggered: EventEmitter<KeyboardEvent> = new EventEmitter<KeyboardEvent>();\n\n    /** Event that is thrown, when this element is clicked */\n    @Output()\n    readonly clicked: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n    /** Whether this element is selected, the `selected` state is propagated to all of parent elements */\n    @Input()\n    set selected(selected: boolean) {\n        if (this._selected !== selected) {\n            this._selected = selected;\n            this.controlSelected = selected;\n            this.nestedListStateService.refresh$.next();\n        }\n    }\n    get selected(): boolean {\n        return this._selected;\n    }\n    _selected: boolean;\n\n    /** Function that is called on click event dispatch on this element. */\n    @Input()\n    onClickCallback: Function;\n\n    /** */\n    @HostBinding('class.is-selected')\n    controlSelected: boolean = this._selected;\n\n    /**\n     * @hidden\n     * Attribute controlled by the parent `NestedItemDirective`\n     */\n    @HostBinding('class.is-expanded')\n    @HostBinding('attr.aria-expanded')\n    expanded: boolean = false;\n\n    /**\n     * @hidden\n     * Attribute controlled by the parent `NestedItemDirective`\n     */\n    @HostBinding('class.has-child')\n    @HostBinding('attr.aria-haspopup')\n    hasChildren: boolean = false;\n\n    /** Set focus on the element. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Dispatches the click event on the element */\n    click(): void {\n        this.elementRef.nativeElement.click();\n    }\n\n    /** @hidden */\n    constructor(\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n        private nestedListStateService: NestedListStateService,\n        public changeDetRef: ChangeDetectorRef\n    ) {}\n\n    /** @hidden */\n    ngOnInit(): void {\n        /** Add event listeners on the element */\n\n        /** Keyboard */\n        this.renderer.listen(this.elementRef.nativeElement, 'keydown', (event) =>\n            this.keyboardTriggered.emit(event)\n        );\n\n        /** Mouse Click */\n        this.renderer.listen(this.elementRef.nativeElement, 'click', (event) => {\n            if (this.onClickCallback) {\n                this.onClickCallback();\n            }\n            this.clicked.emit(event);\n        });\n    }\n\n    /** Returns the title value of the title directive */\n    getTitle(): string {\n        return this.title && this.title.getInnerText();\n    }\n\n}\n","import { Component, ContentChild, HostBinding, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NestedItemDirective } from '../nested-item/nested-item.directive';\nimport { NestedLinkDirective } from '../nested-link/nested-link.directive';\nimport { NestedListKeyboardService } from '../nested-list-keyboard.service';\nimport { PopoverComponent } from '../../popover/popover.component';\n\n@Component({\n    selector: 'fd-nested-list-popover',\n    templateUrl: './nested-list-popover.component.html',\n    styleUrls: ['./nested-list-popover.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NestedListPopoverComponent {\n\n    /** @hidden */\n    @ViewChild(PopoverComponent, { static: false })\n    popoverComponent: PopoverComponent;\n\n    /** @hidden */\n    @HostBinding('class.fd-nested-list__popover')\n    popoverClass: boolean = true;\n\n    /** @hidden */\n    @ContentChild(NestedLinkDirective, { static: false })\n    linkDirective: NestedLinkDirective;\n\n    /** @hidden */\n    constructor(\n        private keyboardNestService: NestedListKeyboardService\n    ) {\n        this.keyboardNestService.refresh$.subscribe(() => {\n            /** Update popover position, on list of hidden items change */\n            if (this.popoverComponent) {\n                this.popoverComponent.updatePopover();\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     * Reference to parent item, to propagate open and close change from popover.\n     */\n    parentItemElement: NestedItemDirective;\n\n    /**\n     * @hidden\n     */\n    open: boolean = false;\n\n    /**\n     * Method called, when open state is changed, from popover component (escape key, outside click).\n     */\n    handleOpenChange(open: boolean): void {\n        this.open = open;\n        if (this.parentItemElement) {\n            if (open) {\n                this.parentItemElement.triggerOpen();\n            } else {\n                this.parentItemElement.triggerClose();\n            }\n        }\n    }\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, forwardRef, Input, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { NestedListDirective } from '../nested-list/nested-list.directive';\nimport { NestedListModel } from '../nested-list-model';\nimport { NestedListStateService } from '../nested-list-state.service';\nimport { NestedItemDirective } from '../nested-item/nested-item.directive';\n\n/**\n * Component for internal usage, allows to generate the nested list from defined object.\n */\n@Component({\n  selector: 'fd-prepared-nested-list',\n  templateUrl: './prepared-nested-list.component.html',\n  styleUrls: ['./prepared-nested-list.component.scss']\n})\nexport class PreparedNestedListComponent implements AfterViewInit {\n\n    /**\n     * @hidden\n     * For internal usage.\n     * Defines if the component is first\n     */\n    @Input()\n    first: boolean = true;\n\n    /**\n     * Defines if list should be displayed in condensed mode\n     */\n    @Input()\n    condensed: boolean = false;\n\n    /**\n     * List configuration\n     */\n    @Input()\n    list: NestedListModel;\n\n    /**\n     * @hidden\n     */\n    @ViewChild(forwardRef(() => NestedListDirective), { static: false })\n    _nestedListDirective: NestedListDirective;\n\n    /**\n     * @hidden\n     */\n    @ViewChildren(forwardRef(() => NestedItemDirective))\n    nestedListItems: QueryList<NestedItemDirective>;\n\n    /**\n     * In prepared nested list, nested items should be taken as reference of View, not Content.\n     * There is direct reference to these directives here.\n     */\n    get nestedListDirective(): NestedListDirective {\n        return Object.assign(this._nestedListDirective, { nestedItems: this.nestedListItems });\n    }\n\n    /** @hidden */\n    constructor (\n        private changeDetRef: ChangeDetectorRef,\n        private stateService: NestedListStateService\n    ) {}\n\n    /** @hidden */\n    ngAfterViewInit(): void {\n        this.stateService.propagateSelected(this.nestedListDirective);\n        this.changeDetRef.markForCheck();\n        this.changeDetRef.detectChanges();\n    }\n}\n","import {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output\n} from '@angular/core';\nimport { NestedLinkDirective } from '../nested-link/nested-link.directive';\nimport { NestedListKeyboardService } from '../nested-list-keyboard.service';\nimport { NestedListPopoverComponent } from '../nested-list-popover/nested-list-popover.component';\nimport { NestedItemInterface } from './nested-item.interface';\nimport { NestedListDirective } from '../nested-list/nested-list.directive';\nimport { PreparedNestedListComponent } from '../prepared-nested-list/prepared-nested-list.component';\n\n@Directive({\n    selector: '[fdNestedItem], [fd-nested-list-item]'\n})\nexport class NestedItemDirective implements AfterContentInit, NestedItemInterface {\n\n    /** @hidden */\n    @HostBinding('class.fd-nested-list__item')\n    fdNestedListItemClass: boolean = true;\n\n    /**\n     * @hidden\n     * Reference to the link directive, to allow manipulating the properties of this element.\n     */\n    @ContentChild(NestedLinkDirective, { static: false })\n    linkItem: NestedLinkDirective;\n\n    /** @hidden */\n    @ContentChild(NestedListPopoverComponent, { static: false })\n    popoverItem: NestedListPopoverComponent;\n\n    /** @hidden */\n    @ContentChild(forwardRef(() => NestedListDirective), { static: false })\n    nestedListItem: NestedListDirective;\n\n    /** @hidden */\n    @ContentChild(forwardRef(() => PreparedNestedListComponent), { static: false })\n    preparedListComponent: PreparedNestedListComponent;\n\n    /** Check if the item element has any child */\n    public get hasChildren(): boolean {\n        return !!(this.nestedListItem || this.popoverItem || this.nestedListFromPreparedComponent);\n    }\n\n    /** Get all of the children item elements */\n    public get allChildrenItems(): NestedItemInterface[] {\n        if (this.nestedListItem && this.nestedListItem.nestedItems) {\n            /** Get elements from child list */\n            return this.nestedListItem.nestedItems.toArray();\n\n        } else if (this.nestedListFromPreparedComponent && this.nestedListFromPreparedComponent.nestedItems) {\n            /** Get elements from child prepared list  component */\n            return this.nestedListFromPreparedComponent.nestedItems.toArray();\n\n        } else {\n            return [];\n        }\n    }\n\n    /** @hidden */\n    constructor (\n        private elementRef: ElementRef,\n        private keyboardService: NestedListKeyboardService\n    ) {}\n\n    /** Whether item should be expanded */\n    @Input() set expanded(expanded: boolean) {\n        this.propagateOpenChange(expanded);\n    }\n\n    /** @hidden */\n    get expanded(): boolean {\n        return this._expanded;\n    }\n\n    /** @hidden */\n    private _expanded: boolean = false;\n\n    /** Event thrown, when expanded state is changed */\n    @Output()\n    readonly expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event thrown, when any keyboard event is dispatched on this, or link element */\n    @Output()\n    readonly keyboardTriggered: EventEmitter<KeyboardEvent> = new EventEmitter<KeyboardEvent>();\n\n    /** @hidden */\n    ngAfterContentInit(): void {\n\n        /** Propagate hasChildren property */\n        if (this.hasChildren && this.linkItem) {\n            this.linkItem.hasChildren = true;\n            this.linkItem.changeDetRef.detectChanges();\n        }\n\n        if (this.linkItem) {\n            /** Subscribe to mouse click event, thrown by link item */\n            this.linkItem.clicked.subscribe(() => this.toggle());\n\n            /** Subscribe to keyboard event and throw it farther */\n            this.linkItem.keyboardTriggered.subscribe(keyboardEvent =>\n                this.keyboardTriggered.emit(keyboardEvent)\n            );\n        }\n\n        /** Pass this element to popover child item, to allow control `expanded` value */\n        if (this.popoverItem) {\n            this.popoverItem.parentItemElement = this;\n        }\n\n        /** Propagate initial open state to children */\n        this.propagateOpenChange(this._expanded);\n    }\n\n    /** Method that expand the item and propagate it to children */\n    triggerOpen(): void {\n        if (!this.expanded) {\n            /** Propagate initial open state to children */\n            this.propagateOpenChange(true);\n        }\n    }\n\n    /** Method that close the item and propagate it to children */\n    triggerClose(): void {\n        if (this.expanded) {\n            /** Propagate initial open state to children */\n            this.propagateOpenChange(false);\n        }\n    }\n\n    /** Method that toggle the item and propagate it to children */\n    toggle(): void {\n        /** Propagate initial open state to children */\n        this.propagateOpenChange(!this._expanded);\n    }\n\n    /** Method that dispatches `click` event on link item*/\n    click(): void {\n        if (this.linkItem) {\n            this.linkItem.click();\n        }\n    }\n\n    /** Method that focuses link item*/\n    focus(): void {\n        if (this.linkItem) {\n            this.linkItem.focus();\n        }\n    }\n\n    /**\n     * @hidden\n     * Propagate open state to all of the children\n     */\n    private propagateOpenChange(open: boolean): void {\n        this._expanded = open;\n\n        if (this.linkItem) {\n            this.linkItem.expanded = open;\n        }\n\n        if (this.nestedListItem) {\n            this.nestedListItem.hidden = !open;\n        }\n\n        if (this.nestedListFromPreparedComponent) {\n            this.nestedListFromPreparedComponent.hidden = !open;\n        }\n\n        if (this.popoverItem) {\n            this.popoverItem.open = open;\n        }\n\n        /** Trigger event to provide keyboard support to new list of opened item element. */\n        this.keyboardService.refresh$.next();\n        this.expandedChange.emit(open);\n    }\n\n    /**\n     * @hidden\n     */\n    private get nestedListFromPreparedComponent(): NestedListDirective {\n        return this.preparedListComponent && this.preparedListComponent.nestedListDirective;\n    }\n\n}\n","import {\n    AfterContentInit,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    Input,\n    QueryList\n} from '@angular/core';\nimport { NestedItemDirective } from '../nested-item/nested-item.directive';\nimport { NestedListInterface } from './nested-list.interface';\nimport { NestedListStateService } from '../nested-list-state.service';\n\n@Directive({\n    selector: '[fdNestedList], [fd-nested-list]'\n})\nexport class NestedListDirective implements AfterContentInit, NestedListInterface {\n\n    /** @hidden */\n    @HostBinding('class.fd-nested-list')\n    fdNestedListItemClass: boolean = true;\n\n    /** In case the user wants to no use icons for items in this list */\n    @Input()\n    @HostBinding('class.fd-nested-list--text-only')\n    textOnly: boolean = false;\n\n    /** In case the user wants put compact mode in this list */\n    @Input()\n    @HostBinding('class.fd-nested-list--compact')\n    compact: boolean = false;\n\n    /**\n     * @hidden\n     * This variable is mostly to keep track of this list's children. There is not usage of it inside this directive,\n     * but it's used by services and NestedItemDirective by itself,\n     */\n    @ContentChildren(forwardRef(() => NestedItemDirective))\n    nestedItems: QueryList<NestedItemDirective>;\n\n    /** @hidden */\n    @HostBinding('attr.aria-hidden')\n    public hidden: boolean = false;\n\n    /** @hidden */\n    constructor(\n        private nestedListStateService: NestedListStateService,\n        private elementRef: ElementRef\n    ) {}\n\n    /** @hidden */\n    ngAfterContentInit(): void {\n        let nestedLevel: number = this.getNestedLevel();\n        /** If there is condensed mode, maximum 2nd level class of nest can be added */\n        if (this.nestedListStateService.condensed) {\n            nestedLevel = Math.min(...[nestedLevel, 2]);\n        }\n        this.handleNestedLevel(nestedLevel);\n    }\n\n    /** @hidden */\n    private handleNestedLevel(level: number): void {\n        /** Adding class with the nested level */\n        this.elementRef.nativeElement.classList.add('level-' + level);\n    }\n\n    /**\n     * @hidden\n     * Method, that checks how deep is the list element\n     */\n    private getNestedLevel(): number {\n        let element = this.elementRef.nativeElement;\n        const parentElements = [];\n\n        /** Method that gathers all of the parentNode elements of current NestedListDirective element */\n        while (element.parentNode) {\n            parentElements.unshift(element);\n            element = element.parentNode;\n        }\n\n        /** Filter only elements, that has `fd-nested-list` directive attribute */\n        const filteredParentElements = parentElements.filter(_element => _element.hasAttribute('fd-nested-list'));\n        return filteredParentElements.length;\n    }\n}\n","import { ContentChild, Directive, HostBinding } from '@angular/core';\nimport { NestedListDirective } from '../nested-list/nested-list/nested-list.directive';\n\n@Directive({\n    selector: '[fdSideNavigationUtility], [fd-side-nav-utility]'\n})\nexport class SideNavigationUtilityDirective {\n\n    /** @hidden */\n    @ContentChild(NestedListDirective, { static: false })\n    list: NestedListDirective;\n\n    /** @hidden */\n    @HostBinding('class.fd-side-nav__utility')\n    classSideNavUtility: boolean = true;\n}\n","import { ContentChild, Directive, HostBinding } from '@angular/core';\nimport { NestedListDirective } from '../nested-list/nested-list/nested-list.directive';\n\n@Directive({\n    selector: '[fdSideNavigationMain], [fd-side-nav-main]'\n})\nexport class SideNavigationMainDirective {\n\n    /** @hidden */\n    @ContentChild(NestedListDirective, { static: false })\n    list: NestedListDirective;\n\n    /** @hidden */\n    @HostBinding('class.fd-side-nav__main-navigation')\n    classSideNavMainNavigation: boolean = true;\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    HostBinding,\n    Input,\n    OnInit,\n    QueryList,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NestedListDirective } from '../nested-list/nested-list/nested-list.directive';\nimport { NestedListKeyboardService } from '../nested-list/nested-list-keyboard.service';\nimport { SideNavigationUtilityDirective } from './side-navigation-utility.directive';\nimport { SideNavigationMainDirective } from './side-navigation-main.directive';\nimport { SideNavigationModel } from './side-navigation-model';\nimport { PreparedNestedListComponent } from '../nested-list/prepared-nested-list/prepared-nested-list.component';\nimport { NestedListStateService } from '../nested-list/nested-list-state.service';\n\n/**\n * The side-navigation is a wrapping component representing\n * a left navigation that can always display or expand/collapse using the menu icon within the global navigation.\n */\n@Component({\n    templateUrl: './side-navigation.component.html',\n    selector: 'fd-side-nav',\n    styleUrls: ['side-navigation.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [ NestedListKeyboardService, NestedListStateService ]\n})\nexport class SideNavigationComponent implements AfterContentInit, OnInit {\n\n    /**\n     * Side navigation configuration, to pass whole model object, instead of creating HTML from scratch\n     */\n    @Input()\n    sideNavigationConfiguration: SideNavigationModel;\n\n    /** Whether condensed mode is included */\n    @Input()\n    @HostBinding('class.fd-side-nav--condensed')\n    condensed: boolean = false;\n\n    /** @hidden */\n    @ContentChild(SideNavigationUtilityDirective, { static: false })\n    sideNavUtility: SideNavigationUtilityDirective;\n\n    /** @hidden */\n    @ContentChild(SideNavigationMainDirective, { static: false })\n    sideNavMain: SideNavigationMainDirective;\n\n    @ViewChildren(PreparedNestedListComponent)\n    preparedNestedList: QueryList<PreparedNestedListComponent>;\n\n    /** @hidden */\n    constructor(\n        private keyboardService: NestedListKeyboardService,\n        private nestedListState: NestedListStateService\n    ) {\n        this.keyboardService.refresh$.subscribe(() =>\n            /** Refresh list of elements, that are being supported by keyboard */\n            this.keyboardService.refreshItems(this.getLists())\n        );\n    }\n\n    /** @hidden */\n    ngOnInit(): void {\n        /** Set up condensed state */\n        this.nestedListState.condensed = this.condensed ||\n            (this.sideNavigationConfiguration && this.sideNavigationConfiguration.condensed)\n        ;\n    }\n\n    /** @hidden */\n    ngAfterContentInit(): void {\n        this.keyboardService.refreshItems(this.getLists());\n        this.getLists().forEach(list => this.nestedListState.propagateSelected(list));\n\n        this.nestedListState.refresh$.subscribe(() =>\n            /** Refresh selected state for links */\n            this.getLists().forEach(list => this.nestedListState.propagateSelected(list))\n        );\n    }\n\n    /**\n     * @hidden\n     * Method that returns 1 deep level of lists.\n     */\n    private getLists(): NestedListDirective[] {\n\n        const lists: NestedListDirective[] = [];\n\n        if (this.sideNavMain) {\n            lists.push(this.sideNavMain.list);\n        }\n        if (this.sideNavUtility) {\n            lists.push(this.sideNavUtility.list);\n        }\n        if (this.preparedNestedList) {\n            lists.push(...this.preparedNestedList.map(preparedNested => preparedNested.nestedListDirective));\n        }\n\n        return lists;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { NestedListDirective } from './nested-list/nested-list.directive';\nimport { NestedLinkDirective } from './nested-link/nested-link.directive';\nimport { NestedItemDirective } from './nested-item/nested-item.directive';\nimport { NestedListHeaderDirective, NestedListIconDirective, NestedListTitleDirective } from './nested-list-directives';\nimport { MenuKeyboardService } from '../menu/menu-keyboard.service';\nimport { CommonModule } from '@angular/common';\nimport { NestedListKeyboardService } from './nested-list-keyboard.service';\nimport { PopoverModule } from '../popover/popover.module';\nimport { NestedListPopoverComponent } from './nested-list-popover/nested-list-popover.component';\nimport { PreparedNestedListComponent } from './prepared-nested-list/prepared-nested-list.component';\nimport { NestedListStateService } from './nested-list-state.service';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PopoverModule,\n        RouterModule\n    ],\n    declarations: [\n        NestedListDirective,\n        NestedLinkDirective,\n        NestedItemDirective,\n        NestedListIconDirective,\n        NestedListTitleDirective,\n        NestedListHeaderDirective,\n        NestedListPopoverComponent,\n        PreparedNestedListComponent,\n    ],\n    exports: [\n        NestedListDirective,\n        NestedLinkDirective,\n        NestedItemDirective,\n        NestedListIconDirective,\n        NestedListTitleDirective,\n        NestedListHeaderDirective,\n        NestedListPopoverComponent,\n        PreparedNestedListComponent,\n    ],\n    providers: [\n        MenuKeyboardService,\n        NestedListKeyboardService,\n        NestedListStateService\n    ]\n})\nexport class NestedListModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SideNavigationComponent } from './side-navigation.component';\nimport { SideNavigationMainDirective } from './side-navigation-main.directive';\nimport { SideNavigationUtilityDirective } from './side-navigation-utility.directive';\nimport { NestedListModule } from '../nested-list/nested-list.module';\n\n@NgModule({\n    imports: [CommonModule, NestedListModule],\n    exports: [\n        SideNavigationComponent,\n        SideNavigationMainDirective,\n        SideNavigationUtilityDirective,\n    ],\n    declarations: [\n        SideNavigationComponent,\n        SideNavigationMainDirective,\n        SideNavigationUtilityDirective,\n    ]\n})\nexport class SideNavigationModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    OnInit,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\n\n/**\n * Used to represent an option of the select component.\n */\n@Component({\n    selector: 'fd-option',\n    templateUrl: './option.component.html',\n    styleUrls: ['./option.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[class.fd-option-default-custom]': 'true',\n        '[attr.aria-disabled]': 'disabled',\n        '[tabindex]': 'disabled ? -1 : 0',\n        'role': 'option',\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OptionComponent implements OnInit {\n\n    /** @hidden */\n    @HostBinding('class.fd-menu__item')\n    fdMenuItemClass: boolean = true;\n\n    /** @hidden */\n    @HostBinding('class.is-selected')\n    selected: boolean = false;\n\n    /** Value of the option. Similar to how a native select operates. */\n    @Input()\n    value: any;\n\n    /** Whether to disable this option specifically. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Override for the view value of the option. If none is provided, the text content is used. */\n    @Input()\n    viewValue: string;\n\n    /** Emitted when the selected state changes. */\n    @Output()\n    readonly selectedChange: EventEmitter<OptionComponent>\n        = new EventEmitter<OptionComponent>();\n\n    /** @hidden */\n    constructor(private elRef: ElementRef) {}\n\n\n    /** @hidden */\n    ngOnInit(): void {\n        if (this.selected && !this.disabled) {\n            this.focus();\n        }\n    }\n\n    /** Returns the view value text of the option, or the viewValue input if it exists. */\n    get viewValueText(): string {\n        return this.viewValue ? this.viewValue :\n            ((this.elRef.nativeElement as HTMLElement).textContent || '').trim();\n    }\n\n    /** Returns the view value text of the option, or the viewValue input if it exists. */\n    setSelected(value: boolean, fireEvent: boolean = true): void {\n        this.selected = value;\n\n        if (fireEvent) {\n            this.selectedChange.emit(this);\n        }\n    }\n\n    /** Focuses the element. */\n    focus(): void {\n        (this.elRef.nativeElement as HTMLElement).focus();\n    }\n\n    /** Returns HTMLElement representation of the component. */\n    getHtmlElement(): HTMLElement {\n        return this.elRef.nativeElement as HTMLElement;\n    }\n\n    /** @hidden */\n    @HostListener('keydown.enter')\n    @HostListener('click')\n    selectionHandler(): void {\n        if (!this.selected && !this.disabled) {\n            this.selected = true;\n            this.selectedChange.emit(this);\n        }\n    }\n\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    HostListener,\n    Input,\n    OnChanges,\n    OnInit,\n    OnDestroy,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { OptionComponent } from './option/option.component';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport { startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { PopperOptions } from 'popper.js';\nimport { PopoverFillMode } from '../popover/popover-directive/popover.directive';\n\ntype SelectType = 'noborder' | 'splitborder';\n\n/**\n * Select component intended to mimic the behaviour of the native select element.\n */\n@Component({\n    selector: 'fd-select',\n    templateUrl: './select.component.html',\n    styleUrls: ['./select.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SelectComponent),\n            multi: true\n        }\n    ],\n    host: {\n        '[class.fd-select-custom]': 'true',\n        role: 'listbox'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SelectComponent implements OnChanges, AfterContentInit, OnInit, OnDestroy, ControlValueAccessor {\n    /** @hidden */\n    @HostBinding('class.fd-dropdown')\n    fdDropdownClass: boolean = true;\n\n    /** @hidden */\n    @ContentChildren(OptionComponent, { descendants: true })\n    options: QueryList<OptionComponent>;\n\n    /** Whether the select component is disabled. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Placeholder for the select. Appears in the triggerbox if no option is selected. */\n    @Input()\n    placeholder: string;\n\n    /** Open state of the select. */\n    @Input()\n    isOpen: boolean = false;\n\n    /** Current value of the selected option. */\n    @Input()\n    value: any;\n\n    /** Whether the select is in compact mode. */\n    @Input()\n    compact: boolean = false;\n\n    /** Max height of the popover. Any overflowing elements will be accessible through scrolling. */\n    @Input()\n    maxHeight: string;\n\n    /** Select type defines the border type of the select button. */\n    @Input()\n    selectType: SelectType;\n\n    /** Glyph to add icon in the select component. */\n    @Input()\n    glyph: string;\n\n    /** Popper.js options of the popover. */\n    @Input()\n    popperOptions: PopperOptions = {\n        placement: 'bottom-start',\n        modifiers: {\n            preventOverflow: {\n                enabled: true,\n                escapeWithReference: true,\n                boundariesElement: 'scrollParent'\n            }\n        }\n    };\n\n    /**\n     * Preset options for the popover body width.\n     * * `at-least` will apply a minimum width to the body equivalent to the width of the control.\n     * * `equal` will apply a width to the body equivalent to the width of the control.\n     * * Leave blank for no effect.\n     */\n    @Input()\n    fillControlMode: PopoverFillMode = 'at-least';\n\n    /** Template with which to display the trigger box. */\n    @Input()\n    triggerTemplate: TemplateRef<any>;\n\n    /** The element to which the popover should be appended. */\n    @Input()\n    appendTo: HTMLElement | 'body';\n\n    /**\n     * If the option should be unselected and value changed to undefined, when the current value is\n     * not presented in option array. Switching it off can be handy, when there is some delay between providing\n     * possible options and chosen value.\n     */\n    @Input()\n    unselectMissingOption: boolean = true;\n    /** If user wants to disable clicking when the content has not yet loaded and apply the three dots. */\n    @Input() loading: boolean = false;\n\n    /** Event emitted when the popover open state changes. */\n    @Output()\n    readonly isOpenChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the selected value of the select changes. */\n    @Output()\n    readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    /** @hidden */\n    calculatedMaxHeight: number;\n\n    /** Current selected option component reference. */\n    private selected: OptionComponent;\n\n    /** Subject triggered when the component is destroyed. */\n    private readonly destroy$: Subject<void> = new Subject<void>();\n\n    /** Observable triggered when an option has its selectedChange event fire. */\n    private readonly optionsStatusChanges: Observable<OptionComponent> = defer(() => {\n        const options = this.options;\n        if (options) {\n            return options.changes.pipe(\n                startWith(options),\n                switchMap(() => merge(...options.map(option => option.selectedChange)))\n            );\n        }\n    }) as Observable<OptionComponent>;\n\n    /** @hidden */\n    onChange: Function = () => { };\n\n    /** @hidden */\n    onTouched: Function = () => { };\n\n    constructor(private changeDetectorRef: ChangeDetectorRef) { }\n\n    /** @hidden */\n    isOpenChangeHandle(isOpen: boolean): void {\n        this.isOpen = isOpen;\n        this.isOpenChange.emit(isOpen);\n        this.resizeScrollHandler();\n    }\n\n    /** @hidden */\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.value) {\n            setTimeout(() => {\n                if (this.value) {\n                    this.selectValue(this.value, false);\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngOnInit() {\n        // console.log(this.loading);\n    }\n\n    /** @hidden */\n    ngAfterContentInit(): void {\n        // If the observable state changes, reset the options and initialize selection.\n        this.options.changes.pipe(startWith(null), takeUntil(this.destroy$)).subscribe(() => {\n            this.resetOptions();\n            this.initSelection();\n        });\n    }\n\n    /** @hidden */\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    /** Toggles the open state of the select. */\n    toggle(): void {\n        if (this.isOpen && !this.disabled) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the select popover body. */\n    open(): void {\n        if (!this.isOpen && !this.disabled) {\n            this.isOpen = true;\n            this.isOpenChange.emit(this.isOpen);\n        }\n    }\n\n    /** Closes the select popover body. */\n    close(): void {\n        if (this.isOpen && !this.disabled) {\n            this.isOpen = false;\n            this.isOpenChange.emit(this.isOpen);\n        }\n    }\n\n    /** @hidden */\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    /** @hidden */\n    writeValue(value: any): void {\n        if (this.options) {\n            this.selectValue(value, false);\n            this.changeDetectorRef.detectChanges();\n        } else {\n            // Defer the selection of the value to support forms\n            Promise.resolve().then(() => {\n                if (this.options) {\n                    this.selectValue(value, false);\n                    this.changeDetectorRef.detectChanges();\n                }\n            });\n        }\n    }\n\n    /** Returns the current trigger value if there is a selected option. Otherwise, returns the placeholder. */\n    get triggerValue(): string {\n        return this.selected ? this.selected.viewValueText : this.placeholder;\n    }\n\n    /** @hidden */\n    @HostListener('keydown', ['$event'])\n    keydownHandler(event: KeyboardEvent): void {\n        switch (event.code) {\n            case 'ArrowUp': {\n                event.preventDefault();\n                this.decrementFocused();\n                break;\n            }\n            case 'ArrowDown': {\n                event.preventDefault();\n                this.incrementFocused();\n                break;\n            }\n        }\n    }\n\n    /** @hidden */\n    @HostListener('window:resize')\n    resizeScrollHandler() {\n        this.calculatedMaxHeight = window.innerHeight * 0.45;\n    }\n\n    /**\n     * Selects an option by option component reference. Preferred method of selection.\n     * @param option The option component to search for.\n     * @param fireEvents Whether to fire change events.\n     */\n    private selectOption(option: OptionComponent, fireEvents: boolean = true): OptionComponent | undefined {\n        if (!this.isOptionActive(option)) {\n            if (this.selected) {\n                this.selected.setSelected(false, false);\n            }\n            option.setSelected(true, false);\n            this.selected = option;\n            this.updateValue(fireEvents);\n            this.close();\n            return option;\n        }\n        return;\n    }\n\n    /**\n     * Selects an option by value. If two components have the same value, the first one found is selected.\n     * Recommend using selectOption generally.\n     * @param value Value to search for.\n     * @param fireEvents Whether to fire change events.\n     */\n    private selectValue(value: any, fireEvents: boolean = true): OptionComponent | undefined {\n        const matchOption = this.options.find((option: OptionComponent) => {\n            return option.value != null && option.value === value;\n        });\n\n        // If not match is found, set everything to null\n        // This is mostly only for cases where a user removes an active option\n        if (!matchOption && this.unselectMissingOption) {\n            this.unselectOptions();\n            return;\n        }\n\n        // If match is found, select the new value\n        if (matchOption && !this.isOptionActive(matchOption)) {\n            if (this.selected) {\n                this.selected.setSelected(false, false);\n            }\n            matchOption.setSelected(true, false);\n            this.selected = matchOption;\n\n            this.updateValue(fireEvents);\n            this.close();\n        }\n\n        return matchOption;\n    }\n\n    /**\n     * Updates the value parameter with optional events.\n     * @param fireEvents If true, function fires valueChange, onChange and onTouched events.\n     */\n    private updateValue(fireEvents: boolean = true): void {\n        this.value = this.selected.value;\n        if (fireEvents) {\n            this.valueChange.emit(this.value);\n            this.onChange(this.value);\n            this.onTouched();\n        }\n    }\n\n    /**\n     * Function used to reset the options state.\n     */\n    private resetOptions(): void {\n        // Create observable that fires when the options change or the component is destroyed.\n        const destroyCurrentObs = merge(this.options.changes, this.destroy$);\n\n        // Subscribe to observable defined in component properties which fires when an option is clicked.\n        // Destroy if the observable defined above triggers.\n        this.optionsStatusChanges.pipe(takeUntil(destroyCurrentObs)).subscribe((instance: OptionComponent) => {\n            this.selectOption(instance);\n        });\n    }\n\n    /** Selection initialization when a change occurs in options. */\n    private initSelection(): void {\n        if (this.value) {\n            this.selected = undefined;\n            this.selectValue(this.value, false);\n        }\n    }\n\n    /**\n     * Function that tests whether the tested option is currently selected.\n     * @param option Option to test against the selected option.\n     */\n    private isOptionActive(option: OptionComponent): boolean {\n        return option && this.selected && option === this.selected;\n    }\n\n    /** Method that focuses the next option in the list, or the first one if the last one is currently focused. */\n    private incrementFocused(): void {\n        // Get active focused element\n        const activeElement = document.activeElement;\n\n        // Get corresponding option element to the above\n        const correspondingOption = this.options.find(option => {\n            return option.getHtmlElement() === activeElement;\n        });\n\n        if (correspondingOption) {\n            const arrayOptions = this.options.toArray();\n            const index = arrayOptions.indexOf(correspondingOption);\n\n            // If active option is the last option, focus the first one\n            // Otherwise, focus the next option.\n            if (index === this.options.length - 1) {\n                arrayOptions[0].focus();\n            } else {\n                arrayOptions[index + 1].focus();\n            }\n        } else if (this.options) {\n            this.options.first.focus();\n        }\n    }\n\n    /** Method that focuses the previous option in the list, or the last one if the last one is currently focused. */\n    private decrementFocused(): void {\n        // Get active focused element\n        const activeElement = document.activeElement;\n\n        // Get corresponding option element to the above\n        const correspondingOption = this.options.find(option => {\n            return option.getHtmlElement() === activeElement;\n        });\n\n        // If active option is the first option, focus the last one\n        // Otherwise, focus the previous option.\n        if (correspondingOption) {\n            const arrayOptions = this.options.toArray();\n            const index = arrayOptions.indexOf(correspondingOption);\n\n            if (index === 0) {\n                arrayOptions[this.options.length - 1].focus();\n            } else {\n                arrayOptions[index - 1].focus();\n            }\n        } else if (this.options) {\n            this.options.first.focus();\n        }\n    }\n\n    /**\n     * Method used to handle cases where a user removes the currently active option.\n     * The timeout is required because this can happen after the view has been checked.\n     */\n    private unselectOptions(): void {\n        setTimeout(() => {\n            if (this.selected) {\n                this.selected.setSelected(false, false);\n            }\n            this.selected = undefined;\n            this.value = undefined;\n            this.valueChange.emit(undefined);\n            this.onChange(undefined);\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { SelectComponent } from './select.component';\nimport { OptionComponent } from './option/option.component';\nimport { PopoverModule } from '../popover/popover.module';\nimport { MenuModule } from '../menu/menu.module';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from '../button/button.module';\nimport { IconModule } from '../icon/icon.module';\nimport { LoadingSpinnerModule } from '../loading-spinner/loading-spinner.module';\nimport { BusyIndicatorModule } from '../busy-indicator/busy-indicator.module';\n\n@NgModule({\n    declarations: [\n        SelectComponent,\n        OptionComponent\n    ],\n    exports: [\n        SelectComponent,\n        OptionComponent\n    ],\n    imports: [\n        BusyIndicatorModule,\n        CommonModule,\n        PopoverModule,\n        MenuModule,\n        ButtonModule,\n        IconModule,\n        LoadingSpinnerModule\n    ]\n})\nexport class SelectModule { }\n","import { Directive, EmbeddedViewRef, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**\n * Directive used to identify the template which will populate the main action button.\n * Used to achieve complex buttons that require more than a string.\n *```html\n *    <fd-button-split>\n *        <ng-template fd-button-split-action-title>\n *            <p>Paragraph 1</p>\n *            <p>Paragraph 2</p>\n *        </ng-template>\n *        <div fd-button-split-menu>\n *            <fd-menu>\n *                <ul fd-menu-list>\n *                    <li fd-menu-item>\n *                       <a [routerLink]=\"'/'\">option</a>\n *                    </li>\n *                    <li fd-menu-item>\n *                       <a [routerLink]=\"'/'\">option2</a>\n *                    </li>\n *                </ul>\n *            </fd-menu>\n *        </div>\n *    </fd-button-split>\n *</fd-button-split>\n *```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-split-button-action-title]'\n})\nexport class SplitButtonActionTitle {}\n\n\n/**\n *   Directive used to specify menu list of items for dropdown.\n *```html\n *    <fd-button-split>\n *        Action Button\n *        <div fd-button-split-menu>\n *            <fd-menu>\n *                <ul fd-menu-list>\n *                    <li fd-menu-item>\n *                       <a [routerLink]=\"'/'\">option</a>\n *                    </li>\n *                    <li fd-menu-item>\n *                       <a [routerLink]=\"'/'\">option2</a>\n *                    </li>\n *                </ul>\n *            </fd-menu>\n *        </div>\n *    </fd-button-split>\n *</fd-button-split>\n *```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-split-button-menu]',\n})\nexport class SplitButtonMenuDirective {}\n\n\n\n/**\n * Not for external use. Portal to render the complex title template.\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-split-button-load-action-title]'\n})\nexport class SplitButtonLoadActionTitle implements OnInit {\n    @Input('fd-split-button-load-action-title')\n    content: TemplateRef<any>;\n\n    private contentRef: EmbeddedViewRef<any>;\n\n    constructor(private viewRef: ViewContainerRef) {}\n\n    ngOnInit(): void {\n        this.viewRef.clear();\n        this.contentRef = this.viewRef.createEmbeddedView(this.content);\n    }\n}\n","import { ChangeDetectionStrategy, Component, ContentChild, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { SplitButtonActionTitle } from './split-button-utils/split-button.directives';\nimport { PopoverFillMode } from '../popover/popover-directive/popover.directive';\nimport { ButtonOptions, ButtonType } from '../button/button.component';\n\n/**\n * Split Button component, used to enhance standard HTML button and add possibility to put some dropdown with\n * additional options.\n *\n * ```html\n *    <fd-split-button>\n *        Action Button\n *        <div fd-split-button-menu>\n *            <fd-menu>\n *                <ul fd-menu-list>\n *                    <li fd-menu-item>\n *                       <a [routerLink]=\"'/'\">option</a>\n *                    </li>\n *                    <li fd-menu-item>\n *                       <a [routerLink]=\"'/'\">option2</a>\n *                    </li>\n *                </ul>\n *            </fd-menu>\n *        </div>\n *    </fd-split-button>\n * ```\n */\n@Component({\n    selector: 'fd-split-button',\n    templateUrl: 'split-button.component.html',\n    styleUrls: ['./split-button.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SplitButtonComponent {\n\n    /** @hidden */\n    @ContentChild(SplitButtonActionTitle, { read: TemplateRef, static: false })\n    titleTemplate: TemplateRef<any>;\n\n    /** The trigger events that will open/close the popover.\n     *  Accepts any [HTML DOM Events](https://www.w3schools.com/jsref/dom_obj_event.asp). */\n    @Input()\n    triggers: string[] = ['click'];\n\n    /** Whether the popover should close when a click is made outside its boundaries. */\n    @Input()\n    closeOnOutsideClick: boolean = true;\n\n    /** Whether the popover should close when the escape key is pressed. */\n    @Input()\n    closeOnEscapeKey: boolean = true;\n\n    /** Whether the popover should be focusTrapped. */\n    @Input()\n    focusTrapped: boolean = false;\n\n    /** Whether to apply compact mode to the button. */\n    @Input()\n    compact: boolean;\n\n    /** The icon to include in the button. See the icon page for the list of icons. */\n    @Input()\n    glyph: string = 'slim-arrow-down';\n\n    /** The icon to include in the button. See the icon page for the list of icons. */\n    @Input()\n    disabled: boolean;\n\n    /** The Title for main  action button */\n    @Input()\n    mainActionTitle: string;\n\n    /** The type of the button. Types include 'standard', 'positive', 'medium', and 'negative'.\n     * Leave empty for default (Action button).'*/\n    @Input()\n    fdType: ButtonType;\n\n    /** Button options.  Options include 'emphasized' and 'light'. Leave empty for default.' */\n    @Input()\n    options: ButtonOptions | ButtonOptions[];\n\n    /**\n     * Preset options for the popover body width.\n     * * `at-least` will apply a minimum width to the body equivalent to the width of the control.\n     * * `equal` will apply a width to the body equivalent to the width of the control.\n     * * Leave blank for no effect.\n     */\n    @Input()\n    fillControlMode: PopoverFillMode = 'at-least';\n\n    /** @hidden */\n    @Input()\n    isOpen: boolean = false;\n\n    /** Event sent when is open popover changed */\n    @Output()\n    readonly isOpenChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event sent when primary button is clicked */\n    @Output()\n    readonly primaryButtonClicked: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /**\n     *  Handles primary button click\n     *  */\n    public buttonClick($event) {\n        this.primaryButtonClicked.emit();\n        $event.stopPropagation();\n    }\n\n    /**\n     * Toggles the popover open state.\n     */\n    public toggle(): void {\n        if (this.isOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /**\n     * Closes the popover.\n     */\n    public close(): void {\n        if (this.isOpen) {\n            this.isOpen = false;\n            this.isOpenChange.emit(this.isOpen);\n        }\n    }\n\n    /**\n     * Opens the popover.\n     */\n    public open(): void {\n        if (!this.isOpen) {\n            this.isOpen = true;\n            this.isOpenChange.emit(this.isOpen);\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SplitButtonComponent } from './split-button.component';\nimport { ButtonModule } from '../button/button.module';\nimport { PopoverModule } from '../popover/popover.module';\nimport { SplitButtonActionTitle, SplitButtonLoadActionTitle, SplitButtonMenuDirective } from './split-button-utils/split-button.directives';\n\n@NgModule({\n    imports: [CommonModule, ButtonModule, PopoverModule],\n    declarations: [SplitButtonComponent, SplitButtonMenuDirective, SplitButtonActionTitle, SplitButtonLoadActionTitle],\n    exports: [SplitButtonComponent, SplitButtonMenuDirective, SplitButtonActionTitle, SplitButtonLoadActionTitle]\n})\nexport class SplitButtonModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n/**\n * The component that represents a table.\n * A table is a set of tabular data. Line items can support data, images and actions.\n * ```html\n * <table fd-table></table>\n * ```\n */\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: 'table[fd-table]',\n    exportAs: 'fd-table',\n    template: `<ng-content></ng-content>`,\n    styleUrls: ['./table.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-table')\n    fdTableClass: boolean = true;\n\n}\n","import { Directive, Input } from '@angular/core';\n\n/**\n * Directive used to achieve column sorting.\n * The directive is placed on the the desired column(s) to sort,\n */\n@Directive({\n    selector: '[fdColumnSortable]',\n    host: {\n        class: 'fd-table__sort-column',\n        '[class.fd-table__sort-column--dsc]': 'sortDir === \"desc\" || sortDir === \"dsc\"',\n        '[class.fd-table__sort-column--asc]': 'sortDir === \"asc\"'\n    }\n})\nexport class ColumnSortableDirective {\n\n    /** \n     * The sorting direction. \n     * Options include *asc*, *dsc*, *desc*, and *none*\n     */\n    @Input() sortDir: SortDirections;\n\n}\nexport type SortDirections = 'asc' | 'dsc' | 'desc' | 'none';\n","import { Directive } from '@angular/core';\n/**\n * The directive that represents a table.\n * A table is a set of tabular data. Line items can support data, images and actions.\n * ```html\n *     <div fd-table-responsive-wrapper>\n *         <table fd-table>\n *         </table>\n *     </div>\n * ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-table-responsive-wrapper]',\n    host: {\n        style: 'overflow-x: auto'\n    }\n})\nexport class TableResponsiveWrapperDirective {}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[fdTableHeader], [fd-table-header]'\n})\nexport class TableHeaderDirective {\n    /** @hidden */\n    @HostBinding('class.fd-table__header')\n    fdTableHeaderClass: boolean = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[fdTableBody], [fd-table-body]'\n})\nexport class TableBodyDirective {\n    /** @hidden */\n    @HostBinding('class.fd-table__body')\n    fdTableBodyClass: boolean = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[fdTableRow], [fd-table-row]'\n})\nexport class TableRowDirective {\n    /** @hidden */\n    @HostBinding('class.fd-table__row')\n    fdTableRowClass: boolean = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[fdTableCell], [fd-table-cell]'\n})\nexport class TableCellDirective {\n    /** @hidden */\n    @HostBinding('class.fd-table__cell')\n    fdTableCellClass: boolean = true;\n}\n","import { AfterContentInit, ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\n/**\n * The component that represents a table wrapper, it will add fd-table class to its first child.\n * A table is a set of tabular data. Line items can support data, images and actions.\n * ```html\n * <table-wrapper>\n * <table></table>\n * </table-wrapper>\n * ```\n */\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: 'fd-table-wrapper',\n    template: `<ng-content></ng-content>`,\n    styleUrls: ['./table.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableWrapperComponent implements AfterContentInit {\n\n    constructor(\n        private elementRef: ElementRef\n    ) {}\n\n    public ngAfterContentInit(): void {\n        if (this.elementRef.nativeElement && this.elementRef.nativeElement.firstChild) {\n            this.elementRef.nativeElement.firstChild.classList.add('fd-table')\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TableComponent } from './table.component';\nimport { ColumnSortableDirective } from './column-sortable.directive';\nimport { TableResponsiveWrapperDirective } from './table-responsive-wrapper.directive';\nimport { TableHeaderDirective } from './directives/table-header.directive';\nimport { TableBodyDirective } from './directives/table-body.directive';\nimport { TableRowDirective } from './directives/table-row.directive';\nimport { TableCellDirective } from './directives/table-cell.directive';\nimport { TableWrapperComponent } from './table-wrapper.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        TableComponent,\n        TableResponsiveWrapperDirective,\n        ColumnSortableDirective,\n        TableWrapperComponent,\n        TableHeaderDirective,\n        TableBodyDirective,\n        TableRowDirective,\n        TableCellDirective\n    ],\n    exports: [\n        TableComponent,\n        TableResponsiveWrapperDirective,\n        ColumnSortableDirective,\n        TableWrapperComponent,\n        TableHeaderDirective,\n        TableBodyDirective,\n        TableRowDirective,\n        TableCellDirective\n    ]\n})\nexport class TableModule {}\n","import { Directive, EmbeddedViewRef, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**\n * Directive used to identify the template which will populate the tab header.\n * Used to achieve complex headers that require more than a string.\n *\n * ```html\n * <fd-tab>\n *      <ng-template fd-tab-title>\n *          <fd-icon [glyph]=\"'delete'\"></fd-icon>\n *          <span>Tab Label</span>\n *      </ng-template>\n * </fd-tab>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-tab-title]'\n})\nexport class TabTitleDirective {\n}\n\n/**\n * Not for external use. Portal to render the complex title template.\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-tab-load-title]'\n})\nexport class TabLoadTitleDirective implements OnInit {\n    @Input('fd-tab-load-title')\n    content: TemplateRef<any>;\n\n    private contentRef: EmbeddedViewRef<any>;\n\n    constructor(private viewRef: ViewContainerRef) {}\n\n    ngOnInit(): void {\n        this.viewRef.clear();\n        this.contentRef = this.viewRef.createEmbeddedView(this.content);\n    }\n}\n","import { ChangeDetectionStrategy, Component, ContentChild, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { TabTitleDirective } from '../tab-utils/tab-directives';\n\nlet tabPanelUniqueId: number = 0;\n\n/**\n * Represents the body of a tab element. It also contains elements pertaining to the associated tab header.\n */\n@Component({\n    selector: 'fd-tab',\n    templateUrl: './tab-panel.component.html',\n    host: {\n        role: 'tabpanel',\n        class: 'fd-tabs__panel',\n        '[attr.id]': 'id',\n        '[attr.aria-expanded]': 'expanded ? true : null',\n        '[class.is-expanded]': 'expanded'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class TabPanelComponent {\n\n    /** @hidden */\n    @ContentChild(TabTitleDirective, { read: TemplateRef, static: false })\n    titleTemplate: TemplateRef<any>;\n\n    /** The title of the tab header. */\n    @Input()\n    title: string;\n\n    /** Aria-label of the tab. Also applied to the tab header. */\n    @Input()\n    ariaLabel: string;\n\n    /** Id of the element that labels the tab. Also applied to the tab header. */\n    @Input()\n    ariaLabelledBy: string;\n\n    /** Whether the tab is disabled. */\n    @Input()\n    disabled: boolean;\n\n    /** Id of the tab. If none is provided, one will be generated. */\n    @Input()\n    id: string = 'fd-tab-panel' + tabPanelUniqueId++;\n\n    /** @hidden */\n    expanded = false;\n\n    /** @hidden */\n    index: number;\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n/**\n * Service that is responsible for providing keyboard actions support\n * */\n@Injectable()\nexport class TabsService {\n\n    /** Event is thrown always when tab is selected by keyboard actions */\n    public tabSelected = new Subject<number>();\n\n    /** @hidden */\n    tabHeaderKeyHandler(index: number, event: any, elements: HTMLElement[]): void {\n        switch (event.key) {\n            case ('ArrowLeft'): {\n                if (index - 1 >= 0) {\n                    this.getTabLinkFromIndex(index - 1, elements).focus();\n                } else {\n                    this.getTabLinkFromIndex(elements.length - 1, elements).focus();\n                }\n                break;\n            }\n            case ('ArrowRight'): {\n                if (index + 1 < elements.length) {\n                    this.getTabLinkFromIndex(index + 1, elements).focus();\n                } else {\n                    this.getTabLinkFromIndex(0, elements).focus();\n                }\n                break;\n            }\n            case (' '): {\n                event.preventDefault();\n                this.tabSelected.next(index);\n                break;\n            }\n            case ('Enter'): {\n                this.tabSelected.next(index);\n            }\n        }\n    }\n\n    /** @hidden */\n    private getTabLinkFromIndex(index: number, elements: HTMLElement[]): HTMLElement {\n        return elements[index];\n    }\n}\n","import {\n    AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    QueryList,\n    SimpleChanges,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TabPanelComponent } from './tab/tab-panel.component';\nimport { Subscription } from 'rxjs';\nimport { TabsService } from './tabs.service';\n\n/**\n * Represents a list of tab-panels.\n */\n@Component({\n    selector: 'fd-tab-list',\n    templateUrl: './tab-list.component.html',\n    styleUrls: ['./tab-list.component.scss'],\n    host: {\n        class: 'fd-tabs-custom'\n    },\n    encapsulation: ViewEncapsulation.None,\n    providers: [TabsService]\n})\nexport class TabListComponent implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** @hidden */\n    @ContentChildren(TabPanelComponent)\n    panelTabs: QueryList<TabPanelComponent>;\n\n    /** @hidden */\n    @ViewChildren('tabLink')\n    tabLinks: QueryList<ElementRef>;\n\n    /** Index of the selected tab panel. */\n    @Input()\n    selectedIndex: number = 0;\n\n    /** Event emitted when the selected panel changes. */\n    @Output()\n    selectedIndexChange = new EventEmitter<number>();\n\n    private _tabsSubscription: Subscription;\n    private _tabSelectSubscription: Subscription;\n\n    constructor(\n        private tabsService: TabsService\n    ) {}\n\n    /** @hidden */\n    ngAfterContentInit(): void {\n        setTimeout(() => {\n            this.selectTab(this.selectedIndex);\n        });\n\n        this._tabSelectSubscription = this.tabsService.tabSelected.subscribe(index => {\n            if (index !== this.selectedIndex) {\n                this.selectTab(index);\n            }\n        });\n\n        this._tabsSubscription = this.panelTabs.changes.subscribe(() => {\n            if (!this.isIndexInRange() || this.isTabContentEmpty()) {\n                this.resetTabHook();\n            }\n        });\n    }\n\n    /** @hidden */\n    ngOnDestroy(): void {\n        this._tabsSubscription.unsubscribe();\n        this._tabSelectSubscription.unsubscribe();\n    }\n\n    /** @hidden */\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.selectedIndex) {\n            setTimeout(() => {\n                this.selectTab(changes.selectedIndex.currentValue);\n            });\n        }\n    }\n\n    /**\n     * Function to select a new tab from an index.\n     * @param tabIndex Index of the tab to select.\n     */\n    selectTab(tabIndex: number): void {\n       if (this.isIndexInRange() && this.isTargetTabEnabled(tabIndex)) {\n            this.panelTabs.forEach((tab, index) => {\n                tab.expanded = index === tabIndex;\n            });\n            this.selectedIndex = tabIndex;\n            this.selectedIndexChange.emit(tabIndex);\n        }\n    }\n\n    /** @hidden */\n    tabHeaderClickHandler(tabIndex: number): void {\n        if (this.selectedIndex !== tabIndex) {\n            this.selectTab(tabIndex);\n        }\n    }\n\n    /** @hidden */\n    tabHeaderKeyHandler(index: number, event: any): void {\n        this.tabsService.tabHeaderKeyHandler(index, event, this.tabLinks.map(tab => tab.nativeElement));\n    }\n\n    private isIndexInRange(): boolean {\n        return this.panelTabs && this.panelTabs.length > 0 && this.selectedIndex < this.panelTabs.length;\n    }\n\n    private isTargetTabEnabled(index: number): boolean {\n        return !this.panelTabs.toArray()[index].disabled;\n    }\n\n    private isTabContentEmpty(): boolean {\n        let result = true;\n        this.panelTabs.forEach(tab => {\n            if (tab.expanded) {\n                result = false;\n            }\n        });\n        return result;\n    }\n\n    private resetTabHook(): void {\n        this.selectedIndex = 0;\n        setTimeout(() => {\n            this.selectTab(this.selectedIndex);\n        });\n    }\n}\n","import { Directive, ElementRef, HostBinding, Input } from '@angular/core';\nimport { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';\n\n/**\n * Tab link for nav mode\n *\n * ```html\n * <a fd-tab-link>\n *    link\n * </a>\n * ```\n */\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-tab-link]',\n    host: {\n        'role': 'tab',\n    }\n})\nexport class TabLinkDirective extends AbstractFdNgxClass {\n\n    /** Whether the link is active */\n    @Input()\n    @HostBinding('attr.aria-selected')\n    active: boolean;\n\n    /**\n     * Only visual / accessibility thing on tab-nav mode\n     * RouterLink does not respect preventDefault/stopPropagation\n     */\n    @Input()\n    @HostBinding('attr.aria-disabled')\n    disabled: boolean;\n\n    /** @hidden */\n    _setProperties() {\n        this._addClassToElement('fd-tabs__link');\n        if (this.active) {\n            this._addClassToElement('is-selected');\n        }\n    }\n\n    /** @hidden */\n    constructor(public elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n}\n","import { ContentChild, Directive } from '@angular/core';\nimport { TabLinkDirective } from '../tab-link/tab-link.directive';\n/**\n * Tab Item is optional wrapper for Tab link\n *\n * ```html\n * <div fd-tab-item>\n *    <a fd-tab-link>\n *        link\n *    </a>\n * </div>\n * ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-tab-item]',\n    host: {\n        'class': 'fd-tabs__item'\n    }\n})\nexport class TabItemDirective {\n\n    /** @hidden */\n    @ContentChild(TabLinkDirective, { static: false }) linkItem: TabLinkDirective;\n}\n","import {\n    AfterContentInit, ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    OnDestroy,\n    Output,\n    QueryList,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TabLinkDirective } from '../tab-link/tab-link.directive';\nimport { TabItemDirective } from '../tab-item/tab-item.directive';\nimport { TabsService } from '../tabs.service';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Tab Nav for only navigation mode when you want for example use router-outlet\n *\n * ```html\n *<nav fd-tab-nav>\n *  <div fd-tab-item>\n *      <a fd-tab-link\n *      [active]=\"true\">\n *          Link\n *      </a>\n *  </div>\n *  <div fd-tab-item>\n *      <a fd-tab-link\n *      [active]=\"false\">\n *          Link\n *      </a>\n *  </div>\n *  <a fd-tab-link\n *  [active]=\"false\">\n *      Link\n *  </a>\n * </nav>\n * ```\n */\n\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: '[fd-tab-nav]',\n    host: {\n        'class': 'fd-tabs',\n        'role': 'tablist'\n    },\n    template: `<ng-content></ng-content>`,\n    providers: [TabsService],\n    styleUrls: ['./tab-nav.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabNavComponent implements AfterContentInit, OnDestroy {\n\n    /** @hidden */\n    @ContentChildren(TabLinkDirective) links: QueryList<TabLinkDirective>;\n\n    /** @hidden */\n    @ContentChildren(TabItemDirective) items: QueryList<TabItemDirective>;\n\n    /** @hidden */\n    private _tabSelectSubscription: Subscription;\n\n    /** Event Thrown every time something is clicked */\n    @Output() onKeyDown = new EventEmitter<{event: any, index: number}>();\n\n    /** @hidden */\n    constructor(\n        private renderer: Renderer2,\n        private tabsService: TabsService\n    ) {}\n\n    /** Function that gives possibility to get all the link directives, with and without nav__item wrapper */\n    public get tabLinks(): TabLinkDirective[] {\n        let tabLinks: TabLinkDirective[] = [];\n        if (this.links) { tabLinks = tabLinks.concat(this.links.map(link => link)); }\n        if (this.items) { tabLinks = tabLinks.concat(this.items.filter(item => !!item.linkItem).map(item => item.linkItem)); }\n        return tabLinks;\n    }\n\n    /** @hidden */\n    public ngAfterContentInit(): void {\n        this._tabSelectSubscription = this.tabsService.tabSelected.subscribe(index => {\n            this.selectTab(index);\n        });\n\n        this.tabLinks.forEach((linkElement, index) => {\n            this.renderer.listen(linkElement.elementRef.nativeElement, 'keydown', (event) => {\n                this.tabsService.tabHeaderKeyHandler(index, event, this.tabLinks.map(link => link.elementRef.nativeElement))\n            }\n        )})\n    }\n\n    /** @hidden */\n    ngOnDestroy(): void {\n        this._tabSelectSubscription.unsubscribe();\n    }\n\n    /**\n     * Function to select a new tab from an index.\n     * @param tabIndex Index of the tab to select.\n     */\n    selectTab(tabIndex: number): void {\n        this.tabLinks[tabIndex].elementRef.nativeElement.click();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TabPanelComponent } from './tab/tab-panel.component';\nimport { TabListComponent } from './tab-list.component';\n\nimport { TabLoadTitleDirective, TabTitleDirective } from './tab-utils/tab-directives';\nimport { TabNavComponent } from './tab-nav/tab-nav.component';\nimport { TabLinkDirective } from './tab-link/tab-link.directive';\nimport { TabItemDirective } from './tab-item/tab-item.directive';\n\n@NgModule({\n    declarations: [\n        TabListComponent,\n        TabPanelComponent,\n        TabTitleDirective,\n        TabLoadTitleDirective,\n        TabNavComponent,\n        TabLinkDirective,\n        TabItemDirective\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        TabListComponent,\n        TabPanelComponent,\n        TabTitleDirective,\n        TabLoadTitleDirective,\n        TabNavComponent,\n        TabItemDirective,\n        TabLinkDirective\n    ]\n})\nexport class TabsModule {}\n","import { Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\n\n/**\n * Tile is used to display information in a simple container format.\n * ```html\n * <fd-tile>\n *     <fd-tile-content>\n *         <h2 fd-tile-title>Tile Tile</h2>\n *         <p>Tile Description</p>\n *     </fd-tile-content>\n * </fd-tile>\n * ```\n */\n@Component({\n    selector: 'fd-tile',\n    host: {\n        '[attr.role]': '(this.isButton === true ? \\'button\\' : \\'\\')'\n    },\n    templateUrl: './tile.component.html',\n    styleUrls: ['./tile.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TileComponent extends AbstractFdNgxClass {\n    /** Whether the tile is disabled. */\n    @Input() disabled: boolean = false;\n\n    /** Whether the tile is rendered as a button. */\n    @Input() isButton: boolean = false;\n\n    /** Specifies the number of rows a tile should span. */\n    @Input() rowSpan: number;\n\n    /** Specifies the number of columns a tile should span. */\n    @Input() columnSpan: number;\n\n    /** A number specifying the background color of the tile. */\n    @Input() colorAccent: number;\n\n    /** @hidden */\n    _setProperties() {\n        this._addClassToElement('fd-tile');\n        if (this.disabled) {\n            this._addClassToElement('is-disabled');\n        }\n        if (this.rowSpan) {\n            this._addClassToElement('fd-has-grid-row-span-' + this.rowSpan);\n        }\n        if (this.columnSpan) {\n            this._addClassToElement('fd-has-grid-column-span-' + this.columnSpan);\n        }\n        if (this.colorAccent) {\n            this._addClassToElement('fd-has-background-color-accent-' + this.colorAccent);\n        }\n    }\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n}\n","import { Directive } from '@angular/core';\n\n/**\n * Directive that represents a tile content. \n * ```html\n * <div fd-tile-content>\n *    <h2 fd-tile-title>Tile Tile</h2>\n *    <p>Tile Description</p>\n * </div>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-tile-content]',\n    host: {\n        class: 'fd-tile__content'\n    }\n})\nexport class TileContentDirective {}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * Applies the tile text style to a <p> element.\n *\n * ```html\n * <p fd-tile-text>Tile Text</p>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-tile-text]'\n})\nexport class TileTextDirective {\n    /** @hidden */\n    @HostBinding('class.fd-tile__text')\n    fdTileTextClass: boolean = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * Applies the tile title style to a header element. It can be used with any header level.\n *\n * ```html\n * <h1 fd-tile-title>Tile Title</h1>\n * <h2 fd-tile-title>Tile Title</h2>\n * <h3 fd-tile-title>Tile Title</h3>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-tile-title]'\n})\nexport class TileTitleDirective {\n    /** @hidden */\n    @HostBinding('class.fd-tile__title')\n    fdTileTitleClass: boolean = true;\n}\n","import { Directive } from '@angular/core';\n\n/**\n * The directive that represents a tile media container. \n * ```html\n * <div fd-tile-media>\n *      <span fd-identifier\n *            [size]=\"'m'\"\n *            [glyph]=\"'home'\"\n *            [transparent]=\"true\"></span>\n * </div>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-tile-media]',\n    host: {\n        class: 'fd-tile__media'\n    }\n})\nexport class TileMediaDirective {}\n","import { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n/**\n * Tile level actions such as add, remove, delete, sort, etc.\n * \n * ```html\n * <fd-tile>\n *    <div fd-tile-actions>\n *        <button fd-button (click)=\"action()\">Action</button>\n *    </div>\n * </fd-tile>\n * ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-tile-actions]',\n    host: {\n        class: 'fd-tile__actions'\n    }\n})\nexport class TileActionsDirective {}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\n\n/**\n * Product tile is used to display product information.\n * ```html\n * <fd-product-tile>\n *     <fd-product-tile-media [photo]=\"'https://placeimg.com/600/600/nature'\">\n *     </fd-product-tile-media>\n *     <fd-product-tile-content>\n *         <h2 fd-product-tile-title>Default Product Tile</h2>\n *     </fd-product-tile-content>\n * </fd-product-tile>\n * ```\n */\n@Component({\n    selector: 'fd-product-tile',\n    host: {\n        '[attr.role]': '(this.isButton === true ? \"button\" : \"\")',\n        '[class.fd-product-tile-custom]': 'true'\n    },\n    templateUrl: './product-tile.component.html',\n    styleUrls: ['./product-tile.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductTileComponent extends AbstractFdNgxClass {\n    /** Whether the product tile is disabled. */\n    @Input() disabled: boolean = false;\n\n    /** Whether the product tile is rendered as a button. */\n    @Input() isButton: boolean = false;\n\n    /** @hidden */\n    _setProperties() {\n        this._addClassToElement('fd-product-tile');\n        if (this.disabled) {\n            this._addClassToElement('is-disabled');\n        }\n    }\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\nimport { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';\n\n/**\n * Component that represents a product tile media container.\n * ```html\n * <div fd-product-tile-media [photo]=\"'https://placeimg.com/600/600/nature'\">\n * </div>\n * ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-product-tile-media]'\n})\nexport class ProductTileMediaDirective extends AbstractFdNgxClass {\n    /** The image url. */\n    @Input() photo: string;\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    /** @hidden */\n    _setProperties(): void {\n        this._addClassToElement('fd-product-tile__media');\n        if (this.photo) {\n            this._addStyleToElement('background-image', 'url(' + this.photo + ')');\n        }\n    }\n}\n","import { Directive } from '@angular/core';\n\n/**\n * Component that represents a product tile content. \n * ```html\n * <div fd-product-tile-content>\n *    <h2 fd-product-tile-title>Default Product Tile</h2>\n * </div>\n * ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-product-tile-content]',\n    host: {\n        'class': 'fd-product-tile__content'\n    }\n})\nexport class ProductTileContentDirective {}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * Directive that represents a product tile text.\n * ```html\n * <p fd-product-tile-text>Default Product Tile Text</p>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-product-tile-text]'\n})\nexport class ProductTileTextDirective {\n    /** @hidden */\n    @HostBinding('class.fd-product-tile__text')\n    fdProductTileTextClass: boolean = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * Directive that represents a product tile title.\n * ```html\n * <h2 fd-product-tile-title>Default Product Tile</h2>\n * ```\n */\n@Directive({\n    // TODO to be discussed\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-product-tile-title]'\n})\nexport class ProductTileTitleDirective {\n    /** @hidden */\n    @HostBinding('class.fd-product-tile__title')\n    fdProductTileTitleClass: boolean = true;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TileComponent } from './tile.component';\nimport { TileContentDirective } from './tile-content/tile-content.directive';\nimport { TileTextDirective } from './tile-text/tile-text.directive';\nimport { TileTitleDirective } from './tile-title/tile-title.directive';\nimport { TileMediaDirective } from './tile-media/tile-media.directive';\nimport { TileActionsDirective } from './tile-actions/tile-actions.directive';\nimport { ProductTileComponent } from './product-tile.component';\nimport { ProductTileMediaDirective } from './product-tile-media/product-tile-media.directive';\nimport { ProductTileContentDirective } from './product-tile-content/product-tile-content.directive';\nimport { ProductTileTextDirective } from './product-tile-text/product-tile-text.directive';\nimport { ProductTileTitleDirective } from './product-tile-title/product-tile-title.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [\n        TileComponent,\n        TileContentDirective,\n        TileTextDirective,\n        TileTitleDirective,\n        TileMediaDirective,\n        TileActionsDirective,\n        ProductTileComponent,\n        ProductTileMediaDirective,\n        ProductTileContentDirective,\n        ProductTileTextDirective,\n        ProductTileTitleDirective\n    ],\n    declarations: [\n        TileComponent,\n        TileContentDirective,\n        TileTextDirective,\n        TileTitleDirective,\n        TileMediaDirective,\n        TileActionsDirective,\n        ProductTileComponent,\n        ProductTileMediaDirective,\n        ProductTileContentDirective,\n        ProductTileTextDirective,\n        ProductTileTitleDirective\n    ]\n})\nexport class TileModule { }\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { TreeRowObject } from './tree-row-object.model';\n\n@Component({\n    selector: 'fd-tree-child',\n    templateUrl: './tree-child.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeChildComponent implements OnInit {\n    @Input() row: TreeRowObject;\n\n    @Input() hideChildren: boolean;\n\n    @Input() displayTreeActions: boolean;\n\n    @Output() editClicked: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() deleteClicked: EventEmitter<any> = new EventEmitter<any>();\n\n    ngOnInit() {\n        this.hideChildren = false;\n    }\n\n    toggleDisplayChildren(hideAll?) {\n        if (hideAll !== undefined) {\n            this.hideChildren = hideAll;\n        } else {\n            this.hideChildren = !this.hideChildren;\n        }\n    }\n\n    typeOf(variable?) {\n        let retVal;\n        if (typeof variable === 'string') {\n            retVal = 'string';\n        } else if (typeof variable === 'object') {\n            retVal = 'object';\n        }\n\n        return retVal;\n    }\n\n    editTreeItem(row?) {\n        if (row) {\n            this.editClicked.emit(row);\n        }\n    }\n\n    deleteTreeItem(row?) {\n        if (row) {\n            this.deleteClicked.emit(row);\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    QueryList,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { TreeRowObject } from './tree-row-object.model';\nimport { TreeChildComponent } from './tree-child.component';\n\n@Component({\n    selector: 'fd-tree',\n    templateUrl: './tree.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./tree.component.scss']\n})\nexport class TreeComponent implements OnInit, AfterContentInit {\n    @Input() headers: string[];\n\n    @Input() treeData: TreeRowObject[];\n\n    @Input() hideAll: boolean;\n\n    @Input() displayTreeActions: boolean;\n\n    @Output() editRowClicked: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() deleteRowClicked: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(TreeChildComponent) treeChildren: QueryList<TreeChildComponent>;\n\n    ngOnInit() {\n        this.hideAll = false;\n    }\n\n    ngAfterContentInit() {\n        if (this.treeData && this.treeData.length) {\n            this.treeData.forEach(row => {\n                this.getChildDepth(row, 0);\n                this.handleEmptyTrailingCells(row); // handle empty cells for parents\n            });\n        }\n    }\n\n    toggleDisplayAll() {\n        this.hideAll = !this.hideAll;\n        this.treeChildren.forEach(child => {\n            child.toggleDisplayChildren(this.hideAll);\n        });\n    }\n\n    getChildDepth(row, depth) {\n        if (depth > 0) {\n            row.sublevelClass = 'fd-tree__group--sublevel-' + depth;\n        }\n        if (row.children) {\n            row.children.forEach(child => {\n                this.getChildDepth(child, depth + 1);\n                this.handleEmptyTrailingCells(child); // handle empty cells for children\n            });\n        }\n    }\n\n    handleEmptyTrailingCells(row) {\n        if (\n            row &&\n            row.rowData &&\n            row.rowData.length &&\n            typeof row.rowData[0] !== 'object' &&\n            this.headers &&\n            this.headers.length\n        ) {\n            while (row.rowData.length < this.headers.length) {\n                row.rowData.push('');\n            }\n        } else if (\n            row &&\n            row.rowData &&\n            row.rowData.length &&\n            typeof row.rowData[0] === 'object' &&\n            this.headers &&\n            this.headers.length\n        ) {\n            while (row.rowData.length < this.headers.length) {\n                row.rowData.push({\n                    displayText: ''\n                });\n            }\n        }\n    }\n\n    editClicked(row) {\n        this.editRowClicked.emit(row);\n    }\n\n    deleteClicked(row) {\n        this.deleteRowClicked.emit(row);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreeComponent } from './tree.component';\nimport { TreeChildComponent } from './tree-child.component';\nimport { ButtonModule } from '../button/button.module';\nimport { IconModule } from '../icon/icon.module';\nimport { PopoverModule } from '../popover/popover.module';\nimport { MenuModule } from '../menu/menu.module';\n\n@NgModule({\n    declarations: [TreeComponent, TreeChildComponent],\n    imports: [CommonModule, ButtonModule, IconModule, PopoverModule, MenuModule],\n    exports: [TreeComponent, TreeChildComponent]\n})\nexport class TreeModule {}\n","import { Injectable } from '@angular/core';\nimport { TimeObject } from '../../time/time-object';\n\nexport function TIME_FORMAT_FACTORY() {\n    return new TimeFormatParserDefault();\n}\n\n/**\n * Abstract class which defines the behaviour of the time format and parser.\n */\n@Injectable({\n    providedIn: 'root',\n    useFactory: TIME_FORMAT_FACTORY\n})\nexport abstract class TimeFormatParser {\n\n    /**\n     * Should take in a string value and return a Time object.\n     * @param value String to convert to a time object.\n     * @param meridian boolean to define if string should be treated as a meridian.\n     * @param displaySeconds boolean to define if string should display seconds.\n     * @param displayMinutes boolean to define if string should display minutes.\n     */\n    abstract parse(value: string, displaySeconds: boolean, displayMinutes: boolean, meridian?: boolean): TimeObject;\n\n    /**\n     * Should take in a time object and return a string representation.\n     * @param time TimeObject to convert to a string.\n     * @param meridian boolean to define if TimeObject should be treated as a meridian.\n     * @param displaySeconds boolean to define if string should display seconds.\n     * @param displayMinutes boolean to define if string should display minutes.\n     */\n    abstract format(time: TimeObject, displaySeconds: boolean, displayMinutes: boolean, meridian?: boolean): string;\n}\n\n/**\n * Default implementation of the DateFormatParser service.\n */\n@Injectable()\nexport class TimeFormatParserDefault extends TimeFormatParser {\n\n    /**\n     * Takes in a string representation of a date and returns a Time object.\n     * @param value String to convert to a time object.\n     * @param meridian boolean to define if string should be treated as a meridian.\n     * @param displaySeconds boolean to define if string should display seconds.\n     * @param displayMinutes boolean to define if string should display minutes.\n     */\n    public parse(value: string, displaySeconds: boolean = true, displayMinutes: boolean = true, meridian?: boolean): TimeObject {\n        const time = new TimeObject();\n        let regexp;\n        if (!meridian) {\n            if (displaySeconds) {\n                regexp = /^([0-1]?[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])$/;\n            } else if (displayMinutes) {\n                regexp = /^([0-1]?[0-9]|2[0-3]):([0-5][0-9]|[0-9])$/;\n            } else {\n                regexp = /^([0-1]?[0-9]|2[0-3])$/;\n            }\n            if (regexp.test(value)) {\n                const splitString = value.split(':');\n                time.hour = parseInt(splitString[0], 10);\n                time.minute = parseInt(splitString[1], 10);\n                if (displaySeconds) {\n                    time.second = parseInt(splitString[2], 10);\n                }\n                return time;\n            } else {\n                return null;\n            }\n        } else if (meridian) {\n            if (displaySeconds) {\n                regexp = /^([0-1]?[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9]) [APap][mM]$/;\n            } else if (displayMinutes) {\n                regexp = /^([0-1]?[0-9]|2[0-3]):([0-5][0-9]|[0-9]) [APap][mM]$/;\n            } else {\n                regexp = /^([0-1]?[0-9]|2[0-3]) [APap][mM]$/;\n            }\n            if (regexp.test(value)) {\n                const period = value.split(' ')[1];\n\n                const splitString = value.split(':');\n                time.hour = parseInt(splitString[0], 10);\n                if (( period === 'pm' || period === 'PM' ) && time.hour < 12) {\n                    time.hour = time.hour + 12;\n                } else if ( (period === 'am' || period === 'AM') && time.hour === 12 ) {\n                    time.hour = 0;\n                }\n                time.minute = parseInt(splitString[1], 10);\n                if (displaySeconds) {\n                    time.second = parseInt(splitString[2], 10);\n                }\n                return time;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    /**\n     * Takes in a time object and returns the string representation.\n     * @param time TimeObject to convert to a string.\n     * @param meridian boolean to define if TimeObject should be treated as a meridian.\n     * @param displaySeconds boolean to define if string should display seconds.\n     * @param displayMinutes boolean to define if string should display minutes.\n     */\n    public format(time: TimeObject, displaySeconds: boolean = true, displayMinutes: boolean = true, meridian?: boolean): string {\n        let formattedHour, formattedMinute, formattedSecond;\n        let formattedTime;\n        let formattedMeridian;\n        if (time.hour !== null) {\n            if (meridian) {\n                if (time.hour === 0) {\n                    formattedHour = 12;\n                    formattedMeridian = 'am';\n                } else if (time.hour > 12) {\n                    formattedHour = time.hour - 12;\n                    formattedMeridian = 'pm';\n                } else if (time.hour === 12) {\n                    formattedHour = 12;\n                    formattedMeridian = 'pm';\n                } else {\n                    formattedHour = time.hour;\n                    formattedMeridian = 'am';\n                }\n            } else {\n                formattedHour = time.hour;\n            }\n        }\n        if (time.minute !== null && displayMinutes) {\n            formattedMinute = time.minute < 10 ? '0' + time.minute : time.minute;\n        }\n\n        if (time.second !== null && displaySeconds) {\n            formattedSecond = time.second < 10 ? '0' + time.second : time.second;\n        }\n        if (formattedHour || formattedHour === 0) {\n            formattedTime = formattedHour;\n            if (formattedMinute || formattedMinute === '00') {\n                formattedTime = formattedTime + ':' + formattedMinute;\n                if (formattedSecond || formattedSecond === '00') {\n                    formattedTime = formattedTime + ':' + formattedSecond;\n                }\n            }\n        }\n        if (formattedMeridian && formattedTime) {\n            formattedTime += ' ' + formattedMeridian\n        }\n\n        return formattedTime;\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TimeObject } from '../time/time-object';\nimport { TimeComponent } from '../time/time.component';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TimeFormatParser } from './format/time-parser';\nimport { FormStates } from '../form/form-control/form-states';\n\n@Component({\n    selector: 'fd-time-picker',\n    templateUrl: './time-picker.component.html',\n    host: {\n        '(blur)': 'onTouched()',\n        class: 'fd-timepicker-custom'\n    },\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimePickerComponent),\n            multi: true\n        }\n    ],\n    styleUrls: ['./time-picker.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimePickerComponent implements ControlValueAccessor, OnInit {\n\n    /** @hidden */\n    @HostBinding('class.fd-time-picker')\n    timepickerclass = true;\n\n    /**\n     * @Input An object that contains three integer properties: 'hour' (ranging from 0 to 23),\n     * 'minute' (ranging from 0 to 59), and 'second' (ranging from 0 to 59). This is the model the component consumes. Example:\n     *\n     * ```json\n     * { hour: 12, minute: 0, second: 0 }\n     * ```\n     */\n    @Input()\n    time: TimeObject = { hour: 0, minute: 0, second: 0 };\n\n    /** @Input Uses compact time picker. */\n    @Input()\n    compact: boolean = false;\n\n    /** @Input When set to true, uses the 24 hour clock (hours ranging from 0 to 23)\n     * and does not display a period control. */\n    @Input()\n    meridian: boolean = false;\n\n    /** @Input Disables the component. */\n    @Input()\n    disabled: boolean;\n\n    /** @Input When set to false, hides the buttons that increment and decrement the corresponding input. */\n    @Input()\n    spinners: boolean = true;\n\n    /** @Input When set to false, hides the input for seconds. */\n    @Input()\n    displaySeconds: boolean = true;\n\n    /** @Input When set to false, hides the input for minutes. */\n    @Input()\n    displayMinutes: boolean = true;\n\n    /** @Input When set to false, hides the input for hours. */\n    @Input()\n    displayHours: boolean = true;\n\n    /** Whether to perform visual validation on the picker input. */\n    @Input()\n    validate: boolean = true;\n\n    /** Aria label for the time picker input. */\n    @Input()\n    timePickerInputLabel: string = 'Time picker input';\n\n    /** Whether a null input is considered valid. */\n    @Input()\n    allowNull: boolean = true;\n\n    /**\n     *  The state of the form control - applies css classes.\n     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.\n     */\n    @Input()\n    state: FormStates;\n\n    /**\n     * Whether AddOn Button should be focusable, set to true by default\n     */\n    @Input()\n    buttonFocusable: boolean = true;\n\n    /**\n     * @Input when set to true, time inputs won't allow to have 1 digit\n     * for example 9 will become 09\n     * but 12 will be kept as 12.\n     */\n    @Input() keepTwoDigitsTime: boolean = false;\n\n    /** @hidden Whether the input time is valid. Internal use. */\n    isInvalidTimeInput: boolean = false;\n\n    /** @hidden */\n    @ViewChild(TimeComponent, { static: false })\n    child: TimeComponent;\n\n    /** @hidden */\n    period: string;\n\n    /** @hidden */\n    isOpen: boolean;\n\n    /** @hidden */\n    placeholder: string;\n\n    /** @hidden */\n    onChange: Function = () => {};\n    /** @hidden */\n    onTouched: Function = () => {};\n\n    /** @hidden */\n    ngOnInit(): void {\n        this.placeholder = this.getPlaceholder();\n    }\n\n    /**\n     * Returns the current value of the time input.\n     */\n    getTime(): TimeObject {\n        return this.time;\n    }\n\n    /** @hidden */\n    getFormattedTime(): string {\n        const formattedTime = this.timeAdapter.format(this.time, this.displaySeconds, this.displayMinutes, this.meridian);\n        return formattedTime !== undefined ? formattedTime : '';\n    }\n\n    /** @hidden */\n    timeInputChanged(timeFromInput) {\n        const time = this.timeAdapter.parse(timeFromInput, this.displaySeconds, this.displayMinutes, this.meridian);\n        if (time) {\n            this.isInvalidTimeInput = false;\n            this.time = time;\n            this.onChange(time);\n        } else {\n            if (this.allowNull && timeFromInput === '') {\n                this.isInvalidTimeInput = false;\n                this.onChange({hour: null, minutes: null, seconds: null});\n                this.child.setDisplayedHour();\n            } else {\n                this.isInvalidTimeInput = true;\n            }\n        }\n    }\n\n    /** @hidden */\n    inputGroupClicked($event) {\n        if (!this.isOpen && !this.disabled) {\n            $event.stopPropagation();\n            this.isOpen = true;\n        }\n    }\n\n    /** @hidden */\n    onFocusHandler() {\n        if (!this.isOpen) {\n            this.isOpen = true;\n        }\n    }\n\n    /** @hidden */\n    addOnButtonClicked() {\n        if (!this.disabled) {\n            this.isOpen = !this.isOpen;\n        }\n    }\n\n    /** @hidden */\n    popoverClosed() {\n        this.isOpen = false;\n    }\n\n    /** @hidden */\n    getPlaceholder(): string {\n        let retVal = '';\n        if (this.displayHours) {\n            retVal = retVal + 'hh'\n        }\n        if (this.displayMinutes) {\n            retVal = retVal + ':mm'\n        }\n        if (this.displaySeconds) {\n            retVal = retVal + ':ss'\n        }\n        if (this.meridian) {\n            retVal = retVal + ' am/pm';\n        }\n\n        return retVal;\n    }\n\n    /** @hidden */\n    timeFromTimeComponentChanged() {\n        this.cd.detectChanges();\n        this.onChange(this.time);\n        this.isInvalidTimeInput = false;\n    }\n\n    /** @hidden */\n    registerOnChange(fn: (time: TimeObject) => void): void {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.cd.detectChanges();\n    }\n\n    /** @hidden */\n    writeValue(time: TimeObject): void {\n        if (!time) {\n            return;\n        }\n        this.time = time;\n        this.cd.markForCheck();\n    }\n\n    /** @hidden */\n    constructor(private cd: ChangeDetectorRef,\n                public timeAdapter: TimeFormatParser) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PopoverModule } from '../popover/popover.module';\nimport { InputGroupModule } from '../input-group/input-group.module';\nimport { TimeModule } from '../time/time.module';\n\nimport { TimePickerComponent } from './time-picker.component';\n\n\n@NgModule({\n    declarations: [TimePickerComponent],\n    imports: [CommonModule, FormsModule, PopoverModule, InputGroupModule, TimeModule],\n    exports: [TimePickerComponent, PopoverModule, InputGroupModule, TimeModule]\n})\nexport class TimePickerModule {}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nlet toggleUniqueId: number = 0;\n\n/**\n * The Toggle component is used to activate or deactivate an element.\n * It uses a visual metaphor to inform the user of the state of the toggle.\n */\n@Component({\n    selector: 'fd-toggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ToggleComponent),\n            multi: true\n        }\n    ],\n    host: {\n        class: 'fd-form__item fd-form__item--check fd-toggle-custom',\n        '[attr.id]': 'id',\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleComponent implements OnInit, ControlValueAccessor {\n    /** @hidden */\n    @ViewChild('input', { static: false })\n    inputElement: ElementRef<HTMLInputElement>;\n\n    /**\n     * The size of the toggle.\n     * Can be one of the four *xs*, *s*, *l*, *error* or default.\n     */\n    @Input()\n    size: string;\n\n    /** Whether the toggle is disabled. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Id for the toggle component. If omitted, a unique one is generated. */\n    @Input()\n    id: string = 'fd-toggle-' + toggleUniqueId++;\n\n    /** Whether the toggle is checked. */\n    @Input()\n    checked: boolean = false;\n\n    /** Whether the toggle is semantic */\n    @Input()\n    semantic: boolean = false;\n\n    /** Whether the toggle is compact */\n    @Input()\n    compact: boolean = false;\n\n    /** aria-label attribute of the inner input element. */\n    @Input()\n    ariaLabel: string = null;\n\n    /** aria-labelledby attribute of the inner input element. */\n    @Input()\n    ariaLabelledby: string = null;\n\n    /**\n     * Event fired when the state of the toggle changes.\n     * *$event* can be used to retrieve the new state of the toggle.\n     */\n    @Output()\n    readonly checkedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** @hidden */\n    onChange: any = () => {};\n\n    /** @hidden */\n    onTouched: any = () => {};\n\n    constructor (\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /** @hidden */\n    ngOnInit() {\n        if (this.size && this.size !== 'xs' && this.size !== 's' && this.size !== 'l') {\n            this.size = null;\n        }\n    }\n\n    /** Set focus on the input element. */\n    public focus(): void {\n        this.inputElement.nativeElement.focus();\n    }\n\n    /** Get the id of the inner input element of the toggle. */\n    get innerInputId(): string {\n        return `${this.id}-input`;\n    }\n\n    /** Get the isChecked property of the toggle. */\n    get isChecked() {\n        return this.checked;\n    }\n\n    /** Set the isChecked property of the toggle. */\n    set isChecked(value) {\n        this.checked = value;\n        this.onChange(value);\n        this.onTouched();\n        this.checkedChange.emit(value);\n    }\n\n    /**\n     * @hidden\n     * @param value Sets the value of the *checked* property of the toggle.\n     */\n    writeValue(value: any) {\n        this.checked = value;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    /**\n     * @hidden\n     * @param fn User defined function that handles the *onChange* event of the toggle.\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    /**\n     * @hidden\n     * @param fn User defined function that handles the *onTouch* event of the toggle.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * @hidden\n     * @param isDisabled Sets the value of the *disabled* property of the toggle.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.detectChanges();\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToggleComponent } from './toggle.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [ToggleComponent],\n    imports: [CommonModule, FormsModule],\n    exports: [ToggleComponent]\n})\nexport class ToggleModule {}\n","import { Directive, EmbeddedViewRef, HostBinding, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**\n * Directive which is used along with input elements, inside the localization editor item or main.\n *  ```html\n *  <fd-localization-editor-item>\n *      <input fd-localization-editor-input type=\"text\" placeholder=\"EN\">\n *  </fd-localization-editor-item>\n *  ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-localization-editor-input]'\n})\nexport class LocalizationEditorInputDirective {\n\n    /** @hidden */\n    @HostBinding('class.fd-input-group__input')\n    fdInputGroupInputClass: boolean = true;\n}\n\n/**\n * Directive which is used along with textarea elements, inside the localization editor item or main.\n *  ```html\n *  <fd-localization-editor-item>\n *      <textarea fd-localization-editor-input placeholder=\"EN\">\n *  </fd-localization-editor-item>\n *  ```\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-localization-editor-textarea]',\n})\nexport class LocalizationEditorTextareaDirective {\n    /**\n     * @hidden\n     *  Variable is controlled by parent component and define if there should be used compact mode\n     * */\n    @HostBinding('class.fd-input--compact')\n    public compact: boolean;\n\n    /** @hidden */\n    @HostBinding('class.fd-input-group__input')\n    fdInputGroupInputClass: boolean = true;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.fd-localization-editor-textarea')\n    public fdLocalizationEditorTextareaClass: boolean = true;\n}\n\n/**\n * Directive which is used to add complex content, which will be displayed in the add-on space.\n *  ```html\n *  <fd-localization-editor-item>\n *      <ng-template fd-localization-editor-label>\n *          <fd-icon [glyph]=\"field.glyph\"></fd-icon>\n *      </ng-template>\n *      <textarea fd-localization-editor-input placeholder=\"EN\">\n *  </fd-localization-editor-item>\n *  ```\n * */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-localization-editor-label]',\n})\nexport class LocalizationEditorLabel {}\n\n/**\n * Directive that is used to wrap whole localization field inside li element.\n *  ```html\n *  <li fd-localization-editor-element>\n *      <fd-localization-editor-item>\n *          <textarea fd-localization-editor-input placeholder=\"EN\">\n *      </fd-localization-editor-item>\n *  </li>\n *  ```\n * */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-localization-editor-element]',\n})\nexport class LocalizationEditorElement {\n\n    /** @hidden */\n    @HostBinding('class.fd-localization-editor__language')\n    fdLocalizationEditorLanguage: boolean = true;\n}\n\n/**\n * Not for external use. Portal to render the complex title template.\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-localization-editor-load-label]'\n})\nexport class LocalizationEditorLoadLabel implements OnInit {\n    /** @hidden */\n    @Input('fd-localization-editor-load-label')\n    content: TemplateRef<any>;\n\n    /** @hidden */\n    private contentRef: EmbeddedViewRef<any>;\n\n    /** @hidden */\n    constructor(private viewRef: ViewContainerRef) {}\n\n    /** @hidden */\n    ngOnInit(): void {\n        this.viewRef.clear();\n        this.contentRef = this.viewRef.createEmbeddedView(this.content);\n    }\n}\n","import {\n    AfterContentInit, ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnInit,\n    TemplateRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    LocalizationEditorLabel\n} from '../localization-editor.directives';\n\n/**\n *  Component that represents field with add-on.\n *  ```html\n *  <fd-localization-editor-item [label]=\"'EN'\">\n *      <input fd-localization-editor-input type=\"text\" placeholder=\"EN\">\n *  </fd-localization-editor-item>\n *  ```\n */\n@Component({\n    selector: 'fd-localization-editor-item',\n    templateUrl: './localization-editor-item.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LocalizationEditorItemComponent {\n\n    /** @hidden */\n    type: string;\n\n    /** The text for the add-on on the right side. */\n    @Input()\n    label: string;\n\n    /** Whether to apply compact mode to to field. */\n    @Input()\n    compact: boolean;\n\n    /** @hidden */\n    @ContentChild(LocalizationEditorLabel, { read: TemplateRef, static: false })\n    labelTemplate: TemplateRef<any>;\n}\n","import { ChangeDetectionStrategy, Input, Component, ViewEncapsulation } from '@angular/core';\nimport { LocalizationEditorItemComponent } from '../localization-editor-item/localization-editor-item.component';\nimport { FormStates } from '../../form/form-control/form-states';\n\n/**\n *  Component that represents the field which is always visible and is rendered outside the popover.\n *  ```html\n *  <fd-localization-editor-main [label]=\"'EN'\">\n *       <input fd-localization-editor-input type=\"text\" placeholder=\"EN\">\n *  </fd-localization-editor-main>\n *  ```\n */\n@Component({\n    selector: 'fd-localization-editor-main',\n    templateUrl: './localization-editor-main.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LocalizationEditorMainComponent extends LocalizationEditorItemComponent {\n\n    /**\n     * @hidden\n     * This variable is controlled by parent component\n     * */\n    expanded: boolean;\n\n    /**\n     *  The state of the form control - applies css classes.\n     *  Can be `valid`, `invalid`, `warning`, `information` or blank for default.\n     */\n    @Input()\n    state: FormStates;\n\n    /**\n     * Whether AddOn Button should be focusable, set to true by default\n     */\n    @Input()\n    buttonFocusable: boolean = true;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    EventEmitter,\n    HostBinding,\n    Input,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Placement } from 'popper.js';\nimport { LocalizationEditorMainComponent } from './localization-editor-main/localization-editor-main.component';\n\n/**\n *  The component that represents a list of fields with add-ons inside popover\n *  ```html\n * <fd-localization-editor>\n *    <fd-localization-editor-main [label]=\"'EN'\">\n *       <input fd-localization-editor-input type=\"text\" placeholder=\"EN\">\n *    </fd-localization-editor-main>\n *    <fd-localization-editor-item [label]=\"'DE'\">\n *       <input fd-localization-editor-input type=\"text\" placeholder=\"DE\">\n *    </fd-localization-editor-item>\n * </fd-localization-editor>\n *  ```\n */\n@Component({\n    selector: 'fd-localization-editor',\n    templateUrl: './localization-editor.component.html',\n    styleUrls: ['localization-editor.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LocalizationEditorComponent {\n\n    /** @hidden */\n    @HostBinding('class.fd-localization-editor')\n    fdLocalizationEditorClass: boolean = true;\n\n    /** @hidden */\n    @ContentChild(LocalizationEditorMainComponent, { static: false })\n    mainElement: LocalizationEditorMainComponent;\n\n    /** The trigger events that will open/close the popover.\n     *  Accepts any [HTML DOM Events](https://www.w3schools.com/jsref/dom_obj_event.asp). */\n    @Input()\n    triggers: string[] = ['click'];\n\n    /** The placement of the popover. It can be one of: top, top-start, top-end, bottom,\n     *  bottom-start, bottom-end, right, right-start, right-end, left, left-start, left-end. */\n    @Input()\n    placement: Placement;\n\n    /** Whether the popover is open. Can be used through two-way binding. */\n    @Input()\n    isOpen: boolean = false;\n\n    /** Whether the popover should close when a click is made outside its boundaries. */\n    @Input()\n    closeOnOutsideClick: boolean = true;\n\n    /** Whether the popover should close when the escape key is pressed. */\n    @Input()\n    closeOnEscapeKey: boolean = true;\n\n    /** Event emitted when the state of the isOpen property changes. */\n    @Output()\n    readonly isOpenChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Whether to disable opening. */\n    @Input()\n    disabled: boolean;\n\n    /** Whether the inputs are in compact mode. */\n    @Input()\n    compact: boolean = false;\n\n    /**\n     * Toggles the popover open state.\n     */\n    public toggle(): void {\n        if (this.isOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /**\n     * Closes the popover.\n     */\n    public close(): void {\n        if (this.isOpen) {\n            this.isOpen = false;\n            this.isOpenChange.emit(this.isOpen);\n        }\n    }\n\n    /**\n     * Opens the popover.\n     */\n    public open(): void {\n        if (!this.isOpen) {\n            this.isOpen = true;\n            this.isOpenChange.emit(this.isOpen);\n        }\n    }\n\n    /**\n     * @hidden\n     * Event handled always, when the popup is opened or closed.\n     */\n    public handleOpenChange(opened: boolean): void {\n        if (this.mainElement) {\n            this.mainElement.expanded = opened;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LocalizationEditorComponent } from './localization-editor.component';\nimport { PopoverModule } from '../popover/popover.module';\nimport { FormModule } from '../form/form.module';\nimport { InputGroupModule } from '../input-group/input-group.module';\nimport { MenuModule } from '../menu/menu.module';\nimport {\n    LocalizationEditorInputDirective,\n    LocalizationEditorLabel,\n    LocalizationEditorElement,\n    LocalizationEditorLoadLabel,\n    LocalizationEditorTextareaDirective\n} from './localization-editor.directives';\nimport { LocalizationEditorMainComponent } from './localization-editor-main/localization-editor-main.component';\nimport { LocalizationEditorItemComponent } from './localization-editor-item/localization-editor-item.component';\nimport { ButtonModule } from '../button/button.module';\n\n@NgModule({\n    declarations: [\n        LocalizationEditorComponent,\n        LocalizationEditorMainComponent,\n        LocalizationEditorItemComponent,\n        LocalizationEditorInputDirective,\n        LocalizationEditorLabel,\n        LocalizationEditorLoadLabel,\n        LocalizationEditorTextareaDirective,\n        LocalizationEditorElement\n    ],\n    exports: [\n        LocalizationEditorComponent,\n        LocalizationEditorItemComponent,\n        LocalizationEditorMainComponent,\n        LocalizationEditorInputDirective,\n        LocalizationEditorLabel,\n        LocalizationEditorLoadLabel,\n        LocalizationEditorTextareaDirective,\n        LocalizationEditorElement\n    ],\n    imports: [CommonModule, PopoverModule, FormModule, InputGroupModule, MenuModule, ButtonModule]\n})\nexport class LocalizationEditorModule {}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n/**\n *  Component represents mega menu element, which contains list with menu items, links, sublists, subitems and sublinks..\n *  ```html\n *  <fd-mega-menu>\n *      <ul fd-mega-menu-list>\n *          <fd-mega-menu-item>\n *              <a fd-mega-menu-link>Item 0</a>\n *              <li fd-mega-menu-subitem>\n *                 <a fd-mega-menu-sublink>Sub Item 1</a>\n *            </li>\n *              <li fd-mega-menu-subitem>\n *                <a fd-mega-menu-sublink>Sub Item 2</a>\n *           </li>\n *             <li fd-mega-menu-subitem>\n *                  <a fd-mega-menu-sublink>Sub Item 3</a>\n *             </li>\n *          </fd-mega-menu-item>\n *      </ul>\n *  </fd-mega-menu>\n *  ```\n * */\n@Component({\n    selector: 'fd-mega-menu',\n    templateUrl: './mega-menu.component.html',\n    styleUrls: ['./mega-menu.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MegaMenuComponent {}\n","import { Directive, ElementRef, HostBinding } from '@angular/core';\n\n/**\n *  Directive represents mega menu sub link.\n *  ```html\n * <a fd-mega-menu-sublink href=\"#\">Link</a>\n *  ```\n * */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-mega-menu-sublink]',\n    host: {\n        'tabindex': '0'\n    }\n})\nexport class MegaMenuSublinkDirective {\n    /** @hidden */\n    @HostBinding('class.fd-mega-menu__sublink')\n    fdMegaMenuClass: boolean = true;\n\n    /** @hidden */\n    constructor (public itemEl: ElementRef) {}\n\n    public focus(): void {\n        this.itemEl.nativeElement.focus();\n    }\n\n    public click(): void {\n        this.itemEl.nativeElement.click();\n    }\n}\n","import { ContentChild, Directive, EventEmitter, HostBinding, HostListener, Output } from '@angular/core';\nimport { DefaultMenuItem } from '../menu/default-menu-item';\nimport { MegaMenuSublinkDirective } from './mega-menu-sublink.directive';\n\n/**\n *  Directive represents mega menu subitem, which can contain sublink.\n *  ```html\n * <li fd-mega-menu-subitem>\n *      <a fd-mega-menu-sublink>Sub Item 2</a>\n * </li>\n *  ```\n * */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-mega-menu-subitem]'\n})\nexport class MegaMenuSubitemDirective implements DefaultMenuItem {\n    /** @hidden */\n    @HostBinding('class.fd-mega-menu__subitem')\n    fdMegaMenuClass: boolean = true;\n\n    /** @hidden */\n    @ContentChild(MegaMenuSublinkDirective, { static: false })\n    link: MegaMenuSublinkDirective;\n\n    /** */\n    @Output()\n    readonly keyDown: EventEmitter<KeyboardEvent> = new EventEmitter<KeyboardEvent>();\n\n    /** @hidden */\n    @HostListener('keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        this.keyDown.emit(event);\n    }\n\n    /** @hidden */\n    public focus(): void {\n        this.link.focus();\n    }\n\n    /** @hidden */\n    public click(): void {\n        this.link.click();\n    }\n}\n","import { Directive, ElementRef, HostBinding, Input } from '@angular/core';\n\n/**\n *  Directive represents mega menu link.\n *  ```html\n * <a fd-mega-menu-link href=\"#\">Link</a>\n *  ```\n * */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-mega-menu-link]',\n    host: {\n        'tabindex': '0'\n    }\n})\nexport class MegaMenuLinkDirective {\n    /** @hidden */\n    @HostBinding('class.fd-mega-menu__link')\n    fdMegaMenuClass: boolean = true;\n\n    /** @hidden */\n    @Input()\n    @HostBinding('class.has-child')\n    @HostBinding('attr.aria-haspopup')\n    hasChild: boolean = false;\n\n    /** @hidden */\n    @Input()\n    @HostBinding('attr.aria-expanded')\n    isExpanded: boolean = false;\n\n    /** @hidden */\n    constructor (public itemEl: ElementRef) {}\n\n    public focus(): void {\n        this.itemEl.nativeElement.focus();\n    }\n\n    public click(): void {\n        this.itemEl.nativeElement.click();\n    }\n}\n","import {\n    AfterContentInit, ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MegaMenuSubitemDirective } from '../mega-menu-subitem.directive';\nimport { MegaMenuLinkDirective } from '../mega-menu-link/mega-menu-link.directive';\nimport { MenuKeyboardService } from '../../menu/menu-keyboard.service';\nimport { merge, Subject } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { DefaultMenuItem } from '../../menu/default-menu-item';\n\nexport type MenuSubListPosition = 'left' | 'right';\n\n/**\n *  Component represents mega menu item, which contains subitems and link.\n *  ```html\n *  <fd-mega-menu-item>\n *      <a fd-mega-menu-link>Item 0</a>\n *      <li fd-mega-menu-subitem>\n *          <a fd-mega-menu-sublink>Sub Item 1</a>\n *      </li>\n *      <li fd-mega-menu-subitem>\n *          <a fd-mega-menu-sublink>Sub Item 2</a>\n *      </li>\n *      <li fd-mega-menu-subitem>\n *          <a fd-mega-menu-sublink>Sub Item 3</a>\n *      </li>\n *  </fd-mega-menu-item>\n *  ```\n * */\n@Component({\n    selector: 'fd-mega-menu-item',\n    templateUrl: './mega-menu-item.component.html',\n    styleUrls: ['./mega-menu-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MegaMenuItemComponent implements AfterContentInit, OnDestroy, DefaultMenuItem {\n\n    /** @hidden */\n    @ContentChildren(MegaMenuSubitemDirective)\n    subItems: QueryList<MegaMenuSubitemDirective>;\n\n    /** @hidden */\n    @ContentChild(MegaMenuLinkDirective, { static: false })\n    link: MegaMenuLinkDirective;\n\n    /** @hidden */\n    @ViewChild('subList', { static: false })\n    subList: ElementRef;\n\n    /** @hidden */\n    @ViewChild('parentElement', { static: false })\n    parentElement: ElementRef;\n\n    /**  Event thrown, when there is some keyboard event detected on mega menu item */\n    @Output()\n    readonly keyDown: EventEmitter<KeyboardEvent> = new EventEmitter<KeyboardEvent>();\n\n    /** An RxJS Subject that will kill the data stream upon component’s destruction (for unsubscribing)  */\n    private readonly onDestroy$: Subject<void> = new Subject<void>();\n\n    /** An RxJS Subject that will kill the data stream upon queryList changes (for unsubscribing)  */\n    private readonly onRefresh$: Subject<void> = new Subject<void>();\n\n\n    /** Variable that specifies if the sublist menu is opened. */\n    @Input()\n    open: boolean = false;\n\n    /** Defines what should be position for sublist */\n    @Input()\n    subListPosition: MenuSubListPosition = 'right';\n\n    /** Event that is thrown always, when the open variable is changed */\n    @Output()\n    readonly openChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** @hidden */\n    constructor(\n        private elRef: ElementRef,\n        private menuKeyboardService: MenuKeyboardService,\n        private changeDetectionRef: ChangeDetectorRef\n    ) {}\n\n    /** @hidden */\n    @HostListener('keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent): void {\n        switch (event.key) {\n            case ('ArrowLeft'): {\n                this.closeSubList();\n                this.link.focus();\n                break;\n            }\n            case ('ArrowRight'):\n            case (' '):\n            case ('Enter'): {\n                this.openSubList();\n                this.changeDetectionRef.detectChanges();\n                if (this.subItems.first) {\n                    this.subItems.first.focus();\n                }\n                event.preventDefault();\n                break;\n            }\n            default: {\n                this.keyDown.emit(event);\n            }\n        }\n    }\n\n    /** @hidden */\n    @HostListener('document:click', ['$event'])\n    clickHandler(event): void {\n        /** Check if click wasn't inside the component, then close. */\n        if (!this.elRef.nativeElement.contains(event.target)) {\n            this.closeSubList();\n        }\n    }\n\n    /** @hidden */\n    @HostListener('window:resize')\n    onResize(): void {\n        if (this.open && this.isSubListPositionRight()) {\n            this.changeDetectionRef.detectChanges();\n            let distanceFromCorner = this.subList.nativeElement.getBoundingClientRect().right;\n\n            /**\n             * When the page is resized and the menu sub list goes beyond the page,\n             * the sub list should go over the parent list\n             */\n            while (distanceFromCorner > window.innerWidth && this.getLeftPropertyFromSubList() > 1) {\n                this.subList.nativeElement.style.left = (this.getLeftPropertyFromSubList() - 1) + '%';\n                this.changeDetectionRef.detectChanges();\n                distanceFromCorner = this.subList.nativeElement.getBoundingClientRect().right;\n            }\n\n            /**\n             * When the page is resized and the menu sub list was pulled over parent list,\n             * the sub list should go to right side of parent list\n             */\n            while (distanceFromCorner < window.innerWidth && this.getLeftPropertyFromSubList() < 100) {\n                this.subList.nativeElement.style.left = (this.getLeftPropertyFromSubList() + 1) + '%';\n                this.changeDetectionRef.detectChanges();\n                distanceFromCorner = this.subList.nativeElement.getBoundingClientRect().right;\n            }\n        }\n    }\n\n    /** @hidden */\n    ngAfterContentInit(): void {\n        this.link.hasChild = this.subItems.length > 0;\n        this.subItems.changes\n            .pipe(takeUntil(this.onDestroy$), startWith(5))\n            .subscribe(() => this.refreshSubscription())\n        ;\n    }\n\n    /** @hidden */\n    ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    /**\n     * Keyboard events handler from sublist, the event doesn't propagate upper, when it was ArrowDown or ArrowUp.\n     * It prevents from changing focus to item on primary menu list\n     */\n    handleSubListKeyDown(event: KeyboardEvent, index: number): void {\n        this.menuKeyboardService.keyDownHandler(event, index, this.subItems.toArray());\n        if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n            event.stopPropagation();\n        }\n    }\n\n    /** @hidden */\n    click(): void {\n        this.link.click();\n    }\n\n    /** @hidden */\n    focus(): void {\n        this.link.focus();\n    }\n\n    /** Method that informs if actual position of sublist is set to right */\n    public isSubListPositionRight(): boolean {\n        return this.subListPosition === 'right';\n    }\n\n    /** Method that changes state of open variable */\n    public toggleOpen(): void {\n        if (this.open) {\n            this.closeSubList()\n        } else {\n            this.openSubList();\n        }\n    }\n\n    /** Method that closes sublist */\n    public closeSubList(): void {\n        this.open = false;\n        this.link.isExpanded = this.isShow();\n        this.openChange.emit(this.open);\n    }\n\n    /** Method that opens sublist */\n    public openSubList(): void {\n        this.open = true;\n        this.link.isExpanded = this.isShow();\n        this.openChange.emit(this.open);\n        this.onResize();\n    }\n\n    /** Method that gives information if the sublist should behave like it is opened. */\n    public isShow(): boolean {\n        return this.open && this.subItems.length > 0;\n    }\n\n    /** Method that helps with the responsive support. Gives percentage number of left css attribute on list. */\n    private getLeftPropertyFromSubList(): number {\n        const styles = getComputedStyle(this.subList.nativeElement);\n        if (styles.left) {\n            if (styles.left.includes('px')) {\n                return Number(styles.left.split('px')[0]) / this.parentElement.nativeElement.offsetWidth * 100;\n            } else if (styles.left.includes('%')) {\n                return Number(styles.left.split('%')[0])\n            }\n        } else {\n            return 100;\n        }\n    }\n\n    /** Whether any querylist detects any changes */\n    private refreshSubscription(): void {\n        /** Finish all of the streams, form before */\n        this.onRefresh$.next();\n\n        /** Merge refresh/destroy observables */\n        const refreshObs = merge(this.onRefresh$, this.onDestroy$);\n\n        this.subItems.forEach((item: MegaMenuSubitemDirective, index: number) => item.keyDown\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((keyboardEvent: KeyboardEvent) => this.handleSubListKeyDown(keyboardEvent, index)))\n        ;\n    }\n}\n","import {\n    AfterContentInit,\n    ContentChildren,\n    Directive,\n    HostBinding,\n    OnDestroy,\n    QueryList\n} from '@angular/core';\nimport { MegaMenuItemComponent } from '../mega-menu-item/mega-menu-item.component';\nimport { merge, Subject } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { MenuKeyboardService } from '../../menu/menu-keyboard.service';\n\n/**\n *  Directive represents mega menu list, which contains items.\n *  ```html\n *  <ul fd-mega-menu-list>\n *      <fd-mega-menu-item>\n *          <a fd-mega-menu-link>Item 0</a>\n *          <li fd-mega-menu-subitem>\n *              <a fd-mega-menu-sublink>Sub Item 1</a>\n *          </li>\n *          <li fd-mega-menu-subitem>\n *              <a fd-mega-menu-sublink>Sub Item 2</a>\n *          </li>\n *          <li fd-mega-menu-subitem>\n *              <a fd-mega-menu-sublink>Sub Item 3</a>\n *          </li>\n *      </fd-mega-menu-item>\n *  </ul>\n *  ```\n * */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-mega-menu-list]'\n})\nexport class MegaMenuListDirective implements AfterContentInit, OnDestroy {\n\n    /** @hidden */\n    @HostBinding('class.fd-mega-menu__list')\n    fdMegaMenuClass: boolean = true;\n\n    /** @hidden */\n    @ContentChildren(MegaMenuItemComponent)\n    items: QueryList<MegaMenuItemComponent>;\n\n    /** An RxJS Subject that will kill the data stream upon component’s destruction (for unsubscribing)  */\n    private readonly onDestroy$: Subject<void> = new Subject<void>();\n\n    /** An RxJS Subject that will kill the data stream upon queryList changes (for unsubscribing)  */\n    private readonly onRefresh$: Subject<void> = new Subject<void>();\n\n    /** @hidden */\n    constructor(\n        private menuKeyboardService: MenuKeyboardService,\n    ) {}\n\n    /** @hidden */\n    ngAfterContentInit(): void {\n        this.items.changes\n            .pipe(takeUntil(this.onDestroy$), startWith(5))\n            .subscribe(() => this.refreshSubscription())\n        ;\n    }\n\n    /** Method that provides handles keydown events from menu item list */\n    handleListKeyDown(event: KeyboardEvent, index: number): void {\n        this.menuKeyboardService.keyDownHandler(event, index, this.items.toArray());\n    }\n\n    /** @hidden */\n    ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    /** Whether any querylist detects any changes */\n    private refreshSubscription(): void {\n        /** Finish all of the streams, form before */\n        this.onRefresh$.next();\n\n        /** Merge refresh/destroy observables */\n        const refreshObs = merge(this.onRefresh$, this.onDestroy$);\n\n        /** New subscription streams */\n        this.items.forEach((item: MegaMenuItemComponent, index: number) => item.keyDown\n            .pipe(takeUntil(refreshObs))\n            .subscribe((keyboardEvent: KeyboardEvent) => this.handleListKeyDown(keyboardEvent, index)))\n        ;\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n/**\n *  Component represents mega menu group, which contains list with menu items.\n *  ```html\n *  <fd-mega-menu-group>\n *      <h3 fd-mega-menu-title>Title 1</h3>\n *      <ul fd-mega-menu-list>\n *          <fd-mega-menu-item>\n *              <a fd-mega-menu-link>Item 0</a>\n *              <li fd-mega-menu-subitem>\n *                 <a fd-mega-menu-sublink>Sub Item 1</a>\n *            </li>\n *              <li fd-mega-menu-subitem>\n *                <a fd-mega-menu-sublink>Sub Item 2</a>\n *           </li>\n *             <li fd-mega-menu-subitem>\n *                  <a fd-mega-menu-sublink>Sub Item 3</a>\n *             </li>\n *          </fd-mega-menu-item>\n *      </ul>\n *  </fd-mega-menu-group>\n *  ```\n * */\n@Component({\n    selector: 'fd-mega-menu-group',\n    templateUrl: './mega-menu-group.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MegaMenuGroupComponent {}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[fd-mega-menu-title]',\n})\nexport class MegaMenuTitleDirective {\n    /** @hidden */\n    @HostBinding('class.fd-mega-menu__title')\n    fdMegaMenuTitleClass: boolean = true;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MegaMenuComponent } from './mega-menu.component';\nimport { MegaMenuItemComponent } from './mega-menu-item/mega-menu-item.component';\nimport { MegaMenuSubitemDirective } from './mega-menu-subitem.directive';\nimport { MegaMenuSublinkDirective } from './mega-menu-sublink.directive';\nimport { MenuKeyboardService } from '../menu/menu-keyboard.service';\nimport { MegaMenuListDirective } from './mega-menu-list/mega-menu-list.directive';\nimport { MegaMenuLinkDirective } from './mega-menu-link/mega-menu-link.directive';\nimport { MegaMenuGroupComponent } from './mega-menu-group/mega-menu-group.component';\nimport { MegaMenuTitleDirective } from './mega-menu-title/mega-menu-title.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [MegaMenuComponent, MegaMenuListDirective, MegaMenuItemComponent, MegaMenuSubitemDirective,\n        MegaMenuSublinkDirective, MegaMenuLinkDirective, MegaMenuGroupComponent, MegaMenuTitleDirective],\n    exports: [\n        MegaMenuComponent,\n        MegaMenuLinkDirective,\n        MegaMenuItemComponent,\n        MegaMenuSubitemDirective,\n        MegaMenuListDirective,\n        MegaMenuSublinkDirective,\n        MegaMenuGroupComponent,\n        MegaMenuTitleDirective\n    ],\n    providers: [MenuKeyboardService]\n})\nexport class MegaMenuModule {}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\n\n/**\n * Use a layout grid to arrange components evenly in a grid layout.\n */\n@Component({\n    selector: 'fd-layout-grid',\n    template: `<ng-content></ng-content>`,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./layout-grid.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutGridComponent extends AbstractFdNgxClass {\n\n    /** @Input Column span for the grid system */\n    @Input()\n    col: number;\n\n    /** Whether the grid should have a gap. */\n    @Input()\n    nogap: boolean = false;\n\n    /** Whether the grid should have a gap. */\n    @Input()\n    gapSize: number;\n\n    /** @hidden */\n    _setProperties() {\n\n        this._addClassToElement('fd-layout-grid');\n\n        if (this.nogap) {\n            this._addClassToElement('fd-layout-grid--no-gap');\n        }\n\n        if (this.gapSize) {\n            this._addClassToElement('fd-layout-grid--gap-' + this.gapSize);\n        }\n\n        if (this.col) {\n            this._addClassToElement('fd-layout-grid--col-' + this.col);\n        }\n    }\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\nimport { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';\n\n@Directive({\n  selector: '[fdLayoutGridSpan], [fd-layout-grid-span]'\n})\nexport class LayoutGridSpanDirective extends AbstractFdNgxClass {\n\n    /** @Input Column span for the grid system */\n    @Input()\n    columnSpan: number;\n\n    /** @hidden */\n    _setProperties() {\n        if (this.columnSpan) {\n            this._addClassToElement('fd-layout-grid__span-column-' + this.columnSpan);\n        }\n    }\n\n    /** @hidden */\n    constructor(private elementRef: ElementRef) {\n        super(elementRef);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutGridComponent } from './layout-grid.component';\nimport { LayoutGridSpanDirective } from './layout-grid-span.directive';\n\n@NgModule({\n    declarations: [\n        LayoutGridComponent,\n        LayoutGridSpanDirective\n    ],\n    imports: [CommonModule],\n    exports: [\n        LayoutGridComponent,\n        LayoutGridSpanDirective\n    ]\n})\nexport class LayoutGridModule {\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'fd-notification-group',\n    templateUrl: './notification-group.component.html',\n    styleUrls: ['./notification-group.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotificationGroupComponent {\n    /** @hidden */\n    @HostBinding('class.fd-notification--group')\n    fdNotificationGroupClass: boolean = true;\n}\n","import { Observable, Subject } from 'rxjs';\n\n/**\n * Reference to a notification component generated via the NotificationService.\n * It can be injected into the content component through the constructor.\n * For a template, it is declared as part of the implicit context, see examples.\n */\nexport class NotificationRef {\n    private readonly _afterClosed = new Subject<any>();\n    private readonly _afterClosedGroup = new Subject<any>();\n\n    /**\n     * Observable that is triggered when the notification is closed.\n     * On close a *result* is passed back. On dismiss, an *error* is returned instead.\n     */\n    public afterClosed: Observable<any> = this._afterClosed.asObservable();\n\n    /**\n     * Observable that is triggered when the notification is closed.\n     * On close a *result* is passed back. On dismiss, an *error* is returned instead.\n     */\n    public afterClosedGroup: Observable<any> = this._afterClosedGroup.asObservable();\n\n    /** Data passed from the calling component to the content.*/\n    public data: any;\n\n    /**\n     * Closes the notification and passes the argument to the afterClosed observable.\n     * @param result Value passed back to the observable as a result.\n     */\n    close(result?: any): void {\n        this._afterClosed.next(result);\n    }\n\n    /**\n     * Dismisses the notification and passes the argument to the afterClosed observable as an error.\n     * @param reason Value passed back to the observable as an error.\n     */\n    dismiss(reason?: any): void {\n        this._afterClosed.error(reason);\n    }\n\n    /**\n     * Closes the notification group and passes the argument to the afterClosed observable\n     * as an error.\n     * @param reason Value passed back to the observable as an error.\n     */\n    closeWholeGroup(reason?: any): void {\n        this._afterClosedGroup.next(reason);\n    }\n\n    /**\n     * Dismisses the notification group and passes the argument to the afterClosed observable\n     * as an error.\n     * @param reason Value passed back to the observable as an error.\n     */\n    dismissWholeGroup(reason?: any): void {\n        this._afterClosedGroup.error(reason);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { NotificationDefault } from '../notification-default';\nimport { NotificationType } from '../../notification/notification.component';\n\n@Component({\n    selector: 'fd-default-notification',\n    templateUrl: './default-notification.component.html',\n})\nexport class DefaultNotificationComponent {\n\n    /** @hidden */\n    defaultConfigurationNotification: NotificationDefault;\n\n    /** */\n    type?: NotificationType;\n\n    handleCloseButtonClick(): void {\n        if (this.defaultConfigurationNotification.closeButtonCallback) {\n            this.defaultConfigurationNotification.closeButtonCallback();\n        }\n    }\n\n    handleApproveButtonClick(): void {\n        if (this.defaultConfigurationNotification.approveCallback) {\n            this.defaultConfigurationNotification.approveCallback();\n        }\n    }\n\n    handleCancelButtonClick(): void {\n        if (this.defaultConfigurationNotification.cancelCallback) {\n            this.defaultConfigurationNotification.cancelCallback();\n        }\n    }\n\n}\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    HostListener,\n    Input,\n    Optional,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NotificationRef } from '../notification-utils/notification-ref';\nimport { NotificationDefault } from '../notification-utils/notification-default';\nimport { DefaultNotificationComponent } from '../notification-utils/default-notification/default-notification.component';\nimport { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';\n\nexport type NotificationType = 'success' | 'warning' | 'information' | 'error';\nexport type NotificationSize = 's' | 'm';\n\n@Component({\n    selector: 'fd-notification',\n    templateUrl: './notification.component.html',\n    styleUrls: ['./notification.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.aria-label]': 'ariaLabel',\n        'role': 'notification',\n        '[attr.id]': 'id',\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotificationComponent extends AbstractFdNgxClass implements AfterViewInit {\n\n    /** Size of notification, defined by user, s or m */\n    @Input()\n    size: string;\n\n    /** Type of Notification 'success' | 'warning' | 'information' | 'error' */\n    @Input()\n    type: NotificationType;\n\n    @ViewChild('vc', { read: ViewContainerRef, static: false })\n    containerRef: ViewContainerRef;\n\n    id: string;\n\n    escKeyCloseable: boolean = true;\n\n    focusTrapped: boolean = true;\n\n    ariaLabelledBy: string = null;\n\n    defaultNotificationConfiguration: NotificationDefault;\n\n    ariaLabel: string = null;\n\n    ariaDescribedBy: string = null;\n\n    childComponentType: TemplateRef<any> | Type<any> | NotificationDefault;\n\n    backdropClickCloseable: boolean = true;\n\n    hasBackdrop: boolean = true;\n\n    notificationPanelClass: string = '';\n\n    public componentRef: ComponentRef<any> | EmbeddedViewRef<any>;\n\n    constructor(private elRef: ElementRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private cdRef: ChangeDetectorRef,\n                @Optional() private notificationRef: NotificationRef) {\n        super(elRef);\n    }\n\n    ngAfterViewInit(): void {\n        if (this.childComponentType) {\n            if (this.childComponentType instanceof Type) {\n                this.loadFromComponent(this.childComponentType);\n            } else if (this.childComponentType instanceof TemplateRef) {\n                this.loadFromTemplate(this.childComponentType);\n            } else {\n                this.createFromDefaultConfiguration(this.childComponentType);\n            }\n        }\n        this.cdRef.detectChanges();\n    }\n\n    @HostListener('keyup', ['$event'])\n    closeNotificationEsc(event: KeyboardEvent): void {\n        if (this.escKeyCloseable && event.key === 'Escape') {\n            this.notificationRef.dismiss('escape');\n        }\n    }\n\n    private createFromDefaultConfiguration(conf: NotificationDefault): void {\n        this.containerRef.clear();\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(DefaultNotificationComponent);\n        this.componentRef = this.containerRef.createComponent(componentFactory);\n        this.componentRef.instance.defaultConfigurationNotification = conf;\n        this.componentRef.instance.type = this.type;\n    }\n\n    private loadFromComponent(content: Type<any>): void {\n        this.containerRef.clear();\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(content);\n        this.componentRef = this.containerRef.createComponent(componentFactory);\n    }\n\n    private loadFromTemplate(content: TemplateRef<any>): void {\n        this.containerRef.clear();\n        const context = {\n            $implicit: this.notificationRef\n        };\n        this.componentRef = this.containerRef.createEmbeddedView(content, context);\n    }\n\n    _setProperties(): void {\n        this._addClassToElement('fd-notification');\n        this._addClassToElement('fd-notification-custom-block');\n        if (this.type) {\n            this._addClassToElement('fd-notification--' + this.type);\n        }\n\n        if (this.size) {\n            this._addClassToElement('fd-notification--' + this.size);\n        }\n\n    }\n\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    selector: '[fdNotificationTitle], [fd-notification-title]'\n})\nexport class NotificationTitleDirective {\n    /** @hidden */\n    @HostBinding('class.fd-notification__title')\n    fdNotificationTitleClass: boolean = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    selector: '[fdNotificationContent], [fd-notification-content]'\n})\nexport class NotificationContentDirective {\n    /** @hidden */\n    @HostBinding('class.fd-notification__content')\n    fdNotificationContentClass: boolean = true;\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'fd-notification-header',\n    templateUrl: './notification-header.component.html',\n    styleUrls: ['./notification-header.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotificationHeaderComponent {\n    /** @hidden */\n    @HostBinding('class.fd-notification__header')\n    fdNotificationHeaderClass: boolean = true;\n\n    /** type of Notification 'success' | 'warning' | 'information' | 'error' */\n    @Input()\n    type: string;\n\n    /** Whether user wants to hide close button at the top. It's shown by default. */\n    @Input()\n    closeButton: boolean = true;\n\n    /** Event thrown always, when the close button is clicked */\n    @Output()\n    readonly closeButtonClick: EventEmitter<void> = new EventEmitter<void>();\n\n    /** @hidden */\n    public closeButtonClicked(): void {\n        this.closeButtonClick.emit();\n    }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'fd-notification-footer',\n    templateUrl: './notification-footer.component.html',\n    styleUrls: ['./notification-footer.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotificationFooterComponent {\n    /** @hidden */\n    @HostBinding('class.fd-notification__footer')\n    fdNotificationFooterClass: boolean = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    selector: '[fdNotificationAvatar], [fd-notification-avatar]'\n})\nexport class NotificationAvatarDirective {\n    /** @hidden */\n    @HostBinding('class.fd-notification__avatar')\n    fdNotificationAvatarClass: boolean = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    selector: '[fdNotificationDescription], [fd-notification-description]'\n})\nexport class NotificationDescriptionDirective {\n    /** @hidden */\n    @HostBinding('class.fd-notification__description')\n    fdNotificationDescriptionClass: boolean = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    selector: '[fdNotificationMetadata], [fd-notification-metadata]'\n})\nexport class NotificationMetadataDirective {\n    /** @hidden */\n    @HostBinding('class.fd-notification__metadata')\n    fdNotificationMetaDataClass: boolean = true;\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'fd-notification-body',\n    templateUrl: './notification-body.component.html',\n    styleUrls: ['./notification-body.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotificationBodyComponent {\n    /** @hidden */\n    @HostBinding('class.fd-notification__body')\n    fdNotificationHeaderBody: boolean = true;\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'fd-notification-container',\n    template: ``,\n    styles: [`\n        .fd-notification-container {\n            position: fixed;\n            display: flex;\n            flex-direction: column;\n            z-index: 5000;\n            align-items: center;\n            top: 1rem;\n            right: 1rem;\n        }\n    `],\n    host: {\n        '[class.fd-notification-container]': 'true'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotificationContainer {}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[fdNotificationText], [fd-notification-text]'\n})\nexport class NotificationTextDirective {\n    /** @hidden */\n    @HostBinding('class.fd-notification__text')\n    fdNotificationTextClass: boolean = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[fdNotificationActions], [fd-notification-actions]'\n})\nexport class NotificationActionsDirective {\n    /** @hidden */\n    @HostBinding('class.fd-notification__actions')\n    fdNotificationMetaDataClass: boolean = true;\n}\n","/**\n * Configuration for opening a notification with the NotificationService.\n */\nimport { NotificationSize, NotificationType } from '../notification/notification.component';\n\nexport class NotificationConfig {\n\n    /** Id for the notification component. If omitted, a unique one is generated. */\n    id?: string;\n\n    /** size of notification: 's' | 'm' */\n    size?: NotificationSize;\n\n    /** Type of notification: 'success' | 'warning' | 'information' | 'error' */\n    type?: NotificationType;\n\n    /** Aria label for the notification component element. */\n    ariaLabel?: string = null;\n\n    /** Id of the element that labels the notification. */\n    ariaLabelledBy?: string = null;\n\n    /** Id of the element that describes the notification. */\n    ariaDescribedBy?: string = null;\n\n    /** The container that the notification is appended to. By default, it is appended to the body. */\n    container?: HTMLElement | 'body' = 'body';\n\n    /** Data to pass along to the content through the NotificationRef. */\n    data?: any;\n}\n","import { ComponentRef, Injectable, TemplateRef, Type } from '@angular/core';\nimport { NotificationComponent } from '../notification/notification.component';\nimport { NotificationContainer } from '../notification-utils/notification-container';\nimport { NotificationConfig } from '../notification-utils/notification-config';\nimport { NotificationRef } from '../notification-utils/notification-ref';\nimport { DynamicComponentService } from '../../utils/dynamic-component/dynamic-component.service';\nimport { NotificationGroupComponent } from '../notification-group/notification-group.component';\nimport { NotificationDefault } from '../notification-utils/notification-default';\n\n@Injectable()\nexport class NotificationService {\n\n    public notifications: {\n        notificationComponent: ComponentRef<NotificationComponent>,\n        notificationGroup?: ComponentRef<NotificationGroupComponent>\n    }[] = [];\n    public containerRef: ComponentRef<NotificationContainer>;\n\n\n    constructor(\n        private dynamicComponentService: DynamicComponentService\n    ) {}\n\n    /**\n     * Opens an alert component with a content of type TemplateRef, Component Type or Configuration Object\n     * @param content Content of the alert component, or NotificationDefault object.\n     * @param notificationConfig Configuration of the notification component.\n     * @param notificationGroup Configuration of the notification component.\n     */\n    public open(\n        content: TemplateRef<any> | Type<any> | NotificationDefault,\n        notificationConfig: NotificationConfig = new NotificationConfig(),\n        notificationGroup?: ComponentRef<NotificationGroupComponent>\n    ): NotificationRef {\n\n        // Reassigning Object And Service\n        const notificationService: NotificationRef = new NotificationRef();\n        notificationConfig = Object.assign(new NotificationConfig(), notificationConfig);\n        notificationService.data = notificationConfig.data;\n        if (notificationService.data) {\n            notificationService.data.type = notificationConfig.type;\n        }\n\n        // Create Container if it doesn't exist\n        if (!this.containerRef) {\n            this.containerRef = this.dynamicComponentService.createDynamicComponent(content, NotificationContainer, notificationConfig);\n        }\n\n        // Pass Container reference to config\n        notificationConfig.container = this.containerRef.location.nativeElement;\n        let notificationComponentRef: ComponentRef<NotificationComponent>;\n        if (notificationGroup) {\n\n            // If there is group Pass group reference as a container\n            notificationConfig.container = notificationGroup.location.nativeElement;\n\n            // Create Notification Component\n            notificationComponentRef = this.dynamicComponentService.createDynamicComponent(\n                content,\n                NotificationComponent,\n                notificationConfig,\n                [notificationService]\n            );\n\n            // Add To array\n            this.notifications.push({\n                notificationComponent: notificationComponentRef,\n                notificationGroup: notificationGroup\n            });\n        } else {\n\n            // Create Notification Component\n            notificationComponentRef = this.dynamicComponentService.createDynamicComponent(\n                content,\n                NotificationComponent,\n                notificationConfig,\n                [notificationService]\n            );\n\n            // Add To array\n            this.notifications.push({\n                notificationComponent: notificationComponentRef,\n            });\n        }\n\n        const defaultBehaviourOnClose = () => {\n            this.destroyNotificationComponent(notificationComponentRef);\n            refSub.unsubscribe();\n            refGroupSub.unsubscribe();\n        };\n\n        const defaultBehaviourOnGroupClose = () => {\n            this.destroyWholeGroup(notificationComponentRef);\n            refGroupSub.unsubscribe();\n            refSub.unsubscribe();\n        };\n\n        const refSub = notificationService.afterClosed\n            .subscribe(defaultBehaviourOnClose, defaultBehaviourOnClose)\n        ;\n\n        const refGroupSub = notificationService.afterClosedGroup\n            .subscribe(defaultBehaviourOnGroupClose, defaultBehaviourOnGroupClose)\n        ;\n\n        return notificationService;\n    }\n\n    /** Method to remove all of notifications from this service instance */\n    public destroyAll(): void {\n        this.notifications.forEach(notification => {\n            this.destroyNotificationComponent(notification.notificationComponent);\n        })\n    }\n\n    /** Method that informs if there is any notification opened in this service instance */\n    public isAnyOpened(): boolean {\n        return this.notifications && this.notifications.length > 0;\n    }\n\n    /** Method to create Notification Group */\n    public createNotificationGroup (\n        notificationConfig: NotificationConfig = new NotificationConfig(),\n    ): ComponentRef<NotificationGroupComponent> {\n\n        // Reassign Config Object\n        notificationConfig = Object.assign(new NotificationConfig(), notificationConfig);\n\n        if (!this.containerRef) {\n\n            // Create Container Component\n            this.containerRef = this.dynamicComponentService.createDynamicComponent(\n                null, NotificationContainer, notificationConfig\n            );\n        }\n\n        // Pass Container reference as a config container\n        notificationConfig.container = this.containerRef.location.nativeElement;\n\n        // Create and return notification Group component reference\n        return this.dynamicComponentService.createDynamicComponent\n            <NotificationGroupComponent>(null, NotificationGroupComponent, notificationConfig)\n        ;\n    }\n\n    private destroyWholeGroup(notification: ComponentRef<NotificationComponent>): void {\n\n        // Find Notification Group assigned to this Notification Component\n        const arrayRef = this.notifications.find(item => item.notificationComponent === notification);\n        if (arrayRef.notificationGroup) {\n\n            // Find Any other Components, that are in this group\n            const arrayToDelete = this.notifications\n                .filter(_notification => _notification.notificationGroup === arrayRef.notificationGroup)\n            ;\n\n            // Destroy every single component, that are in the group\n            arrayToDelete.forEach(_notification => this.destroyNotificationComponent(_notification.notificationComponent));\n        }\n\n    }\n\n    private destroyNotificationComponent(notification: ComponentRef<NotificationComponent>): void {\n\n        // Find Notification component in the array.\n        const arrayRef = this.notifications.find(item => item.notificationComponent === notification);\n        const indexOf = this.notifications.indexOf(arrayRef);\n\n        // Check the amount of component within the group\n        const amountOfComponentsWithThisGroup = this.notifications.filter(item =>\n            item.notificationGroup && item.notificationGroup === arrayRef.notificationGroup\n        );\n\n        // If it's the only one component that is in the group, remove group component.\n        if (amountOfComponentsWithThisGroup.length === 1) {\n            this.dynamicComponentService.destroyComponent(arrayRef.notificationGroup);\n        }\n\n        // Destroy Component\n        this.dynamicComponentService.destroyComponent(arrayRef.notificationComponent);\n\n        // Remove it from Array\n        this.notifications[indexOf] = null;\n        this.notifications = this.notifications.filter(item => item !== null && item !== undefined);\n\n        // If there is no other notification Components, just remove container.\n        if (this.notifications.length === 0) {\n            this.dynamicComponentService.destroyComponent(this.containerRef);\n            this.containerRef = null;\n        }\n\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotificationGroupComponent } from './notification-group/notification-group.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { NotificationTitleDirective } from './directives/notification-title.directive';\nimport { NotificationContentDirective } from './directives/notification-content.directive';\nimport { NotificationHeaderComponent } from './notification-header/notification-header.component';\nimport { NotificationFooterComponent } from './notification-footer/notification-footer.component';\nimport { NotificationAvatarDirective } from './directives/notification-avatar.directive';\nimport { NotificationDescriptionDirective } from './directives/notification-description.directive';\nimport { NotificationMetadataDirective } from './directives/notification-metadata.directive';\nimport { NotificationBodyComponent } from './notification-body/notification-body.component';\nimport { DynamicComponentService } from '../utils/dynamic-component/dynamic-component.service';\nimport { NotificationContainer } from './notification-utils/notification-container';\nimport { NotificationTextDirective } from './directives/notification-text.directive';\nimport { NotificationActionsDirective } from './directives/notification-actions.directive';\nimport { NotificationService } from './notification-service/notification.service';\nimport { DefaultNotificationComponent } from './notification-utils/default-notification/default-notification.component';\nimport { ButtonModule } from '../button/button.module';\n\n@NgModule({\n    imports: [CommonModule, ButtonModule],\n    declarations: [\n        NotificationGroupComponent,\n        NotificationComponent,\n        NotificationTitleDirective,\n        NotificationContentDirective,\n        NotificationHeaderComponent,\n        NotificationFooterComponent,\n        NotificationAvatarDirective,\n        NotificationDescriptionDirective,\n        NotificationMetadataDirective,\n        NotificationBodyComponent,\n        NotificationContainer,\n        NotificationTextDirective,\n        NotificationActionsDirective,\n        DefaultNotificationComponent\n    ],\n    exports: [\n        NotificationGroupComponent,\n        NotificationComponent,\n        NotificationTitleDirective,\n        NotificationContentDirective,\n        NotificationHeaderComponent,\n        NotificationFooterComponent,\n        NotificationAvatarDirective,\n        NotificationDescriptionDirective,\n        NotificationMetadataDirective,\n        NotificationBodyComponent,\n        NotificationContainer,\n        NotificationTextDirective,\n        NotificationActionsDirective,\n        DefaultNotificationComponent\n    ],\n    providers: [\n        DynamicComponentService,\n        NotificationService\n    ],\n    entryComponents: [\n        NotificationContainer,\n        NotificationComponent,\n        NotificationGroupComponent,\n        DefaultNotificationComponent\n    ]\n})\nexport class NotificationModule {}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    ViewChild,\n    AfterViewInit,\n    ChangeDetectionStrategy\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { applyCssClass, CssClassBuilder } from '../../utils/public_api';\n\nexport type stateType = 'valid' | 'invalid' | 'warning' | 'default' | 'information';\nlet uniqueId = 0;\n@Component({\n    selector: 'fd-radio-button',\n    templateUrl: './radio-button.component.html',\n    styleUrls: ['./radio-button.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RadioButtonComponent),\n            multi: true\n        }\n    ]\n})\nexport class RadioButtonComponent implements AfterViewInit, CssClassBuilder, ControlValueAccessor {\n    /** @hidden */\n    class: string;\n\n    /** @hidden */\n    @ViewChild('inputElement', { static: false })\n    inputElement: ElementRef;\n\n    /** @hidden */\n    actualValue: any;\n\n    private _compact: boolean = false;\n\n    /** Whether to apply compact mode to the radio button.\n     * Value: true or false\n     * By default field is set to false\n     */\n    @Input()\n    set compact(isCompact: boolean) {\n        this._compact = isCompact;\n        this.buildComponentCssClass();\n    }\n\n    private _state: stateType = 'default';\n    /** The field to set state of radio button using:\n     * 'valid' | 'invalid' | 'warning' | 'default' | 'information'\n     * by default value is set to 'default'\n     */\n    @Input()\n    set state(newState: stateType) {\n        this._state = newState;\n        this.buildComponentCssClass();\n    }\n\n    private _disabled: boolean = false;\n    /** The field is used to tell if radio button should be disabled\n     * Value: true or false\n     * by default disabled state is set to false\n     */\n    @Input()\n    set disabled(isDisabled: boolean) {\n        this._disabled = isDisabled;\n        this.buildComponentCssClass();\n    }\n\n    /** @hidden */\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    /** The field should be only used with reactive forms\n     * Its purpose is to pass a current selected value from froumGroup\n     * The field is mandatory when working with reactive forms\n     */\n    @Input()\n    set selectedValue(v: any) {\n        this.actualValue = v;\n    }\n\n    private _name: string;\n    /** The name of the radio button\n     * The field is mandatory\n     */\n    @Input()\n    set name(v: string) {\n        this._name = v;\n    }\n\n    /** @hidden */\n    get name(): string {\n        return this._name;\n    }\n\n    get checked(): boolean {\n        if (this.value === undefined) {\n            return false;\n        }\n        return this.actualValue === this.value;\n    }\n\n    /**\n     * Set uniqueId to a radio button\n     */\n    @Input()\n    id: string = `radio-id-${uniqueId++}`;\n\n    /** Value field stores information about holding value by radio button\n     * The field is mandatory\n     */\n    @Input()\n    value: any;\n\n    // ControlValueAccessor implementation\n    /** @hidden */\n    onChange: any = () => { };\n\n    /** @hidden */\n    onTouched: any = () => { };\n\n    /** @hidden */\n    registerOnChange(fn: (selected: any) => { void }): void {\n        this.onChange = fn;\n    }\n\n    /** @hidden */\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    /** @hidden */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.changeDetectionRef.detectChanges();\n    }\n\n    /** @hidden */\n    writeValue(value: any): void {\n        this.valueChange(value);\n    }\n    // End implementation\n\n    /** @hidden */\n    labelClicked(): void {\n        this.valueChange(this.value);\n        this._setFocusOnNativeElement();\n    }\n\n    /** @hidden */\n    valueChange(value: any): void {\n        this.actualValue = value;\n\n        this._setNativeElementCheckedState();\n\n        this.changeDetectionRef.detectChanges();\n        this.onChange(value);\n    }\n\n    /** @hidden */\n    constructor(private changeDetectionRef: ChangeDetectorRef) { }\n\n    /** @hidden */\n    ngAfterViewInit(): void {\n        this.buildComponentCssClass();\n        this._checkMandatoryFields();\n    }\n\n\n    /** This method is responsible for building a css class based on current state\n     *  It is implementation of CssClassBuilder interface and\n     *  should be used with @applyCssClass decorator\n     */\n    @applyCssClass\n    buildComponentCssClass(): string {\n        return [\n            'fd-radio',\n            this._compact ? 'fd-radio--compact' : '',\n            this._state !== 'default' ? `is-${this._state}` : ''\n        ].join(' ');\n    }\n\n    /** @hidden */\n    elementRef(): ElementRef<any> {\n        return this.inputElement;\n    }\n\n    /** @hidden */\n    private _checkMandatoryFields(): void {\n        if (!this.name) {\n            throw 'name field is required';\n        }\n        if (!this.value) {\n            throw 'value field is required';\n        }\n    }\n\n    /** @hidden */\n    private _setFocusOnNativeElement(): void {\n        if (this.inputElement) {\n            this.inputElement.nativeElement.focus();\n        }\n    }\n\n    /** @hidden */\n    private _setNativeElementCheckedState(): void {\n        if (this.inputElement) {\n            this.inputElement.nativeElement.checked = this.checked;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [\n        RadioButtonComponent\n    ],\n    exports: [\n        RadioButtonComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ]\n})\nexport class RadioModule { }\n","import { NgModule } from '@angular/core';\nimport { ActionBarModule } from './action-bar/action-bar.module';\nimport { AlertModule } from './alert/alert.module';\nimport { AlertService } from './alert/alert-service/alert.service';\nimport { BadgeLabelModule } from './badge-label/badge-label.module';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { BusyIndicatorModule } from './busy-indicator/busy-indicator.module';\nimport { ButtonModule } from './button/button.module';\nimport { ButtonGroupModule } from './button-group/button-group.module';\nimport { CalendarModule } from './calendar/calendar.module';\nimport { ComboboxModule } from './combobox/combobox.module';\nimport { CheckboxModule } from './checkbox/checkbox.module';\nimport { DatePickerModule } from './date-picker/date-picker.module';\nimport { DatetimePickerModule } from './datetime-picker/datetime-picker.module';\nimport { FileInputModule } from './file-input/file-input.module';\nimport { FormModule } from './form/form.module';\nimport { IconModule } from './icon/icon.module';\nimport { IdentifierModule } from './identifier/identifier.module';\nimport { ImageModule } from './image/image.module';\nimport { InfiniteScrollModule } from './infinite-scroll/infinite-scroll.module';\nimport { InlineHelpModule } from './inline-help/inline-help.module';\nimport { InputGroupModule } from './input-group/input-group.module';\nimport { ListModule } from './list/list.module';\nimport { LoadingSpinnerModule } from './loading-spinner/loading-spinner.module';\nimport { MenuModule } from './menu/menu.module';\nimport { ModalModule } from './modal/modal.module';\nimport { ModalService } from './modal/modal-service/modal.service';\nimport { MultiInputModule } from './multi-input/multi-input.module';\nimport { PaginationModule } from './pagination/pagination.module';\nimport { PanelModule } from './panel/panel.module';\nimport { PopoverModule } from './popover/popover.module';\nimport { ScrollSpyModule } from './scroll-spy/scroll-spy.module';\nimport { ShellbarModule } from './shellbar/shellbar.module';\nimport { SideNavigationModule } from './side-navigation/side-navigation.module';\nimport { SelectModule } from './select/select.module';\nimport { SplitButtonModule } from './split-button/split-button.module';\nimport { TableModule } from './table/table.module';\nimport { TabsModule } from './tabs/tabs.module';\nimport { TileModule } from './tile/tile.module';\nimport { TreeModule } from './tree/tree.module';\nimport { TimeModule } from './time/time.module';\nimport { TimePickerModule } from './time-picker/time-picker.module';\nimport { ToggleModule } from './toggle/toggle.module';\nimport { TokenModule } from './token/token.module';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { LocalizationEditorModule } from './localizator-editor/localization-editor.module';\nimport { MegaMenuModule } from './mega-menu/mega-menu.module';\nimport { LayoutGridModule } from './layout-grid/layout-grid.module';\nimport { DragAndDropModule } from './utils/drag-and-drop/drag-and-drop.module';\nimport { ProductSwitchModule } from './product-switch/product-switch.module';\nimport { NotificationModule } from './notification/notification.module';\nimport { NotificationService } from './notification/notification-service/notification.service';\nimport { NestedListModule } from './nested-list/nested-list.module';\nimport { RadioModule } from './radio/radio.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  exports: [\n    ActionBarModule,\n    AlertModule,\n    BadgeLabelModule,\n    BreadcrumbModule,\n    BusyIndicatorModule,\n    ButtonModule,\n    ButtonGroupModule,\n    CalendarModule,\n    ComboboxModule,\n    CheckboxModule,\n    DatePickerModule,\n    DatetimePickerModule,\n    DragAndDropModule,\n    FileInputModule,\n    FormModule,\n    IconModule,\n    IdentifierModule,\n    ImageModule,\n    InlineHelpModule,\n    IdentifierModule,\n    InfiniteScrollModule,\n    InputGroupModule,\n    LayoutGridModule,\n    ListModule,\n    LoadingSpinnerModule,\n    LocalizationEditorModule,\n    MenuModule,\n    MegaMenuModule,\n    ModalModule,\n    MultiInputModule,\n    NestedListModule,\n    NotificationModule,\n    PaginationModule,\n    PanelModule,\n    ProductSwitchModule,\n    PopoverModule,\n    RadioModule,\n    ScrollSpyModule,\n    SelectModule,\n    ShellbarModule,\n    SideNavigationModule,\n    SplitButtonModule,\n    TableModule,\n    TabsModule,\n    TileModule,\n    TimeModule,\n    TimePickerModule,\n    ToggleModule,\n    TokenModule,\n    TreeModule,\n  ],\n  providers: [AlertService, ModalService, NotificationService],\n})\nexport class FundamentalNgxCoreModule {}\n","import { FdDate } from './fd-date';\n\nexport interface FdRangeDate {\n    start: FdDate;\n    end: FdDate;\n}\n","export interface ComboboxItem {\n    item: any;\n    index: number;\n}\n\n","export abstract class DefaultMenuItem {\n    abstract focus(): void;\n    abstract click(): void;\n}\n","/**\n * Represents the positioning of the modal on the screen.\n */\nexport class ModalPosition {\n\n    /** Value of the modal's top position. */\n    top?: string;\n\n    /** Value of the modal's bottom position. */\n    bottom?: string;\n\n    /** Value of the modal's left position. */\n    left?: string;\n\n    /** Value of the modal's right position. */\n    right?: string;\n}\n","\nexport interface NestedListItem {\n    headerTitle?: string,\n    list?: NestedListModel;\n    link?: NestedListLink;\n    expanded?: boolean;\n}\n\n\nexport interface NestedListModel {\n    textOnly?: boolean;\n    items: NestedListItem[];\n}\n\nexport interface NestedListLink {\n    icon?: string;\n    title: string;\n    callback?: Function;\n    href?: string;\n    routerLink?: string;\n    selected?: boolean;\n}\n","import { TemplateRef } from '@angular/core';\n\n/**\n * Object to generate default notification component, without creating any template.\n */\nexport class NotificationDefault {\n\n    /** Notification Title */\n    title?: string;\n\n    /** Notification Description */\n    description?: string;\n\n    /** Notification Meta Data */\n    metadata?: string;\n\n    /** More Info button label */\n    moreInfo?: string;\n\n    /** More Info button Click Callback */\n    moreInfoCallback?: Function;\n\n    /** Approve Button Label */\n    approve?: string;\n\n    /** Approve Button Click Callback */\n    approveCallback?: Function;\n\n    /** Cancel Button Label */\n    cancel?: string;\n\n    /** Cancel Button Click Callback */\n    cancelCallback?: Function;\n\n    /** Close Button Callback. If not set empty, the close button won't show */\n    closeButtonCallback?: Function;\n\n    /** Avatar Template */\n    avatar?: TemplateRef<any>\n}\n","export interface Pagination {\n    totalItems: number;\n    itemsPerPage?: number;\n    currentPage?: number;\n}\n","export interface ProductSwitchItem {\n\n    /** Title of product */\n    title: string;\n\n    /** Subtitle of product */\n    subtitle?: string;\n\n    /** Url of product image */\n    image?: string;\n\n    /** Callback function that will be called on selecting this product from dropdown */\n    callback?: Function;\n\n    /** Icon of product item */\n    icon?: string;\n\n    /** Whether user wants to mark this element ass selected */\n    selected?: boolean;\n\n    /** Whether user wants to disable drag and drop functionality from single element */\n    disabledDragAndDrop?: boolean;\n\n    /** Whether this element should stick in one place, without changing position */\n    stickToPosition?: boolean;\n}\n","export interface ShellbarMenuItem {\n\n    /** Text written in dropdown option */\n    name: string;\n\n    /**\n     *  Callback function that will be called on selecting this shellbar menu item from dropdown\n     */\n    callback?: Function;\n\n    /**\n     * The link, that user will be redirected to, after clicking item. When this value is set, element will become\n     * anchor with href, otherwise it's basic text\n     */\n    link?: string\n\n    /**\n    /* The icon to include in shellbar menu item See the icon page for the list of icons.\n    */\n    glyph?: string\n\n}\n","export interface ShellbarUser {\n\n    /** Initials of user name */\n    initials: string,\n\n    /** Url of user image (optional) */\n    image?: string,\n\n    /** User full name used only on aria-label*/\n    fullName?: string,\n\n    /**\n     * Color Accent of user (optional), for more information about colors accent,\n     * please visit: https://sap.github.io/fundamental/components/identifier.html\n     */\n    colorAccent?: number\n}\n","export interface ShellbarUserMenu {\n\n    /** Text written in dropdown option */\n    text: string;\n\n    /**\n     *  Callback function that will be called on selecting this shellbar menu item from dropdown\n     */\n    callback?: Function;\n}\n","import { NestedListModel } from '../nested-list/nested-list-model';\n\nexport interface SideNavigationModel {\n    condensed?: boolean;\n    mainNavigation: NestedListModel\n    utilityNavigation?: NestedListModel\n}\n","export interface TreeRowObject {\n    rowData: any[];\n    children?: TreeRowObject[];\n    sublevelClass?: string;\n}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}