/**
 * @fileoverview added by tsickle
 * Generated from: lib/modal/modal-utils/modal-backdrop.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, HostBinding, HostListener, ViewEncapsulation } from '@angular/core';
import { AbstractFdNgxClass } from '../../utils/abstract-fd-ngx-class';
import { modalFadeNgIf } from './modal-animations';
import { ModalRef } from './modal-ref';
var ModalBackdrop = /** @class */ (function (_super) {
    tslib_1.__extends(ModalBackdrop, _super);
    function ModalBackdrop(elRef, modalRef) {
        var _this = _super.call(this, elRef) || this;
        _this.elRef = elRef;
        _this.modalRef = modalRef;
        _this.backdropClass = '';
        _this.backdropClickCloseable = true;
        _this.overlayMain = true;
        _this.overlayModal = true;
        return _this;
    }
    /**
     * @return {?}
     */
    ModalBackdrop.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this._setProperties();
    };
    /**
     * @return {?}
     */
    ModalBackdrop.prototype._setProperties = /**
     * @return {?}
     */
    function () {
        if (this.backdropClass) {
            this._addClassToElement(this.backdropClass);
        }
    };
    /**
     * @return {?}
     */
    ModalBackdrop.prototype.closeModal = /**
     * @return {?}
     */
    function () {
        if (this.backdropClickCloseable) {
            this.modalRef.dismiss('backdrop');
        }
    };
    ModalBackdrop.decorators = [
        { type: Component, args: [{
                    selector: 'fd-modal-overlay',
                    template: "",
                    host: {
                        'tabindex': '-1',
                        '[@modal-fade]': ''
                    },
                    animations: [
                        modalFadeNgIf
                    ],
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    ModalBackdrop.ctorParameters = function () { return [
        { type: ElementRef },
        { type: ModalRef }
    ]; };
    ModalBackdrop.propDecorators = {
        overlayMain: [{ type: HostBinding, args: ['class.fd-overlay',] }],
        overlayModal: [{ type: HostBinding, args: ['class.fd-overlay--modal',] }],
        closeModal: [{ type: HostListener, args: ['click',] }]
    };
    return ModalBackdrop;
}(AbstractFdNgxClass));
export { ModalBackdrop };
if (false) {
    /** @type {?} */
    ModalBackdrop.prototype.backdropClass;
    /** @type {?} */
    ModalBackdrop.prototype.backdropClickCloseable;
    /** @type {?} */
    ModalBackdrop.prototype.overlayMain;
    /** @type {?} */
    ModalBackdrop.prototype.overlayModal;
    /**
     * @type {?}
     * @private
     */
    ModalBackdrop.prototype.elRef;
    /**
     * @type {?}
     * @private
     */
    ModalBackdrop.prototype.modalRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtYmFja2Ryb3AuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvbW9kYWwvbW9kYWwtdXRpbHMvbW9kYWwtYmFja2Ryb3AudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBVSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV2QztJQVltQyx5Q0FBa0I7SUFRakQsdUJBQW9CLEtBQWlCLEVBQ2pCLFFBQWtCO1FBRHRDLFlBRUksa0JBQU0sS0FBSyxDQUFDLFNBQ2Y7UUFIbUIsV0FBSyxHQUFMLEtBQUssQ0FBWTtRQUNqQixjQUFRLEdBQVIsUUFBUSxDQUFVO1FBUHRDLG1CQUFhLEdBQVcsRUFBRSxDQUFDO1FBQzNCLDRCQUFzQixHQUFZLElBQUksQ0FBQztRQUVOLGlCQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ1osa0JBQVksR0FBRyxJQUFJLENBQUM7O0lBSzVELENBQUM7Ozs7SUFFRCxnQ0FBUTs7O0lBQVI7UUFDSSxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDMUIsQ0FBQzs7OztJQUVELHNDQUFjOzs7SUFBZDtRQUNJLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUNwQixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1NBQy9DO0lBQ0wsQ0FBQzs7OztJQUdELGtDQUFVOzs7SUFEVjtRQUVJLElBQUksSUFBSSxDQUFDLHNCQUFzQixFQUFFO1lBQzdCLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQ3JDO0lBQ0wsQ0FBQzs7Z0JBeENKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixRQUFRLEVBQUUsRUFBRTtvQkFDWixJQUFJLEVBQUU7d0JBQ0YsVUFBVSxFQUFFLElBQUk7d0JBQ2hCLGVBQWUsRUFBRSxFQUFFO3FCQUN0QjtvQkFDRCxVQUFVLEVBQUU7d0JBQ1IsYUFBYTtxQkFDaEI7b0JBQ0QsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7aUJBQ3hDOzs7O2dCQWhCbUIsVUFBVTtnQkFHckIsUUFBUTs7OzhCQW1CWixXQUFXLFNBQUMsa0JBQWtCOytCQUM5QixXQUFXLFNBQUMseUJBQXlCOzZCQWlCckMsWUFBWSxTQUFDLE9BQU87O0lBTXpCLG9CQUFDO0NBQUEsQUF6Q0QsQ0FZbUMsa0JBQWtCLEdBNkJwRDtTQTdCWSxhQUFhOzs7SUFFdEIsc0NBQTJCOztJQUMzQiwrQ0FBdUM7O0lBRXZDLG9DQUFvRDs7SUFDcEQscUNBQTREOzs7OztJQUVoRCw4QkFBeUI7Ozs7O0lBQ3pCLGlDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSG9zdEJpbmRpbmcsIEhvc3RMaXN0ZW5lciwgT25Jbml0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWJzdHJhY3RGZE5neENsYXNzIH0gZnJvbSAnLi4vLi4vdXRpbHMvYWJzdHJhY3QtZmQtbmd4LWNsYXNzJztcbmltcG9ydCB7IG1vZGFsRmFkZU5nSWYgfSBmcm9tICcuL21vZGFsLWFuaW1hdGlvbnMnO1xuaW1wb3J0IHsgTW9kYWxSZWYgfSBmcm9tICcuL21vZGFsLXJlZic7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZmQtbW9kYWwtb3ZlcmxheScsXG4gICAgdGVtcGxhdGU6IGBgLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ3RhYmluZGV4JzogJy0xJyxcbiAgICAgICAgJ1tAbW9kYWwtZmFkZV0nOiAnJ1xuICAgIH0sXG4gICAgYW5pbWF0aW9uczogW1xuICAgICAgICBtb2RhbEZhZGVOZ0lmXG4gICAgXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIE1vZGFsQmFja2Ryb3AgZXh0ZW5kcyBBYnN0cmFjdEZkTmd4Q2xhc3MgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgYmFja2Ryb3BDbGFzczogc3RyaW5nID0gJyc7XG4gICAgYmFja2Ryb3BDbGlja0Nsb3NlYWJsZTogYm9vbGVhbiA9IHRydWU7XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmZkLW92ZXJsYXknKSBvdmVybGF5TWFpbiA9IHRydWU7XG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5mZC1vdmVybGF5LS1tb2RhbCcpIG92ZXJsYXlNb2RhbCA9IHRydWU7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsUmVmOiBFbGVtZW50UmVmLFxuICAgICAgICAgICAgICAgIHByaXZhdGUgbW9kYWxSZWY6IE1vZGFsUmVmKSB7XG4gICAgICAgIHN1cGVyKGVsUmVmKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fc2V0UHJvcGVydGllcygpO1xuICAgIH1cblxuICAgIF9zZXRQcm9wZXJ0aWVzKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5iYWNrZHJvcENsYXNzKSB7XG4gICAgICAgICAgICB0aGlzLl9hZGRDbGFzc1RvRWxlbWVudCh0aGlzLmJhY2tkcm9wQ2xhc3MpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignY2xpY2snKVxuICAgIGNsb3NlTW9kYWwoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmJhY2tkcm9wQ2xpY2tDbG9zZWFibGUpIHtcbiAgICAgICAgICAgIHRoaXMubW9kYWxSZWYuZGlzbWlzcygnYmFja2Ryb3AnKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==