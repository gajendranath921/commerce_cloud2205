/**
 * @fileoverview added by tsickle
 * Generated from: lib/tabs/tab-nav/tab-nav.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, ContentChildren, EventEmitter, Output, QueryList, Renderer2, ViewEncapsulation } from '@angular/core';
import { TabLinkDirective } from '../tab-link/tab-link.directive';
import { TabItemDirective } from '../tab-item/tab-item.directive';
import { TabsService } from '../tabs.service';
/**
 * Tab Nav for only navigation mode when you want for example use router-outlet
 *
 * ```html
 * <nav fd-tab-nav>
 *  <div fd-tab-item>
 *      <a fd-tab-link
 *      [active]="true">
 *          Link
 *      </a>
 *  </div>
 *  <div fd-tab-item>
 *      <a fd-tab-link
 *      [active]="false">
 *          Link
 *      </a>
 *  </div>
 *  <a fd-tab-link
 *  [active]="false">
 *      Link
 *  </a>
 * </nav>
 * ```
 */
var TabNavComponent = /** @class */ (function () {
    /** @hidden */
    function TabNavComponent(renderer, tabsService) {
        this.renderer = renderer;
        this.tabsService = tabsService;
        /**
         * Event Thrown every time something is clicked
         */
        this.onKeyDown = new EventEmitter();
    }
    Object.defineProperty(TabNavComponent.prototype, "tabLinks", {
        /** Function that gives possibility to get all the link directives, with and without nav__item wrapper */
        get: /**
         * Function that gives possibility to get all the link directives, with and without nav__item wrapper
         * @return {?}
         */
        function () {
            /** @type {?} */
            var tabLinks = [];
            if (this.links) {
                tabLinks = tabLinks.concat(this.links.map((/**
                 * @param {?} link
                 * @return {?}
                 */
                function (link) { return link; })));
            }
            if (this.items) {
                tabLinks = tabLinks.concat(this.items.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return !!item.linkItem; })).map((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.linkItem; })));
            }
            return tabLinks;
        },
        enumerable: true,
        configurable: true
    });
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    TabNavComponent.prototype.ngAfterContentInit = /**
     * @hidden
     * @return {?}
     */
    function () {
        var _this = this;
        this._tabSelectSubscription = this.tabsService.tabSelected.subscribe((/**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            _this.selectTab(index);
        }));
        this.tabLinks.forEach((/**
         * @param {?} linkElement
         * @param {?} index
         * @return {?}
         */
        function (linkElement, index) {
            _this.renderer.listen(linkElement.elementRef.nativeElement, 'keydown', (/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                _this.tabsService.tabHeaderKeyHandler(index, event, _this.tabLinks.map((/**
                 * @param {?} link
                 * @return {?}
                 */
                function (link) { return link.elementRef.nativeElement; })));
            }));
        }));
    };
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    TabNavComponent.prototype.ngOnDestroy = /**
     * @hidden
     * @return {?}
     */
    function () {
        this._tabSelectSubscription.unsubscribe();
    };
    /**
     * Function to select a new tab from an index.
     * @param tabIndex Index of the tab to select.
     */
    /**
     * Function to select a new tab from an index.
     * @param {?} tabIndex Index of the tab to select.
     * @return {?}
     */
    TabNavComponent.prototype.selectTab = /**
     * Function to select a new tab from an index.
     * @param {?} tabIndex Index of the tab to select.
     * @return {?}
     */
    function (tabIndex) {
        this.tabLinks[tabIndex].elementRef.nativeElement.click();
    };
    TabNavComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: '[fd-tab-nav]',
                    host: {
                        'class': 'fd-tabs',
                        'role': 'tablist'
                    },
                    template: "<ng-content></ng-content>",
                    providers: [TabsService],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: ["/*!\n * Fundamental Library Styles v0.4.1\n * Copyright (c) 2020 SAP SE or an SAP affiliate company.\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/master/LICENSE)\n *//*!\n.fd-tabs+()\n    .fd-tabs__item?\n    .fd-tabs__link+((.is-selected|[aria-selected=true]),(.is-disabled|[aria-disabled=true]))\n.fd-tabs__panel+([aria-expanded]|.is-expanded)\n*/.fd-tabs{--fd-tabs-border-color:var(--fd-color-neutral-3, #d9d9d9);--fd-tabs-background-color:var(--fd-color-background-2, #fff);--fd-tabs-link-color:var(--fd-color-text-2, #51555a);--fd-tabs-link-border-color:var(--fd-color-action-1);font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0 0 12px;border:0;background-color:#fff;background-color:var(--fd-tabs-background-color,#fff);display:flex;flex-wrap:wrap;list-style:none;border-bottom-color:var(--fd-tabs-background-color,#fff);border-bottom:1px solid #fff}.fd-tabs:after,.fd-tabs:before{box-sizing:inherit;font-size:inherit}.fd-tabs__item{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0 16px;margin:0;border:0}.fd-tabs__item:after,.fd-tabs__item:before{box-sizing:inherit;font-size:inherit}.fd-tabs__link{font-size:var(--sapFontSize,.875rem);color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:16px 0;margin:0;border:0;display:block;position:relative;text-decoration:none;font-size:14px;line-height:1.42857;font-weight:400;cursor:pointer;color:#51555a;color:var(--fd-tabs-link-color,#51555a)}.fd-tabs__link:after,.fd-tabs__link:before{box-sizing:inherit;font-size:inherit}.fd-tabs__link:link{color:#51555a;color:var(--fd-tabs-link-color,#51555a)}.fd-tabs__link:after{transition:125ms ease-in;content:\"\";position:absolute;bottom:0;left:0;display:inline-block;height:3px;width:100%;background-color:transparent;border-radius:4px 4px 0 0}.fd-tabs__link .is-hover,.fd-tabs__link:hover{color:#0254a7;color:var(--fd-color-action-selected,#0254a7)}.fd-tabs__link.is-selected,.fd-tabs__link[aria-selected=true]{color:#0a6ed1;color:var(--fd-color-action-1,#0a6ed1)}.fd-tabs__link.is-selected:after,.fd-tabs__link[aria-selected=true]:after{background-color:#0a6ed1;background-color:var(--fd-tabs-link-border-color,#0a6ed1)}.fd-tabs__link.is-disabled,.fd-tabs__link:disabled,.fd-tabs__link[aria-disabled=true]{color:var(--fd-color-action-disabled,rgba(10,110,209,.4));cursor:not-allowed}.fd-tabs__panel{font-size:.875rem;font-size:var(--sapFontSize,.875rem);line-height:1.42857;color:#32363a;color:var(--sapTextColor,#32363a);font-family:\"72\",\"72full\",Arial,Helvetica,sans-serif;font-family:var(--sapFontFamily, \"72\", \"72full\", Arial, Helvetica, sans-serif);font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0;border:0}.fd-tabs__panel:after,.fd-tabs__panel:before{box-sizing:inherit;font-size:inherit}.fd-tabs__panel[aria-expanded=false]{display:none}.fd-tabs__panel.is-expanded,.fd-tabs__panel[aria-expanded=true]{display:block}"]
                }] }
    ];
    /** @nocollapse */
    TabNavComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: TabsService }
    ]; };
    TabNavComponent.propDecorators = {
        links: [{ type: ContentChildren, args: [TabLinkDirective,] }],
        items: [{ type: ContentChildren, args: [TabItemDirective,] }],
        onKeyDown: [{ type: Output }]
    };
    return TabNavComponent;
}());
export { TabNavComponent };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    TabNavComponent.prototype.links;
    /**
     * @hidden
     * @type {?}
     */
    TabNavComponent.prototype.items;
    /**
     * @hidden
     * @type {?}
     * @private
     */
    TabNavComponent.prototype._tabSelectSubscription;
    /**
     * Event Thrown every time something is clicked
     * @type {?}
     */
    TabNavComponent.prototype.onKeyDown;
    /**
     * @type {?}
     * @private
     */
    TabNavComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    TabNavComponent.prototype.tabsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLW5hdi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvdGFicy90YWItbmF2L3RhYi1uYXYuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUNlLHVCQUF1QixFQUN6QyxTQUFTLEVBQ1QsZUFBZSxFQUNmLFlBQVksRUFFWixNQUFNLEVBQ04sU0FBUyxFQUNULFNBQVMsRUFDVCxpQkFBaUIsRUFDcEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkI5QztJQTJCSSxjQUFjO0lBQ2QseUJBQ1ksUUFBbUIsRUFDbkIsV0FBd0I7UUFEeEIsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUNuQixnQkFBVyxHQUFYLFdBQVcsQ0FBYTs7OztRQUwxQixjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQStCLENBQUM7SUFNbkUsQ0FBQztJQUdKLHNCQUFXLHFDQUFRO1FBRG5CLHlHQUF5Rzs7Ozs7UUFDekc7O2dCQUNRLFFBQVEsR0FBdUIsRUFBRTtZQUNyQyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQUUsUUFBUSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHOzs7O2dCQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsSUFBSSxFQUFKLENBQUksRUFBQyxDQUFDLENBQUM7YUFBRTtZQUM3RSxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQUUsUUFBUSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNOzs7O2dCQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQWYsQ0FBZSxFQUFDLENBQUMsR0FBRzs7OztnQkFBQyxVQUFBLElBQUksSUFBSSxPQUFBLElBQUksQ0FBQyxRQUFRLEVBQWIsQ0FBYSxFQUFDLENBQUMsQ0FBQzthQUFFO1lBQ3RILE9BQU8sUUFBUSxDQUFDO1FBQ3BCLENBQUM7OztPQUFBO0lBRUQsY0FBYzs7Ozs7SUFDUCw0Q0FBa0I7Ozs7SUFBekI7UUFBQSxpQkFVQztRQVRHLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQSxLQUFLO1lBQ3RFLEtBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUIsQ0FBQyxFQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU87Ozs7O1FBQUMsVUFBQyxXQUFXLEVBQUUsS0FBSztZQUNyQyxLQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxTQUFTOzs7O1lBQUUsVUFBQyxLQUFLO2dCQUN4RSxLQUFJLENBQUMsV0FBVyxDQUFDLG1CQUFtQixDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHOzs7O2dCQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQTdCLENBQTZCLEVBQUMsQ0FBQyxDQUFBO1lBQ2hILENBQUMsRUFDSixDQUFBO1FBQUEsQ0FBQyxFQUFDLENBQUE7SUFDUCxDQUFDO0lBRUQsY0FBYzs7Ozs7SUFDZCxxQ0FBVzs7OztJQUFYO1FBQ0ksSUFBSSxDQUFDLHNCQUFzQixDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzlDLENBQUM7SUFFRDs7O09BR0c7Ozs7OztJQUNILG1DQUFTOzs7OztJQUFULFVBQVUsUUFBZ0I7UUFDdEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzdELENBQUM7O2dCQWpFSixTQUFTLFNBQUM7O29CQUVQLFFBQVEsRUFBRSxjQUFjO29CQUN4QixJQUFJLEVBQUU7d0JBQ0YsT0FBTyxFQUFFLFNBQVM7d0JBQ2xCLE1BQU0sRUFBRSxTQUFTO3FCQUNwQjtvQkFDRCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxTQUFTLEVBQUUsQ0FBQyxXQUFXLENBQUM7b0JBRXhCLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7aUJBQ2xEOzs7O2dCQTlDRyxTQUFTO2dCQUtKLFdBQVc7Ozt3QkE2Q2YsZUFBZSxTQUFDLGdCQUFnQjt3QkFHaEMsZUFBZSxTQUFDLGdCQUFnQjs0QkFNaEMsTUFBTTs7SUF5Q1gsc0JBQUM7Q0FBQSxBQWxFRCxJQWtFQztTQXJEWSxlQUFlOzs7Ozs7SUFHeEIsZ0NBQXNFOzs7OztJQUd0RSxnQ0FBc0U7Ozs7OztJQUd0RSxpREFBNkM7Ozs7O0lBRzdDLG9DQUFzRTs7Ozs7SUFJbEUsbUNBQTJCOzs7OztJQUMzQixzQ0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIEFmdGVyQ29udGVudEluaXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBDb250ZW50Q2hpbGRyZW4sXG4gICAgRXZlbnRFbWl0dGVyLFxuICAgIE9uRGVzdHJveSxcbiAgICBPdXRwdXQsXG4gICAgUXVlcnlMaXN0LFxuICAgIFJlbmRlcmVyMixcbiAgICBWaWV3RW5jYXBzdWxhdGlvblxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRhYkxpbmtEaXJlY3RpdmUgfSBmcm9tICcuLi90YWItbGluay90YWItbGluay5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGFiSXRlbURpcmVjdGl2ZSB9IGZyb20gJy4uL3RhYi1pdGVtL3RhYi1pdGVtLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUYWJzU2VydmljZSB9IGZyb20gJy4uL3RhYnMuc2VydmljZSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuXG4vKipcbiAqIFRhYiBOYXYgZm9yIG9ubHkgbmF2aWdhdGlvbiBtb2RlIHdoZW4geW91IHdhbnQgZm9yIGV4YW1wbGUgdXNlIHJvdXRlci1vdXRsZXRcbiAqXG4gKiBgYGBodG1sXG4gKjxuYXYgZmQtdGFiLW5hdj5cbiAqICA8ZGl2IGZkLXRhYi1pdGVtPlxuICogICAgICA8YSBmZC10YWItbGlua1xuICogICAgICBbYWN0aXZlXT1cInRydWVcIj5cbiAqICAgICAgICAgIExpbmtcbiAqICAgICAgPC9hPlxuICogIDwvZGl2PlxuICogIDxkaXYgZmQtdGFiLWl0ZW0+XG4gKiAgICAgIDxhIGZkLXRhYi1saW5rXG4gKiAgICAgIFthY3RpdmVdPVwiZmFsc2VcIj5cbiAqICAgICAgICAgIExpbmtcbiAqICAgICAgPC9hPlxuICogIDwvZGl2PlxuICogIDxhIGZkLXRhYi1saW5rXG4gKiAgW2FjdGl2ZV09XCJmYWxzZVwiPlxuICogICAgICBMaW5rXG4gKiAgPC9hPlxuICogPC9uYXY+XG4gKiBgYGBcbiAqL1xuXG5AQ29tcG9uZW50KHtcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXG4gICAgc2VsZWN0b3I6ICdbZmQtdGFiLW5hdl0nLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ2NsYXNzJzogJ2ZkLXRhYnMnLFxuICAgICAgICAncm9sZSc6ICd0YWJsaXN0J1xuICAgIH0sXG4gICAgdGVtcGxhdGU6IGA8bmctY29udGVudD48L25nLWNvbnRlbnQ+YCxcbiAgICBwcm92aWRlcnM6IFtUYWJzU2VydmljZV0sXG4gICAgc3R5bGVVcmxzOiBbJy4vdGFiLW5hdi5jb21wb25lbnQuc2NzcyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgVGFiTmF2Q29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgT25EZXN0cm95IHtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgQENvbnRlbnRDaGlsZHJlbihUYWJMaW5rRGlyZWN0aXZlKSBsaW5rczogUXVlcnlMaXN0PFRhYkxpbmtEaXJlY3RpdmU+O1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBAQ29udGVudENoaWxkcmVuKFRhYkl0ZW1EaXJlY3RpdmUpIGl0ZW1zOiBRdWVyeUxpc3Q8VGFiSXRlbURpcmVjdGl2ZT47XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIHByaXZhdGUgX3RhYlNlbGVjdFN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gICAgLyoqIEV2ZW50IFRocm93biBldmVyeSB0aW1lIHNvbWV0aGluZyBpcyBjbGlja2VkICovXG4gICAgQE91dHB1dCgpIG9uS2V5RG93biA9IG5ldyBFdmVudEVtaXR0ZXI8e2V2ZW50OiBhbnksIGluZGV4OiBudW1iZXJ9PigpO1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLFxuICAgICAgICBwcml2YXRlIHRhYnNTZXJ2aWNlOiBUYWJzU2VydmljZVxuICAgICkge31cblxuICAgIC8qKiBGdW5jdGlvbiB0aGF0IGdpdmVzIHBvc3NpYmlsaXR5IHRvIGdldCBhbGwgdGhlIGxpbmsgZGlyZWN0aXZlcywgd2l0aCBhbmQgd2l0aG91dCBuYXZfX2l0ZW0gd3JhcHBlciAqL1xuICAgIHB1YmxpYyBnZXQgdGFiTGlua3MoKTogVGFiTGlua0RpcmVjdGl2ZVtdIHtcbiAgICAgICAgbGV0IHRhYkxpbmtzOiBUYWJMaW5rRGlyZWN0aXZlW10gPSBbXTtcbiAgICAgICAgaWYgKHRoaXMubGlua3MpIHsgdGFiTGlua3MgPSB0YWJMaW5rcy5jb25jYXQodGhpcy5saW5rcy5tYXAobGluayA9PiBsaW5rKSk7IH1cbiAgICAgICAgaWYgKHRoaXMuaXRlbXMpIHsgdGFiTGlua3MgPSB0YWJMaW5rcy5jb25jYXQodGhpcy5pdGVtcy5maWx0ZXIoaXRlbSA9PiAhIWl0ZW0ubGlua0l0ZW0pLm1hcChpdGVtID0+IGl0ZW0ubGlua0l0ZW0pKTsgfVxuICAgICAgICByZXR1cm4gdGFiTGlua3M7XG4gICAgfVxuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBwdWJsaWMgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLl90YWJTZWxlY3RTdWJzY3JpcHRpb24gPSB0aGlzLnRhYnNTZXJ2aWNlLnRhYlNlbGVjdGVkLnN1YnNjcmliZShpbmRleCA9PiB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdFRhYihpbmRleCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMudGFiTGlua3MuZm9yRWFjaCgobGlua0VsZW1lbnQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLmxpc3RlbihsaW5rRWxlbWVudC5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdrZXlkb3duJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy50YWJzU2VydmljZS50YWJIZWFkZXJLZXlIYW5kbGVyKGluZGV4LCBldmVudCwgdGhpcy50YWJMaW5rcy5tYXAobGluayA9PiBsaW5rLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCkpXG4gICAgICAgICAgICB9XG4gICAgICAgICl9KVxuICAgIH1cblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX3RhYlNlbGVjdFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHNlbGVjdCBhIG5ldyB0YWIgZnJvbSBhbiBpbmRleC5cbiAgICAgKiBAcGFyYW0gdGFiSW5kZXggSW5kZXggb2YgdGhlIHRhYiB0byBzZWxlY3QuXG4gICAgICovXG4gICAgc2VsZWN0VGFiKHRhYkluZGV4OiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy50YWJMaW5rc1t0YWJJbmRleF0uZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmNsaWNrKCk7XG4gICAgfVxufVxuIl19